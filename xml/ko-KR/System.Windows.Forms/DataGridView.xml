<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataGridView.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72939df5d9db8925345091a3cfeac8a4b92cb9b2d3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">939df5d9db8925345091a3cfeac8a4b92cb9b2d3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Displays data in a customizable grid.</source>
          <target state="translated">사용자 지정 가능한 표에 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control provides a customizable table for displaying data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤은 데이터를 표시 하기 위한 사용자 지정 가능한 테이블을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class allows customization of cells, rows, columns, and borders through the use of properties such as <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스와 같은의 셀, 행, 열 및 테두리 속성을 사용 하 여 사용자 지정을 허용 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>For more information, see <bpt id="p1">[</bpt>Basic Formatting and Styling in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 서식 지정 및 Windows Forms DataGridView 컨트롤의 스타일 지정<ept id="p1">](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to display data with or without an underlying data source.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 기본 데이터 원본의 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>Without specifying a data source, you can create columns and rows that contain data and add them directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> properties.</source>
          <target state="translated">데이터 소스를 지정 하지 않고 데이터를 포함 하 고에 직접 추가 된 열과 행을 만들 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to access <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> objects and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType&gt;</ph> property to read or write cell values directly.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 액세스할 컬렉션 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> 개체 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType&gt;</ph> 속성을 읽거나 셀 값을 직접 작성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Item%2A&gt;</ph> indexer also provides direct access to cells.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Item%2A&gt;</ph> 인덱서 또한 셀에 대 한 직접 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>As an alternative to populating the control manually, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties to bind the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to a data source and automatically populate it with data.</source>
          <target state="translated">를 직접 컨트롤을 채우는 하는 대신 서 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> 바인딩할 속성을는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 에 대 한 데이터 원본 및 자동으로 데이터를 채웁니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>For more information, see <bpt id="p1">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 데이터 표시<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>When working with very large amounts of data, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to display a subset of the available data.</source>
          <target state="translated">매우 많은 양의 데이터를 사용할 때 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 사용 가능한 데이터의 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>Virtual mode requires the implementation of a data cache from which the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is populated.</source>
          <target state="translated">가상 모드 데이터 캐시를 구현 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 채워집니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>For more information, see <bpt id="p1">[</bpt>Data Display Modes in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 데이터 디스플레이 모드<ept id="p1">](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>For additional information about the features available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, see <bpt id="p1">[</bpt>DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)</ept>.</source>
          <target state="translated">사용할 수 있는 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어, 참조 <bpt id="p1">[</bpt>DataGridView 컨트롤<ept id="p1">](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The following table provides direct links to common tasks.</source>
          <target state="translated">다음 표에서 일반적인 작업에 대 한 직접 링크를 제공합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: Windows Forms DataGridView 컨트롤에 데이터 바인딩<ept id="p1">](http://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: Windows Forms DataGridView 컨트롤에서 개별 셀에 도구 설명 추가<ept id="p1">](http://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Set Font and Color Styles in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: Windows Forms DataGridView 컨트롤의 글꼴 및 색 스타일 설정<ept id="p1">](http://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Change the Type of a Windows Forms DataGridView Column Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤의 형식 변경<ept id="p1">](http://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤에 데이터 바인딩<ept id="p1">](http://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Set Default Cell Styles and Data Formats for the Windows Forms DataGridView Control Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤에 기본 셀 스타일 및 데이터 형식 설정<ept id="p1">](http://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Format Data in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: Windows Forms DataGridView 컨트롤의 데이터 형식 지정<ept id="p1">](http://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>연습: Windows Forms DataGridView 컨트롤의 데이터 유효성 검사<ept id="p1">](http://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>How to: Customize Data Formatting in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: Windows Forms DataGridView 컨트롤에서 데이터 형식 사용자 지정<ept id="p1">](http://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](http://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>연습: 두 개의 Windows Forms DataGridView 컨트롤을 사용하여 마스터/세부 폼 만들기<ept id="p1">](http://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control of previous versions, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use if you choose.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 대체 하 고 여기에 새로운 기능이 추가 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 이전 버전의 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤을 선택 하는 경우 이전 버전과 호환성을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id="p1">](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Windows Forms DataGridView 및 DataGrid 컨트롤의 차이점<ept id="p1">](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control inherits both the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> properties from <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>, but supports only the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 모두 상속는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> 속성에서 <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>만 지원 하지만 <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control has no effect.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 된 속성의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridView">
          <source>The following code example demonstrates how to initialize an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 바인딩되지 않은 초기화 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.#ctor">
          <source>The following table shows initial property values for an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.#ctor">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> indicating the row and column indexes of the new current cell.</source>
          <target state="translated">새로운 현재 셀의 행 및 열 인덱스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>Notifies the accessible client applications when a new cell becomes the current cell.</source>
          <target state="translated">새 셀이 현재 셀이 될 때 액세스 가능 클라이언트 응용 프로그램에 알립니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>This method converts the specified row and column indexes into <ph id="ph1">`objectID`</ph> and <ph id="ph2">`childID`</ph> parameters and calls the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload twice using the <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleEvents.Focus&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleEvents.Selection&gt;</ph> values of the <ph id="ph6">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> enumeration.</source>
          <target state="translated">이 메서드는 지정 된 행 및 열 인덱스를 변환 <ph id="ph1">`objectID`</ph> 및 <ph id="ph2">`childID`</ph> 매개 변수와 호출은 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드를 두 번 사용 하 여 오버 로드는 <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleEvents.Focus&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleEvents.Selection&gt;</ph> 값의는 <ph id="ph6">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>The <ph id="ph1">`objectID`</ph> and <ph id="ph2">`childID`</ph> are determined by numbering only the visible rows and columns in their display order, counting the row or column headers if they are visible, and starting with 1.</source>
          <target state="translated"><ph id="ph1">`objectID`</ph> 및 <ph id="ph2">`childID`</ph> 표시 되는 행 및 열 번호 매기기 행 또는 열 머리글을 표시 하 고 1부터 시작 되어 있는 경우 계산의 표시 순서에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>For example, if column headers are visible, the <ph id="ph1">`objectID`</ph> for the first visible nonheader row is 2.</source>
          <target state="translated">예를 들어, 열 머리글이 표시 되는 <ph id="ph1">`objectID`</ph> 첫 번째 표시 머리글이 아닌 행은 2입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="cellAddress" /&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="cellAddress" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="cellAddress" /&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="cellAddress" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>Override this method when customizing the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control and modifying how and when the current cell changes.</source>
          <target state="translated">사용자 지정 하는 경우이 메서드를 재정의 하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤 및 현재 셀이 변경 시기와 방법을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
          <source>For example, if you create a custom row type that merges multiple cells into single cells and you modify the navigation accordingly, you can override this method to provide accessibility support for your changes.</source>
          <target state="translated">예를 들어 단일 셀에 여러 셀을 병합 하는 사용자 지정 행 형식을 만들고 탐색을 적절 하 게 수정 하는 경우에 내게 필요한 옵션 지원에 대 한 변경 사항을 제공 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that that represents the column header border style to modify.</source>
          <target state="translated">수정할 열 머리글 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that is used to store intermediate changes to the column header border style.</source>
          <target state="translated">열 머리글 테두리 스타일에 대한 중간 변경 사항을 저장하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> that is currently being painted is in the first column displayed on the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 칠하는 중인 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시된 첫 번째 열에 있음을 나타내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> that is currently being painted is in the last column in the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> that has the <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /&gt;</ph> property set to <ph id="ph5">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 칠하는 중인 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>이 <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /&gt;</ph> 속성이 <ph id="ph5">&lt;see langword="true" /&gt;</ph>로 설정된 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 마지막 열에 있음을 나타내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>Adjusts the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> for a column header cell of a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> that is currently being painted.</source>
          <target state="translated">현재 칠하고 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 열 머리글 셀에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>을 조정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that represents the border style for the current column header.</source>
          <target state="translated">현재 열 머리글의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control internally calls the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A&gt;</ph> method to determine the appearance of the borders for the column header cells.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 내부적으로 호출 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A&gt;</ph> 열 머리글 셀에 대 한 테두리의 모양을 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control typically uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property for the <ph id="ph3">`dataGridViewAdvancedBorderStyleInput`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤의 값에 일반적으로 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> 에 대 한 속성의 <ph id="ph3">`dataGridViewAdvancedBorderStyleInput`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A&gt;</ph> method to customize the borders of the column header cells.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A&gt;</ph> 메서드 열 머리글 셀의 테두리를 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
          <source>Override this method if you want to customize the appearance of the border on column header cells.</source>
          <target state="translated">열 머리글 셀에 테두리의 모양을 사용자 지정 하려는 경우이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>Gets the border style for the upper-left cell in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 왼쪽 위에 있는 셀의 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that represents the style of the border of the upper-left cell in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 왼쪽 위에 있는 셀의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>The upper-left cell is the cell that is shared by the column header row and the row header column.</source>
          <target state="translated">왼쪽 위 셀은 열 머리글 행 및 행 머리글 열에서 공유 하는 셀입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> gets the value of this property while painting the upper-left cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 왼쪽 위 셀을 그리는 동안이 속성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A&gt;</ph> property to customize the borders of the upper-left cell.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A&gt;</ph> 왼쪽 위 셀의 테두리를 사용자 지정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
          <source>Override this property if you want to customize the appearance of the border on the upper-left header cell.</source>
          <target state="translated">왼쪽 위 머리글 셀의 테두리 모양을 사용자 지정 하려는 경우이 속성을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle">
          <source>Gets the border style of the cells in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 셀의 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that represents the border style of the cells in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 셀의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> property to customize the appearance of cells' borders.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> 셀 테두리의 모양을 사용자 지정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">기본 제공 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle">
          <source>Gets the border style of the column header cells in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 열 머리글 셀의 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that represents the border style of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /&gt;</ph> objects in the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /&gt;</ph> 개체의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property to customize the appearance of column header cells' borders.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> 열 머리글 셀의 테두리의 모양을 사용자 지정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">기본 제공 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle">
          <source>Gets the border style of the row header cells in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 행 머리글 셀의 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph> that represents the border style of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /&gt;</ph> objects in the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /&gt;</ph> 개체의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> property to customize the appearance of row header cells' borders in a derived <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> 파생된 행 머리글 셀의 테두리의 모양을 사용자 지정 하는 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">기본 제공 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>Gets or sets a value indicating whether the option to add rows is displayed to the user.</source>
          <target state="translated">행을 추가하기 위한 옵션이 사용자에게 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the add-row option is displayed to the user; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">행을 추가하는 옵션이 사용자에게 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the user is allowed to add rows if both this property and the data source's <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 바인딩된 데이터에 사용자가 행을 추가할 수이 속성과 데이터 원본 모두 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>The following code example illustrates the use of this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>Gets or sets a value indicating whether the user is allowed to delete rows from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 행을 삭제할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can delete rows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 행을 삭제할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the user is allowed to delete rows if both this property and the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 바인딩된 데이터에 사용자가을 두 행을 삭제할 수이 속성 및 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>The following code example illustrates the use of this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>Gets or sets a value indicating whether manual column repositioning is enabled.</source>
          <target state="translated">수동으로 열의 위치를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can change the column order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 열의 순서를 변경할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>When column repositioning is enabled, users can drag a column header to a new position.</source>
          <target state="translated">열의 위치를 변경할 사용자가 열 머리글을 새 위치로 끌 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>Note that frozen and unfrozen columns form two separate groups; users can reposition columns within a group, but cannot move a column from one group to the other.</source>
          <target state="translated">고정 및 고정 되지 않은 열을 두 개의 별도 그룹을 형성 하는 참고 사용자는 그룹 내의 열 위치를 변경할 수 있지만 다른 한 그룹에서 열을 이동할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 이중 버퍼링을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`true`</ph> 파생 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤, 행, 열 또는 헤더 크기를 조정할 때 또는 열 다시 정렬 하는 경우 사용자는 시각적 피드백을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>The following code example illustrates the use of this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>Gets or sets a value indicating whether users can resize columns.</source>
          <target state="translated">사용자가 열의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if users can resize columns; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 열의 크기를 조정할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>Use this property to prevent users from manually changing column widths.</source>
          <target state="translated">이 속성을 사용 하 여 사용자가 수동으로 열 너비를 변경 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>This is useful, for example, with display-only columns where data is loaded once and columns are resized at that time.</source>
          <target state="translated">이 값은 한 번에 데이터를 로드 하 고 해당 시점에 열의 크기가 조정 됩니다 있는 표시 전용 열이 있는 예를 들어 유용 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>For more information about user resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">사용자 크기를 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 이중 버퍼링을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`true`</ph> 파생 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤, 행, 열 또는 헤더 크기를 조정할 때 또는 열 다시 정렬 하는 경우 사용자는 시각적 피드백을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>The following code example illustrates how to use this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>Gets or sets a value indicating whether users can resize rows.</source>
          <target state="translated">사용자가 행의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the rows are resizable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 행의 크기를 조정할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>Use this property to prevent users from manually changing row heights.</source>
          <target state="translated">이 속성을 사용 하 여 사용자가 수동으로 행 높이 변경 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>This is useful, for example, with display-only controls where data is loaded once and rows are resized at that time.</source>
          <target state="translated">이 값은 예를 들어 컨트롤과 표시 전용 여기서 데이터를 한 번 로드 하 고 행 크기를 조정할 당시에는 유용 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>For more information about user resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">사용자 크기를 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 이중 버퍼링을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`true`</ph> 파생 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤, 행, 열 또는 헤더 크기를 조정할 때 또는 열 다시 정렬 하는 경우 사용자는 시각적 피드백을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>The following code example illustrates how to use this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>Gets or sets the default cell style applied to odd-numbered rows of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 홀수 번호 행에 적용되는 기본 셀 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph> to apply to the odd-numbered rows.</source>
          <target state="translated">홀수 번호 행에 적용할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀으로 표시 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 스타일 형식의 다른 속성에서 상속 하는 속성 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>For cells in rows with odd index numbers, the styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property override the styles specified through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph>, and are overridden by the styles specified through the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">홀수 인덱스 번호가 있는 행에 있는 셀을 통해 지정 된 스타일의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> 속성을 통해 지정 된 스타일을 재정의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph>는 를통해지정된스타일에의해재정의및<ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph>및 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
          <target state="translated">이 속성을 가져올 때 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 이며 기본값은 값이 생성 됩니다는 속성에 아직 액세스 하지 않은 경우.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>This can cause a performance impact when getting this property for many rows.</source>
          <target state="translated">행의 수에 대 한이 속성을 가져올 때 성능 저하를 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
          <target state="translated">가능 하면 단일 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 여러 행에 대해이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>The following code example illustrates how to use this property to create a ledger effect in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는의 원장 효과를 만들려면이 속성을 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">될 때이 이벤트가 발생 속성의는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> 속성을 새 값으로 설정 되어 경우 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the rows and columns with <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /&gt;</ph> property values of <ph id="ph3">&lt;see langword="false" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see langword="false" /&gt;</ph>인 행과 열을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>Returns a value indicating whether all the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> cells are currently selected.</source>
          <target state="translated">현재 모든 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 셀이 선택되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all cells (or all visible cells) are selected or if there are no cells (or no visible cells); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 셀(또는 표시되는 모든 셀)이 선택되었거나 선택된 셀(또는 표시되는 셀)이 없으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection does not perform efficiently with large selections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 큰 선택 범위 컬렉션을 효율적으로 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>To determine whether all the cells in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> have been selected before you access the contents of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection, check the return value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A&gt;</ph> method.</source>
          <target state="translated">확인 하려면 있는지 여부를 모든 셀에는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 의 내용에 액세스 하기 전에 선택한는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 컬렉션의 반환 값을 확인는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>However, this method can cause rows to become unshared.</source>
          <target state="translated">그러나이 메서드는 행이 공유 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> performance, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 성능, 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
          <source>The following code example illustrates how to use this method to avoid calculations involving the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection.</source>
          <target state="translated">다음 코드 예제에서는 관련 된 계산을 방지 하기 위해이 메서드를 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Gets or sets a value indicating whether columns are created automatically when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DataMember" /&gt;</ph> properties are set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DataMember" /&gt;</ph> 속성을 설정할 때 열이 자동으로 생성되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the columns should be created automatically; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열이 자동으로 생성되어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Columns are automatically generated when this property is set to <ph id="ph1">`true`</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties are set or changed.</source>
          <target state="translated">열이 속성이 설정 된 경우 자동으로 생성 된 <ph id="ph1">`true`</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> 속성 설정 하거나 변경 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Columns can also be automatically generated when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property is changed from <ph id="ph2">`false`</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">열이 자동으로 수도 있습니다 때 생성 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 에서 속성이 변경 될 <ph id="ph2">`false`</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>If this property is <ph id="ph1">`true`</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> changes so there are columns that do not match the columns of the previous <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> value, data in the unmatched columns is discarded.</source>
          <target state="translated">이 속성이 <ph id="ph1">`true`</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 변경 하는 이전 열과 일치 하지 않는 열이 없는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 일치 하지 않는 열에 데이터, 값은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>This property is ignored if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties are not set.</source>
          <target state="translated">이 속성은 무시는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> 속성이 설정 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control generates one column for each public property of the objects in the data source.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 데이터 원본에 개체의 각 public 속성에 대 한 하나의 열을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>If the bound objects implement the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, the control generates one column for each property returned by the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">바인딩된 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> 인터페이스 컨트롤 생성에서 반환 된 각 속성에 대 한 열은 <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Each column header will contain the value of the property name the column represents.</source>
          <target state="translated">각 열 머리글의 열을 나타내는 속성 이름 값이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property but set <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> to <ph id="ph3">`false`</ph>, you must add columns manually.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성을 설정 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 를 <ph id="ph3">`false`</ph>, 열을 수동으로 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>You can bind each added column to the data source by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> property to the name of a property exposed by the bound objects.</source>
          <target state="translated">설정 하 여 데이터 원본에 추가 된 각 열을 바인딩할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> 속성을 바인딩된 개체에서 노출 되는 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> in the Windows Forms Designer automatically sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph3">`false`</ph> and generates code to add and bind a column for each property in the data source.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> Windows Forms 디자이너에서 자동으로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph> 추가 하 고 데이터 원본의 각 속성에 대 한 열을 바인딩하는 코드를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>The code that is generated at design-time is equivalent to the manually added code shown in the following example.</source>
          <target state="translated">디자인 타임에 생성 되는 코드는 다음 예제에 표시 된 것 수동으로 추가한 코드와 같습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>It is not the same as the auto-generation of columns at run-time that occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">실행 시 발생 하는 열 자동 생성 동일 하지 않습니다 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>The following code example demonstrates how to add columns manually and bind them to a data source when you set <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 열을 수동으로 추가 하 고 설정 하는 경우 데이터 원본에 바인딩해야 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> 를 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is bound to a list of <ph id="ph2">`Task`</ph> business objects.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤의 목록에 바인딩되어 <ph id="ph2">`Task`</ph> 비즈니스 개체입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>Then, columns are added and are bound to <ph id="ph1">`Task`</ph> properties through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">그런 다음 열 추가 되 고에 바인딩된 <ph id="ph1">`Task`</ph> 속성을 통해는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Access Objects in a Windows Forms DataGridViewComboBoxCell Drop-Down List<ept id="p1">](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridViewComboBoxCell 드롭다운 목록에서 개체 액세스<ept id="p1">](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the width of the specified column to fit the contents of its cells.</source>
          <target state="translated">지정된 열의 너비를 셀의 내용에 맞게 조정합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>The index of the column to resize.</source>
          <target state="translated">크기를 조정할 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>Adjusts the width of the specified column to fit the contents of all its cells, including the header cell.</source>
          <target state="translated">머리글 셀을 비롯한 모든 셀의 내용에 맞게, 지정된 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>This method is useful if you want to control when a column resizes.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
          <target state="translated">메서드; 호출당 열 너비를 한 번만 조정 나중에 열의 내용이 변경는 열을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
          <target state="translated">모든 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>The following code example uses this method to make the column width large enough to accommodate a new cell value.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 사용 하 여 열 너비 새 셀 값을 수용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Manipulate Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 조작<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>The index of the column to resize.</source>
          <target state="translated">크기를 조정할 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>Adjusts the width of the specified column using the specified size mode.</source>
          <target state="translated">지정된 크기 모드를 사용하여 지정된 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>This method is useful if you want to control when a column resizes.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
          <target state="translated">메서드; 호출당 열 너비를 한 번만 조정 나중에 열의 내용이 변경는 열을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
          <target state="translated">모든 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>The following code example uses this method to make the column width large enough to accommodate a new cell value.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 사용 하 여 열 너비 새 셀 값을 수용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Manipulate Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 조작<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>The index of the column to resize.</source>
          <target state="translated">크기를 조정할 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new width based on the current row heights; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the width with the expectation that the row heights will also be adjusted.</source>
          <target state="translated">현재 행 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하고 필요한 경우 행 높이가 조정될 것이란 가정하에 너비를 계산하여 지정된 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>This method is useful if you want to control when a column resizes.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
          <target state="translated">메서드; 호출당 열 너비를 한 번만 조정 나중에 열의 내용이 변경는 열을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
          <target state="translated">모든 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>If <ph id="ph1">`fixedHeight`</ph> is <ph id="ph2">`false`</ph>, the column width will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method next.</source>
          <target state="translated">경우 <ph id="ph1">`fixedHeight`</ph> 은 <ph id="ph2">`false`</ph>, 열 너비를 호출 한다는 예상에 따라 계산 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드 다음 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the height of the column headers to fit the header contents.</source>
          <target state="translated">머리글 내용에 맞게 열 머리글의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>Adjusts the height of the column headers to fit the contents of the largest column header.</source>
          <target state="translated">가장 큰 열 머리글의 내용에 맞게 열 머리글의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>This method is useful if you want to control when the column headers resize.</source>
          <target state="translated">이 메서드는 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
          <target state="translated">메서드; 호출당 열 머리글의 높이 한 번만 조정 열 머리글을 나중에 변경는 열 머리글 내용의 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 되었을 때를 자동으로 조정 하려면 열 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 열 머리글이 크기가 조정 될 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
          <source>The following code example demonstrates how to resize column headers and rows as a result of a button click.</source>
          <target state="translated">열 머리글의 크기를 조정 하는 방법은 다음 코드 예제에서는 및의 단추 결과 행을 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>The index of the column containing the header with the changed content.</source>
          <target state="translated">변경된 내용이 있는 머리글이 포함된 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>Adjusts the height of the column headers based on changes to the contents of the header in the specified column.</source>
          <target state="translated">지정된 열 머리글의 내용에 대한 변경 사항에 따라 열 머리글의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source.</source>
          <target state="translated">이 메서드는 지정 된 열의 머리글의 내용 바인딩된 데이터 원본에 사용자 편집 내용을 또는 변경으로 인해 변경 된 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
          <target state="translated">열 머리글의 높이 조정 됩니다 한 번만 메서드 호출당 내용 변경이 필요 합니다. 열 머리글을 나중에 변경는 열 머리글 내용의 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 되었을 때를 자동으로 조정 하려면 열 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 열 머리글이 크기가 조정 될 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new height based on the current width of the row headers; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the height with the expectation that the row headers width will also be adjusted.</source>
          <target state="translated">행 머리글의 현재 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 머리글 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new height based on the current column widths; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the height with the expectation that the column widths will also be adjusted.</source>
          <target state="translated">현재 열 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</source>
          <target state="translated">내용에 맞게(필요한 경우 열 및/또는 행 머리글 너비가 조정될 것이란 가정하에 높이를 계산하여) 열 머리글의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>This method is useful if you want to control when the column headers resize.</source>
          <target state="translated">이 메서드는 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
          <target state="translated">메서드; 호출당 열 머리글의 높이 한 번만 조정 열 머리글을 나중에 변경는 열 머리글 내용의 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 되었을 때를 자동으로 조정 하려면 열 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 열 머리글이 크기가 조정 될 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`fixedColumnsWidth`</ph> or <ph id="ph2">`fixedRowHeadersWidth`</ph> parameters are <ph id="ph3">`false`</ph>, the height of the column headers will be calculated with the expectation that you will call the methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedColumnsWidth`</ph> 또는 <ph id="ph2">`fixedRowHeadersWidth`</ph> 매개 변수는 <ph id="ph3">`false`</ph>, 열 머리글의 높이 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> 다음 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>The index of the column header whose contents should be used to determine new height.</source>
          <target state="translated">새 높이를 결정하는 데 사용될 내용이 들어 있는 열 머리글의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new height based on the current width of the row headers; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the height with the expectation that the row headers width will also be adjusted.</source>
          <target state="translated">행 머리글의 현재 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 머리글 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new height based on the current width of the specified column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the height with the expectation that the column width will also be adjusted.</source>
          <target state="translated">지정된 열의 현재 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</source>
          <target state="translated">지정된 열의 머리글 내용에 대한 변경 사항을 기준으로(필요한 경우 열 및/또는 행 머리글 너비가 조정될 것이란 가정하에 높이를 계산하여) 열 머리글의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source.</source>
          <target state="translated">이 메서드는 지정 된 열의 머리글의 내용 바인딩된 데이터 원본에 사용자 편집 내용을 또는 변경으로 인해 변경 된 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
          <target state="translated">열 머리글의 높이 조정 됩니다 한 번만 메서드 호출당 내용 변경이 필요 합니다. 열 머리글을 나중에 변경는 열 머리글 내용의 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 되었을 때를 자동으로 조정 하려면 열 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 열 머리글이 크기가 조정 될 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`fixedColumnWidth`</ph> or <ph id="ph2">`fixedRowHeadersWidth`</ph> parameters are <ph id="ph3">`false`</ph>, the height of the column headers will be calculated with the expectation that you will call the methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedColumnWidth`</ph> 또는 <ph id="ph2">`fixedRowHeadersWidth`</ph> 매개 변수는 <ph id="ph3">`false`</ph>, 열 머리글의 높이 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> 다음 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the width of all columns to fit the contents of their cells.</source>
          <target state="translated">셀의 내용에 맞게 모든 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>Adjusts the width of all columns to fit the contents of all their cells, including the header cells.</source>
          <target state="translated">머리글 셀을 비롯한 모든 셀의 내용에 맞게 모든 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>This method is useful if you want to control when columns resize.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
          <target state="translated">열 너비를 메서드 호출; 당 한 번만 조정 나중에 열의 내용을 변경 하면 열이 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
          <target state="translated">특정 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>The following code example resizes all columns to fit the contents of the columns and the column headers.</source>
          <target state="translated">다음 코드 예제에서는 열 및 열 머리글의 내용에 맞게 모든 열의 크기를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>Adjusts the width of all columns using the specified size mode.</source>
          <target state="translated">지정된 크기 모드를 사용하여 모든 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>This method is useful if you want to control when columns resize.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
          <target state="translated">열 너비를 메서드 호출; 당 한 번만 조정 나중에 열의 내용을 변경 하면 열이 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
          <target state="translated">특정 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>The following code example resizes all columns to fit the contents of the columns and the column headers.</source>
          <target state="translated">다음 코드 예제에서는 열 및 열 머리글의 내용에 맞게 모든 열의 크기를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new widths based on the current row heights; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the widths with the expectation that the row heights will also be adjusted.</source>
          <target state="translated">현재 행 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하고 필요한 경우 행 높이가 조정될 것이란 가정하에 너비를 계산하여 모든 열의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>This method is useful if you want to control when columns resize.</source>
          <target state="translated">이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
          <target state="translated">열 너비를 메서드 호출; 당 한 번만 조정 나중에 열의 내용을 변경 하면 열이 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
          <target state="translated">특정 열 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> 속성 또는 열 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>If <ph id="ph1">`fixedHeight`</ph> is <ph id="ph2">`false`</ph>, the column widths will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method next.</source>
          <target state="translated">경우 <ph id="ph1">`fixedHeight`</ph> 은 <ph id="ph2">`false`</ph>, 열 너비를 호출 한다는 예상에 따라 계산 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드 다음 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeColumnsMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the height of the specified row to fit the contents of its cells.</source>
          <target state="translated">지정된 행의 높이를 셀의 내용에 맞게 조정합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>The index of the row to resize.</source>
          <target state="translated">크기를 조정할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>Adjusts the height of the specified row to fit the contents of all its cells including the header cell.</source>
          <target state="translated">머리글 셀을 비롯한 모든 셀의 내용에 맞게, 지정된 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>This method is useful if you want to control when a row resizes.</source>
          <target state="translated">이 메서드는 행 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
          <target state="translated">행 높이가 메서드 호출; 당 한 번만 조정 나중에 행의 내용이 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
          <target state="translated">모든 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>The following code example resizes the third row in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to fit the column contents.</source>
          <target state="translated">다음 코드 예제에서는 세 번째 행의 크기를 조정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 열 내용에 맞게 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>The index of the row to resize.</source>
          <target state="translated">크기를 조정할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>Adjusts the height of the specified row using the specified size mode.</source>
          <target state="translated">지정된 크기 모드를 사용하여 지정된 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>This method is useful if you want to control when a row resizes.</source>
          <target state="translated">이 메서드는 행 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
          <target state="translated">행 높이가 메서드 호출; 당 한 번만 조정 나중에 행의 내용이 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
          <target state="translated">모든 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>The following code example resizes the third row in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to fit the column contents.</source>
          <target state="translated">다음 코드 예제에서는 세 번째 행의 크기를 조정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 열 내용에 맞게 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>The index of the row to resize.</source>
          <target state="translated">크기를 조정할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new height based on the current width of the columns; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the height with the expectation that the column widths will also be adjusted.</source>
          <target state="translated">열의 현재 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 지정된 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This method is useful if you want to control when a row resizes.</source>
          <target state="translated">이 메서드는 행 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
          <target state="translated">행 높이가 메서드 호출; 당 한 번만 조정 나중에 행의 내용이 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
          <target state="translated">모든 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>If <ph id="ph1">`fixedWidth`</ph> is <ph id="ph2">`false`</ph>, the row height will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
          <target state="translated">경우 <ph id="ph1">`fixedWidth`</ph> 은 <ph id="ph2">`false`</ph>, 행 높이 호출 한다는 예상에 따라 계산 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드 다음 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /&gt;</ph>이며 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph>은 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowMode" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the width of the row headers to fit the header contents.</source>
          <target state="translated">머리글 내용에 맞게 행 머리글의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>Adjusts the width of the row headers using the specified size mode.</source>
          <target state="translated">지정된 크기 모드를 사용하여 행 머리글의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This method is useful if you want to control when the row headers resize.</source>
          <target state="translated">이 메서드는 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
          <target state="translated">메서드 호출; 당 행 머리글의 너비를 한 번만 조정 헤더를 나중에 변경 행 머리글 하는 행의 내용을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 되었을 때 행 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
          <target state="translated">이 메서드를 사용 하면 표시 된 행에 있는 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>The index of the row header with the changed content.</source>
          <target state="translated">변경된 내용이 있는 행 머리글의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode.</source>
          <target state="translated">지정된 행 머리글의 내용에 대한 변경 사항을 기준으로 지정된 크기 모드를 사용하여 행 머리글의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source.</source>
          <target state="translated">이 메서드는 지정 된 행에서 머리글의 내용 바인딩된 데이터 원본에 사용자 편집 내용을 또는 변경으로 인해 변경 된 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
          <target state="translated">행 머리글의 너비 조정 됩니다 한 번만 메서드 호출당 내용 변경이 필요 합니다. 헤더를 나중에 변경 행 머리글 하는 행의 내용을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 되었을 때 행 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
          <target state="translated">이 메서드를 사용 하면 표시 된 행에 있는 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>The following code example illustrates how to resize the row header widths based on changes to the contents of the first row header.</source>
          <target state="translated">다음 코드 예제에서는 첫 번째 행 머리글의 내용에 대 한 변경 내용에 따라 행 머리글 너비의 크기를 조정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>의 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new width based on the current height of the column headers; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the width with the expectation that the height of the column headers will also be adjusted.</source>
          <target state="translated">열 머리글의 현재 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 머리글의 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new width based on the current row heights; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the width with the expectation that the row heights will also be adjusted.</source>
          <target state="translated">현재 행 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하여(필요한 경우 행 및/또는 열 머리글 너비가 조정될 것이란 가정하에 너비를 계산하여) 행 머리글의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This method is useful if you want to control when the row headers resize.</source>
          <target state="translated">이 메서드는 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
          <target state="translated">메서드 호출; 당 행 머리글의 너비를 한 번만 조정 헤더를 나중에 변경 행 머리글 하는 행의 내용을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 되었을 때 행 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
          <target state="translated">이 메서드를 사용 하면 표시 된 행에 있는 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`fixedColumnHeadersHeight`</ph> or <ph id="ph2">`fixedRowsHeight`</ph> parameters are <ph id="ph3">`false`</ph>, the width of the row headers will be calculated with the expectation that you will call methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedColumnHeadersHeight`</ph> 또는 <ph id="ph2">`fixedRowsHeight`</ph> 매개 변수는 <ph id="ph3">`false`</ph>, 행 머리글의 너비와 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> 다음 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>The index of the row containing the header with the changed content.</source>
          <target state="translated">변경된 내용이 있는 머리글이 포함된 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new width based on the current height of the column headers; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the width with the expectation that the height of the column headers will also be adjusted.</source>
          <target state="translated">열 머리글의 현재 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 머리글의 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new width based on the current height of the specified row; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the width with the expectation that the row height will also be adjusted.</source>
          <target state="translated">지정된 행의 현재 높이를 기준으로 새 너비를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</source>
          <target state="translated">지정된 행의 머리글 내용에 대한 변경 사항을 기준으로, 지정된 크기 모드를 사용하여(필요한 경우 행 및/또는 열 머리글 너비가 조정될 것이란 가정하에 너비를 계산하여) 행 머리글의 너비를 조정합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source.</source>
          <target state="translated">이 메서드는 지정 된 행에서 머리글의 내용 바인딩된 데이터 원본에 사용자 편집 내용을 또는 변경으로 인해 변경 된 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
          <target state="translated">행 머리글의 너비 조정 됩니다 한 번만 메서드 호출당 내용 변경이 필요 합니다. 헤더를 나중에 변경 행 머리글 하는 행의 내용을 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 되었을 때 행 머리글을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
          <target state="translated">이 메서드를 사용 하면 표시 된 행에 있는 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`fixedColumnHeadersHeight`</ph> or <ph id="ph2">`fixedRowHeight`</ph> parameters are <ph id="ph3">`false`</ph>, the width of the row headers will be calculated with the expectation that you will call methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedColumnHeadersHeight`</ph> 또는 <ph id="ph2">`fixedRowHeight`</ph> 매개 변수는 <ph id="ph3">`false`</ph>, 행 머리글의 너비와 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> 다음 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>는 값이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowHeadersWidthSizeMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Adjusts the heights of some or all rows to fit their contents.</source>
          <target state="translated">해당 내용에 맞추기 위해 일부 또는 모든 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>Adjusts the heights of all rows to fit the contents of all their cells, including the header cells.</source>
          <target state="translated">머리글 셀을 비롯한 모든 셀의 내용에 맞게 모든 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>This method is useful if you want to control when rows resize.</source>
          <target state="translated">이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
          <target state="translated">행 높이 메서드 호출; 당 한 번만 조정 나중에 행의 내용을 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
          <target state="translated">특정 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">행의 하위 집합의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>The following code example demonstrates how to resize all rows based on non-header cell content.</source>
          <target state="translated">다음 코드 예제에서는 비 머리글 셀 내용을 기반으로 하는 모든 행의 크기를 조정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>Adjusts the heights of the rows using the specified size mode value.</source>
          <target state="translated">지정된 크기 모드 값을 사용하여 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>This method is useful if you want to control when rows resize.</source>
          <target state="translated">이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
          <target state="translated">행 높이 메서드 호출; 당 한 번만 조정 나중에 행의 내용을 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
          <target state="translated">특정 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">행의 하위 집합의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>The following code example demonstrates how to resize all rows based on non-header cell content.</source>
          <target state="translated">다음 코드 예제에서는 비 머리글 셀 내용을 기반으로 하는 모든 행의 크기를 조정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 콘텐츠 맞춤을 프로그래밍 방식으로 크기를 조정 셀<ept id="p1">](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>를 가지며 <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph>이 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>을 갖습니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new heights based on the current column widths; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the heights with the expectation that the column widths will also be adjusted.</source>
          <target state="translated">현재 열 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 모든 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>This method is useful if you want to control when rows resize.</source>
          <target state="translated">이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
          <target state="translated">행 높이 메서드 호출; 당 한 번만 조정 나중에 행의 내용을 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
          <target state="translated">특정 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">행의 하위 집합의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>If the <ph id="ph1">`fixedWidth`</ph> parameter is <ph id="ph2">`false`</ph>, the row heights will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedWidth`</ph> 매개 변수는 <ph id="ph2">`false`</ph>, 행 높이 호출 한다는 예상에 따라 계산 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드 다음 합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>를 가지며 <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph>이 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>을 갖습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>The index of the first row to resize.</source>
          <target state="translated">크기를 조정할 첫 번째 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>The number of rows to resize.</source>
          <target state="translated">크기를 조정할 행 수입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to calculate the new heights based on the current column widths; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to calculate the heights with the expectation that the column widths will also be adjusted.</source>
          <target state="translated">현재 열 너비를 기준으로 새 높이를 계산하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</source>
          <target state="translated">지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 지정된 행의 높이를 조정합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This method is useful if you want to control when rows resize, but you want to resize only a specific subset of rows, such as those within a range of bound records that have been updated.</source>
          <target state="translated">이 메서드는 크기를 조정할 행, 있지만 바인딩된 레코드 업데이트 된 범위 내의 같은 행의 특정 하위 집합만 크기를 조정 하려면 시기를 제어 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>The row heights for the specified rows are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
          <target state="translated">메서드 호출; 당 한 번만 지정된 된 행에 대 한 행 높이 조정 나중에 행의 내용을 변경, 행 하는 자동으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
          <target state="translated">특정 행의 크기를 조정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>To resize all rows, use a different overload of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
          <target state="translated">모든 행의 크기를 조정 하려면의 다른 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
          <target state="translated">자동으로 조정 내용이 변경 될 때마다 행을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
          <target state="translated">이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This improves performance when the control contains a large number of rows.</source>
          <target state="translated">컨트롤 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 얻을 수 있도록 설계 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>If the <ph id="ph1">`fixedWidth`</ph> parameter is <ph id="ph2">`false`</ph>, the row heights will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
          <target state="translated">경우는 <ph id="ph1">`fixedWidth`</ph> 매개 변수는 <ph id="ph2">`false`</ph>, 행 높이 호출 한다는 예상에 따라 계산 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드 다음 합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">프로그래밍 방식의 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>를 가지며 <ph id="ph4">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /&gt;</ph>이 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph> has the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="autoSizeRowsMode" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>을 갖습니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndexStart" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndexStart" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowsCount" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowsCount" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">이 속성은 이 클래스와 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용하도록 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> property of a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Manipulate Columns in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 열 조작<ept id="p1">](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Gets or sets a value indicating how column widths are determined.</source>
          <target state="translated">열 너비의 결정 방식을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>This property lets you configure the control so that column widths are automatically adjusted either to fill the control or to fit cell contents.</source>
          <target state="translated">이 속성에는 컨트롤을 채우거 나 셀 내용에 맞게 열 너비는 자동으로 조정 되도록 컨트롤을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Size adjustments occur in fill mode whenever the width of the control changes.</source>
          <target state="translated">크기 조정 컨트롤의 너비를 변경 될 때마다 채우기 모드에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>In content-based sizing modes, size adjustments occur whenever cell contents change or, if <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> is enabled, whenever row heights change.</source>
          <target state="translated">콘텐츠 기반 크기 조정 모드에서 크기를 조절 셀 내용이 변경 될 때마다 또는 경우에 발생할 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 행 높이 변경할 때마다 활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Some content-based sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.</source>
          <target state="translated">일부 콘텐츠 기반 크기 조정 모드 성능을 높이기 위해 크기 조정 하면 현재 표시 된 행을 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>To change the sizing mode for an individual column, set its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">개별 열에 대 한 크기 조정 모드를 변경 하려면 설정 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The default value of this property is <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet&gt;</ph>, indicating that the column inherits its behavior and its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt;</ph> property value from the control.</source>
          <target state="translated">이 속성의 기본값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet&gt;</ph>, 열의 동작을 상속 함을 나타내는 및 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt;</ph> 컨트롤에서 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Columns in fill mode divide the available control width in proportions indicated by their <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt;</ph> property values.</source>
          <target state="translated">열 채우기 모드에 분할은 사용 가능한 컨트롤 너비의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The width available for fill mode is determined by subtracting the widths of all other columns from the width of the client area of the control.</source>
          <target state="translated">채우기 모드에 사용할 수 있는 너비는 컨트롤의 클라이언트 영역 너비에서 다른 모든 열의 너비를 빼는 방식으로 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>If this width is smaller than the combined <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A&gt;</ph> values of all fill-mode columns, the horizontal scroll bar is displayed, all fill-mode columns are shown with their minimum widths, and user column-resizing is disabled.</source>
          <target state="translated">이 너비는 결합 된 보다 작은 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A&gt;</ph> 모든 채우기 모드 열의 값을 가로 스크롤 막대가 표시 됩니다, 최소 너비로, 표시 되는 모든 채우기 모드 열 및 열 크기 조정 사용자를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>For more information about column fill mode, see <bpt id="p1">[</bpt>Column Fill Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">열 채우기 모드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 열 채우기 모드<ept id="p1">](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Only columns with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Visible%2A&gt;</ph> property value of <ph id="ph2">`true`</ph> are resized automatically, and changing the visibility of a column does not cause resizing to occur.</source>
          <target state="translated">열만는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Visible%2A&gt;</ph> 속성 값이 <ph id="ph2">`true`</ph> 자동으로 크기가 조정 되는 열의 표시 유형을 변경 해도 크기 조정이 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>Additionally, when columns are set to automatically resize, the user cannot adjust the column widths with the mouse.</source>
          <target state="translated">또한 자동으로 크기를 조정 하려면 열을 설정 하는 경우 사용자가 마우스로 열 너비를 조정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>To adjust column widths programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> methods or set the column <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Width%2A&gt;</ph> property.</source>
          <target state="translated">열 너비를 프로그래밍 방식으로 조정 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> 메서드 또는 열 집합 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Width%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>For more information about content-based automatic sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">콘텐츠 기반 자동 크기 조정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The following code example illustrates how to use this property in a master/detail scenario where two <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls display data from two tables in a parent/child relationship.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 마스터/세부 시나리오에서이 속성을 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 부모/자식 관계에서 두 테이블의 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>In this example, the column sizing mode for the master control is <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None&gt;</ph>, and the column widths are programmatically initialized to fit the loaded values.</source>
          <target state="translated">이 예에서 마스터 컨트롤에 대 한 열 크기 조정 모드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None&gt;</ph>, 열 너비 로드 된 값에 맞게 프로그래밍 방식으로 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The details control is set to an automatic column sizing mode so that columns will adjust automatically whenever the values change (for example, when the user changes the current row in the parent table).</source>
          <target state="translated">세부 정보 컨트롤 (예를 들어 변경 될 때 사용자는 부모 테이블의 현재 행) 값이 변경 될 때마다 열이 자동으로 조정 되도록 열 자동 크기 조정 모드로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Create a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법:는 마스터/세부 폼을 사용 하 여 두 개의 Windows Forms DataGridView 컨트롤 만들기<ept id="p1">](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph>, column headers are hidden, and at least one visible column has an <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> property value of <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /&gt;</ph>이고, 열 머리글이 숨겨져 있고, 표시된 하나 이상의 열이 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> 속성 값 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>을 갖습니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph> and at least one visible column with an <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> property value of <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph> is frozen.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /&gt;</ph>이고 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /&gt;</ph> 속성 값 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /&gt;</ph>을 갖는 표시된 하나 이상의 열이 고정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>Gets or sets a value indicating how row heights are determined.</source>
          <target state="translated">행 높이의 결정 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> value indicating the sizing mode.</source>
          <target state="translated">크기 조정 모드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>This property lets you configure the control so that row heights are automatically adjusted to fit their contents whenever the contents change.</source>
          <target state="translated">이 속성에는 행 높이 자동으로 내용이 변경 될 때마다 해당 내용에 맞게 조정 되도록 컨트롤을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> is enabled, row heights are also adjusted whenever column widths change.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 가 사용 하도록 설정, 행 높이도 조정 됩니다 열 너비 변경 될 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>Some sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.</source>
          <target state="translated">일부 크기 조정 모드 성능을 높이기 위해 크기 조정 하면 현재 표시 된 행을 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>Only rows with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Visible%2A&gt;</ph> property value of <ph id="ph2">`true`</ph> are resized automatically, and changing the visibility of a row does not cause resizing to occur.</source>
          <target state="translated">행만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Visible%2A&gt;</ph> 의 속성 값 <ph id="ph2">`true`</ph> 자동으로 크기를 조정할 행의 표시 여부를 변경 해도 크기 조정이 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>Additionally, when rows are set to automatically resize, the user cannot adjust the row heights with the mouse.</source>
          <target state="translated">또한 자동으로 조정 행을 설정 하는 사용자 마우스와 행 높이 조정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> value of an automatically sized row is recalculated during layout to account for the size of the font that is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> 사용 되는 글꼴의 크기를 고려 하는 레이아웃 하는 동안 자동으로 크기가 지정 된 행의 값이 다시 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>To get the correct <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph>, you should retrieve the value in the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of in the form's constructor.</source>
          <target state="translated">가져올 올바른 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph>, 폼의 값을 검색 해야 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> 폼의 생성자에서 대신 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>To adjust row heights programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> methods, or set the row <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> property.</source>
          <target state="translated">행 높이 프로그래밍 방식으로 조정 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드 또는 행 집합 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 한 행의 크기를 조정할 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>For more information about content-based automatic sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">콘텐츠 기반 자동 크기 조정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>The following code example demonstrates how to set the row to automatically resize based on the contents of the row headers and all of the columns.</source>
          <target state="translated">다음 코드 예제에서는 행의 모든 열 및 행 머리글의 내용에 따라 자동으로 크기 조정을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 자동으로 크기를 조정 셀 변경 될 때 콘텐츠 Windows Forms DataGridView 컨트롤의<ept id="p1">](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph> and row headers are hidden.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>이고 행 머리글이 숨겨져 있습니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 자동으로 크기를 조정 셀 변경 될 때 콘텐츠 Windows Forms DataGridView 컨트롤의<ept id="p1">](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">컨트롤의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">컨트롤의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackColor">
          <source>This property is not relevant to this control.</source>
          <target state="translated">이 속성은이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackColor">
          <source>To set the background color of the portion of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control not occupied by cells, use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> property.</source>
          <target state="translated">부분 배경색을 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀으로 채워지지 않은 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.BackColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackColor" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackColor" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackColorChanged&gt;</ph> event is raised if the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackColor%2A&gt;</ph> property is changed programmatically or by user interaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackColorChanged&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackColor%2A&gt;</ph> 프로그래밍 방식으로 또는 사용자 인터페이스에 의해 속성이 변경 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>Gets or sets the background color of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.AppWorkspace" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.AppWorkspace" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> property determines the color of the area of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> that is not filled with cells.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> 의 영역 색을 결정 하는 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀으로 채워지지 않습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Drawing.Color.Empty" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Drawing.Color.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundColor">
          <source>The specified value when setting this property has a <ph id="ph1">&lt;see cref="P:System.Drawing.Color.A" /&gt;</ph> property value that is less that 255.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 255보다 작은 <ph id="ph1">&lt;see cref="P:System.Drawing.Color.A" /&gt;</ph> 속성 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundImage">
          <source>Gets or sets the background image displayed in the control.</source>
          <target state="translated">컨트롤에 표시할 배경 이미지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundImage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> that represents the image to display in the background of the control.</source>
          <target state="translated">컨트롤의 배경에 표시할 이미지를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundImage">
          <source>This property is not relevant for this control.</source>
          <target state="translated">이 속성은 이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundImageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BackgroundImageLayout">
          <source>Gets or sets the background image layout as defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 열거형에서 정의된 대로 배경 이미지 레이아웃을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundImageLayout">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> value indicating the background image layout.</source>
          <target state="translated">배경 이미지 레이아웃을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundImageLayout">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BackgroundImageLayout">
          <source>This property is not relevant for this control.</source>
          <target state="translated">이 속성은 이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged">
          <source>Although this event occurs as described, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A&gt;</ph> property is not relevant for this control.</source>
          <target state="translated">설명한 대로,이 이벤트 발생 하지만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A&gt;</ph> 속성은이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to select all the cell's contents; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to not select any contents.</source>
          <target state="translated">모든 셀의 내용을 선택하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 아무 내용도 선택하지 않으려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>Puts the current cell in edit mode.</source>
          <target state="translated">현재 셀을 편집 모드로 전환합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current cell is already in edit mode or successfully enters edit mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 셀이 이미 편집 모드에 있거나 성공적으로 편집 모드로 전환되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> if the cell fails to enter edit mode, which can happen for a number of reasons.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`false`</ph> 셀 실패에 대 한 다양 한 이유로 발생할 수 있음 편집 모드로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> if the current cell is read-only.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`false`</ph> 현재 셀이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>It also returns <ph id="ph1">`false`</ph> if the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</ph> property is <ph id="ph3">`null`</ph> (meaning the cell cannot host an editing control) and the cell type does not implement the <ph id="ph4">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</ph> interface.</source>
          <target state="translated">또한 반환 <ph id="ph1">`false`</ph> 경우 셀 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</ph> 속성은 <ph id="ph3">`null`</ph> (즉, 셀 수 없는 편집 컨트롤을 호스팅할) 셀 유형을 구현 하지 않으므로 <ph id="ph4">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>If the cell supports editing, this method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBeginEdit&gt;</ph> event, which can be canceled, and returns <ph id="ph2">`false`</ph> if an event handler cancels the edit.</source>
          <target state="translated">셀이 편집을 지 원하는 경우이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBeginEdit&gt;</ph> 취소할 수 및 반환 하는 이벤트 <ph id="ph2">`false`</ph> 이벤트 처리기가 편집을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>If the edit is not canceled and the cell can host an editing control, this method initializes the control and displays it.</source>
          <target state="translated">편집 취소 되지 않은 셀 편집 컨트롤을 호스팅할 수 하는 경우이 메서드는 컨트롤을 초기화 하 표시 합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>If the initialization fails, this method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 초기화가 실패 하면, <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>If the cell successfully enters edit mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">셀에는 성공적으로 편집 모드로 전환 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /&gt;</ph> is not set to a valid cell.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /&gt;</ph>이 유효한 셀로 설정되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>This method was called in a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /&gt;</ph> event.</source>
          <target state="translated">이 메서드가 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /&gt;</ph> 이벤트의 처리기에서 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>The type indicated by the cell's <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property does not derive from the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> type.</source>
          <target state="translated">셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 나타내는 형식이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 형식에서 파생되지 않습니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>The type indicated by the cell's <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property does not implement the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph> interface.</source>
          <target state="translated">셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 나타내는 형식이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>Initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">편집 셀 값을 초기화하지 못했으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>Gets or sets the border style for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 테두리 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>This property affects the outer border of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">이 속성의 바깥쪽 테두리에 적용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>To set the style of the cell borders, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">셀 테두리의 스타일을 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>The following code example demonstrates how to initialize a simple data-bound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 간단한 데이터 바인딩 초기화 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>It also demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.BorderStyle">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CancelEdit">
          <source>Cancels edit mode for the currently selected cell and discards any changes.</source>
          <target state="translated">현재 선택된 셀에 대해 편집 모드를 취소하고 변경 내용을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CancelEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cancel was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">취소에 성공했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CancelEdit">
          <source>The following code example illustrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CancelEdit">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>Column Fill Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 열 채우기 모드<ept id="p1">](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the cancels edits in a row.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>일 때 발생하며 행의 편집 내용을 취소합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in virtual mode, changes are committed to the data cache at the cell level by default.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 가 가상 모드에 변경 내용이 기본적으로 셀 수준에서 데이터 캐시에 커밋됩니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event can be used when implementing row-level transactions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> 행 수준의 트랜잭션을 구현할 때에 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>The following code example illustrates how to handle this event for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control in virtual mode.</source>
          <target state="translated">다음 코드 예제에 대 한이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 가상 모드에 대 한 제어 합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>When the control is in edit mode, the <ph id="ph1">`rowInEdit`</ph> variable holds the index of the row being edited, and the <ph id="ph2">`customerInEdit`</ph> variable holds a reference to a Customer object corresponding to that row.</source>
          <target state="translated">컨트롤이 편집 모드일 때는 <ph id="ph1">`rowInEdit`</ph> 변수에 편집 되는 행의 인덱스 및 <ph id="ph2">`customerInEdit`</ph> 변수는 해당 행에 해당 하는 Customer 개체에 대 한 참조를 보유 합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>When the user cancels out of edit mode, this object can be discarded.</source>
          <target state="translated">사용자가 편집 모드를 취소,이 개체는 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>If the row the user was editing is the row for new records, however, the old Customer object is discarded and replaced with a new one so that the user can begin making edits again.</source>
          <target state="translated">그러나 사용자 편집 된 행이 새 레코드에 대 한 행, 이전 고객 개체 삭제 하 고 사용자 편집 작업을 다시 수행을 시작할 수 있도록 새 항목으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CancelRowEdit">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>연습: Windows Forms DataGridView 컨트롤에서 가상 모드 구현<ept id="p1">](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated">IME 지원을 사용하도록 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> 속성을 활성 값으로 설정할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is an editable cell selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집할 수 있는 셀이 선택되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellBeginEdit">
          <source>Occurs when edit mode starts for the selected cell.</source>
          <target state="translated">선택한 셀에 대한 편집 모드가 시작될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBeginEdit">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBeginEdit">
          <source>The following code example illustrates how to handle this event to reflect that the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> is being edited.</source>
          <target state="translated">다음 코드 예제에서는 현재를 반영 하기 위해이 이벤트를 처리 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> 편집 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBeginEdit">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the containing <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is set to reflect which cell is being edited.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 포함 하는 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 는 셀이 편집 중인지를 반영 하도록 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBeginEdit">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and ensure all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>Gets the cell border style for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /&gt;</ph> that represents the border style of the cells contained in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 포함된 셀의 테두리 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> 속성이 아닌 다른 값으로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> 속성 시스템 색을 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the cell border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">이 속성 설정할 수 없습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom&gt;</ph> 는 읽기 전용으로 지정 하는 값의 셀 테두리 스타일을 사용 하 여 사용자 지정 된 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CellBorderStyle">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>Occurs when the border style of a cell changes.</source>
          <target state="translated">셀의 테두리 스타일이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>Occurs when any part of a cell is clicked.</source>
          <target state="translated">셀에서 임의 부분을 클릭하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>This event occurs when any part of a cell is clicked, including borders and padding.</source>
          <target state="translated">이 이벤트는 안쪽 여백 및 테두리를 포함 하 여 셀의 모든 부분을 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>It also occurs when the user presses and releases the SPACE key while a button cell or check box cell has focus, and will occur twice for these cell types if the cell is clicked while pressing the SPACE key.</source>
          <target state="translated">또한 동안 단추 셀 이나 확인란 셀에 포커스가 있으면 이러한 셀 형식은 셀이 공간 키를 누른 채 클릭 하는 경우 두 번 발생 합니다 공간 키를 놓을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>To determine when the cell contents are clicked, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> event.</source>
          <target state="translated">셀의 내용을 클릭 된 시기를 확인 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>This event does not receive information about the mouse position.</source>
          <target state="translated">이 이벤트는 마우스 위치에 대 한 정보를 수신 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>If the event handler needs information about the mouse position, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> event.</source>
          <target state="translated">이벤트 처리기에 게 마우스 위치에 대 한 정보가 필요한 경우 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> event instead.</source>
          <target state="translated">클릭는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>,이 이벤트 발생 전에 확인란 변경 값 이므로 현재 값을 기반으로 한 예상 값을 계산 하지 않을 경우, 일반적으로 처리 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> 이벤트 대신 합니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">사용자가 지정한 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 포커스가 셀을 벗어날 경우에 발생도 처리 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
          <target state="translated">해당 처리기에서 확인란 셀 현재 셀을 사용 하는 경우 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> 메서드와 전달은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick&gt;</ph> event handler in a Tic-Tac-Toe game implementation that uses image columns in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick&gt;</ph> image 열을 사용 하는 Tic-Tac-Toe 게임 구현에서 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>Unless the game is over or the cell has already been clicked, the event handler sets the cell value to one of two <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> objects represented by the variables <ph id="ph2">`x`</ph> and <ph id="ph3">`o`</ph>.</source>
          <target state="translated">이벤트 처리기 2 중 하나에 셀 값을 설정 게임이 시키거나 셀이 이미 클릭 <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> 변수 개체가 <ph id="ph2">`x`</ph> 및 <ph id="ph3">`o`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellClick">
          <source>This code is part of a larger example shown in <bpt id="p1">[</bpt>How to: Work with Image Columns in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 코드는에 표시 된 것 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>Occurs when the content within a cell is clicked.</source>
          <target state="translated">셀 내부에 있는 내용을 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>This event occurs when the cell content is clicked.</source>
          <target state="translated">이 이벤트는 셀 내용을 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>It also occurs when the user presses and releases the SPACEBAR while a button cell or check box cell has focus, and will occur twice for these cell types if the cell content is clicked while pressing the SPACEBAR.</source>
          <target state="translated">때에 사용자는 눌렀다 단추 셀 스페이스바 또는 확인란 셀에 포커스가 및 이러한 셀 형식은 셀 내용을 표시 하려면 스페이스바를 누른 채 클릭 하는 경우 두 번 발생 합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>Use this event to detect button clicks for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;</ph> or link clicks for a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewLinkCell&gt;</ph>.</source>
          <target state="translated">이 이벤트를 사용 하 여 단추 클릭에 대 한를 검색 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;</ph> 또는 링크에 대 한 클릭는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewLinkCell&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> event instead.</source>
          <target state="translated">클릭는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>,이 이벤트 발생 전에 확인란 변경 값 이므로 현재 값을 기반으로 한 예상 값을 계산 하지 않을 경우, 일반적으로 처리 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> 이벤트 대신 합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">사용자가 지정한 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 포커스가 셀을 벗어날 경우에 발생도 처리 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
          <target state="translated">해당 처리기에서 확인란 셀 현재 셀을 사용 하는 경우 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> 메서드와 전달은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>The following code example provides a handler for this event that determines whether the clicked cell is a link cell or a button cell and performs the corresponding action as a result.</source>
          <target state="translated">다음 코드 예제에서는 클릭 한 셀 링크 셀 또는 단추 셀 및 결과적으로 해당 작업을 수행 하는지 여부를 결정 하는이 이벤트에 대 한 처리기를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentClick">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> class overview topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> 클래스 개요 항목입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>Occurs when the user double-clicks a cell's contents.</source>
          <target state="translated">사용자가 셀의 내용을 두 번 클릭하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>Occurs when a cell's shortcut menu is needed.</source>
          <target state="translated">셀의 바로 가기 메뉴가 필요할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 이벤트 발생만 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성을 설정 또는 해당 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a cell.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 이벤트 처리기에서 지정 하는 바로 가기 메뉴가 표시 됩니다는 셀을 클릭할 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>This is useful when you want to display a shortcut menu determined by the current state or value of a cell.</source>
          <target state="translated">현재 상태 또는 셀의 값에 의해 결정 되는 바로 가기 메뉴를 표시 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> property is retrieved, either programmatically or when the user right-clicks a cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 이벤트는 또한 될 때마다 발생의 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> 검색 하거나 프로그래밍 방식으로 또는 셀을 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> properties to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> 상태 또는 셀의 값을 확인 하 고이 정보를 사용 하 여 변경 하거나 수정할 속성을는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property, which the event value overrides.</source>
          <target state="translated">이 속성은 셀의 값으로 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> 이벤트 값을 무시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> value for multiple cells.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 많은 양의 데이터로 작업할 때 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> 여러 셀에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>You can also specify shortcut menus for individual rows rather than individual cells by setting the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property or handling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event.</source>
          <target state="translated">행을 설정 하 여 개별 셀 대신 개별 행에 대 한 바로 가기 메뉴를 지정할 수도 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> 속성 또는 처리는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>The cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property setting overrides the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting, and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event overrides both the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event and the row <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting.</source>
          <target state="translated">셀 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> 속성 설정은 행 보다 우선 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> 속성 설정 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 이벤트 모두 재정의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트와 행 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>However, you can specify <ph id="ph1">`null`</ph> for a cell shortcut menu to prevent a row shortcut menu from being overridden.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`null`</ph> 행 바로 가기 메뉴에서 재정의 되지 않도록 셀 바로 가기 메뉴에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event handler to display a custom shortcut menu used when the user right-clicks a cell.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 이벤트 처리기는 셀을 마우스 오른쪽 단추로 클릭할 때 사용 되는 사용자 지정 바로 가기 메뉴를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>Occurs when the user double-clicks anywhere in a cell.</source>
          <target state="translated">사용자가 셀에서 임의의 지점을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellEndEdit">
          <source>Occurs when edit mode stops for the currently selected cell.</source>
          <target state="translated">현재 선택한 셀에 대한 편집 모드가 중지될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEndEdit">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEndEdit">
          <source>The following code example illustrates how to handle this event to clear the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType&gt;</ph> property in case it was previously set by a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제에서는 행의 선택을 취소 하려면이 이벤트를 처리 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType&gt;</ph> 속성에서 이전에 설정 된 경우에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEndEdit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event handler can clear the error text when the new cell value meets the validation criteria, but when the user reverts to the old cell value by pressing ESC, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event does not occur.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> 이벤트 처리기는 ESC 키를 눌러 이전 셀 값으로 되돌리는 경우 사용자 하지만 새 셀 값이 유효성 검사 조건을 만족할 때 오류 텍스트를 제거할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEndEdit">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>연습: Windows Forms DataGridView 컨트롤의 데이터 유효성 검사<ept id="p1">](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>Occurs when the current cell changes in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control or when the control receives input focus.</source>
          <target state="translated">현재 셀이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에서 변경되거나 이 컨트롤이 입력 포커스를 받을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>This event may occur twice for a single click if the control does not have input focus and the clicked cell was not previously the current cell.</source>
          <target state="translated">컨트롤에 입력된 포커스가 없으면 있고 클릭 한 셀 없기 이전 현재 셀이이 이벤트는 한 번 클릭에 대해 두 번 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>The following code example illustrates how to handle this event to change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A&gt;</ph> property of the current cell.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A&gt;</ph> 현재 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>In this example the selection background color is set in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEnter&gt;</ph> event, then reset to <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellLeave&gt;</ph> event.</source>
          <target state="translated">이 예에서 선택 영역 배경색 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEnter&gt;</ph> 다음으로 다시 설정 이벤트 <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellEnter">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and ensure that all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /&gt;</ph> property of a cell changes.</source>
          <target state="translated">셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>Occurs when a cell's error text is needed.</source>
          <target state="translated">셀의 오류 텍스트가 필요할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트 발생만 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성을 설정 또는 해당 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event is useful when you want to determine the error for a cell depending on its value or state.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트는 해당 값 또는 상태에 따라 셀에 대 한 오류를 확인 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event and specify error text in the handler, an error glyph appears in the cell unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph> or the cell is in edit mode.</source>
          <target state="translated">처리할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트 오류 텍스트에에서 지정 된 처리기를 오류 문자 모양과 셀에 표시 하지 않는 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`false`</ph> 또는 셀이 편집 모드에 있습니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.</source>
          <target state="translated">오류 문자 위로 마우스 포인터를 이동할 때 오류 텍스트 도구 설명에 나타납니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType&gt;</ph> property is retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트는 또한 될 때마다 발생의 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType&gt;</ph> 속성을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A&gt;</ph> property to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A&gt;</ph> 속성을 상태 또는 셀의 값을 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> property, which the event value overrides.</source>
          <target state="translated">이 속성은 셀의 값으로 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> 이벤트 값을 무시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> value for multiple cells.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 많은 양의 데이터로 작업할 때 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> 여러 셀에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
          <source>The following code example demonstrates how to create error messages for cells without unsharing rows or causing the cell error to be duplicated over all the shared cells.</source>
          <target state="translated">다음 코드 예제에는 행을 공유 하지 않도록 또는 모든 공유 셀에 걸쳐 복제 하려면 셀 오류 않고 셀에 대 한 오류 메시지를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>Occurs when the contents of a cell need to be formatted for display.</source>
          <target state="translated">표시를 위해 셀 내용의 서식을 지정해야 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will attempt to convert a cell's value into a format suitable for display.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤은 셀의 값을 표시 하기 위해 적합 한 형식으로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>For example, it will convert a numerical value into a string for display in a text box cell.</source>
          <target state="translated">예를 들어 숫자 값을 텍스트 상자 셀에 표시 하기 위해 문자열로 변환 됩니다 것입니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>You can indicate the formatting convention to use by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by properties such as the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
          <target state="translated">서식 규칙을 설정 하 여 사용을 나타낼 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 와 같은 속성에 의해 반환 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>If the standard formatting is insufficient, you can customize the formatting by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
          <target state="translated">표준 서식으로 충분 하지 않을 경우 사용자 지정할 수 있습니다 처리 하 여 서식을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>This event lets you indicate the exact display value as well as the cell styles, such as background and foreground color, to use for the cell display.</source>
          <target state="translated">이 이벤트에는 정확한 표시 값 뿐 아니라 셀 표시 하기 위해 사용할 배경 및 전경 색과 같은 셀 스타일을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>This means you can handle this event for any kind of cell formatting, regardless of whether the cell value itself needs formatting.</source>
          <target state="translated">즉, 모든 종류의 서식, 셀 값 자체의 서식 지정 필요성 여부에 관계 없이 셀에 대 한이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event occurs every time each cell is painted, so you should avoid lengthy processing when handling this event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이 이벤트는 각 셀을 그릴 하지 않아야 시간이 오래 걸리는이 이벤트를 처리할 때 처리 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>This event also occurs when the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> is retrieved or its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A&gt;</ph> method is called.</source>
          <target state="translated">이 이벤트에도 발생 때 셀 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> 검색 또는 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> property is initialized with the cell value.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> 속성은 셀 값으로 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>If you provide custom conversion from the cell value to the display value, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> property to the converted value, ensuring that the new value is of the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
          <target state="translated">표시 값을 사용자 지정 변환 셀 값에서 제공 하는 경우 설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> 속성 셀에 의해 지정 된 형식의 새 값이 있는지 확인 하는 변환 된 값을 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>To indicate that no further value formatting is necessary, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">더 이상 값 서식 지정이 필요 없음을 나타내려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>When the event handler completes, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`null`</ph> or is not of the correct type, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> is formatted using the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the cell style returned by the <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> property, which is initialized using the cell <ph id="ph11">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
          <target state="translated">완료 되었을 때 이벤트 처리기는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> 은 <ph id="ph2">`null`</ph> 없거나 올바른 형식의 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> 사용 하 여 포맷 되는 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, 및 <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> 의해 반환 된 셀 스타일의 속성은 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> 셀을 사용 하 여 초기화 된 속성 <ph id="ph11">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>Regardless of the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> property, the display properties of the object returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> property are used to render the cell.</source>
          <target state="translated">값에 관계 없이 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType&gt;</ph> 속성, 반환 되는 개체의 표시 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성은 셀을 렌더링 하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>For more information about custom formatting using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event, see <bpt id="p1">[</bpt>How to: Customize Data Formatting in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">사용자 지정 서식 사용에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이벤트 참조 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 사용자 지정 데이터 형식<ept id="p1">](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>To avoid performance penalties when handling this event, access the cell through the parameters of the event handler rather than accessing the cell directly.</source>
          <target state="translated">이 이벤트를 처리할 때 성능 저하를 방지 하려면 셀에 셀에 직접 액세스 하는 대신 이벤트 처리기의 매개 변수를 통해 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>To customize the conversion of a formatted, user-specified value into an actual cell value, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event.</source>
          <target state="translated">서식이 지정 된 사용자 지정 값을 실제 셀 값으로 변환을 사용자 지정 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellFormatting">
          <source>The following code example shows how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellLeave">
          <source>Occurs when a cell loses input focus and is no longer the current cell.</source>
          <target state="translated">셀이 입력 포커스를 잃어 더 이상 현재 셀이 아닐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellLeave">
          <source>The following code example illustrates how to handle this event to change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A&gt;</ph> property of the current cell.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A&gt;</ph> 현재 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellLeave">
          <source>In this example the selection background color is set in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEnter&gt;</ph> event, then reset to <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellLeave&gt;</ph> event.</source>
          <target state="translated">이 예에서 선택 영역 배경색 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEnter&gt;</ph> 다음으로 다시 설정 이벤트 <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellLeave">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and ensure that all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>Occurs whenever the user clicks anywhere on a cell with the mouse.</source>
          <target state="translated">사용자가 마우스로 셀의 임의 지점을 클릭할 때마다 발생합니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>This event occurs when the user clicks using any of the mouse buttons.</source>
          <target state="translated">이 이벤트는 사용자가 마우스 단추를 사용 하 여을 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> property to determine which button was clicked.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> 속성을 클릭 한 단추를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>To detect clicks on the contents of a cell, such as a button or link within a cell, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> event.</source>
          <target state="translated">예: 단추 또는 셀 내에서 링크 셀의 내용에는 클릭을 감지 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>The handler for this event receives the column index and row index of the mouse pointer position.</source>
          <target state="translated">이 이벤트의 처리기는 열 인덱스와 마우스 포인터 위치의 행 인덱스를 받습니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event instead.</source>
          <target state="translated">클릭는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>,이 이벤트 발생 전에 확인란 변경 값 이므로 현재 값을 기반으로 한 예상 값을 계산 하지 않을 경우, 일반적으로 처리 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 이벤트 대신 합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event.</source>
          <target state="translated">사용자가 지정한 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 포커스가 셀을 벗어날 경우에 발생도 처리 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
          <target state="translated">해당 처리기에서 확인란 셀 현재 셀을 사용 하는 경우 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> 메서드와 전달은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>Occurs when a cell within the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is double-clicked.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 안의 셀을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>This event occurs when the user double-clicks using any of the mouse buttons.</source>
          <target state="translated">이 이벤트는 사용자가 마우스 단추를 사용 하 여 두 번 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> property to determine which button was clicked.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> 속성을 클릭 한 단추를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</source>
          <target state="translated">마우스 포인터가 셀의 경계선 내부에 있을 때 마우스 단추를 누르면 발생합니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>This event occurs when the user presses any of the mouse buttons.</source>
          <target state="translated">이 이벤트는 사용자가 마우스 단추를 누를 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> property to determine which button was clicked.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> 속성을 클릭 한 단추를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDown&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseDown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDown&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseEnter">
          <source>Occurs when the mouse pointer enters a cell.</source>
          <target state="translated">마우스 포인터가 셀 내부로 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseEnter">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseEnter&gt;</ph> event handler in a Tic-Tac-Toe game implementation that uses image columns in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseEnter&gt;</ph> image 열을 사용 하는 Tic-Tac-Toe 게임 구현에서 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseEnter">
          <source>The event handler uses the cell value to determine the cursor and ToolTip to display.</source>
          <target state="translated">이벤트 처리기 커서와 표시할 도구 설명을 확인 하는 셀 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseEnter">
          <source>This code is part of a larger example shown in <bpt id="p1">[</bpt>How to: Work with Image Columns in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 코드는에 표시 된 것 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseLeave">
          <source>Occurs when the mouse pointer leaves a cell.</source>
          <target state="translated">마우스 포인터가 셀을 벗어날 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseLeave">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseLeave&gt;</ph> event handler in a Tic-Tac-Toe game implementation that uses image columns in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseLeave&gt;</ph> image 열을 사용 하는 Tic-Tac-Toe 게임 구현에서 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseLeave">
          <source>The event handler resets the cursor and ToolTip, which are set in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseEnter&gt;</ph> event handler.</source>
          <target state="translated">이벤트 처리기를 다시 설정에서 설정 되는 커서 및 도구는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseEnter&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseLeave">
          <source>This code is part of a larger example shown in <bpt id="p1">[</bpt>How to: Work with Image Columns in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 코드는에 표시 된 것 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업<ept id="p1">](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>Occurs when the mouse pointer moves over the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">마우스 포인터가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤 위로 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseMove&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseMove&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseMove">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseMove&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseMove&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>Occurs when the user releases a mouse button while over a cell.</source>
          <target state="translated">셀 위에서 마우스 단추를 놓을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>This event occurs when the user releases any of the mouse buttons.</source>
          <target state="translated">이 이벤트는 사용자가 마우스 단추를 놓을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> property to determine which button was clicked.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType&gt;</ph> 속성을 클릭 한 단추를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseUp&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellMouseUp">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseUp&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>Occurs when a cell needs to be drawn.</source>
          <target state="translated">셀을 그려야 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>You can handle this event to customize the appearance of cells in the control.</source>
          <target state="translated">컨트롤에서 셀의 모양을 사용자 지정 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>You can paint entire cells yourself, or paint specific parts of cells and use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType&gt;</ph> methods to paint other parts.</source>
          <target state="translated">전체 셀을 직접 그릴 셀의 특정 부분 하 고 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType&gt;</ph> 다른 부분을 그릴 메서드.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> 현재 테마를 사용 하 여 표준 컨트롤을 그리는 데 클래스입니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>비주얼 스타일을 사용 하 여 컨트롤 렌더링<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">사용 중인 경우 <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>를 함께 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>When handling this event, you should access the cell through the parameters of the event handler, rather than access the cell directly.</source>
          <target state="translated">이 이벤트를 처리할 때 셀에 직접 액세스 하는 대신 이벤트 처리기의 매개 변수를 통해 셀에 액세스 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>The following code example illustrates how to use this event to customize the appearance of all cells in a particular column.</source>
          <target state="translated">다음 코드 예제는 특정 열의 모든 셀의 모양을 사용자 지정 하려면이 이벤트를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellPainting">
          <source>This code is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 셀 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>Occurs when a cell leaves edit mode if the cell value has been modified.</source>
          <target state="translated">셀 값이 수정된 경우 셀의 편집 모드를 떠나면 발생합니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will attempt to convert a user-specified value displayed in a cell to an actual underlying cell value in the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 셀에 의해 지정 된 형식에서 기본 실제 셀 값 셀에 표시 되는 사용자 지정 값을 변환 하 려 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>This conversion uses the formatting properties of the cell style returned by the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
          <target state="translated">셀에 의해 반환 된 셀 스타일의 서식 속성을 사용 하 여이 변환을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>If the standard conversion does not meet your needs, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event to provide custom value conversion to the required type.</source>
          <target state="translated">사용자의 요구를 충족 하지 않으면 표준 변환 하는 경우 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이벤트를 필요한 형식으로 사용자 지정 값으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>Users can enter edit mode using the method specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> property, and can leave edit mode, committing any changes to a cell, by moving to another cell or by pressing ENTER.</source>
          <target state="translated">사용자가 지정 된 메서드를 사용 하 여 편집 모드를 입력할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> 속성을 두십시오 모드에서 다른 셀으로 이동 하 여 또는 ENTER 키를 누르거나 셀에 변경 내용을 커밋하기를 편집할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>Pressing ESC will revert any changes to the value before it is committed, and the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event will not occur.</source>
          <target state="translated">ESC 키를 누르면 되돌아갑니다 모든 값을 변경 하 고 커밋되기 전에 및 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이벤트가 발생 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event occurs only if the cell value has actually been modified, even if the final value is the same as the original value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 최종 값은 원래 값과 동일 하 게 하는 경우에 이벤트 실제로 셀 값을 수정한 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>It also occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method is called.</source>
          <target state="translated">또한 발생 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event, you can convert the value yourself or you can customize the default conversion.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이벤트를 직접 값을 변환할 수 있습니다 또는 기본 변환을 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>For example, you can convert the value yourself using the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> method with type converters of your choosing.</source>
          <target state="translated">예를 들어 값 변환할 수 있습니다는 셀을 사용 하 여 직접 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> 메서드와 형식 변환기를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>Alternatively, you can let the default type converters parse the value, but modify the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the object returned by the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType&gt;</ph> property, which is initialized using the cell <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
          <target state="translated">기본 형식 변환기, 값을 구문 분석 되지만 수정 하도록 할 수 또는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> 반환 되는 개체의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType&gt;</ph> 셀을 사용 하 여 초기화 된 속성 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>When you convert the value yourself, replace the initial, formatted value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> property with the converted value in the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">값으로 직접 변환의 초기, 형식이 지정 된 값을 바꿉니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> 속성 셀에 의해 지정 된 형식에서 변환 된 값으로 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>To indicate that no further parsing is necessary, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">구문 분석 더 이상 필요한 임을 나타내려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>When the event handler completes, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`null`</ph> or is not of the correct type, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> is parsed using the cell <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> method with default type converters.</source>
          <target state="translated">완료 되었을 때 이벤트 처리기는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType&gt;</ph> 은 <ph id="ph2">`null`</ph> 없거나 올바른 형식의 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> 있는 셀을 사용 하는 구문 분석 되 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> 메서드와 기본 형식 변환기입니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>The default implementation of this method parses the value using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the cell style passed in.</source>
          <target state="translated">이 메서드의 기본 구현을 사용 하 여 값을 구문 분석 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> 셀 스타일의 속성에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>If the value is not equal to <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, the value is parsed using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> property and the type converters passed in.</source>
          <target state="translated">값이 같지 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, 사용 하 여 값의 구문 분석 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> 속성 및 형식 변환기에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>To customize the conversion of a cell value into a formatted value for display, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
          <target state="translated">셀 값을 표시 하기 위해 형식이 지정 된 값으로 변환을 사용자 지정 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>The following code example shows how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellParsing">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs&gt;</ph> class.</source>
          <target state="translated">또한 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellStateChanged">
          <source>Occurs when a cell state changes, such as when the cell loses or gains focus.</source>
          <target state="translated">셀이 포커스를 잃거나 얻을 때와 같이 셀 상태가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStateChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStateChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Style" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> changes.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Style" /&gt;</ph> 속성이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> property is set to a new value or when a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">될 때이 이벤트가 발생 속성의는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> 속성을 새 값으로 설정 되어 경우 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>Occurs when one of the values of a cell style changes.</source>
          <target state="translated">셀 스타일의 값 하나가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event occurs when a property value of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> object returned by one of the following properties changes:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> 이벤트가 발생할 때의 속성 값을 한 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 다음 속성 중 하나에서 반환 된 개체:</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>If one of these properties is set to a different <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>, however, the corresponding <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> event occurs, but the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event does not occur.</source>
          <target state="translated">이러한 속성 중 하나를 다른 설정 된 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>하지만 해당 <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> 이벤트 발생 하지만 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>For row, column, and cell properties, the name of the <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> event begins with "<ph id="ph2">`Row`</ph>", "<ph id="ph3">`Column`</ph>", or "<ph id="ph4">`Cell`</ph>" (for example, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph>).</source>
          <target state="translated">행, 열 및 셀 속성의 이름에 대 한는 <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph1">`Changed`</ph> 이벤트로 시작 "<ph id="ph2">`Row`</ph>","<ph id="ph3">`Column`</ph>", 또는 "<ph id="ph4">`Cell`</ph>" (예를 들어 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /&gt;</ph> property value changes for a cell in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀에 대해 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>Occurs when a cell's ToolTip text is needed.</source>
          <target state="translated">셀의 도구 설명 텍스트가 필요할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트 발생만 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성을 설정 또는 해당 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event, the ToolTip text you specify in the handler is shown whenever the mouse pointer is over a cell and the control <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A&gt;</ph> property value is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트 처리기에 지정한 도구 설명 텍스트가 표시 됩니다 때마다는 마우스 포인터가 셀과 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A&gt;</ph> 속성 값은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event is useful when you want to display ToolTips determined by the current state or value of a cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트는 현재 상태 또는 셀의 값에 의해 결정 되는 도구 설명 표시 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> property is retrieved, either programmatically or when the mouse pointer enters a cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트는 또한 될 때마다 발생의 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> 검색 하거나 프로그래밍 방식으로 또는 마우스 포인터가 셀 내부로 이동할 때.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> properties to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> 상태 또는 셀의 값을 확인 하 고이 정보를 사용 하 여 변경 하거나 수정할 속성을는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property, which the event value overrides.</source>
          <target state="translated">이 속성은 셀의 값으로 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> 이벤트 값을 무시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> value for multiple cells.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 많은 양의 데이터로 작업할 때 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> 여러 셀에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event handler to display information from hidden columns in a data-bound <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트 처리기 정보를 표시 하려면 숨겨진된 열에서 데이터 바인딩된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>Occurs after the cell has finished validating.</source>
          <target state="translated">셀의 유효성 검사가 완료된 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>Handling this event is useful for post-validation processing of the cell value.</source>
          <target state="translated">이 이벤트를 처리 하는 것은 셀 값의 유효성 검사 처리에 대 한 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidated&gt;</ph> event to clear out the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidated&gt;</ph> 지울 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> if the user enters data that is not valid into a cell.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> 이벤트 설정의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 사용자가을 셀으로 유효 하지 않은 데이터를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidated">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>Occurs when a cell loses input focus, enabling content validation.</source>
          <target state="translated">셀이 입력 포커스를 잃어 내용 유효성 검사가 활성화되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>Canceling this event cancels the changes to the current cell.</source>
          <target state="translated">이 이벤트를 취소 현재 셀의 변경 내용을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source.</source>
          <target state="translated">이 이벤트는 데이터 바인딩된 모드로 취소 되 면 새 값이 기본 데이터 원본에 푸시되 지 않습니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>When this event is canceled in virtual mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event will not be raised.</source>
          <target state="translated">이 이벤트는 가상 모드에 취소 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트 발생 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidated&gt;</ph> event to perform post-validation processing.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidated&gt;</ph> 유효성 검사 처리를 수행 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event to ensure that only positive integers are entered by the user.</source>
          <target state="translated">다음 코드 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> 이벤트를 사용자가 양의 정수만 입력 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValidating">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>Occurs when the value of a cell changes.</source>
          <target state="translated">셀 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> event occurs when the user-specified value is committed, which typically occurs when focus leaves the cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType&gt;</ph> 사용자가 지정한 값, 커밋될 때 이벤트가 발생 일반적으로 포커스가 셀에서 벗어날 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>In the case of check box cells, however, you will typically want to handle the change immediately.</source>
          <target state="translated">하지만 확인란 셀의 경우 일반적으로 할 즉시 변경을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>To commit the change when the cell is clicked, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">셀을 클릭할 때의 변경 내용을 커밋하지를 처리 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>In the handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
          <target state="translated">처리기에서 확인란 셀 현재 셀을 사용 하는 경우 호출 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType&gt;</ph> 메서드와 전달은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> 값.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>Rows in the control are not automatically sorted when a cell value is changed.</source>
          <target state="translated">컨트롤의 행 셀 값이 변경 되 면 자동으로 정렬 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>To sort the control when the user modifies a cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event handler.</source>
          <target state="translated">사용자가 셀을 수정할 때 컨트롤을 정렬, 호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event to update the values in a balance column of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 의 균형 열에 값을 업데이트 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueChanged">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> requires a value for a cell in order to format and display the cell.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 셀을 서식 지정하고 표시하기 위해 셀에 대한 값이 필요할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>Use this event in virtual mode to populate cells with data from a custom data store without causing rows to become unshared.</source>
          <target state="translated">가상 모드에이 이벤트를 사용 하 여 되기 발생 하지 않고 사용자 지정 데이터 저장소에서 데이터 셀을 채웁니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">행 공유에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">가상 모드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 가상 모드<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>To add user-specified values to your custom data store, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event.</source>
          <target state="translated">사용자가 지정한 값에 사용자 지정 데이터 저장소를 추가 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event to populate cells with positive integers.</source>
          <target state="translated">다음 코드 예제에서는 핸들은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 양의 정수로 셀을 채우는 데는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValueNeeded">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and a cell value has changed and requires storage in the underlying data source.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고 변경된 셀 값에 내부 데이터 원본의 저장소가 필요할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>Use this event in virtual mode to update a custom data store with user-specified data.</source>
          <target state="translated">가상 모드에이 이벤트를 사용 하 여 사용자 지정 데이터와 함께 사용자 지정 데이터 저장소를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event to retrieve values from the data store for display in the control.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 컨트롤에 표시 하기 위한 데이터 저장소에서 값을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">가상 모드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 가상 모드<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event to store updates and new entries in a data store object.</source>
          <target state="translated">다음 코드 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 데이터 저장소 개체에 업데이트와 새 항목을 저장 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CellValuePushed">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Cancels the selection of currently selected cells.</source>
          <target state="translated">현재 선택된 셀의 선택을 취소합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection">
          <source>Clears the current selection by unselecting all selected cells.</source>
          <target state="translated">선택된 모든 셀의 선택을 취소하여 현재 선택을 해제합니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection">
          <source>When this method is called, each column and row's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 메서드가 호출 될 때, 각 열과 행의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 속성이 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection">
          <source>The following code example clears the selection of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는의 선택이 취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph4">`clearSelectionButton`</ph>, and ensure all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 라는 <ph id="ph4">`clearSelectionButton`</ph>, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>The column index to exclude.</source>
          <target state="translated">제외할 열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>The row index to exclude.</source>
          <target state="translated">제외할 행 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to select the excluded cell, row, or column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retain its original state.</source>
          <target state="translated">제외된 셀, 행 또는 열을 선택하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 원래 상태를 유지하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected.</source>
          <target state="translated">지정된 셀을 제외한 모든 셀의 선택을 취소하고 필요한 경우 지정된 셀이 선택되도록 합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>A <ph id="ph1">`rowIndexException`</ph> value of -1 represents a column header, and a <ph id="ph2">`columnIndexException`</ph> value of -1 represents a row header.</source>
          <target state="translated">A <ph id="ph1">`rowIndexException`</ph> 값이-1 열 머리글을 나타내는 및 <ph id="ph2">`columnIndexException`</ph> 값이-1 행 머리글을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>This method is useful to clear the current selection without canceling the selection of the cell, row, or column indicated by the exception indexes.</source>
          <target state="translated">이 메서드는 셀, 행 또는 열 예외 인덱스 가리키는의 선택을 취소 하지 않고 현재 선택을 모두 취소 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value allows individual cell selection, this method sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Selected%2A&gt;</ph> property of each cell to <ph id="ph3">`false`</ph>, excluding the cell in the row and column specified.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값을 사용 하면 개별 셀 선택 영역,이 메서드는 설정의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Selected%2A&gt;</ph> 에 각 셀의 속성 <ph id="ph3">`false`</ph>, 행과 지정 된 열의 셀을 제외 합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value allows full row or column selection, this method also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property of each row or column to <ph id="ph3">`false`</ph>, excluding the row or column containing the specified cell.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값을 사용 하면 전체 행 또는 열 선택이이 메서드도 설정은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 의 각 행 이나 열을 속성 <ph id="ph3">`false`</ph>, 행 또는 지정 된 셀이 포함 된 열을 제외 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>The excluded cell, row, or column may or may not be in the selected state when this method is called.</source>
          <target state="translated">제외 된 셀, 행 또는 열이이 메서드를 호출할 때 선택 된 상태에서 수도 하지 못할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>This method selects it if the <ph id="ph1">`selectExceptionElement`</ph> parameter value is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">`selectExceptionElement`</ph> 매개 변수 값이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>Depending on the selection mode, the entire row or column may also be selected as a result.</source>
          <target state="translated">선택 모드에 따라 전체 행 또는 열 선택 될 수도 있습니다 결과적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndexException" /&gt;</ph> is greater than the highest column index.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndexException" /&gt;</ph>이 가장 높은 열 인덱스보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndexException" /&gt;</ph> is less than -1 when <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" /&gt;</ph>; otherwise, <ph id="ph4">&lt;paramref name="columnIndexException" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" /&gt;</ph>일 때 <ph id="ph1">&lt;paramref name="columnIndexException" /&gt;</ph>이 -1보다 작고, 그 외의 경우에 <ph id="ph4">&lt;paramref name="columnIndexException" /&gt;</ph>이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndexException" /&gt;</ph> is greater than the highest row index.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndexException" /&gt;</ph>이 가장 높은 행 인덱스보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndexException" /&gt;</ph> is less than -1 when <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /&gt;</ph>; otherwise, <ph id="ph4">&lt;paramref name="rowIndexException" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /&gt;</ph>일 때 <ph id="ph1">&lt;paramref name="rowIndexException" /&gt;</ph>이 -1보다 작고, 그 외의 경우에 <ph id="ph4">&lt;paramref name="rowIndexException" /&gt;</ph>이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>Gets or sets a value that indicates whether users can copy cell text values to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Clipboard" /&gt;</ph> and whether row and column header text is included.</source>
          <target state="translated">사용자가 셀 텍스트 값을 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Clipboard" /&gt;</ph>에 복사할 수 있는지 여부와 행 및 열 머리글 텍스트가 포함되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control copies the text representation of each selected cell to the Clipboard.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 선택 된 각 셀의 텍스트 표현의을 클립보드에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>This value is the cell value converted to a string or, for image cells, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewImageCell.Description%2A&gt;</ph> property.</source>
          <target state="translated">이 값은 문자열 또는 이미지 셀의 값을 변환 하는 셀 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewImageCell.Description%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>Values are copied to the Clipboard in <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue&gt;</ph> formats.</source>
          <target state="translated">값이 클립보드에 복사 됩니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue&gt;</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>These formats are useful for pasting content into applications such as Notepad, Microsoft Excel, and <ph id="ph1">[!INCLUDE[ofprword](~/includes/ofprword-md.md)]</ph>.</source>
          <target state="translated">이러한 형식은 Microsoft Excel 메모장 등의 응용 프로그램에 내용을 붙여 넣을 하는 데 유용 하 고 <ph id="ph1">[!INCLUDE[ofprword](~/includes/ofprword-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control copies the cells contained in the smallest rectangle that includes all selected cells.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 선택한 모든 셀을 포함 하는 가장 작은 사각형에 포함 된 셀을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>Rows and columns that do not contain any selected cells are not represented in the copied data.</source>
          <target state="translated">행 및 열 선택된 된 셀을 포함 하지 않는 복사 된 데이터에 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>Any unselected cells in the remaining rows and columns are represented by blank placeholders.</source>
          <target state="translated">나머지 행과 열에 선택 되지 않은 모든 셀은 빈 자리 표시자로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>Depending on the copy mode and the selection mode, header values for the copied rows and columns may be copied, as well.</source>
          <target state="translated">복사 모드 및 선택 모드에 따라 복사 된 행 및 열 머리글 값 수, 함께 복사 합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>When users copy content, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control adds a <ph id="ph2">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> to the Clipboard.</source>
          <target state="translated">사용자가 콘텐츠를 복사할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 추가 <ph id="ph2">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 는 클립보드에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>This data object is retrieved from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> method.</source>
          <target state="translated">이 데이터 개체에서 검색 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>You can call this method when you want to programmatically add the data object to the Clipboard.</source>
          <target state="translated">프로그래밍 방식으로 클립보드에 데이터 개체를 추가 하려는 경우이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> method retrieves values for individual cells by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> 메서드를 호출 하 여 개별 셀에 대 한 값을 검색 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>You can override either or both of these methods in derived classes to customize the layout of copied cells or to support additional data formats.</source>
          <target state="translated">복사 된 셀의 레이아웃을 사용자 지정 하거나 추가 데이터 형식을 지원 하기 위해 파생된 클래스에서 이러한 메서드 중 하나 또는 모두를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>For more information about Clipboard operations and data formats, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class.</source>
          <target state="translated">클립보드 작업 및 데이터 형식에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The following code example demonstrates how to enable copying in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서 복사를 사용 하도록 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 클립보드에 복사 여러 셀에 사용자가 사용 하도록 설정<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>Occurs when a column is added to the control.</source>
          <target state="translated">열이 컨트롤에 추가될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnAdded&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnAdded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnAdded">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnAdded&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnAdded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /&gt;</ph> property of a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /&gt;</ph> 속성이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>Gets or sets the number of columns displayed in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시되는 열 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>The number of columns displayed in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시되는 열 수입니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> property to 0 will remove all columns from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 속성을 0에서 모든 열을 제거 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> is reset to a value less than the current value, columns will be removed from the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 다시 설정의 현재 값 보다 작은 값으로 열이의 끝에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> is set to a value greater than the current value, columns will be added to the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 설정 된 현재 값 보다 큰 값으로 열이의 끝에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>This property can be used with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to create a simple <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> for displaying and editing text.</source>
          <target state="translated">이 속성에 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 간단한 만들 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 를 표시 하 고 텍스트를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>The specified value when setting this property is less than 0.</source>
          <target state="translated">이 속성을 설정할 지정된 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnCount">
          <source>When setting this property, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property has been set.</source>
          <target state="translated">이 속성을 설정할 때 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성이 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a column is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a column is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">이 이벤트가 발생할 때의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> 속성 때 또는 열을 새 값으로 설정 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> 열에 대 한 속성을 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 와 하나 이상의 속성 값이 다른는 이전 셀 스타일 개체입니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>Occurs when the value the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>Occurs when the user double-clicks a divider between two columns.</source>
          <target state="translated">두 열 사이의 구분선을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a column divider.</source>
          <target state="translated">사용자가 열 구분선을 두 번 클릭할 때 발생 하는 자동 크기 조정 동작을 사용자 지정 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>For example, you can handle this event to programmatically resize columns based only on the content in the rows that are currently visible, avoiding a performance impact with the default behavior when working with a large number of rows.</source>
          <target state="translated">예를 들어 많은 수의 행을 작업할 때 기본 동작의 성능에 영향을 방지 프로그래밍 방식으로 현재 표시 되는 행의 콘텐츠를 기준으로 열 크기를 조정 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>The column <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> property does not extend the area in which a user can double-click.</source>
          <target state="translated">열 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> 사용자 수 두 번 영역을 확장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>If the width of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.</source>
          <target state="translated">구분선의 너비에 확장 된 경우이 속성을 사용 하 여,이 이벤트에는 구분선와 인접 한 열 사이의 경계를 두 번 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>Occurs when the contents of a column header cell change.</source>
          <target state="translated">열 머리글 셀의 내용이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>Occurs when the user clicks a column header.</source>
          <target state="translated">열 머리글을 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>When a column heading is clicked in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, the default behavior is to order the grid rows based on the clicked column, or to reverse the sort order if the grid is already sorted by the clicked column.</source>
          <target state="translated">열 머리글을 클릭 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, 기본 동작은를 클릭 한 열에 따라 표의 행을 정렬 하거나 눈금은 클릭 한 다음 열으로 정렬 하는 경우 정렬 순서를 반대로 수입니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>The following code example demonstrates how to use this event to perform a programmatic sort that emulates the default behavior of clicking a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell&gt;</ph> when the default behavior has been disabled.</source>
          <target state="translated">다음 코드 예제에서는 클릭의 기본 동작을 에뮬레이션 하는 프로그래밍 방식 정렬을 수행 하려면이 이벤트를 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell&gt;</ph> 때 기본 동작에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect&gt;</ph>, so clicking the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell&gt;</ph> selects the contents of the column.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect&gt;</ph>하므로,는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell&gt;</ph> 열의 내용을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>For the example code to function as intended, the default column header click behavior needs to be changed each time the data is loaded into the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">의도 한 대로 작동 하는 예제 코드에 대 한 기본 열 머리글이 클릭 동작이에 데이터가 로드 될 때마다 변경는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>Add a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataBindingComplete&gt;</ph> event handler to provide the code that changes the default behavior.</source>
          <target state="translated">추가 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataBindingComplete&gt;</ph> 기본 동작을 변경 하는 코드를 제공 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and ensure that all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>Occurs when a column header is double-clicked.</source>
          <target state="translated">열 머리글을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>Gets the border style applied to the column headers.</source>
          <target state="translated">열 머리글에 적용된 테두리 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> 속성이 아닌 다른 값으로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> 속성 시스템 색을 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">이 속성 설정할 수 없습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> 는 읽기 전용으로 지정 하는 값의 테두리 스타일을 사용 하 여 사용자 지정 된 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the column headers are painted using the current theme.</source>
          <target state="translated">통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>, 열 머리글은 현재 테마를 사용 하 여 그립니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>In this case, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property is ignored for all column headers except the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, to which the theme is not applied.</source>
          <target state="translated">이 경우의 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> 를 제외한 모든 열 머리글에 대 한 속성은 무시 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, 테마 적용 되지 되는 합니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named<ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는<ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>Gets or sets the default column header style.</source>
          <target state="translated">기본 열 머리글 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph> that represents the default column header style.</source>
          <target state="translated">기본 열 머리글 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by this property has the following initial property values:</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 이 속성에서 반환 속성에는 다음 초기 속성 값:</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source><ph id="ph1">`DataGridViewCellStyle`</ph> property</source>
          <target state="translated"><ph id="ph1">`DataGridViewCellStyle`</ph> 속성</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>These values automatically override the values set through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
          <target state="translated">이러한 값을 통해 설정 된 값을 자동으로 재정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>To force column headers to inherit the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> values, you must set the values in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> object to the default values indicated for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class.</source>
          <target state="translated">상속 하도록 열 머리글을 강제로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 값는 값을 설정 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> 을 기본값으로 개체에 대 한 표시는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">셀 스타일 상속 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>If visual styles are enabled and <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, all header cells except the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> are painted using the current theme and the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> values are ignored.</source>
          <target state="translated">비주얼 스타일을 사용 하는 경우 및 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph>를 제외한 모든 머리글 셀은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> 현재 테마를 사용 하 여 칠해집니다 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> 값은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">될 때이 이벤트가 발생의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> 속성을 새 값으로 설정 되어 경우 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight">
          <source>Gets or sets the height, in pixels, of the column headers row</source>
          <target state="translated">열 머리글 행의 높이(픽셀)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight">
          <source>The height, in pixels, of the row that contains the column headers.</source>
          <target state="translated">열 머리글을 포함하는 행의 높이(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight">
          <source>The default is 23.</source>
          <target state="translated">기본값은 23입니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight">
          <source>The specified value when setting this property is less than the minimum height of 4 pixels or is greater than the maximum height of 32768 pixels.</source>
          <target state="translated">이 속성을 설정할 때 지정된 된 값이 최소 높이인 4픽셀보다 작거나 최대 높이인 32768 픽셀보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</source>
          <target state="translated">열 머리글의 높이가 조정 가능한지, 사용자가 이 높이를 조정할 수 있는지, 머리글의 내용에 맞게 높이가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /&gt;</ph> value indicating the mode by which the height of the column headers row can be adjusted.</source>
          <target state="translated">열 머리글 행의 높이를 조정할 수 있는 모드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize&gt;</ph>, the height of the column headers cannot be adjusted by the user.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize&gt;</ph>, 사용자가 열 머리글의 높이 조정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>To adjust the height of the column headers programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> method or set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A&gt;</ph> property.</source>
          <target state="translated">열 머리글의 높이 프로그래밍 방식으로 조정 하려면 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> 메서드 또는 집합은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>To set the sizing mode for the row headers, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">행 머리글에 대 한 크기 조정 모드를 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
          <target state="translated">셀 내용이 여러 줄에 열 머리글이 크기가 조정 될 때에 대 한 셀 스타일은 셀에 적용 되어 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>For more information about header sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">헤더 크기 조정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 이중 버퍼링을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`true`</ph> 파생 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤, 행, 열 또는 헤더 크기를 조정할 때 또는 열 다시 정렬 하는 경우 사용자는 시각적 피드백을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>The following code example illustrates how to use this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source>Gets or sets a value indicating whether the column header row is displayed.</source>
          <target state="translated">열 머리글 행의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the column headers are displayed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열 머리글이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, a column whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph> can still be resized in the user interface (UI) by clicking with the mouse cursor anywhere along the right border of the column to be resized.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 열 인 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A&gt;</ph> 속성이 <ph id="ph4">`true`</ph> 여전히 크기 조정할 수 있습니다 (UI) 사용자 인터페이스를 조정할 열의 오른쪽 테두리를 따라 아무 곳 이나 마우스 커서를 클릭 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source>The following code example populates an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph> property to <ph id="ph3">`true`</ph> to ensure that column headers are displayed.</source>
          <target state="translated">다음 코드 예제에서는 채웁니다 바인딩되지 않은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤과 세트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph> 열 머리글이 표시 되는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see langword="false" /&gt;</ph> and one or more columns have an <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /&gt;</ph> property value of <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이고 하나 이상의 열에 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnNameChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnNameChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnNameChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnNameChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>Occurs when a column is removed from the control.</source>
          <target state="translated">컨트롤에서 열을 제거할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnRemoved&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnRemoved&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnRemoved">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnRemoved&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnRemoved&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>Gets a collection that contains all the columns in the control.</source>
          <target state="translated">컨트롤에 모든 열이 포함되어 있는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph> that contains all the columns in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 모든 열을 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>By using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph> returned by this property, you can add columns, remove columns, and obtain a count of the columns contained in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph> 이 속성에서 반환 열 추가, 열을 제거 하 고 얻을 수 있습니다에 포함 된 열 개수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>The following code example demonstrates how to create an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>; set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> properties; and use the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에 바인딩되지 않은 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>설정;는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 속성 및 사용 하 여는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>It also demonstrates how to use a version of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> methods to properly size the column headers and the rows.</source>
          <target state="translated">버전을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드 제대로 열 머리글 및 행 크기를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>To run this example, paste the following code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and a button named <ph id="ph3">`Button1`</ph>, and then call the <ph id="ph4">`InitializeDataGridView`</ph> method from the form's constructor or <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 이라는 버튼 <ph id="ph3">`Button1`</ph>, 다음 호출에서 <ph id="ph4">`InitializeDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Columns">
          <source>Ensure all events are connected with their event handlers.</source>
          <target state="translated">해당 이벤트 처리기와 연결 된 모든 이벤트를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>Occurs when a column changes state, such as gaining or losing focus.</source>
          <target state="translated">포커스를 얻거나 잃는 것과 같이 열의 상태가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>This event is raised when the value of one of the following column properties changes for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> in the control:</source>
          <target state="translated">이 이벤트는 다음 열 속성 중 하나의 값에 대 한 변경 될 때 발생 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> 컨트롤에서:</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnStateChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnStateChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /&gt;</ph> property value changes for a column in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 열에 대해 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ColumnWidthChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /&gt;</ph> property for a column changes.</source>
          <target state="translated">열의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnWidthChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnWidthChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ColumnWidthChanged">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /&gt;</ph> values that specifies the context in which an error can occur.</source>
          <target state="translated">오류 발생 가능한 컨텍스트를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>Commits changes in the current cell to the data cache without ending edit mode.</source>
          <target state="translated">편집 모드를 끝내지 않고 현재 셀의 변경 내용을 데이터 캐시에 커밋합니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the changes were committed; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">변경 내용이 커밋되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>This method attempts to convert the formatted, user-specified value to the underlying cell data type.</source>
          <target state="translated">이 메서드는 기본 셀 데이터 형식에는 서식이 지정 된 사용자 지정 값을 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>To do this, it raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event, which you can handle to customize the type conversion.</source>
          <target state="translated">이렇게 하려면 발생는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> 이 메서드를 처리할 수 있는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>Otherwise, default type converters are used.</source>
          <target state="translated">그렇지 않은 경우 기본 형식 변환기 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>Conversion errors may result in an exception if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event is not handled to prevent it.</source>
          <target state="translated">변환 오류가 발생 하는 경우 예외가 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> 하기만 해도 이벤트가 처리 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>If the value is successfully converted, it is committed to the data store, raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event for non-data-bound cells when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property value is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">값이 성공적으로 변환 하는 경우에 커밋되기 데이터 저장을 발생 시키는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 비 바운드 데이터에 대 한 이벤트를 셀 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성 값은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>If the value is successfully committed, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event occurs.</source>
          <target state="translated">값이 성공적으로 커밋되면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>The following code example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method within a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event handler to raise the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> 내에서 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> 를 발생 시키는 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 단추 열에서 단추 사용 안 함<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">셀 값을 커밋할 수 없으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance">
          <source>Creates a new accessible object for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 대해 액세스 가능한 개체를 새로 만듭니다.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /&gt;</ph>에 대한 새 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateColumnsInstance">
          <source>Creates and returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph>을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateColumnsInstance">
          <source>An empty <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph>.</source>
          <target state="translated">빈 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateControlsInstance">
          <source>Creates and returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> that can be cast to type <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> 형식으로 캐스팅될 수 있는 새 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" /&gt;</ph>을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateControlsInstance">
          <source>An empty <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">빈 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.CreateControlsInstance">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to initialize its value.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 속성 값을 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateRowsInstance">
          <source>Creates and returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph>을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.CreateRowsInstance">
          <source>An empty <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph>.</source>
          <target state="translated">빈 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>Gets or sets the currently active cell.</source>
          <target state="translated">현재 활성화된 셀을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> that represents the current cell, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no current cell.</source>
          <target state="translated">현재 셀을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>이거나, 현재 셀이 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The default is the first cell in the first column or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there are no cells in the control.</source>
          <target state="translated">기본값은 첫 번째 열의 첫 번째 셀이거나, 컨트롤에 셀이 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>When you set a cell as the current cell, it will scroll into view if it is not currently displayed.</source>
          <target state="translated">현재 셀과 셀을 설정할 때 현재 표시 되지 않으면 보기로 스크롤됩니다.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The current cell cannot be a header cell, a disabled cell, or a cell in a hidden row or column.</source>
          <target state="translated">현재 셀에는 숨겨진된 행 또는 열 머리글 셀을, 사용할 수 없는 셀 또는 셀 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>You can set this property to <ph id="ph1">`null`</ph> to temporarily remove the focus rectangle, but when the control receives focus and the value of this property is <ph id="ph2">`null`</ph>, it is automatically set to the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A&gt;</ph> property.</source>
          <target state="translated">이 속성 설정할 수 있습니다 <ph id="ph1">`null`</ph> 를 일시적으로 포커스 영역을 제거 하지만 때 컨트롤이 포커스를 받 및이 속성의 값은 <ph id="ph2">`null`</ph>의 값으로 자동으로 설정 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>When you change the value of this property, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event occurs before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> event.</source>
          <target state="translated">이 속성의 값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트가 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>Any <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event handler accessing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property at this time will get its previous value.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트 처리기에 액세스 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 이 이번에는 속성은 이전 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>When you bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to an external data source, this property is reset to its default value.</source>
          <target state="translated">바인딩하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 는 외부 데이터 원본에이 속성이 해당 기본값으로 다시 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The following code example illustrates how to ensure that the current cell is visible after sorting by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A&gt;</ph> property to the cell retrieved through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 여 정렬 한 후 현재 셀이 표시 되도록 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A&gt;</ph> 속성 셀을 통해 검색 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>This code works only with an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">이 코드는 바인딩되지 않은 에서만 작동 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>With a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control bound to an external data source, the current cell is not automatically persisted when sorting.</source>
          <target state="translated">와 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀 자동으로 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>To run this example, paste the following code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>In C#, you must also connect the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> event to the event handler.</source>
          <target state="translated">C#의 연결도 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> 이벤트를 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The value of this property cannot be set because changes to the current cell cannot be committed or canceled.</source>
          <target state="translated">현재 셀에 대한 변경 내용을 커밋하거나 취소할 수 없기 때문에 이 속성의 값을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The specified cell when setting this property is in a hidden row or column.</source>
          <target state="translated">이 속성을 설정할 때 지정된 셀이 숨겨진 행 또는 열 내에 있습니다.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>Re-entrant calling is only allowed when the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is bound to a <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph>.</source>
          <target state="translated">재진입 호출은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph>에 바인딩될 때만 허용됩니다.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>Re-entrant calling results from a change to the underlying data.</source>
          <target state="translated">재진입 호출은 기본 데이터의 변경으로 인해 발생합니다.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCell">
          <source>The specified cell when setting this property is not in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 셀이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 내에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>Gets the row and column indexes of the currently active cell.</source>
          <target state="translated">현재 활성화된 셀의 행 및 열 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the row and column indexes of the currently active cell.</source>
          <target state="translated">현재 활성화된 셀의 행 및 열 인덱스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>Use this property to determine the row and column of the current cell without accessing the cell directly.</source>
          <target state="translated">셀에 직접 액세스 하지 않고 현재 셀의 열과 행을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>This is useful to avoid unsharing shared rows.</source>
          <target state="translated">이 해제 공유 행을 방지 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">행 공유에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>The following code example illustrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A&gt;</ph> property in a row-painting scenario.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A&gt;</ph> 행을 칠하는 시나리오에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>In the example, this property is used to store the row index of the current cell.</source>
          <target state="translated">예제에서는이 속성은 현재 셀의 행 인덱스를 저장할 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>When the user changes the current cell to a different row, the row is forced to repaint itself.</source>
          <target state="translated">다른 행으로 현재 셀을 변경할 때 행이 다시 그려지도록 forced입니다.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
          <source>This code is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CurrentCellChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellChanged">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>Occurs when the state of a cell changes in relation to a change in its contents.</source>
          <target state="translated">셀의 내용이 변경되어 셀의 상태가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>A cell is marked as modified if its contents have changed but the change has not been saved.</source>
          <target state="translated">셀은 내용이 변경 되었지만 변경 내용을 저장 하지 않은 경우 수정 된 것으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>This event typically occurs when a cell has been edited but the change has not been committed to the data cache, or when an edit operation is canceled.</source>
          <target state="translated">이 이벤트는 일반적으로 셀이 편집 하지만 변경 내용을 데이터 캐시에 커밋되지 않은 하거나 편집 작업이 취소 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>In this example, the event handler calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event and determine the current value of a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>.</source>
          <target state="translated">이 예제에서는 이벤트 처리기 호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 이벤트의 현재 값을 결정 한 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 단추 열에서 단추 사용 안 함<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.CurrentRow">
          <source>Gets the row containing the current cell.</source>
          <target state="translated">현재 셀이 들어 있는 행을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentRow">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph> that represents the row containing the current cell, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no current cell.</source>
          <target state="translated">현재 셀이 포함된 행을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph>이거나 현재 셀이 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.CurrentRow">
          <source>To change the current row, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property to a cell in the desired row.</source>
          <target state="translated">현재 행을 변경 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 원하는 행의 셀에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>Occurs after a data-binding operation has finished.</source>
          <target state="translated">데이터 바인딩 작업이 완료된 다음 발생합니다.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>This event is raised when the contents of the data source change or when the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property changes.</source>
          <target state="translated">소스의 데이터의 내용이 변경 하거나 때이 이벤트는 발생의 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> 속성 변경 합니다.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>Handling this event is useful, for example, to programmatically resize rows and columns based on content updates.</source>
          <target state="translated">이 이벤트를 처리 유용 하 게 예를 들어 프로그래밍 방식으로 행과 열을 기반으로 콘텐츠 업데이트 크기를 조정 하려면.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>For more information, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataBindingComplete">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails.</source>
          <target state="translated">외부 데이터 구문 분석 또는 유효성 검사 작업에서 예외가 throw되거나 데이터 소스에 데이터를 커밋하려는 시도가 실패한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event enables you to handle exceptions thrown in code that is called by the control during data processing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> 이벤트를 사용 하면 데이터 처리 작업 동안 컨트롤에 의해 호출 되는 코드에서 throw 된 예외를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs&gt;</ph> object associated with this event normally indicate the cell in which the data error occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs&gt;</ph> 일반적으로이 이벤트와 연결 된 개체 데이터 오류가 발생 한 셀을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>When the error occurs in an external data source, however, the data source may not provide the column in which the error occurred.</source>
          <target state="translated">하지만 외부 데이터 원본에서 오류가 발생 데이터 원본을 제공할 수 없습니다 오류가 발생 한 열.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> property typically indicates the column of the current cell at the time of the error.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> 일반적으로 속성은 오류 발생 시 현재 셀의 열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataError">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> class overview topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> 클래스 개요 항목입니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>Gets or sets the name of the list or table in the data source for which the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is displaying data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 데이터가 표시되는 데이터 원본의 목록 또는 테이블 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>The name of the table or list in the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> for which the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is displaying data.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 데이터가 표시되는 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph>의 테이블 또는 목록 이름입니다.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>This property is useful when binding to a data source that contains multiple lists or tables.</source>
          <target state="translated">이 속성은 여러 목록이 나 테이블을 포함 하는 데이터 소스에 바인딩하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>You do not need to set this property when binding to a data source that contains a single list or table.</source>
          <target state="translated">단일 목록 또는 테이블을 포함 하는 데이터 소스에 바인딩할 때이 속성을 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>For example, you can bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that contains a single table without setting this property.</source>
          <target state="translated">예를 들어 바인딩할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 이 속성을 설정 하지 않고 단일 테이블을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple tables, however, you must set this property to the name of one of the tables.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 여러 테이블이 포함 된 반면이 속성 테이블 중 한 테이블의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>The following code example illustrates a common use for this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성에 대 한 일반적인 사용법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>In the example, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control named <ph id="ph2">`customersDataGridView`</ph> is bound to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> named <ph id="ph4">`customersDataSet`</ph>.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 컨트롤 <ph id="ph2">`customersDataGridView`</ph> 바인딩되는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 라는 <ph id="ph4">`customersDataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>This <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains a table named "Customers".</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "Customers" 라는 테이블을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> property is set to the name of the table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> 속성 테이블의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>An error occurred in the data source and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">데이터 소스에서 오류가 발생했으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataMember">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>Occurs when value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataMember" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataMember" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMemberChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMemberChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataMemberChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMemberChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMemberChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>Gets or sets the data source that the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is displaying data for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 데이터가 표시되는 데이터 원본을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The object that contains data for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> to display.</source>
          <target state="translated">표시할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 대한 데이터가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class supports the standard Windows Forms data-binding model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스는 표준 Windows Forms 데이터 바인딩 모델을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>This means the data source can be of any type that implements one of the following interfaces:</source>
          <target state="translated">즉, 다음 인터페이스 중 하나를 구현 하는 모든 유형의 데이터 소스 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface, including one-dimensional arrays.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스를 1 차원 배열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스와 같은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> 인터페이스와 같은 <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> 인터페이스와 같은 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>For specific examples, see the Example section and the task table at the end of this section.</source>
          <target state="translated">구체적인 예를 보려면 "예" 섹션 및이 섹션의 끝에 작업 테이블을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>Typically, you will bind to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component and bind the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component to another data source or populate it with business objects.</source>
          <target state="translated">일반적으로 바인딩할는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 구성 요소 및 바인딩은 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 구성 요소를 다른 데이터 원본 또는 비즈니스 개체를 채웁니다.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component is the preferred data source because it can bind to a wide variety of data sources and can resolve many data binding issues automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 다양 한 데이터 소스에 바인딩할 수 하 고 자동으로 많은 데이터 바인딩 문제를 해결할 수 있기 때문에 구성 요소는 기본 데이터 원본.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>When binding to a data source that contains multiple lists or tables, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> property to a string that specifies the list or table to bind to.</source>
          <target state="translated">여러 목록 또는 테이블을 포함 하는 데이터 소스에 바인딩할 경우 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> 속성을 목록 또는 바인딩할 테이블을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>When binding to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component that contains multiple lists or tables, however, you can set the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component instead.</source>
          <target state="translated">하지만에 바인딩할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 설정할 수 있습니다 여러 목록이 나 테이블이 포함 된 구성 요소는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 구성 요소 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>When binding to an object collection rather than to database data, you will typically set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> property of the object returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property to <ph id="ph3">`null`</ph> rather than using the default value of <ph id="ph4">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>, which is appropriate for database data.</source>
          <target state="translated">아니라 데이터베이스의 데이터 개체 컬렉션을 바인딩하는 경우 일반적으로 설정한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> 반환 되는 개체의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph> 의 기본값을 사용 하는 대신 <ph id="ph4">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>, 즉 데이터베이스 데이터에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>For more information, see <bpt id="p1">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 데이터 표시<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The following table provides direct links to common tasks related to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 일반적인 작업에 대 한 직접 링크는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>See <bpt id="p1">[</bpt>Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md)</ept> and <bpt id="p2">[</bpt>How to: Bind Objects to Windows Forms DataGridView Controls<ept id="p2">](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>연습: Forms DataGridView 컨트롤 창 두 개를 사용 하 여 마스터/세부 폼 만들기<ept id="p1">](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md)</ept> 및 <bpt id="p2">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에 개체를 바인딩하여<ept id="p2">](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The following code example demonstrates how to initialize a simple data-bound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 간단한 데이터 바인딩 초기화 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>It also demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property.</source>
          <target state="translated">설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>An error occurred in the data source and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">데이터 소스에서 오류가 발생했으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DataSource">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSourceChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSourceChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DataSourceChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSourceChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSourceChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>Gets or sets the default cell style to be applied to the cells in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> if no other cell style properties are set.</source>
          <target state="translated">다른 셀 스타일 속성이 설정되어 있지 않은 경우 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀에 적용할 기본 셀 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph> to be applied as the default style.</source>
          <target state="translated">기본 스타일로 적용할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀으로 표시 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 스타일 형식의 다른 속성에서 상속 하는 속성 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>The styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property affect all cells except when overridden by the styles specified through the following properties:</source>
          <target state="translated">통해 지정 된 스타일은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성에는 다음과 같은 속성에 지정 된 스타일에 의해 재정의 된 경우를 제외 하 고 모든 셀에 영향을 합니다.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
          <target state="translated">이 속성을 가져올 때 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 이며 기본값은 값이 생성 됩니다는 속성에 아직 액세스 하지 않은 경우.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>This can cause a performance impact when getting this property for many rows.</source>
          <target state="translated">행의 수에 대 한이 속성을 가져올 때 성능 저하를 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
          <target state="translated">가능 하면 단일 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 여러 행에 대해이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>The following code example illustrates the use of this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property are set to new values or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">될 때이 이벤트가 발생의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성을 새 값으로 설정 됩니다 경우 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 .</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DefaultSize">
          <source>Gets the default initial size of the control.</source>
          <target state="translated">컨트롤의 기본 초기 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DefaultSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the initial size of the control, which is 240 pixels wide by 150 pixels high.</source>
          <target state="translated">컨트롤의 초기 크기(너비 240픽셀 x 높이 150픽셀)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>Occurs when the user enters the row for new records so that it can be populated with default values.</source>
          <target state="translated">기본값으로 채워질 수 있도록 사용자가 새 레코드에 대한 행을 입력할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>This event lets you populate the row for new records when the user enters the row.</source>
          <target state="translated">이 이벤트를 사용 하면 사용자가 행을 입력할 때 새 레코드에 대 한 행을 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>Initial values for the row come from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> returned by each column's <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A&gt;</ph> property.</source>
          <target state="translated">행에 대 한 초기 값에서 제공 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> 각 열에서 반환 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>In data bound mode, all cell values for data bound columns are stored in the external data source.</source>
          <target state="translated">데이터 바인딩된 모드에서 모든 셀 데이터 바인딩된 열은 외부 데이터 원본에 저장 된 값입니다.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>When the user enters the row for new records, a new row is created in the data source before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded&gt;</ph> event occurs.</source>
          <target state="translated">사용자가 새 레코드에 대 한 행을 입력 하기 전에 데이터 원본에 새 행 생성 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>When you populate the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType&gt;</ph> property in your event handler, the values are added directly to the data source.</source>
          <target state="translated">채울 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType&gt;</ph> 속성 값이 이벤트 처리기에서 데이터 원본에 직접 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>In virtual mode, after this event occurs, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event occurs for each cell in the new row so that you can store the default values in your custom data store.</source>
          <target state="translated">이 이벤트가 발생 한 후 가상 모드에는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 사용자 지정 데이터 저장소의 기본 값을 저장할 수 있도록 새 행의 각 셀에 대 한 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>Then, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event occurs for each cell in the new row, retrieving the values that you stored in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event, which are then displayed.</source>
          <target state="translated">그런 다음 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 새 행의 각 셀에 대 한 이벤트 발생에 저장 된 값을 검색 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 다음 표시 되는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>The following code example illustrates how this event can be handled.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리할 수 있는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>In the example, cells for the given columns are populated with default values.</source>
          <target state="translated">예제에서는 지정 된 열의 셀은 기본 값으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>For the <ph id="ph1">`CustomerID`</ph> column, the value is retrieved from a separate method (not implemented) that generates a unique customer ID.</source>
          <target state="translated">에 대 한는 <ph id="ph1">`CustomerID`</ph> 열, 값을 검색 하는 고유한 고객 ID를 생성 하는 별도 메서드 (구현 되지 않음)에서</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>To run this example, replace the column names with the names of the column objects from an actual <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and provide appropriate default values.</source>
          <target state="translated">이 예제를 실행 하는 실제에서 열 개체의 이름으로 열 이름을 바꾸려면 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 하 고 적절 한 기본값을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
          <source>When specifying columns by name, you must use the name of the column object and not the column header text.</source>
          <target state="translated">이름별으로 열을 지정 하는 경우 이름 열 개체 및 열 머리글 텍스트를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include partial columns in the displayed column count; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">표시된 열 수에 부분 열을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)">
          <source>Returns the number of columns displayed to the user.</source>
          <target state="translated">사용자에게 표시된 열의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)">
          <source>The number of columns displayed to the user.</source>
          <target state="translated">사용자에게 표시된 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include partial rows in the displayed row count; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">표시된 행 수에 부분 행을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)">
          <source>Returns the number of rows displayed to the user.</source>
          <target state="translated">사용자에게 표시된 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)">
          <source>The number of rows displayed to the user.</source>
          <target state="translated">사용자에게 표시된 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.DisplayRectangle">
          <source>Gets the rectangle that represents the display area of the control.</source>
          <target state="translated">컨트롤의 표시 영역을 나타내는 사각형을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DisplayRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display area of the control.</source>
          <target state="translated">컨트롤의 표시 영역을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DisplayRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control, not including the area occupied by any scroll bars that are showing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A&gt;</ph> 속성 표시 영역을 표시 하는 모든 스크롤 막대의 영역을 포함 하지 않고 컨트롤의 클라이언트 사각형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DisplayRectangle">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /&gt;</ph> 파생된 클래스에서 속성의 기본 클래스를 사용 하 여 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /&gt;</ph> 속성을 기본 구현을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.DisplayRectangle">
          <source>Alternatively, you must provide all the implementation.</source>
          <target state="translated">또는 모든 구현을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>과 해당 자식 컨트롤에서 사용하는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>Gets the control hosted by the current cell, if a cell with an editing control is in edit mode.</source>
          <target state="translated">편집 컨트롤이 있는 셀이 편집 모드인 경우 현재 셀에 의해 호스팅되는 컨트롤을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> hosted by the current cell.</source>
          <target state="translated">현재 셀에 호스트되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>If the cell is not in edit mode or the cell type does not accommodate an editing control, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 속성을 반환 하는 경우 셀이 편집 모드 또는 셀 유형을 편집 컨트롤을 허용 하지 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>The following code example illustrates how to use this property in an overridden method of a custom cell type.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 셀 형식의 재정의 메서드에서이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>In the example, a reference to the editing control is retrieved, cast to a custom editing control type, and then populated with the current value of the cell.</source>
          <target state="translated">예제에서는 편집 컨트롤에 대 한 참조를 검색, 사용자 지정 편집 컨트롤 형식 캐스팅 및 셀의 현재 값으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingControl">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Host Controls in Windows Forms DataGridView Cells<ept id="p1">](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 셀에서 호스트 컨트롤<ept id="p1">](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>Occurs when a control for editing a cell is showing.</source>
          <target state="translated">셀 편집을 위한 컨트롤이 표시될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>You can handle this event to perform custom initialization of the editing control when a cell enters edit mode.</source>
          <target state="translated">셀 편집 모드로 전환 될 때 편집 컨트롤의 사용자 지정 초기화를 수행 하도록이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>To customize the display characteristics of the control, set the properties of the object returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">반환 되는 개체의 속성을 설정 하는 컨트롤의 디스플레이 특성을 사용자 지정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>To perform other initialization, cast the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType&gt;</ph> property to the specific control type and access the members directly.</source>
          <target state="translated">다른 초기화를 수행 하려면 값을 캐스팅는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType&gt;</ph> 속성을 특정 컨트롤 형식 및 멤버에 직접 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>For example, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControlShowing&gt;</ph> event to attach event-handlers to the events of the editing control.</source>
          <target state="translated">예를 들어 처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControlShowing&gt;</ph> 편집 컨트롤의 이벤트에 이벤트 처리기를 연결 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control hosts one editing control at a time, and reuses the editing control whenever the cell type does not change between edits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 한 번에 한 개의 편집 컨트롤을 호스트 하 고 셀 유형을 편집 간에 변경 되지 않으므로 때마다 편집 컨트롤을 다시 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>When attaching event-handlers to the editing control, you must therefore take precautions to avoid attaching the same handler multiple times.</source>
          <target state="translated">편집 컨트롤에 이벤트 처리기를 연결할 때 여러 번 동일한 처리기를 연결 하지 않도록 주의 따라서 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>To avoid this problem, remove the handler from the event before you attach the handler to the event.</source>
          <target state="translated">이 문제를 방지 하려면 이벤트를 이벤트 처리기를 연결 하기 전에에서 처리기를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>This will prevent duplication if the handler is already attached to the event, but will have no effect otherwise.</source>
          <target state="translated">이 경우 처리기가 이미 이벤트에 연결 하지 않도록 할 하지만 그렇지 않은 경우 아무 효과도 없습니다.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>For more information, see the example code in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt;</ph> class overview.</source>
          <target state="translated">자세한 내용은 참조의 예제 코드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>The following code example illustrates how to handle this event to change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> property of the current cell.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> 현재 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditingControlShowing">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and ensure that the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControlShowing&gt;</ph> event is associated with the event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 되어 있는지 확인 하 고는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControlShowing&gt;</ph> 이벤트는 이벤트 처리기와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>Gets the panel that contains the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.EditingControl" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.EditingControl" /&gt;</ph>이 포함된 패널을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.EditingControl" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>이 포함된 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.EditingControl" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property, which is <ph id="ph2">`null`</ph> when the current cell is not in edit mode, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> property is always available.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> 속성, 즉 <ph id="ph2">`null`</ph> 때 현재 셀이 편집 모드에는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> 속성은 항상 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>The following code example illustrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> property in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to visually differentiate a cell when it is in edit mode.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 편집 모드에 있을 때 셀을 시각적으로 구분 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Panel.BorderStyle%2A&gt;</ph> of the cell's editing panel is set to <ph id="ph2">&lt;xref:System.Windows.Forms.BorderStyle.Fixed3D&gt;</ph>.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Panel.BorderStyle%2A&gt;</ph> 로 설정 된 셀의 편집 패널의 <ph id="ph2">&lt;xref:System.Windows.Forms.BorderStyle.Fixed3D&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditingPanel">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>Gets or sets a value indicating how to begin editing a cell.</source>
          <target state="translated">셀 편집 시작 방식을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>All <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditMode&gt;</ph> values except for <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically&gt;</ph> also allow a user to double-click a cell to begin editing it.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditMode&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically&gt;</ph> 도 통해 사용자를 편집을 시작 셀을 두 번 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>The following code example demonstrates how to initialize a simple data-bound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 간단한 데이터 바인딩 초기화 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>It also demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> property.</source>
          <target state="translated">설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 컨트롤을 편집 모드로 전환하지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EditMode">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.EditMode" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.EditMode" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.EditModeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>Gets or sets a value indicating whether row and column headers use the visual styles of the user's current theme if visual styles are enabled for the application.</source>
          <target state="translated">비주얼 스타일이 응용 프로그램에 대해 활성화된 경우 행 및 열 머리글이 사용자의 현재 테마에 대한 비주얼 스타일을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if visual styles are enabled for the headers; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">머리글에 대해 비주얼 스타일이 활성화되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>You can enable visual styles for your application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">호출 하 여 응용 프로그램에 대 한 비주얼 스타일을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> 메서드 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, all header cells except the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> are painted using the current theme.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph>를 제외한 모든 머리글 셀은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> 현재 테마를 사용 하 여 칠해집니다.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>The following code example demonstrates how to disable visual styles for the row and column headers in an application that has visual styles enabled.</source>
          <target state="translated">다음 코드 예제에서는 행 및 열 머리글에 비주얼 스타일을 사용 하는 응용 프로그램에 대 한 비주얼 스타일을 사용 하지 않도록 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>In this example, visual styles have been enabled for the application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> method in <ph id="ph2">`Main`</ph>.</source>
          <target state="translated">이 예제에서는 비주얼 스타일을 사용할 응용 프로그램 호출 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> 메서드에서 <ph id="ph2">`Main`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>However, visual styles will not be applied to the row and column headers because <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">그러나 비주얼 스타일 적용 되지 것입니다 행 및 열 머리글에 있으므로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> 로 설정 된 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Commits and ends the edit operation on the current cell.</source>
          <target state="translated">현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source>Commits and ends the edit operation on the current cell using the default error context.</source>
          <target state="translated">기본 오류 컨텍스트를 사용하여 현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the edit operation is committed and ended; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집 작업이 커밋되어 종료되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EndEdit%2A&gt;</ph> overload, passing in a bitwise combination of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> values.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EndEdit%2A&gt;</ph> 의 비트 조합에 전달 하는 오버 로드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source>This method may result in an exception if errors are not handled with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
          <target state="translated">오류와 처리 되지 않은 경우이 메서드는 예외가 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">셀 값을 커밋할 수 없으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /&gt;</ph> values that specifies the context in which an error can occur.</source>
          <target state="translated">오류 발생 가능한 컨텍스트를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>Commits and ends the edit operation on the current cell using the specified error context.</source>
          <target state="translated">지정된 오류 컨텍스트를 사용하여 현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the edit operation is committed and ended; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집 작업이 커밋되어 종료되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>This method may result in an exception if errors are not handled with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
          <target state="translated">오류와 처리 되지 않은 경우이 메서드는 예외가 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">셀 값을 커밋할 수 없으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>Gets or sets the first cell currently displayed in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>; typically, this cell is in the upper left corner.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 현재 표시되는 첫 번째 셀을 가져오거나 설정합니다. 일반적으로 이 셀은 왼쪽 위 모퉁이에 있습니다.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> currently displayed in the control.</source>
          <target state="translated">컨트롤에 현재 표시되는 첫 번째 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>You can use this property to determine which cell is in the first row and column currently displayed in the control.</source>
          <target state="translated">첫 번째 행과 컨트롤에 현재 표시 된 열에 셀을 확인 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>Typically, this is in the upper left corner, but for right-to-left languages, it is in the upper right corner.</source>
          <target state="translated">일반적으로 이것은 왼쪽된 위 모퉁이에 이지만 오른쪽에서 왼쪽 언어에 대 한 오른쪽 위 모서리에 있습니다.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>You can also set this property to scroll the control to the indicated cell.</source>
          <target state="translated">이 속성에 지정 된 셀 컨트롤을 스크롤할 수를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>The following code example illustrates how to ensure that the current cell is visible after sorting.</source>
          <target state="translated">다음 코드 예제에는 정렬 한 후 현재 셀이 표시 되도록 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>This code works only with an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">이 코드는 바인딩되지 않은 에서만 작동 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>With a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control bound to an external data source, the current cell is not automatically persisted when sorting.</source>
          <target state="translated">와 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀 자동으로 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>To run this example, paste the following code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>In C#, you must also connect the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> event to the event handler.</source>
          <target state="translated">C#의 연결도 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> 이벤트를 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>The specified cell when setting this property is not in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 셀이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 내에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>The specified cell when setting this property has a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /&gt;</ph> property value of -1, indicating that it is a header cell or a shared cell.</source>
          <target state="translated">이 속성을 설정할 때 지정된 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /&gt;</ph> 속성 값이 -1이며, 이는 머리글 셀 또는 공유 셀임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
          <source>The specified cell when setting this property has a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth">
          <source>Gets the width of the portion of the column that is currently scrolled out of view..</source>
          <target state="translated">현재 스크롤되어 보이지 않는 열의 일부분에 대한 너비를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth">
          <source>The width of the portion of the column that is scrolled out of view.</source>
          <target state="translated">스크롤되어 보이지 않는 열의 일부분에 대한 너비입니다.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>Gets or sets the index of the column that is the first column displayed on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시된 첫 번째 열의 인덱스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>The index of the column that is the first column displayed on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시된 첫 번째 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>The specified value when setting this property is less than 0 or greater than the number of columns in the control minus 1.</source>
          <target state="translated">이 속성을 설정할 때 지정한 값이 0보다 작거나 컨트롤의 열 개수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>인 열을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 열을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>Gets or sets the index of the row that is the first row displayed on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시된 첫 번째 행의 인덱스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>The index of the row that is the first row displayed on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시된 첫 번째 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>Setting this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> event.</source>
          <target state="translated">이 속성 설정에서 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>The specified value when setting this property is less than 0 or greater than the number of rows in the control minus 1.</source>
          <target state="translated">이 속성을 설정할 때 지정한 값이 0보다 작거나 컨트롤의 행 개수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>The specified value when setting this property indicates a row with a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>인 행을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 열을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>Gets or sets the font of the text displayed by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시되는 텍스트의 글꼴을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to apply to the text displayed by the control.</source>
          <target state="translated">컨트롤에 표시되는 텍스트에 적용되는 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> 속성이 앰비언트 속성입니다.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 같은 가질 수 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> 부모로 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">앰비언트 속성에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> 클래스 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> 는 변경할 수 없습니다 (조정할 수 없는 속성을 의미)를 할당할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> 는 새 <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>However, you can base the new font on the existing font.</source>
          <target state="translated">그러나 기존 글꼴에 새 글꼴을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property as the default value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> properties of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤의 값을 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> 속성의 기본 값으로는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> 의 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 된 개체는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> value automatically updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> properties, changing the font for any cell that inherits the value.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> 값을 자동으로 업데이트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 속성, 속성 값이 상속 하는 모든 셀에 대 한 글꼴을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>Header cells override the value by default, and you can override the value for specific rows, columns, and cells.</source>
          <target state="translated">머리글 셀 기본적으로 값을 재정의 하 고 특정 행, 열 및 셀에 대 한 값을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">셀 스타일 상속 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>The following code example illustrates the use of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Font">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Create an Unbound Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 바인딩되지 않은 Windows Forms DataGridView 컨트롤 만들기<ept id="p1">](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Font" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Font" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.FontChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>Gets or sets the foreground color of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> 속성이 앰비언트 속성입니다.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 같은 가질 수 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> 부모로 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">앰비언트 속성에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> 클래스 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> 는 변경할 수 없습니다 (조정할 수 없는 속성을 의미)를 할당할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> 는 새 <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>However, you can base the new font on the existing font.</source>
          <target state="translated">그러나 기존 글꼴에 새 글꼴을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> property as the default value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤의 값을 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> 속성의 값을 기본값으로 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> value automatically updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property, changing the foreground text color for any cell that inherits the value.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> 값을 자동으로 업데이트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성, 속성 값이 상속 하는 모든 셀에 대 한 텍스트 전경색을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>Header cells override the value by default, and you can override the value for specific rows, columns, and cells.</source>
          <target state="translated">머리글 셀 기본적으로 값을 재정의 하 고 특정 행, 열 및 셀에 대 한 값을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ForeColor">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">셀 스타일 상속 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ForeColor" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ForeColor" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ForeColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> to retrieve.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see langword="Int32" /&gt;</ph>를 식별하는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)">
          <source>Retrieves the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewElementStates" /&gt;</ph> values specifying the cells to count.</source>
          <target state="translated">개수를 계산할 셀을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewElementStates" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>Gets the number of cells that satisfy the provided filter.</source>
          <target state="translated">제공된 필터를 충족하는 셀의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>The number of cells that match the <ph id="ph1">&lt;paramref name="includeFilter" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="includeFilter" /&gt;</ph> 매개 변수와 일치하는 셀 수입니다.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>This method is useful to determine the number of cells in a particular state.</source>
          <target state="translated">이 메서드는 특정 상태에 있는 셀의 수를 결정 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>To retrieve the number of selected cells, for example, use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">선택 된 셀의 수를 검색 하려면 예를 들어이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>This is typically more efficient than using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> property.</source>
          <target state="translated">이 일반적으로 사용 하 여 보다 효율적이 고 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>The following code example illustrates how to use this method to determine whether there are any cells selected in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는에서 선택한 모든 셀이 있는지 여부를 확인 하려면이 메서드를 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>In this example, if any cells are selected, their values are retrieved through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> method and displayed in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">이 예제에서는 모든 셀을 선택 하는 경우 해당 값을 검색을 통해는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> 메서드에 표시 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>This code is part of a larger example illustrating the use of the Clipboard features of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">이 코드는 클립보드 기능의 사용을 보여주는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 클립보드에 복사 여러 셀에 사용자가 사용 하도록 설정<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
          <source><ph id="ph1">&lt;paramref name="includeFilter" /&gt;</ph> includes the value <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="includeFilter" /&gt;</ph>가 값 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" /&gt;</ph>을 포함하는 경우</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>The column index for the desired cell.</source>
          <target state="translated">원하는 셀의 열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>The row index for the desired cell.</source>
          <target state="translated">원하는 셀의 행 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return the displayed portion of the cell only; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to return the entire cell bounds.</source>
          <target state="translated">셀의 표시되는 부분만 반환하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 전체 셀 범위를 반환하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>Returns the rectangle that represents the display area for a cell.</source>
          <target state="translated">셀의 표시 영역을 나타내는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display rectangle of the cell.</source>
          <target state="translated">셀의 표시 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>This method returns the entire cell bounds or the displayed portion only.</source>
          <target state="translated">이 메서드는 전체 셀 범위 또는 표시 된 부분을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>To get the bounds of the cell contents only, use the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A&gt;</ph> property.</source>
          <target state="translated">셀의 범위를 가져와서 내용을을 사용 하 여 셀 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>Retrieves the formatted values that represent the contents of the selected cells for copying to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Clipboard" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Clipboard" /&gt;</ph>에 복사할 선택된 셀 내용을 나타내는 서식 있는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataObject" /&gt;</ph> that represents the contents of the selected cells.</source>
          <target state="translated">선택된 셀의 내용을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>This method retrieves data that represents the region defined by the selected cells.</source>
          <target state="translated">이 메서드는 선택한 셀에 정의 된 영역을 나타내는 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>This region is the smallest rectangle that includes all of the selected cells.</source>
          <target state="translated">이 영역은 선택한 셀을 모두 포함 하는 가장 작은 사각형입니다.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>The value for each selected cell in this region is retrieved by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 지역에서 선택한 각 셀에 대 한 값을 검색 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>Blank placeholder values are used for unselected cells in this region.</source>
          <target state="translated">빈 자리 표시자 값은 선택 되지 않은이 영역에에서 셀이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>This method combines these values into a <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> containing several formats for copying to the clipboard.</source>
          <target state="translated">이 메서드는 이러한 값에는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클립보드에 복사 하기 위한 여러 형식이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>The supported clipboard formats include <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지원 되는 클립보드 형식으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>The following code example demonstrates how to programmatically add selected <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> content to the Clipboard.</source>
          <target state="translated">다음 코드 예제에서는 프로그래밍 방식으로 선택한 항목을 추가 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 내용을 클립보드에 있습니다.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 클립보드에 복사 여러 셀에 사용자가 사용 하도록 설정<ept id="p1">](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>Override this method to provide customized clipboard values.</source>
          <target state="translated">사용자 지정된 클립보드 값을 제공 하려면이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.GetClipboardContent">
          <source>This is useful, for example, to support copying values from custom cell types.</source>
          <target state="translated">이 값은 유용 예를 들어 사용자 지정 셀 형식의 값을 복사를 지원 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
          <source>The column index for the desired cell.</source>
          <target state="translated">원하는 셀의 열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return the column rectangle visible in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> bounds; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to return the entire column rectangle.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 범위에 표시되는 열 사각형을 반환하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 전체 열 사각형을 반환하려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
          <source>Returns the rectangle that represents the display area for a column, as determined by the column index.</source>
          <target state="translated">열 인덱스에 의해 확인된 대로, 열에 대한 표시 영역을 나타내는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display rectangle of the column.</source>
          <target state="translated">열의 표시 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
          <source>The row index for the desired cell.</source>
          <target state="translated">원하는 셀의 행 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return the row rectangle visible in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> bounds; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to return the entire row rectangle.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 범위에 표시되는 행 사각형을 반환하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 전체 행 사각형을 반환하려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
          <source>Returns the rectangle that represents the display area for a row, as determined by the row index.</source>
          <target state="translated">행 인덱스에 의해 확인된 대로, 행에 대한 표시 영역을 나타내는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display rectangle of the row.</source>
          <target state="translated">행의 표시 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>Gets or sets the color of the grid lines separating the cells of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀을 구분하는 눈금선의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Drawing.SystemColors" /&gt;</ph> that represents the color of the grid lines.</source>
          <target state="translated">눈금선의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Drawing.SystemColors" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Drawing.KnownColor.ControlDarkDark" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Drawing.KnownColor.ControlDarkDark" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property to any color when you use a single border; with other types of borders, the colors are specified by the operating system.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> 때 속성을 색상에 테두리를 사용 하 여; 운영 체제에서 다른 형식의 테두리와 색상이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property is ignored, and the current theme's colors are used.</source>
          <target state="translated">통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> 현재 테마 색을 사용한 및 속성은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Drawing.Color.Empty" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Drawing.Color.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.GridColor">
          <source>The specified value when setting this property has a <ph id="ph1">&lt;see cref="P:System.Drawing.Color.A" /&gt;</ph> property value that is less that 255.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 255보다 작은 <ph id="ph1">&lt;see cref="P:System.Drawing.Color.A" /&gt;</ph> 속성 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.GridColor" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.GridColor" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.GridColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>The x-coordinate.</source>
          <target state="translated">X 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>The y-coordinate.</source>
          <target state="translated">Y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>Returns location information, such as row and column indices, given x- and y-coordinates.</source>
          <target state="translated">x 및 y 좌표가 지정된 경우, 행 인덱스 및 열 인덱스 등의 위치 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" /&gt;</ph> that contains the location information.</source>
          <target state="translated">위치 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>You can use this method to determine which part of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is located at the specified coordinates.</source>
          <target state="translated">이 메서드를 사용 하 여의 어느 부분을 결정 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 지정된 된 좌표에 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>For example, you can call this method—specifying the coordinates of a mouse click—to determine the row and column indexes of the clicked cell or whether a header cell or scroll bar was clicked.</source>
          <target state="translated">예를 들어이 메서드를 호출할 수 있습니다-클릭 마우스 좌표를 지정 합니다.-머리글 셀 또는 스크롤 막대를 클릭 하는 여부 또는 클릭 한 셀의 행 및 열 인덱스를 확인 하려면.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>The following code example illustrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> property reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 속성 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollBar">
          <source>Gets the horizontal scroll bar of the control.</source>
          <target state="translated">컨트롤의 가로 스크롤 막대를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollBar">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph> representing the horizontal scroll bar.</source>
          <target state="translated">가로 스크롤 막대를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
          <source>Gets or sets the number of pixels by which the control is scrolled horizontally.</source>
          <target state="translated">컨트롤이 가로로 스크롤된 픽셀 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
          <source>The number of pixels by which the control is scrolled horizontally.</source>
          <target state="translated">컨트롤이 가로로 스크롤된 픽셀 수입니다.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
          <source>The following code example illustrates the use of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
          <source>The specified value when setting this property is less than 0.</source>
          <target state="translated">이 속성을 설정할 지정된 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Invalidates a cell in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>, forcing it to be repainted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> to invalidate.</source>
          <target state="translated">무효화할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>Invalidates the specified cell of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>, forcing it to be repainted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 지정된 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted.</source>
          <target state="translated">이 메서드는 셀 다시 그리기를 다시 셀 일반적으로 발생 하지 않습니다 조건에서 강제 적용 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>For example, you can use this method with a custom cell type that changes its appearance as a result of external events.</source>
          <target state="translated">예를 들어 외부 이벤트의 결과로 모양을 변경 하는 사용자 지정 셀 형식을 가진이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
          <target state="translated">그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>The following code example illustrates how to use this method in a customized <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> that is painted with a custom border when the mouse pointer rests on it.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정이 방법을 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> 위에 마우스 포인터를 놓을 때 그리고에 사용자 지정 테두리가 있는 합니다.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>In the example, the cell is invalidated when the mouse pointer enters or leaves it.</source>
          <target state="translated">예제에서는 셀에는 마우스 포인터가 들어가거나 나올 때이 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source>This code is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>.</source>
          <target state="translated">이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 확장 해당 동작과 모양은 하 여 Windows Forms DataGridView 컨트롤에서 사용자 지정 셀 및 열<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source><ph id="ph1">&lt;paramref name="dataGridViewCell" /&gt;</ph> does not belong to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataGridViewCell" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
          <source><ph id="ph1">&lt;paramref name="dataGridViewCell" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataGridViewCell" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>The column index of the cell to invalidate.</source>
          <target state="translated">무효화할 셀의 열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>The row index of the cell to invalidate.</source>
          <target state="translated">무효화할 셀의 행 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>Invalidates the cell with the specified row and column indexes, forcing it to be repainted.</source>
          <target state="translated">지정된 행 인덱스 및 열 인덱스를 가진 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted.</source>
          <target state="translated">이 메서드는 셀 다시 그리기를 다시 셀 일반적으로 발생 하지 않습니다 조건에서 강제 적용 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>For example, you can use this method with a custom cell type that changes its appearance as a result of external events.</source>
          <target state="translated">예를 들어 외부 이벤트의 결과로 모양을 변경 하는 사용자 지정 셀 형식을 가진이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
          <target state="translated">그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>The following code example illustrates how to use this method in a custom cell type that changes a cell's appearance when the user rests the mouse pointer over it.</source>
          <target state="translated">다음 코드 예제에서는 위에 마우스 포인터를 놓을 때 셀의 모양을 변경 하는 사용자 지정 셀 유형에서는이 방법을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 확장 해당 동작과 모양은 하 여 Windows Forms DataGridView 컨트롤에서 사용자 지정 셀 및 열<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)">
          <source>The index of the column to invalidate.</source>
          <target state="translated">무효화할 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)">
          <source>Invalidates the specified column of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>, forcing it to be repainted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 지정된 열을 무효화하여 열이 다시 그려지도록 합니다.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
          <target state="translated">그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0부터 열 수-1 사이에 속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>The index of the row to invalidate.</source>
          <target state="translated">무효화할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>Invalidates the specified row of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>, forcing it to be repainted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 지정된 행을 무효화하여 행이 다시 그려지도록 합니다.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>Use this method to force a row to repaint itself.</source>
          <target state="translated">이 메서드를 사용 하 여 행이 다시 그려지도록 강제 합니다.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>This method is useful in owner-drawing scenarios where you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> events.</source>
          <target state="translated">이 메서드는 처리 하는 소유자 그리기 시나리오에서 유용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
          <target state="translated">그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>The following code example illustrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.InvalidateRow%2A&gt;</ph> method in a row-painting scenario.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.InvalidateRow%2A&gt;</ph> 행 그리기 시나리오에서 메서드.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>In the example, the row is invalidated when the current cell changes, forcing the row to repaint itself.</source>
          <target state="translated">예제에서는 무효화 되어 행이 현재 셀이 변경 될 때 그려집니다 행을 강제 적용 합니다.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source>This code is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>Gets a value indicating whether the current cell has uncommitted changes.</source>
          <target state="translated">현재 셀에 커밋되지 않은 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current cell has uncommitted changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 셀에 커밋되지 않은 변경 내용이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is not bound to data, the cell edit is considered committed when the user moves to another cell.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 바인딩되지 않은 데이터를 셀 편집 커밋된 것으로 간주 사용자가 다른 셀으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>If row headers are visible, a pencil glyph is present in the header for the row that contains a cell with uncommitted changes.</source>
          <target state="translated">행 머리글이 표시 되 면 연필 기호가 커밋되지 않은 변경 내용이 있는 셀을 포함 하는 행 머리글에 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the current cell hosts an editing control, you can retrieve it through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> 은 <ph id="ph2">`true`</ph> 현재 셀의 편집 컨트롤을 호스트 하 고를 통해 검색할 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> property to determine whether to commit a cell value and raise the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event from a handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> 셀 값을 커밋하고 발생 여부를 결정 하는 속성의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> 에 대 한 처리기에서 이벤트는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
          <source>This code example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드 예제는에 제공 된 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤의 단추 열에서 단추 사용 안 함<ept id="p1">](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source>Gets a value indicating whether the currently active cell is being edited.</source>
          <target state="translated">현재 활성 셀이 편집 중인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current cell is being edited; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 셀이 편집 중이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> that has focus is always in edit mode.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> 포커스가 편집 모드에는 항상 합니다.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source>If the current cell hosts an editing control and <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> is <ph id="ph2">`true`</ph>, you can retrieve the editing control through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property.</source>
          <target state="translated">현재 셀의 편집 컨트롤을 호스트 하는 경우 및 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>을 통해 편집 컨트롤을 검색할 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source>The following code example illustrates the use of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>Gets a value indicating whether the current row has uncommitted changes.</source>
          <target state="translated">현재 행에 커밋되지 않은 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current row has uncommitted changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 행에 커밋되지 않은 변경 내용이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>This property returns <ph id="ph1">`true`</ph> when the pencil glyph is displayed in the row.</source>
          <target state="translated">이 속성은 반환 <ph id="ph1">`true`</ph> 연필 기호가 행에 표시 되는 경우.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> property will always equal the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> property, unless the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to a data source that supports editing, or virtual mode has been implemented to use row-level commit scope.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> 속성의 값을 항상 용량이 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> 속성을 하지 않는 한는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 편집을 지원 또는 가상 모드에 행 수준 커밋 범위를 사용 하도록 구현 하는 데이터 원본에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will evaluate this property at the row level.</source>
          <target state="translated">이러한 경우에는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 행 수준에서이 속성을 평가 합니다.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>When the user navigates away from the row, the control commits all row changes.</source>
          <target state="translated">사용자가 행에서 멀리 이동, 컨트롤에 모든 행 변경 내용을 커밋합니다.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>The user can also press CTRL+ENTER to commit row changes without leaving the row.</source>
          <target state="translated">행을 종료 하지 않고 행 변경 내용을 커밋하기 위해 CTRL + ENTER를 누를 수도 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>To commit row changes programmatically, call the form's <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> method.</source>
          <target state="translated">프로그래밍 방식으로 행 변경 내용을 커밋 호출 폼의 <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
          <source>If your data source is a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, you can also call <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">데이터 원본이 있으면는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>를 호출할 수도 있습니다 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">테스트할 문자입니다.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)">
          <source>Determines whether a character is an input character that the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> recognizes.</source>
          <target state="translated">문자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 인식하는 입력 문자인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character is recognized as an input character; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">문자가 입력 문자로 인식되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)">
          <source>A character is recognized as an input character depending on whether the control is in edit mode and whether the current editing control can accept the character.</source>
          <target state="translated">문자는 컨트롤은 편집 모드에 있는지 여부와 현재 편집 컨트롤의 문자를 허용할 수 있는지 여부에 따라 입력 문자로 인식 됩니다.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
          <target state="translated">지정된 키가 일반 입력 키인지 또는 전처리가 필요한 특수 키인지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 키가 일반 입력 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Provides an indexer to get or set the cell located at the intersection of the specified row and column.</source>
          <target state="translated">지정된 행 및 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>The index of the column containing the cell.</source>
          <target state="translated">셀이 포함된 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>The index of the row containing the cell.</source>
          <target state="translated">셀이 포함된 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.</source>
          <target state="translated">지정된 인덱스의 행 및 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> at the specified location.</source>
          <target state="translated">지정된 위치의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>This indexer is an alternative to accessing cells through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
          <target state="translated">이 인덱서는 셀을 통해 액세스 하는 대신은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> 의 컬렉션은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>The following code example demonstrates the use of this indexer.</source>
          <target state="translated">다음 코드 예제에서는이 인덱서를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>The name of the column containing the cell.</source>
          <target state="translated">셀이 포함된 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>The index of the row containing the cell.</source>
          <target state="translated">셀이 포함된 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name.</source>
          <target state="translated">지정된 인덱스의 행과 지정된 이름의 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph> at the specified location.</source>
          <target state="translated">지정된 위치의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>This indexer is an alternative to accessing cells through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
          <target state="translated">이 인덱서는 셀을 통해 액세스 하는 대신은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> 의 컬렉션은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
          <source>The following code example demonstrates the use of this indexer.</source>
          <target state="translated">다음 코드 예제에서는이 인덱서를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> at a time.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀, 행 또는 열을 한 번에 둘 이상 선택할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can select more than one cell, row, or column at a time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 한 번에 둘 이상의 셀, 행 또는 열을 선택할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, multiple elements (cells, rows, or columns) can be selected in the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph>, 여러 요소 (셀, 행 또는 열)에서 선택할 수는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>To select multiple elements, the user can hold down the CTRL key while clicking the elements to select.</source>
          <target state="translated">여러 요소를 선택 하려면 사용자 수를 누른 채 CTRL 키 요소 선택를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>Consecutive elements can be selected by clicking the first element to select and then, while holding down the SHIFT key, clicking the last element to select.</source>
          <target state="translated">첫 번째 요소를 선택를 클릭 한 후, 마지막 요소를 선택를 클릭 하 고 SHIFT 키를 누른 채 연속 요소를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>The selection scope is based on the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property.</source>
          <target state="translated">선택 범위 기반는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType&gt;</ph>, the user can select multiple columns.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType&gt;</ph>, 사용자는 여러 열을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property to allow a user to select multiple elements in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and perform an operation on all the selected elements.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 사용자의 여러 요소를 선택할 수 있도록 속성을는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 하 고 선택한 모든 요소에 대 한 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>For example, the user could select multiple cells and then right-click a selected cell to display a shortcut menu that displays a set of tasks to perform on the selected cells.</source>
          <target state="translated">예를 들어 사용자 여러 셀을 선택 하 고 선택한 셀에 수행할 작업의 집합을 표시 하는 바로 가기 메뉴를 표시 하려면 선택 된 셀을 마우스 오른쪽 단추로 클릭 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>To determine which cells, rows, or columns are selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, you can access the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> property.</source>
          <target state="translated">어떤 셀, 행 또는 열에서 선택 결정 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤에 액세스할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>To determine the number of selected cells, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetCellCount%2A&gt;</ph> method with an argument value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">선택 된 셀의 번호를 확인 하려면 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetCellCount%2A&gt;</ph> 인수 값을 사용 하 여 메서드 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> method to retrieve the number of selected rows and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A&gt;</ph> method to retrieve the number of columns.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> 선택 된 행의 수를 검색 하는 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A&gt;</ph> 열 수를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>These methods are more efficient than accessing the collections directly when working with large amounts of data.</source>
          <target state="translated">이러한 메서드는 대량의 데이터를 작업할 때 컬렉션에 직접 액세스 하는 보다 더 효율적입니다.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.MultiSelect">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelectChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelectChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelectChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelectChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.NewRowIndex">
          <source>Gets the index of the row for new records.</source>
          <target state="translated">새 레코드의 행에 대한 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.NewRowIndex">
          <source>The index of the row for new records, or -1 if <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">새 레코드의 행에 대한 인덱스이거나 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph>가 <ph id="ph2">&lt;see langword="false" /&gt;</ph>인 경우 -1입니다.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.NewRowIndex">
          <source>Unless <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the value of this property is equal to the number of rows in the control minus 1.</source>
          <target state="translated">하지 않는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>,이 속성의 값은-1의에서 행 수와 같습니다.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.NewRowNeeded">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the user navigates to the new row at the bottom of the <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고 사용자가 <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 맨 아래에 있는 새 행으로 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.NewRowNeeded">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in virtual mode, this event allows a new entry to be created in the data store for the new row, and it also allows for the row to be populated with default values.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 가상 모드에서이 이벤트는 새 행에 대 한 데이터 저장소에 만들어질 새 항목 허용 되며 기본 값으로 채워지는 행에 대 한 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.NewRowNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.NewRowNeeded">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.NewRowNeeded&gt;</ph> event to track when a new row is being added, so logic in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event handler can initialize a new row's cell to an initial value.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.NewRowNeeded&gt;</ph> 새 행이 추가 될 때, 따라서 논리를 추적 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 이벤트 처리기에 새 행의 셀을 초기 값으로 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.NewRowNeeded">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the cell has uncommitted changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">셀에 커밋되지 않은 변경 내용이 있음을 나타내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> that the current cell has uncommitted changes.</source>
          <target state="translated">현재 셀에 커밋되지 않은 변경 내용이 있음을 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 알립니다.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source>This method can be used to allow custom cell types to notify the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> when they have uncommitted changes.</source>
          <target state="translated">셀 사용자 지정 형식에 허용 하려면이 메서드를 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 때 커밋되지 않은 변경 내용이 있습니다.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source>The following code example illustrates the use of this method in a custom cell scenario.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 셀 시나리오에서이 방법 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source>In the example, an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</ph> implementation derived from the <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> class overrides the <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A&gt;</ph> method and uses the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A&gt;</ph> method to indicate a change to the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</ph> 에서 파생 된 구현은 <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> 재정의 <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A&gt;</ph> 사용 하 여 메서드는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A&gt;</ph> 나타내도록 변경 메서드를는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
          <source>This example is part of a larger example shown in <bpt id="p1">[</bpt>How to: Host Controls in Windows Forms DataGridView Cells<ept id="p1">](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>.</source>
          <target state="translated">이 예제는에 표시 된 것 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 셀에서 호스트 컨트롤<ept id="p1">](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /&gt;</ph> 속성 값이 null인 경우</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>The number of entries in the array returned by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is not equal to the number of columns in the control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /&gt;</ph> 속성에서 반환한 배열의 엔트리 수가 컨트롤의 열 수와 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QuestionEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QuestionEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains information regarding the cell whose content was clicked.</source>
          <target state="translated">내용을 클릭한 셀에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellEnter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellEnter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than -1 or greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than -1 or greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellLeave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellLeave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Typically, double-clicking a cell puts the cell in edit mode.</source>
          <target state="translated">일반적으로 셀을 두 번 클릭 하면 편집 모드에는 셀을 전환 합니다.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellPainting" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellPainting" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellPainting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellPainting%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellParsing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellParsing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellParsing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellParsing%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains information about the cell.</source>
          <target state="translated">셀에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValidated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValidated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValidating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValidating" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidating%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /&gt;</ph> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than zero or greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than zero or greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than zero or greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than zero or greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is less than zero or greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /&gt;</ph> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains information about the cell and the position of the mouse pointer.</source>
          <target state="translated">셀에 대한 정보와 마우스 포인터의 위치에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>The column changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">열이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains information about the column.</source>
          <target state="translated">열에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>The column indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /&gt;</ph> 속성이 나타내는 열이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event and updates the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /&gt;</ph> property if the cursor was changed in user code.</source>
          <target state="translated">커서가 사용자 코드에서 변경된 경우 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> 이벤트를 발생시키고 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /&gt;</ph> 속성을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control changes the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property value depending on the location of the mouse pointer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 변경 제어는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 마우스 포인터의 위치에 따라 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> property stores the normal value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property and ignores the control's changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> 속성의 일반 값을 저장는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 속성 및 컨트롤의 변경 내용을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>This method is called when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CursorChanged&gt;</ph> event occurs, and it updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> property, if necessary, in addition to invoking any event handlers.</source>
          <target state="translated">이 메서드를 호출한 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CursorChanged&gt;</ph> 이벤트 발생 하 고 업데이트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> 속성, 이벤트 처리기를 호출 하는 것 외에도 필요한 경우.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
          <source>Binding operations occur when the data changes while a <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is in use.</source>
          <target state="translated">바인딩 작업에서 데이터가 변경 될 때 발생 하는 동안는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event occurs, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will update its view and raise the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataBindingComplete&gt;</ph> event when it is finished.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트가 발생 하면는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 화면 표시를 업데이트 하 고 발생 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataBindingComplete&gt;</ph> 완료 되 면 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display an error dialog box if there is no handler for the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없는 경우 오류 대화 상자를 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataError%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataError%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" /&gt;</ph> that contains information about the editing control.</source>
          <target state="translated">편집 컨트롤에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> event is raised whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> 이벤트가 발생할 때마다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> 속성 변경 합니다.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>When entering edit mode, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">편집 모드로 전환될 때 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 에서 파생되고 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>The control is configured to enter edit mode when it receives focus, but upon entering focus, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 포커스를 받을 때 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.FontChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event, this method uses the new value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property to update the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> properties of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> properties.</source>
          <target state="translated">발생 하는 것 외에도 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> 이벤트의 경우이 메서드는 사용의 새 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> 속성을 업데이트는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> 의 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 된 개체는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnFontChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event, this method uses the new value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> property to update the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
          <target state="translated">발생 하는 것 외에도 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> 이벤트의 경우이 메서드는의 새 값을 사용는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> 속성을 업데이트는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This action would cause the control to enter edit mode but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 통해 컨트롤이 편집 모드로 들어가지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyPress%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLayout%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>The following code example illustrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: 확장 해당 동작과 모양은 하 여 Windows Forms DataGridView 컨트롤에서 사용자 지정 셀 및 열<ept id="p1">](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseMove%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnPaint%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Any exceptions that occur during this method are ignored unless they are one of the following:</source>
          <target state="translated">이 메서드 중에 발생하는 예외는 다음 중 하나에 해당하지 않으면 무시됩니다.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>The control changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnResize%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnResize%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QuestionEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QuestionEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowEnter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowEnter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains information about the mouse and the header cell that was clicked.</source>
          <target state="translated">마우스에 대한 정보와 클릭한 머리글 셀에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph> that contains information about the mouse and the header cell that was double-clicked.</source>
          <target state="translated">마우스에 대한 정보와 두 번 클릭한 머리글 셀에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowLeave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowLeave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" /&gt;</ph> that contains information about the added rows.</source>
          <target state="translated">추가된 행에 대한 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" /&gt;</ph> that contains information about the deleted rows.</source>
          <target state="translated">삭제된 행에 대한 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>The index of the row that is changing state.</source>
          <target state="translated">상태가 변경되고 있는 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>The row changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">행이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowValidated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowValidated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowValidating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.RowValidating" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidating%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.Scroll" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.Scroll" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnScroll%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnScroll%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains information about the event.</source>
          <target state="translated">이벤트에 대한 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.SortCompare" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.SortCompare" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSortCompare%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSortCompare%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.Sorted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.Sorted" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSorted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSorted%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The row indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> does not belong to this <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph>의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /&gt;</ph> 속성이 나타내는 행이 이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 속하지 않은 경우</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event, this method ends the current cell edit and validates the cell and row values.</source>
          <target state="translated">발생 시킬 뿐 아니라는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> 이벤트의 경우이 메서드는 현재 셀의 편집을 종료 하 고 셀 및 행 값의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnValidating%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Validation failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">유효성 검사가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Padding">
          <source>This property is not relevant for this control.</source>
          <target state="translated">이 속성은 이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Padding">
          <source>This property is not relevant for this control.</source>
          <target state="translated">이 속성은 이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.PaddingChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Padding" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Padding" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.PaddingChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Padding%2A&gt;</ph> property is not relevant for this control, although you can change its value and respond to such changes by handling this event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Padding%2A&gt;</ph> 값을 변경 하 고이 이벤트를 처리 하 여 이러한 변경에 대응할 수 있지만 속성은이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.PaddingChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> used to paint the background.</source>
          <target state="translated">배경을 그릴 때 사용되는 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the area of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> that needs to be painted.</source>
          <target state="translated">그려야 하는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 영역을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the area in which cells are drawn.</source>
          <target state="translated">셀이 그려지는 영역을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>Paints the background of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 배경을 그립니다.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">`clipBounds`</ph> parameter represents the area of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> that needs to be repainted.</source>
          <target state="translated"><ph id="ph1">`clipBounds`</ph> 의 영역을 나타내는 매개 변수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 를 다시 보내야 합니다.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>For example, if a user covers the entire <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> with another window and then uncovers it, then <ph id="ph2">`clipBounds`</ph> represents the entire <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">예를 들어, 사용자는 전체를 포함 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 다른 창을 사용을 덮, <ph id="ph2">`clipBounds`</ph> 는 전체 나타내는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
          <source>If a user covers a small area of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> and then uncovers it, then <ph id="ph2">`clipBounds`</ph> represents the small area that was covered.</source>
          <target state="translated">사용자의 작은 영역을 포함 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 을 덮, <ph id="ph2">`clipBounds`</ph> 포함 된 작은 영역을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>Processes the A key.</source>
          <target state="translated">A 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>This method returns <ph id="ph1">`true`</ph> when the user presses CTRL+A and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> CTRL + A를 누를 때 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>By default, this selects all cells in the control.</source>
          <target state="translated">기본적으로 컨트롤의 셀을 모두 선택이 있습니다.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>Contains information about the key that was pressed.</source>
          <target state="translated">누른 키에 대한 정보가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>Processes keys used for navigating in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 이동하는 데 사용되는 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>This method calls the key-processing method appropriate to the key pressed (for example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A&gt;</ph> method when F2 is pressed) and returns the return value of that method.</source>
          <target state="translated">이 메서드는 키 처리 메서드를 누른 키에 적합 한 호출 (예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A&gt;</ph> f2 키를 누르면 메서드) 하 고 해당 메서드의 반환 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example demonstrates how to change the behavior of the ENTER key in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> subclass by overriding the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> methods.</source>
          <target state="translated">ENTER 키의 동작을 변경 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 재정의 하 여 하위 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.</source>
          <target state="translated">예제에서는 키 보다 쉽게 데이터의 단일 행의 여러 셀을 편집 하려면 사용자에 대 한 오른쪽 화살표 키와 동일한 동작을 있습니다.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">DELETE 키를 누르면 하나 이상의 행이 삭제되지만, 데이터 소스의 오류로 인해 삭제되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트용 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding this method, a control should return <ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 컨트롤은 반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 키가 처리 되었는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
          <source>For keys that are not processed by the control, return the result of the base version of this method.</source>
          <target state="translated">컨트롤에 의해 처리 되지 않은 키에 대 한이 메서드의 기본 버전의 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>Processes the DELETE key.</source>
          <target state="translated">Delete 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>This method returns <ph id="ph1">`true`</ph> when the user presses DELETE to delete rows in the control.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 컨트롤의 행을 삭제 하려면 DELETE를 누를 때.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>The user can delete rows if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">하는 경우 사용자가 행을 삭제할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성이로 설정 된 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType&gt;</ph> property of the data source must also be set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 데이터에 바인딩되는 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType&gt;</ph> 데이터 원본의 속성 설정 해야 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">DELETE 키를 누르면 하나 이상의 행이 삭제되지만, 데이터 소스의 오류로 인해 삭제되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트용 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes.</source>
          <target state="translated">대화 상자를 제어하는 데 사용되는 Tab, Esc, Enter, 화살표 키 등의 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called in edit mode to handle keyboard input that is not handled by the hosted editing control.</source>
          <target state="translated">이 메서드는 호스팅된 편집 컨트롤에서 처리 되지 않은 키보드 입력을 처리 하는 편집 모드에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>If a key press is determined to not be an input key, it will be sent to the base class for processing.</source>
          <target state="translated">키 누름 되지 않고 입력된 키인지를 확인 하 되 처리에 대 한 기본 클래스에 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The following code example demonstrates how to change the behavior of the ENTER key in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> subclass by overriding the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> methods.</source>
          <target state="translated">ENTER 키의 동작을 변경 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 재정의 하 여 하위 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.</source>
          <target state="translated">예제에서는 키 보다 쉽게 데이터의 단일 행의 여러 셀을 편집 하려면 사용자에 대 한 오른쪽 화살표 키와 동일한 동작을 있습니다.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>for using all windows and user events when the TAB key is pressed.</source>
          <target state="translated">모든 창 및 사용자 이벤트 TAB 키를 누를 때 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Permission value:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">권한 값:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>When overriding this method, a control should return <ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 컨트롤은 반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 키가 처리 되었는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, return the result of the base version of this method.</source>
          <target state="translated">컨트롤에 의해 처리 되지 않은 키에 대 한이 메서드의 기본 버전의 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>Processes the DOWN ARROW key.</source>
          <target state="translated">아래쪽 화살표 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>The DOWN ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">아래쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>Processes the END key.</source>
          <target state="translated">End 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>The END key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">End 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>Processes the ENTER key.</source>
          <target state="translated">Enter 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>The ENTER key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">Enter 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source>Processes the ESC key.</source>
          <target state="translated">Esc 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>Processes the F2 key.</source>
          <target state="translated">F2 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>The F2 key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">F2 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>The F2 key would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">F2 키로 인해 컨트롤이 편집 모드에 들어가지만 데이터 소스의 오류 때문에 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트의 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source>A bitwise combination of values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source>Processes the F3 key by sorting the current column.</source>
          <target state="translated">현재 열을 정렬하여 F3 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>The key that was pressed.</source>
          <target state="translated">눌러진 키입니다.</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>Processes the HOME key.</source>
          <target state="translated">Home 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>The HOME key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">Home 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">처리할 키를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source>Processes the INSERT key.</source>
          <target state="translated">Insert 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Processes a key message and generates the appropriate control events.</source>
          <target state="translated">키 메시지를 처리하고 적합한 컨트롤 이벤트를 생성합니다.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType&gt;</ph> method on the base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType&gt;</ph> 기본 클래스에 메서드.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>When overriding this method, a control should return <ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the message.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 컨트롤은 반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 메시지 처리 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>For messages that are not processed by the control, return the result of the base version of this method.</source>
          <target state="translated">컨트롤에 의해 처리 되지 않은 메시지의 경우이 메서드의 기본 버전의 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">키보드 메시지를 미리 봅니다.</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType&gt;</ph> method on the base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType&gt;</ph> 기본 클래스에 메서드.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>When overriding this method, a control should return <ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the message.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 컨트롤은 반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 메시지 처리 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>For messages that are not processed by the control, return the result of the base version of this method.</source>
          <target state="translated">컨트롤에 의해 처리 되지 않은 메시지의 경우이 메서드의 기본 버전의 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>Processes the LEFT ARROW key.</source>
          <target state="translated">왼쪽 화살표 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>The LEFT ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">왼쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>Processes the PAGE DOWN key.</source>
          <target state="translated">Page Down 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>The PAGE DOWN key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">Page Down 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>Processes the PAGE UP key.</source>
          <target state="translated">Page Up 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>The PAGE UP key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">PAGE UP 키를 누르면 컨트롤이 편집 모드로 전환되지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성은 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되고 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>Processes the RIGHT ARROW key.</source>
          <target state="translated">오른쪽 화살표 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>The following code example demonstrates how to change the behavior of the ENTER key in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> subclass by overriding the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> methods.</source>
          <target state="translated">ENTER 키의 동작을 변경 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 재정의 하 여 하위 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.</source>
          <target state="translated">예제에서는 키 보다 쉽게 데이터의 단일 행의 여러 셀을 편집 하려면 사용자에 대 한 오른쪽 화살표 키와 동일한 동작을 있습니다.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>The RIGHT ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">오른쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">처리할 키를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source>Processes the SPACEBAR.</source>
          <target state="translated">스페이스바를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>Processes the TAB key.</source>
          <target state="translated">Tab 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>The TAB key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">Tab 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>for using all windows and user events.</source>
          <target state="translated">모든 창 및 사용자 이벤트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>Processes the UP ARROW key.</source>
          <target state="translated">위쪽 화살표 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>The UP ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">위쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정했습니다.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key or keys to process.</source>
          <target state="translated">처리할 키를 하나 이상 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>Processes the 0 key.</source>
          <target state="translated">0 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>The 0 key would cause the control to enter edit mode, but the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">0 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되어 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>This action would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 작업으로 인해 컨트롤이 편집 모드에 들어가지만 데이터 소스의 오류 때문에 작업이 수행되지 않으며 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트의 처리기가 없거나 처리기에서 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정한 경우</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>Gets or sets a value indicating whether the user can edit the cells of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 셀을 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user cannot edit the cells of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 셀을 편집할 수 없으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>A cell is read-only if the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnly%2A&gt;</ph> property is <ph id="ph2">`true`</ph> for the cell, the cell's row, the cell's column, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">셀이 읽기 전용 경우의 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnly%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph> 셀, 셀의 행, 셀의 열에 대 한 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>The following code example illustrates the use of this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the current cell is in edit mode, and the current cell contains changes that cannot be committed.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 현재 셀이 편집 모드이며, 현재 셀에 커밋할 수 없는 변경 내용이 포함된 경우</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event or the handler has set the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> property to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 컨트롤을 편집 모드로 전환하지만 편집 셀 값의 초기화가 실패하고 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트에 대한 처리기가 없거나 처리기의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ReadOnly">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>.</source>
          <target state="translated">예외 개체는 일반적으로 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnlyChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnlyChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.RefreshEdit">
          <source>Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value.</source>
          <target state="translated">셀이 편집 모드일 때 현재 셀 값을 내부 셀 값으로 새로 고치고 이전 값을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.RefreshEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if a <ph id="ph3">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> event occurred.</source>
          <target state="translated">성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see cref="E:System.Windows.Forms.DataGridView.DataError" /&gt;</ph> 이벤트가 발생하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.RefreshEdit">
          <source>Call this method to force a cell to update its display value in edit mode.</source>
          <target state="translated">셀 편집 모드에서 표시 값을 업데이트 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.RefreshEdit">
          <source>This is useful when an external process modifies the cell value and you want to notify the user of the change, even when a user-specified change is lost as a result.</source>
          <target state="translated">외부 프로세스는 셀 값을 수정 하 고 결과적으로 손실 되는 사용자 지정 변경 하는 경우에 변경 내용 사용자에 게 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.ResetText">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Text" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Text" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.ResetText">
          <source>Although this method behaves as described, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> property is not relevant for this control.</source>
          <target state="translated">이 메서드는에서 설명한 것 처럼 동작 하지만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> 속성은이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>Occurs when a row's shortcut menu is needed.</source>
          <target state="translated">행의 바로 가기 메뉴가 필요한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트 발생만 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성을 설정 또는 해당 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event is useful when you want to display a shortcut menu determined by a row's current state or the values it contains.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트는 행의 현재 상태 또는 포함 된 값에 의해 결정 되는 바로 가기 메뉴를 표시 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a row unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> overrides the shortcut menu for the specific cell that was clicked.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트 처리기에서 지정 하는 바로 가기 메뉴가 표시 됩니다 때마다 마우스 행 경우가 아니면는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> 클릭 된 특정 셀에 대 한 바로 가기 메뉴를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> property is retrieved, either programmatically or when the user right-clicks a row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 이벤트는 또한 될 때마다 발생의 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> 검색 하거나 프로그래밍 방식으로 또는 행을 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> property to determine the state of a row or the values it contains, and use this information to change or modify the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> 속성을 행 이나 포함 된 값의 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>This property is initialized with the value of the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property, which the event value overrides.</source>
          <target state="translated">이 속성은 행의 값으로 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> 이벤트 값을 무시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> value for multiple rows.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 많은 행을 설정의 작업할 때 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> 여러 행에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event to provide a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> based on the title of the employee.</source>
          <target state="translated">다음 코드 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> 제공 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> 는 직원의 직책이 기반 합니다.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
          <source>In this example, there are two shortcut menus, one for managers and one for all other employees.</source>
          <target state="translated">이 예제는 두 개의 바로 가기 메뉴, 관리자 용 및 다른 모든 직원에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>Gets or sets the number of rows displayed in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시되는 행 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The number of rows to display in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 표시할 행 수입니다.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> is set to a value less than the current value, rows will be removed from the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 설정 된 현재 값 보다 작은 값으로 행의 끝에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> is set to a value greater than the current value, rows will be added to the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 설정 된 현재 값 보다 큰 값으로 행의 끝에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The additional rows are based on the row specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> property.</source>
          <target state="translated">추가 행은에 지정 된 행에 따라는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to 0, all rows will be removed from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 속성을 0에서 모든 행 제거 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>This is equivalent to calling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph2">`true`</ph>, you cannot set <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> to 0.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>를 설정할 수 없습니다. <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 0으로 합니다.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>In this case, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType&gt;</ph> method to remove all rows except the row for new records.</source>
          <target state="translated">이 경우 호출 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType&gt;</ph> 메서드 새 레코드에 대 한 행을 제외한 모든 행을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A&gt;</ph> has the same result as setting <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> to 1 in this case, but is much faster.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A&gt;</ph> 는 설정 것과 동일한 결과가 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 이 경우 1로 하지만 훨씬 더 빠릅니다.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property can be used with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> property to create a simple <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> for displaying and editing text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 속성에 사용할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 간단한 만들 속성 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 를 표시 하 고 텍스트를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to a value greater than 0 for a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control without columns, a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> is added automatically.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 속성에 대 한 0 보다 큰 값으로는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 열이 없는 제어는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> 자동으로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>In this example, this property is used to track the number of entries in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">이 예제에서는이 속성에 있는 항목의 수를 추적 하는 데 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The specified value when setting this property is less than 0.</source>
          <target state="translated">이 속성을 설정할 지정된 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>The specified value is less than 1 and <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 1보다 작고 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowCount">
          <source>When setting this property, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property is set.</source>
          <target state="translated">이 속성을 설정할 때 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성이 설정된 경우</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /&gt;</ph> property for a row changes.</source>
          <target state="translated">행의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a row is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a row is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">될 때이 이벤트 발생의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> 속성 경우 또는 행을 새 값으로 설정 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> 행에 대 한 속성을 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 이전 셀 다른와 스타일 개체입니다.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> needs to determine whether the current row has uncommitted changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> 컨트롤의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고 <ph id="ph4">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>가 현재 행에 커밋되지 않은 변경 내용이 있는지 여부를 확인해야 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>By default, this event sets the <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> if any cells in the current row have been modified.</source>
          <target state="translated">기본적으로이 이벤트는 다음과 같이 설정 됩니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 현재 행에 있는 셀이 수정 된 경우.</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>This causes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event to occur when the user reverts edits to a row.</source>
          <target state="translated">이 인해는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> 사용자는 행에 대 한 편집 내용이 되돌릴 때 발생 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>Users can revert edits to a row by pressing ESC twice when a cell is in edit mode or once outside of edit mode.</source>
          <target state="translated">사용자가 셀이 편집 모드 또는 한 번 편집 모드 이외의 경우에 두 번 ESC 키를 눌러 행에 대 한 편집을 되돌릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>This event can be used for customizing commit scope in virtual mode by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType&gt;</ph> property to the correct value depending on the chosen commit scope.</source>
          <target state="translated">이 이벤트를 설정 하 여 가상 모드에 대 한 커밋 범위를 사용자 지정에 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType&gt;</ph> 속성을 선택한 커밋 범위에 따라 올바른 값입니다.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>The following code example demonstrates how to handle this event to provide cell-level commit scope, meaning that the user can revert changes to the current cell only.</source>
          <target state="translated">다음 코드 예제에서는 셀 수준의 커밋 범위는 사용자가 현재 셀에 대 한 변경 내용을 되돌릴 수를 제공 하려면이 이벤트를 처리 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>In cell-level commit scope, the row is treated as having uncommitted changes only when the current cell has uncommitted changes, rather than when any cell in the row has uncommitted changes.</source>
          <target state="translated">셀 수준 커밋 범위에서 행 경우에만 변경 커밋되지 않은 것으로 처리 됩니다 현재 셀에 커밋되지 않은 변경 내용이 행의 모든 셀에 있을 때 대신 커밋되지 않은 변경 내용이 있습니다.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>연습: Windows Forms DataGridView 컨트롤에서 가상 모드 구현<ept id="p1">](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>Occurs when the user double-clicks the divider between two rows.</source>
          <target state="translated">두 행 사이의 구분선을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a row divider.</source>
          <target state="translated">사용자가 행 구분선을 두 번 클릭할 때 발생 하는 자동 크기 조정 동작을 사용자 지정 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>The row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> property does not extend the area in which a user can double-click.</source>
          <target state="translated">행 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> 사용자 수 두 번 영역을 확장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>If the height of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.</source>
          <target state="translated">구분선의 높이 확장 된 경우이 속성을 사용 하 여,이 이벤트에는 구분선와 인접 한 열 사이의 경계를 두 번 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>The divider height is modified by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A&gt;</ph> property.</source>
          <target state="translated">구분선 높이 설정 하 여 수정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>Occurs when a row receives input focus but before it becomes the current row.</source>
          <target state="translated">행이 입력 포커스를 받고 현재 행이 되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>This event occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is initially loaded, as well as when the user selects a row other than the current row.</source>
          <target state="translated">이 이벤트가 발생할 때의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 사용자가 현재 행 이외의 다른 행을 선택 하는 경우 뿐 아니라 처음 로드 합니다.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>This event occurs before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentRow%2A&gt;</ph> property is updated.</source>
          <target state="translated">이 이벤트가 발생 하기 전에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentRow%2A&gt;</ph> 속성이 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>To retrieve the index of the newly-entered row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> property within the event handler.</source>
          <target state="translated">새로 입력 한 행의 인덱스를 검색 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> 이벤트 처리기 내에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>The following code example illustrates how to handle this event to change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> property of the cells in the current row.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> 현재 행에 있는 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>In this example, the background color is set in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowEnter&gt;</ph> event, then reset to <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowLeave&gt;</ph> event.</source>
          <target state="translated">이 예제에서는 명령 프롬프트 창의 배경색 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowEnter&gt;</ph> 다음으로 다시 설정 이벤트 <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowEnter">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and ensure that all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /&gt;</ph> property of a row changes.</source>
          <target state="translated">행의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /&gt;</ph> 속성이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>Occurs when a row's error text is needed.</source>
          <target state="translated">행의 오류 텍스트가 필요한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트 발생만 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 설정 또는 해당 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event is useful when you want to determine the error for a row depending on its state and the values it contains.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 의 상태와 포함 된 값에 따라 행에 대 한 오류를 확인 하려는 경우 이벤트가 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event and specify error text in the handler, an error glyph appears in the row header unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트 오류 텍스트에에서 지정 된 처리기를 오류 문자 모양과 행 머리글에 표시 하지 않는 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A&gt;</ph> 속성이 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.</source>
          <target state="translated">오류 문자 위로 마우스 포인터를 이동할 때 오류 텍스트 도구 설명에 나타납니다.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType&gt;</ph> property is retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트는 또한 될 때마다 발생의 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType&gt;</ph> 속성을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> property to determine the state of a row or the values it contains, and use this information to change or modify the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> 속성을 행 이나 포함 된 값의 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>This property is initialized with the value of the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> property, which the event value overrides.</source>
          <target state="translated">이 속성은 행의 값으로 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 이벤트 값을 무시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> value for multiple rows.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 많은 행을 설정의 작업할 때 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 여러 행에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>Occurs when the user changes the contents of a row header cell.</source>
          <target state="translated">행 머리글 셀의 내용을 변경할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick">
          <source>Occurs when the user clicks within the boundaries of a row header.</source>
          <target state="translated">행 머리글의 경계선 내부를 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>Occurs when a row header is double-clicked.</source>
          <target state="translated">행 머리글을 두 번 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>Gets or sets the border style of the row header cells.</source>
          <target state="translated">행 머리글 셀의 테두리 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> 속성이 아닌 다른 값으로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> 속성 시스템 색을 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">이 속성 설정할 수 없습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> 는 읽기 전용으로 지정 하는 값의 테두리 스타일을 사용 하 여 사용자 지정 된 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the row headers are painted using the current theme.</source>
          <target state="translated">통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>, 행 머리글은 현재 테마를 사용 하 여 그립니다.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>In this case, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property is ignored for all row headers except the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, to which the theme is not applied.</source>
          <target state="translated">이 경우의 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> 제외한 모든 행 머리글에 대 한 속성은 무시 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, 테마 적용 되지 되는 합니다.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>The following code example illustrates the use of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>Gets or sets the default style applied to the row header cells.</source>
          <target state="translated">행 머리글 셀에 적용된 기본 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph> that represents the default style applied to the row header cells.</source>
          <target state="translated">행 머리글 셀에 적용되는 기본 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by this property has the following initial property values.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 이 속성에서 반환 속성에는 초기 속성 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>DataGridViewCellStyle property</source>
          <target state="translated">DataGridViewCellStyle 속성</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>These values automatically override the values set through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
          <target state="translated">이러한 값을 통해 설정 된 값을 자동으로 재정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>To force row headers to inherit the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> values, you must set the values in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> object to the default values indicated for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class.</source>
          <target state="translated">상속 하도록 행 머리글을 강제로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 값는 값을 설정 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 을 기본값으로 개체에 대 한 표시는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">셀 스타일 상속 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>The following code example illustrates how to use this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> with custom colors.</source>
          <target state="translated">다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 색이 사용자 지정 합니다.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>Note how the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Drawing.Color.Empty?displayProperty=nameWithType&gt;</ph> so that the value is inherited from the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> object.</source>
          <target state="translated">참고 방법을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Drawing.Color.Empty?displayProperty=nameWithType&gt;</ph> 에서 값이 상속 되도록는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
          <source>This example is part of a larger example provided in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>This event occurs when a property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">이 이벤트가 발생할 때의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 속성을 새 값으로 설정 되어 되거나는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>Gets or sets a value indicating whether the column that contains row headers is displayed.</source>
          <target state="translated">행 머리글이 포함된 열의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the column that contains row headers is displayed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">행 머리글이 포함된 열이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, a row whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.Resizable%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph> can still be resized in the user interface (UI) by clicking the mouse cursor anywhere along the bottom border of the row to be resized.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 행 인 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.Resizable%2A&gt;</ph> 속성이 <ph id="ph4">`true`</ph> 여전히 크기 조정할 수 있습니다 (UI) 사용자 인터페이스에서를 마우스 커서로 크기를 조정할 행의 아래쪽 테두리를 클릭 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see langword="false" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /&gt;</ph> property is set to <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /&gt;</ph> 속성이 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>Gets or sets the width, in pixels, of the column that contains the row headers.</source>
          <target state="translated">행 머리글이 포함된 열의 너비(픽셀)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>The width, in pixels, of the column that contains row headers.</source>
          <target state="translated">행 머리글이 포함된 열의 너비(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>The default is 43.</source>
          <target state="translated">기본값은 43입니다.</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> property can be used to resize the row header column to a specified width.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> 폭이 지정 된 행 머리글 열 크기를 조정 하려면 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>To adjust the width of this column to fit the contents of the row header cells, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> method.</source>
          <target state="translated">행 머리글 셀의 내용에 맞게이 열의 너비를 조정 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>The following code example illustrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> property in a row-painting scenario.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> 행을 칠하는 시나리오에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>In the example, the value of this property is used to calculate the bounds within which a custom background is drawn.</source>
          <target state="translated">예제에서는이 속성의 값은 사용자 지정 배경을 그려집니다 범위를 계산 하 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>This code is part of a larger example available in<bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 코드는에서 사용할 수 있는 보다 큰 예제의 일부<bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
          <source>The specified value when setting this property is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 최소 높이인 4픽셀보다 작거나 최대 높이인 32768 픽셀보다 큽니다.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>Occurs when value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</source>
          <target state="translated">행 머리글의 너비가 조정 가능한지, 사용자가 이 높이를 조정할 수 있는지, 머리글의 내용에 맞게 높이가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value indicating the mode by which the width of the row headers can be adjusted.</source>
          <target state="translated">행 머리글의 너비를 조정할 수 있는 모드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>When this property is set to an automatic sizing mode, the width of the row headers cannot be adjusted by the user.</source>
          <target state="translated">이 속성은 자동 크기 조정 모드를 설정, 사용자가 행 머리글의 너비를 조정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>To adjust the height of the row headers programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> method or set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> property.</source>
          <target state="translated">행 머리글의 높이 프로그래밍 방식으로 조정 하려면 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> 메서드 또는 집합은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>To set the sizing mode for the column headers, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
          <target state="translated">열 머리글에 대 한 크기 조정 모드를 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>For more information about header sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">헤더 크기 조정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정 옵션<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤이 이중 버퍼링을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`true`</ph> 파생 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤, 행, 열 또는 헤더 크기를 조정할 때 또는 열 다시 정렬 하는 경우 사용자는 시각적 피드백을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>The following code example illustrates how to use this property in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control intended primarily for display.</source>
          <target state="translated">다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 디스플레이 데 주로 합니다.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity.</source>
          <target state="translated">이 예제에서는 여러 가지 방법으로 컨트롤의 시각적 모양을 사용자 지정 된 및 컨트롤은 제한적된으로 상호 작용에 대해 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeightChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Height" /&gt;</ph> property for a row changes.</source>
          <target state="translated">행의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.Height" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightChanged">
          <source>The following code example illustrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하 여를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightChanged">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>Occurs when information about row height is requested.</source>
          <target state="translated">행 높이에 대한 정보가 요청될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>This event is useful for preserving custom row heights after a sorting operation.</source>
          <target state="translated">이 이벤트는 정렬 작업 후 사용자 지정 행 높이 유지 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>This is necessary because sorting operations are normally handled by the data source, which does not keep track of the correspondence between rows of data and rows in the control.</source>
          <target state="translated">정렬 작업은 일반적으로를 추적 하지 행의 데이터와 컨트롤의 행 간의 관계는 데이터 원본의에서 처리 되므로이 작업이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has been set or when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">만이 이벤트가 발생 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성이 설정 된 경우 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>In the latter case, you provide your own data store and sorting operations.</source>
          <target state="translated">후자의 경우 사용자의 데이터 저장소 및 정렬 작업을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event to store updated height information when the user changes a row height.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> 행 높이 변경할 때 업데이트 된 높이 정보를 저장 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> to retrieve the stored height information when the control needs it.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 컨트롤에서 필요한 경우 저장 된 높이 정보를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>Occurs when the user changes the height of a row.</source>
          <target state="translated">행의 높이를 변경할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>This event is raised when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set to a value other than <ph id="ph4">`null`</ph>.</source>
          <target state="translated">이 이벤트는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성 이외의 값으로 설정 됩니다 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>This event is used to track and store row height information so that it can be restored after a sorting operation.</source>
          <target state="translated">이 이벤트는 추적 및 정렬 작업 후 복원할 수 있도록 행 높이 정보를 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>To restore height information, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event.</source>
          <target state="translated">높이 정보를 복원 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>Note that this event occurs only when the user changes the height of a row.</source>
          <target state="translated">Note이 이벤트가 사용자 행의 높이 변경 하는 경우에 발생 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>If you change the height of a row programmatically, you must store the new height information at the same time.</source>
          <target state="translated">프로그래밍 방식으로 행의 높이 변경 하면 동시에 새 높이 정보를 저장 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowLeave">
          <source>Occurs when a row loses input focus and is no longer the current row.</source>
          <target state="translated">행이 입력 포커스를 잃어 더 이상 현재 행이 아닐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowLeave">
          <source>The following code example illustrates how to handle this event to change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> property of the cells in the current row.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A&gt;</ph> 현재 행에 있는 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowLeave">
          <source>In this example, the background color is set in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowEnter&gt;</ph> event, then reset to <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowLeave&gt;</ph> event.</source>
          <target state="translated">이 예제에서는 명령 프롬프트 창의 배경색 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowEnter&gt;</ph> 다음으로 다시 설정 이벤트 <ph id="ph2">&lt;xref:System.Drawing.Color.Empty&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowLeave">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and ensure that all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /&gt;</ph> property for a row changes.</source>
          <target state="translated">행의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph> is painted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph>가 칠해진 후에 발생합니다.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>You can handle this event alone or in combination with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> event to customize the appearance of rows in the control.</source>
          <target state="translated">단독으로 또는 함께에서이 이벤트를 처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> 컨트롤의 행의 모양을 사용자 지정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs&gt;</ph> class to paint other parts:</source>
          <target state="translated">직접 또는 행의 특정 부분 전체 행을 그릴 수 있으며의 다음 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs&gt;</ph> 다른 부분을 그릴 클래스:</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> 현재 테마를 사용 하 여 표준 컨트롤을 그리는 데 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>비주얼 스타일을 사용 하 여 컨트롤 렌더링<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">사용 중인 경우 <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>를 함께 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>The following code example demonstrates how to use a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> event to paint textual content that spans the entire row below the normal cell values.</source>
          <target state="translated">다음 코드 예제에 대 한 처리기를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> 아래의 일반 셀 값 전체 행에 걸쳐 있는 텍스트 콘텐츠를 그리는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPostPaint">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>Occurs before a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph> is painted</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph>가 칠해지기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>You can handle this event alone or in combination with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> event to customize the appearance of rows in the control.</source>
          <target state="translated">단독으로 또는 함께에서이 이벤트를 처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> 컨트롤의 행의 모양을 사용자 지정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs&gt;</ph> class to paint other parts:</source>
          <target state="translated">직접 또는 행의 특정 부분 전체 행을 그릴 수 있으며의 다음 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs&gt;</ph> 다른 부분을 그릴 클래스:</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> 현재 테마를 사용 하 여 표준 컨트롤을 그리는 데 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>비주얼 스타일을 사용 하 여 컨트롤 렌더링<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">사용 중인 경우 <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>를 함께 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>The following code example demonstrates how to use a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> event to paint a gradient row background if the row is selected.</source>
          <target state="translated">다음 코드 예제에 대 한 처리기를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> 행을 선택한 경우 그라데이션 행 배경을 그리는 데 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowPrePaint">
          <source>This example is part of a larger example available in <bpt id="p1">[</bpt>How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Gets a collection that contains all the rows in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 모든 행을 포함하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph> that contains all the rows in the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 모든 행을 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRowCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to manually populate a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control instead of binding it to a data source.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 수동으로 구성할 컬렉션을 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 데이터 소스에 바인딩하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>The following example shows you how to manually add and insert rows.</source>
          <target state="translated">다음 예제에서는 수동으로 추가 하 고 행을 삽입 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>This example assumes that you have added four <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> instances to the control's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
          <target state="translated">이 예에서는 4 개를 추가 했다고 가정 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> 를 컨트롤의 인스턴스 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>For a detailed example that programmatically populates an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, see the Example section.</source>
          <target state="translated">자세한 예제를 프로그래밍 방식으로 바인딩되지 않은 채우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 "예" 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Rows include style information in addition to cell values.</source>
          <target state="translated">셀 값과 함께 스타일 정보를 포함 하는 행입니다.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>For this reason, you might want to add or insert rows based on existing rows that you have already styled.</source>
          <target state="translated">이러한 이유로 추가 하거나 이미 스타일의 기존 행을 기준으로 행을 삽입 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>You can do this using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하 여 수행할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to modify the values in the control or to remove rows.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션 컨트롤의 값을 수정 하거나 행을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>You can modify values or remove rows regardless of whether the control is bound to an external data source.</source>
          <target state="translated">값을 수정 하거나 컨트롤이 외부 데이터 원본에 바인딩되어 있는지 여부에 관계 없이 행을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>If there is a data source, the changes are made directly to the data source.</source>
          <target state="translated">없을 경우 데이터 원본, 데이터 원본에 직접 변경 내용이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>You may still need to push the data source updates to a remote database, however.</source>
          <target state="translated">그러나 원격 데이터베이스를 데이터 소스 업데이트를 강제 계속 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에 데이터 바인딩<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>The following example shows you how to modify cell values programmatically.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 셀 값을 수정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>In addition to the standard collection capabilities, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to retrieve information about rows.</source>
          <target state="translated">표준 컬렉션 기능 외에도 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 행에 대 한 정보를 검색 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A&gt;</ph> method to determine the state of a particular row.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A&gt;</ph> 메서드는 특정 행의 상태를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A&gt;</ph> methods to determine the number of rows or the combined height of rows in a particular state.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A&gt;</ph> 행의 수 나 특정 상태에 있는 행의 높이 합한 값을 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>To retrieve the index of a row with a particular state, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A&gt;</ph> methods.</source>
          <target state="translated">특정 상태에 있는 행의 인덱스를 검색 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>The following example shows you how to retrieve the index of the first selected row, and then use it to programmatically delete the row.</source>
          <target state="translated">다음 예제에서는 첫 번째 선택한 행의 인덱스를 검색 한를 사용 하 여 프로그래밍 방식으로 행을 삭제 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>To improve performance, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> property can include shared and unshared rows.</source>
          <target state="translated">성능을 향상 시키기 위해는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 속성 향상을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Shared rows share memory to reduce the cost of a large record set.</source>
          <target state="translated">공유 행 큰 레코드 집합의 비용을 줄이기 위해 메모리를 공유 합니다.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>If your record set is very large, you should be careful to keep the rows shared as much as possible when accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> property.</source>
          <target state="translated">사용자 레코드 집합이 매우 크면 각별한 주의가 액세스할 때 행이 공유를 최대한 많이 유지 하 고 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>The following code example demonstrates how to create an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>; set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> properties; and use the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에 바인딩되지 않은 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>설정;는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> 속성 및 사용 하 여는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>It also demonstrates how to use a version of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> methods to properly size the column headers and the rows.</source>
          <target state="translated">버전을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> 메서드 제대로 열 머리글 및 행 크기를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>To run this example, paste the following code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and a button named <ph id="ph3">`Button1`</ph>, and then call the <ph id="ph4">`InitializeDataGridView`</ph> method from the form's constructor or <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 이라는 버튼 <ph id="ph3">`Button1`</ph>, 다음 호출에서 <ph id="ph4">`InitializeDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기.</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Rows">
          <source>Ensure all events are connected with their event handlers.</source>
          <target state="translated">해당 이벤트 처리기와 연결 된 모든 이벤트를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>Occurs after a new row is added to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에 새 행이 추가된 후에 발생합니다.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>Rows in the control are not automatically sorted when new rows are added.</source>
          <target state="translated">컨트롤의 행은 새 행을 추가할 때 자동으로 정렬 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>To sort new rows into their correct position, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsAdded&gt;</ph> event handler.</source>
          <target state="translated">올바른 위치에 새 행을 정렬 하려면 호출는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsAdded&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>When the user adds a new row using the row for new records, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> value in the handler for this event is equal to the index of the new location of the row for new records, which is one greater than the row just added.</source>
          <target state="translated">사용자는 행을 사용 하 여 새 레코드에 대 한 새 행을 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType&gt;</ph> 방금 추가한 행 보다 큰 1이 이벤트는 새 레코드에 대 한 행의 새 위치 인덱스 같음에 대 한 처리기에서 값입니다.</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>When you add rows programmatically, however, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A&gt;</ph> value is the index of the first row added.</source>
          <target state="translated">그러나 행을 추가할 때 프로그래밍 방식으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A&gt;</ph> 값은 추가 된 첫 번째 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>In virtual mode, this event occurs before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event and can be used to create new records in your data store that you can then populate in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event handler.</source>
          <target state="translated">가상 모드에이 이벤트가 발생 하기 전에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트에서 채울 수 있는 데이터 저장소에 새 레코드를 만드는 데 사용할 수 있습니다 및는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsAdded&gt;</ph> event to increment the number of rows in a virtual <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsAdded&gt;</ph> 가상의 행 수를 늘리려면 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>The number of rows is used in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> handler so it knows when to show a blank cell versus an initialized cell for a new row.</source>
          <target state="translated">행의 수에 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 처리기 및 새 행에 대 한 초기화 된 셀의 빈 셀을 표시 하는 시기를 알 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsAdded">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> reference topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 참조 항목입니다.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>Gets or sets the default style applied to the row cells of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 행 셀에 적용되는 기본 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph> to apply to the row cells of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 행 셀에 적용할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewCellStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀으로 표시 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> 스타일 형식의 다른 속성에서 상속 하는 속성 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>For cells in all rows, excluding header cells, the styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property override the styles specified through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties, and are overridden by the styles specified through the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">모든 행의 셀에 대 한 머리글 셀을 제외한 통해 지정 된 스타일의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> 속성을 통해 지정 된 스타일을 재정의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성은 를통해지정된스타일에의해재정의및<ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 셀 스타일<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
          <target state="translated">이 속성을 가져올 때 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 이며 기본값은 값이 생성 됩니다는 속성에 아직 액세스 하지 않은 경우.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>This can cause a performance impact when getting this property for many rows.</source>
          <target state="translated">행의 수에 대 한이 속성을 가져올 때 성능 저하를 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
          <target state="translated">가능 하면 단일 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 여러 행에 대해이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>The following code example illustrates how to use this property to create a ledger effect in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는의 원장 효과를 만들려면이 속성을 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>This event occurs when a property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
          <target state="translated">이 이벤트가 발생할 때의 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> 속성을 새 값으로 설정 되어 되거나는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> 속성이 새 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowsRemoved">
          <source>Occurs when a row or rows are deleted from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 행이 삭제될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsRemoved">
          <source>When rows are deleted from a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, the index numbers of subsequent rows are lowered to compensate.</source>
          <target state="translated">행을 삭제 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 다음 행의 인덱스 번호는 낮아집니다.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsRemoved">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsRemoved">
          <source>The following code example demonstrates how to use this event to update the values in a balance column of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트의 균형 열에 값을 업데이트를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowsRemoved">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>Occurs when a row changes state, such as losing or gaining input focus.</source>
          <target state="translated">입력 포커스를 잃거나 얻는 것과 같이 행의 상태가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowStateChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowStateChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowStateChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowStateChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>Gets or sets the row that represents the template for all the rows in the control.</source>
          <target state="translated">컨트롤에 있는 모든 행의 템플릿을 나타내는 행을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph> representing the row template.</source>
          <target state="translated">행 템플릿을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>Sometimes you want greater control over the appearance of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> rows than what is provided by the various <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> cell style properties.</source>
          <target state="translated">모양 보다 더 잘 제어 하려는 경우에 따라 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 다양 한에서 제공 하는 것 보다 행 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 셀 스타일 속성입니다.</target>       </trans-unit>
        <trans-unit id="3569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> property lets you create and initialize a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> for use as a template by all rows, including the row for new records if <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> 속성을 사용 하면 만들어 초기화할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> 모든 행에 대 한 템플릿으로 사용을 포함 하 여 새 레코드에 대 한 행 하는 경우 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> 은 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>This is useful when you are setting default values for properties such as row height.</source>
          <target state="translated">행 높이 같은 속성에 대 한 기본값을 설정 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>For example, you may want to increase the default row height in order to provide extra room beneath ordinary cell content for displaying content that spans multiple columns.</source>
          <target state="translated">예를 들어 여러 열에 걸쳐 있는 콘텐츠를 표시 하기 위한 일반 셀 내용 아래에 추가적인 공간을 제공 하기 위해 기본 행 높이 늘려야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>Setting the row template is necessary when external data is displayed using custom types derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> class.</source>
          <target state="translated">행 템플릿의 설정에서 파생 된 사용자 지정 형식을 사용 하 여 외부 데이터가 표시 되 면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>With unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls, you can programmatically populate the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection with instances of your custom row type.</source>
          <target state="translated">바인딩되지 않은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 프로그래밍 방식으로 차원을 채울 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 사용자 지정 행 형식의 인스턴스 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>When displaying external data, however, the rows are generated automatically, but they are based on the row template, which you can set to an instance of your custom row type.</source>
          <target state="translated">그러나 외부 데이터를 표시할 때 행은 자동으로 생성 되지만 사용자 사용자 지정 행 형식의 인스턴스로 설정할 수 있는 행 서식 파일에 기반 합니다.</target>       </trans-unit>
        <trans-unit id="3575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>If this property has not been set the first time you retrieve its value, a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> is created and returned.</source>
          <target state="translated">이 속성이 해당 값을 검색 하는 처음으로 설정 되지 않은 경우 새 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> 가 만들어져 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>The following code example illustrates how to use the row template to specify an initial row height and a minimum row height.</source>
          <target state="translated">다음 코드 예제에서는 템플릿을 사용 하 여 행 초기 행 높이 및 최소 행 높이 지정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3577" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.RowTemplate">
          <source>The specified row when setting this property has its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /&gt;</ph> property set.</source>
          <target state="translated">이 속성을 설정할 때 지정된 행이 해당 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /&gt;</ph> 속성 집합을 가지는 경우</target>       </trans-unit>
        <trans-unit id="3578" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>Occurs when a row's state changes from shared to unshared.</source>
          <target state="translated">공유에서 비공유로 행의 상태가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>You can use this event during development and testing to help identify code that causes rows to change from a shared to an unshared state.</source>
          <target state="translated">개발 및 테스트 하는 동안 행을 공유에서 공유 되지 않은 상태로 변경 하는 코드를 식별 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>This is useful when scaling the control to display large amounts of data.</source>
          <target state="translated">많은 양의 데이터를 표시 하려면 컨트롤 크기를 조정 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3583" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowUnshared&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowUnshared&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3584" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3585" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3586" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3587" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowUnshared">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowUnshared&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowUnshared&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3588" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowValidated">
          <source>Occurs after a row has finished validating.</source>
          <target state="translated">행의 유효성 검사가 완료된 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="3589" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidated">
          <source>This event is analogous to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event.</source>
          <target state="translated">이 이벤트는 비슷합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidated">
          <source>Use this event to perform post-processing on a row of values.</source>
          <target state="translated">이 이벤트를 사용 하 여 행의 값에 후 처리를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="3591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidated">
          <source>The following code sample uses this event to clear up any error annotations that may have been left behind after validating the row.</source>
          <target state="translated">다음 코드 예제는이 이벤트를 사용 하 여 행을 확인 한 후 남아 수 있습니다 오류 주석을 문제를 해결 합니다.</target>       </trans-unit>
        <trans-unit id="3593" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>Occurs when a row is validating.</source>
          <target state="translated">행의 유효성을 검사하는 도중에 발생합니다.</target>       </trans-unit>
        <trans-unit id="3594" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>This event is analogous to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">이 이벤트는 비슷합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3595" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>Use this event to perform validation on all the values of a row.</source>
          <target state="translated">이 이벤트를 사용 하 여 행의 모든 값에 대해 유효성 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="3596" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>If the row does not pass validation, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">행 유효성 검사를 통과 하지 못하는 경우에 설정 된 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3597" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>Canceling this event prevents the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidated&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType&gt;</ph> events from occurring, and also prevents the user from leaving the invalid row and prevents the row from being saved to an external data source in data bound mode.</source>
          <target state="translated">이 이벤트를 취소 되지 않도록는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidated&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType&gt;</ph> 이벤트 발생 및 또한 사용자는 잘못 된 행을 종료 하지 못하도록 방지 하며 행 데이터 바인딩된 모드에서 외부 데이터 원본에 저장 되지 않도록 방지 합니다.</target>       </trans-unit>
        <trans-unit id="3598" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3599" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.RowValidating">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidating&gt;</ph> to check if valid track and release dates are entered.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidating&gt;</ph> 유효한 트랙와 릴리스 날짜를 입력 하는 경우를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3600" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>Occurs when the user scrolls through the control contents.</source>
          <target state="translated">사용자가 컨트롤 내용을 스크롤하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3601" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3602" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3603" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3604" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3605" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3606" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3607" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Scroll">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3608" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>Gets or sets the type of scroll bars to display for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 표시할 스크롤 막대의 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBars" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBars" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ScrollBars.Both" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ScrollBars.Both" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>Regardless of the value of this property, scroll bars are shown only when they are needed.</source>
          <target state="translated">이 속성의 값에 관계 없이 필요할 때에 스크롤 막대가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>Use this property to prevent scroll bars from appearing.</source>
          <target state="translated">스크롤 막대를 표시 하지 않으려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>This is useful, for example, when you want to provide an alternative user interface (UI) for scrolling.</source>
          <target state="translated">예를 들어 스크롤에 대 한 대체 사용자 인터페이스 (UI)를 제공 하려는 경우 유용, 합니다.</target>       </trans-unit>
        <trans-unit id="3614" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBars" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBars" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="3615" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ScrollBars">
          <source>The value of this property cannot be set because the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> is unable to scroll due to a cell change that cannot be committed or canceled.</source>
          <target state="translated">커밋 또는 취소할 수 없는 셀 변경으로 인해 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>가 스크롤할 수 없기 때문에 이 속성의 값을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3616" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SelectAll">
          <source>Selects all the cells in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 모든 셀을 선택합니다.</target>       </trans-unit>
        <trans-unit id="3617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SelectAll">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in column-selection mode and this method is called, each column's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and each row's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 은 열 선택 모드 및이 메서드가 호출 되 면 각 열의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>, 되며 각 행의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 속성이로 설정 된 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SelectAll">
          <source>Conversely, when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in row-selection mode and this method is called, each row's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and each column's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">반대로,는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 은 행 선택 모드와이 메서드가 호출 되 면 각 행의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>, 되며 각 열의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SelectAll">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectAll%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectAll%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="3620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SelectAll">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph4">`selectAllButton`</ph>, and ensure all events are associated with their event handlers.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 라는 <ph id="ph4">`selectAllButton`</ph>, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3621" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>Gets the collection of cells selected by the user.</source>
          <target state="translated">사용자가 선택한 셀의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" /&gt;</ph> that represents the cells selected by the user.</source>
          <target state="translated">사용자가 선택한 셀을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> property is always populated regardless of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 속성에 관계 없이 항상 채워진는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
          <target state="translated">이 속성은 참조 될 때에 선택 항목의 읽기 전용 스냅숏을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="3625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
          <target state="translated">이 컬렉션의 복사본을 유지 하는 경우 달라질 수 있으므로, 실제에서 후속 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 상태는 사용자 변경 수 있습니다 선택 합니다.</target>       </trans-unit>
        <trans-unit id="3626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>Therefore, you should not operate on a copy of the collection.</source>
          <target state="translated">따라서 컬렉션의 복사본에서 작동 하지 있습니다.</target>       </trans-unit>
        <trans-unit id="3627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection to find the sum of the values in the selection.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> 컬렉션 선택 영역에 값의 합계를 찾으려고 합니다.</target>       </trans-unit>
        <trans-unit id="3628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>In the example, this collection is iterated through and the valid values are added to the sum, which is displayed in a label.</source>
          <target state="translated">예제에서는이 컬렉션을 통해 반복 하 고 유효한 값 레이블에 표시 되는 합계에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedCells">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3630" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>Gets the collection of columns selected by the user.</source>
          <target state="translated">사용자가 선택한 열의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" /&gt;</ph> that represents the columns selected by the user.</source>
          <target state="translated">사용자가 선택한 열을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> property to be populated with selected columns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성으로 설정 되어 있어야 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType&gt;</ph> 에 대 한는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> 속성을 채울 열을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="3633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
          <target state="translated">이 속성은 참조 될 때에 선택 항목의 읽기 전용 스냅숏을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="3634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
          <target state="translated">이 컬렉션의 복사본을 유지 하는 경우 달라질 수 있으므로, 실제에서 후속 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 상태는 사용자 변경 수 있습니다 선택 합니다.</target>       </trans-unit>
        <trans-unit id="3635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>Therefore, you should not operate on a copy of the collection.</source>
          <target state="translated">따라서 컬렉션의 복사본에서 작동 하지 있습니다.</target>       </trans-unit>
        <trans-unit id="3636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> property to get the selected column in a programmatic sort.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> 프로그래밍 방식 정렬에서 선택된 된 열을 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="3637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedColumns">
          <source>In this example, this property is used in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method to determine the direction of the sort.</source>
          <target state="translated">이 예제에서는이 속성이에 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 정렬 방향을 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="3638" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>Gets the collection of rows selected by the user.</source>
          <target state="translated">사용자가 선택한 행의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" /&gt;</ph> that contains the rows selected by the user.</source>
          <target state="translated">사용자가 선택한 행이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> property to be populated with selected rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성으로 설정 되어 있어야 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> 에 대 한는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> 속성을 채울 수을 행을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="3641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
          <target state="translated">이 속성은 참조 될 때에 선택 항목의 읽기 전용 스냅숏을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="3642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
          <target state="translated">이 컬렉션의 복사본을 유지 하는 경우 달라질 수 있으므로, 실제에서 후속 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 상태는 사용자 변경 수 있습니다 선택 합니다.</target>       </trans-unit>
        <trans-unit id="3643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>You should therefore not operate on a copy of the collection.</source>
          <target state="translated">따라서 컬렉션의 복사본에서 작동 해야 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>To programmatically select a row, set its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Selected%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">프로그래밍 방식으로 행을 선택 하려면 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Selected%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>In this example, if the first row is contained in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> collection, then the deletion is canceled.</source>
          <target state="translated">이 예제에서는 첫 번째 행에 포함 된 경우에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> 컬렉션 다음 삭제 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="3647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectedRows">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3648" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>Occurs when the current selection changes.</source>
          <target state="translated">현재 선택이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3649" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>This event occurs whenever cells are selected or the selection is canceled, whether programmatically or by user action.</source>
          <target state="translated">이 이벤트는 셀이 선택 되거나 프로그래밍 방식으로 또는 사용자 작업에 의해 선택이 취소 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="3650" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>For example, this event is useful when you want display the sum of the currently selected cells.</source>
          <target state="translated">예를 들어이 이벤트는 현재 선택 된 셀의 합계를 표시 하려는 경우 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3651" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>When you change the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event occurs before the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> event.</source>
          <target state="translated">값을 변경 하면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트가 발생 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3652" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>Any <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event handler accessing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property at this time will get its previous value.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트 처리기에 액세스 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 이 이번에는 속성은 이전 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3653" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3654" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>The following code example demonstrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3655" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SelectionChanged">
          <source>In the example, the form displays the sum of values in the selected cells, and updates the sum when the selection changes.</source>
          <target state="translated">예제에서는 폼에 선택된 된 셀 값의 합계를 표시 하 고 선택 하면 합계를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="3656" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>Gets or sets a value indicating how the cells of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> can be selected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 셀 선택 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>Changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property clears the current selection.</source>
          <target state="translated">값을 변경는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 현재 선택을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="3660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>In addition, the code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">코드 예제에서는 설정 하는 방법을 보여 줍니다 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>To run this example, paste the code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>, and then call the <ph id="ph3">`SetUpDataGridView`</ph> method from the form's constructor or <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>, 한 다음 호출는 <ph id="ph3">`SetUpDataGridView`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="3664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /&gt;</ph> value.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="3665" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SelectionMode">
          <source>The specified value when setting this property is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" /&gt;</ph> and the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /&gt;</ph> property of one or more columns is set to <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정할 때 지정된 값이 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" /&gt;</ph>이고 하나 이상의 열에 대한 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /&gt;</ph> 속성이 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" /&gt;</ph>으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="3666" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3667" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3668" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3669" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3670" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3671" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This member overrides <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>.</source>
          <target state="translated">이 멤버는 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="3672" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>One or both of the width or height values exceeds the maximum value of 8,388,607.</source>
          <target state="translated">너비 또는 높이 값 중 하나 또는 둘 다 최대값인 8,388,607을 초과합니다.</target>       </trans-unit>
        <trans-unit id="3673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The index of the column containing the cell.</source>
          <target state="translated">셀이 포함된 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The index of the row containing the cell.</source>
          <target state="translated">셀이 포함된 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3675" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the new current cell the anchor cell for a subsequent multicell selection using the SHIFT key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Shift 키를 사용하여 새로운 현재 셀을 후속 다중 셀 선택에 대한 앵커 셀로 만들려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3676" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to validate the value in the old current cell and cancel the change if validation fails; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이전 현재 셀의 값에 대한 유효성을 검사하여 검사가 실패하는 경우 변경을 취소하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3677" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current cell is being set as a result of a mouse click; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">마우스 클릭으로 현재 셀이 설정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3678" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>Sets the currently active cell.</source>
          <target state="translated">현재 활성 셀을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3679" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current cell was successfully set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 셀이 성공적으로 설정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the current cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 현재 셀이 변경 될 때마다이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>This method changes the current cell without changing the selection and optionally without validating the previous cell or changing the selection anchor cell.</source>
          <target state="translated">이 메서드는 선택 영역을 변경 하지 않고 및 필요에 따라 이전 셀의 유효성 검사 또는 선택 영역 앵커 셀을 변경 하지 않고 현재 셀을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="3682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The anchor cell is the first cell of a block of multiple cells that the user can select by holding down the SHIFT key and clicking the last cell of the block.</source>
          <target state="translated">앵커 셀은 사용자가 SHIFT 키를 누른 채 블록의 마지막 셀을 클릭 하 여 선택할 수 있는 여러 셀의 블록의 첫 번째 셀입니다.</target>       </trans-unit>
        <trans-unit id="3683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>If <ph id="ph1">`rowIndex`</ph> and <ph id="ph2">`columnIndex`</ph> are both -1, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`rowIndex`</ph> 및 <ph id="ph2">`columnIndex`</ph> 은 모두-1은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성에서 반환 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1, and <ph id="ph2">&lt;paramref name="rowIndex" /&gt;</ph> is not -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 크고 <ph id="ph2">&lt;paramref name="rowIndex" /&gt;</ph>가 -1이 아닌 경우</target>       </trans-unit>
        <trans-unit id="3685" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3686" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1, and <ph id="ph2">&lt;paramref name="columnIndex" /&gt;</ph> is not -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 크고 <ph id="ph2">&lt;paramref name="columnIndex" /&gt;</ph>가 -1이 아닌 경우</target>       </trans-unit>
        <trans-unit id="3687" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The specified cell has a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /&gt;</ph> property value of <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /&gt;</ph> 속성 값이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3688" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3689" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>This method was called for a reason other than the underlying data source being reset, and another thread is currently executing this method.</source>
          <target state="translated">이 메서드가 기본 데이터 원본 다시 설정 이외의 이유로 호출되었으며 다른 스레드가 현재 이 메서드를 실행하고 있습니다.</target>       </trans-unit>
        <trans-unit id="3690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <source>The new current cell tried to enter edit mode, but its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> property does not indicate a class that derives from <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and implements <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>.</source>
          <target state="translated">새로운 현재 셀이 편집 모드로 전환되려고 할 때 셀의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>에서 파생되고 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /&gt;</ph>을 구현하는 클래스를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="3691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>The index of the column containing the cell.</source>
          <target state="translated">셀이 포함된 열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3692" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>The index of the row containing the cell.</source>
          <target state="translated">셀이 포함된 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3693" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to select the cell; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cancel the selection of the cell.</source>
          <target state="translated">셀을 선택하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 셀의 선택을 취소하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3694" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>Changes the selection state of the cell with the specified row and column indexes.</source>
          <target state="translated">지정된 행 및 열 인덱스를 사용하여 셀의 선택 상태를 변경합니다.</target>       </trans-unit>
        <trans-unit id="3695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 셀의 선택 상태가 변경 될 때마다이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
          <target state="translated">현재 관계 없이 선택 상태 변경을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값을 변경 하지 않고도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>This is useful when you want to implement your own selection modes.</source>
          <target state="translated">직접 선택 모드를 구현 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3698" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="3699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="3701" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source>The index of the column.</source>
          <target state="translated">열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3702" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to select the column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cancel the selection of the column.</source>
          <target state="translated">열을 선택하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 열의 선택을 취소하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3703" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source>Changes the selection state of the column with the specified index.</source>
          <target state="translated">지정된 인덱스를 사용하여 열의 선택 상태를 변경합니다.</target>       </trans-unit>
        <trans-unit id="3704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a column.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 열의 선택 상태를 변경할 때마다이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
          <target state="translated">현재 관계 없이 선택 상태 변경을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값을 변경 하지 않고도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source>This is useful when you want to implement your own selection modes.</source>
          <target state="translated">직접 선택 모드를 구현 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3707" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="3708" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source>The index of the row.</source>
          <target state="translated">행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to select the row; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cancel the selection of the row.</source>
          <target state="translated">행을 선택하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 행의 선택을 취소하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source>Changes the selection state of the row with the specified index.</source>
          <target state="translated">지정된 인덱스를 사용하여 행의 선택 상태를 변경합니다.</target>       </trans-unit>
        <trans-unit id="3711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤은 행의 선택 상태가 변경 될 때마다이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
          <target state="translated">현재 관계 없이 선택 상태 변경을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> 속성 값을 변경 하지 않고도 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="3713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source>This is useful when you want to implement your own selection modes.</source>
          <target state="translated">직접 선택 모드를 구현 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="3714" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="3715" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ShowCellErrors">
          <source>Gets or sets a value indicating whether to show cell errors.</source>
          <target state="translated">셀 오류 표시 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a red glyph will appear in a cell that fails validation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효성 검사를 실패한 셀에 빨간색 문자 모양을 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellErrors">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3718" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>Gets or sets a value indicating whether or not ToolTips will show when the mouse pointer pauses on a cell.</source>
          <target state="translated">마우스 포인터가 셀 위에 잠시 멈춰 있을 때 도구 설명을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if cell ToolTips are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">도구 모음이 활성화되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>When the value of this property is <ph id="ph1">`true`</ph> and the mouse pointer is over a cell, the cell displays a ToolTip when one of the following conditions is met:</source>
          <target state="translated">이 속성의 값이 <ph id="ph1">`true`</ph> 및 마우스 포인터가 셀, 셀 다음 조건 중 하나가 충족 될 때 도구 설명이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not <ph id="ph2">`null`</ph> or the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph4">`true`</ph>, and a handler for the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event sets the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> property to a value other than <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성은 없습니다 <ph id="ph2">`null`</ph> 또는 값을는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph4">`true`</ph>, 및에 대 한 처리기는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트 설정은 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType&gt;</ph> 속성 이외의 값을 <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property of the cell has a value other than <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> 셀의 속성에 값 이외의 다른 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>Setting this property has no effect when there is a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event handler because getting the value of the property automatically raises the event and returns the ToolTip text specified in the event handler.</source>
          <target state="translated">없는 경우이 속성을 설정 해도 효과가 없습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> 이벤트 처리기 속성의 값을 자동으로 가져오기 때문에 이벤트를 발생 하 고 도구 설명 텍스트 이벤트에 지정 처리기를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="3724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>The cell value is truncated in the cell display.</source>
          <target state="translated">셀 값 셀 디스플레이에서 잘립니다.</target>       </trans-unit>
        <trans-unit id="3725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowCellToolTips">
          <source>When the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property value is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the full value of the truncated cell value is displayed in the ToolTip.</source>
          <target state="translated">때 셀의 값 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> 속성 값은 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, 잘린된 셀 값의 전체 값의 도구 설명에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3726" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>Gets or sets a value indicating whether or not the editing glyph is visible in the row header of the cell being edited.</source>
          <target state="translated">편집 중인 셀의 행 머리글에 편집 문자 모양을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the editing glyph is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집 문자 모양이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The row header will display an editing glyph that looks like a pencil when the current cell is in edit mode and the user has made changes to the cell.</source>
          <target state="translated">행 머리글에는 모양의 연필 현재 셀이 편집 모드 및 사용자가 변경한 셀에 편집 문자 모양이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The editing glyph is colored by using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of the row header cell.</source>
          <target state="translated">편집 문자를 사용 하 여 색이 지정 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> 행 머리글 셀의 속성입니다.</target>       </trans-unit>
        <trans-unit id="3731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The glyph is not rendered if there is not enough space to display it completely.</source>
          <target state="translated">완전히 표시할 수 있는 공간이 없는 경우에 문자 모양을 렌더링 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>For example, if the row header cell has its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property set, the glyph is removed if there is not enough room for both the text and glyph.</source>
          <target state="translated">예를 들어, 행 머리글 셀에 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> 텍스트와 문자 모양에 대 한 공간이 충분 하지 않은 경우에 속성 집합에 문자 모양을 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="3733" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The display of the editing glyph is controlled by the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> property in virtual mode.</source>
          <target state="translated">편집 문자 모양이 표시 되는 값에 의해 제어 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> 가상 모드에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="3734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>Otherwise, it is controlled by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> property.</source>
          <target state="translated">그렇지 않으면 의해 제어 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>The standard glyph is not publicly exposed.</source>
          <target state="translated">표준 기호 공개적으로 노출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowEditingIcon">
          <source>To customize the glyph, you can create a custom <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> class.</source>
          <target state="translated">문자 모양이 사용자 지정 하려면 사용자 지정을 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3737" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>Gets or sets a value indicating whether row headers will display error glyphs for each row that contains a data entry error.</source>
          <target state="translated">데이터 입력 오류가 있는 각 행에 대해 행 머리글에 오류 문자 모양을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph> indicates there is an error; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridViewRow" /&gt;</ph>에서 오류가 있음을 나타내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> property indicates if there is an error in one of the cells in a row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 속성 하나는 행의 셀에 오류가 인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> is set to a value other than <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>, then an error glyph (<bpt id="p1">![</bpt>ErrorProvider icon<ept id="p1">]</ept><bpt id="p2">(~/add/media/vberrorprovidericon.gif "</bpt>ErrorProvider icon<ept id="p2">")</ept>) is shown in the row header.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> 이외의 값으로 설정 된 <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>, 오류 문자 모양과 다음 (<bpt id="p1">![</bpt>ErrorProvider 아이콘<ept id="p1">]</ept><bpt id="p2">(~/add/media/vberrorprovidericon.gif "</bpt>ErrorProvider 아이콘<ept id="p2">")</ept>) 행 머리글에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>The default width of the row header includes enough room to display the error glyph, whether or not the glyph is displayed.</source>
          <target state="translated">행 머리글의 기본 너비는 기호가 표시 되는 여부 오류 문자를 표시 하려면 충분 한 공간을 가집니다.</target>       </trans-unit>
        <trans-unit id="3743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>If the row header size is adjusted so that there is not enough space to display the glyph completely, the glyph is not rendered.</source>
          <target state="translated">기호를 완전히 표시에 공간이 부족 되도록 행 머리글 크기 조정 하는 경우에 문자 모양을 렌더링 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>Because row headers can display both text and glyphs, header content is displayed by priority, as follows:</source>
          <target state="translated">행 머리글 텍스트와 문자를 표시할 수 있으므로 헤더 내용은 우선 순위에 따라 다음과 같이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>Text displayed in the row header cell.</source>
          <target state="translated">행 머리글 셀에 표시할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="3746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>The editing glyph.</source>
          <target state="translated">편집 문자입니다.</target>       </trans-unit>
        <trans-unit id="3747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>The error glyph.</source>
          <target state="translated">오류 문자 모양입니다.</target>       </trans-unit>
        <trans-unit id="3748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>For example, if the row width is decreased, the error glyph disappears first, then the standard glyph, then text.</source>
          <target state="translated">예를 들어 행 너비를 줄이면 표준 기호 다음, 다음 텍스트 오류 문자 먼저 사라집니다.</target>       </trans-unit>
        <trans-unit id="3749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.ShowRowErrors">
          <source>Advanced users can customize the error glyph by developing a custom <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> class.</source>
          <target state="translated">고급 사용자 오류 문자를 사용자 지정할 수는 사용자 지정을 개발 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3750" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Sorts the contents of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 내용을 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3751" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>An implementation of <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> that performs the custom sorting operation.</source>
          <target state="translated">사용자 지정 정렬 작업을 수행하는 <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>의 구현입니다.</target>       </trans-unit>
        <trans-unit id="3752" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>Sorts the contents of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control using an implementation of the <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 인터페이스의 구현을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 내용을 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>This method allows advanced customization of the sorting feature of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
          <target state="translated">이 메서드를 사용 하면 고급 사용자 지정의 정렬 기능에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>In order to implement a highly customized sorting operation, you can write an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick&gt;</ph> event and call this method with an instance of a class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer?displayProperty=nameWithType&gt;</ph> interface as a parameter.</source>
          <target state="translated">고도로 사용자 지정 된 정렬 작업을 구현 하려면에 대 한 이벤트 처리기를 작성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick&gt;</ph> 이벤트 구현 하는 클래스의 인스턴스를 사용 하 여이 메서드를 호출 하 고는 <ph id="ph2">&lt;xref:System.Collections.IComparer?displayProperty=nameWithType&gt;</ph> 인터페이스를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="3755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>In this case, you will typically set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph> to disable automatic sorting and to leave room for a sorting glyph.</source>
          <target state="translated">이 경우에 일반적으로 설정한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph> 자동 정렬은 사용 하지 않도록 설정 하 고 정렬 문자에 대 한 공간 남겨 합니다.</target>       </trans-unit>
        <trans-unit id="3756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>When sorting by columns set to programmatic sort mode, you must display the sorting glyph yourself by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">프로그래밍 방식 정렬 모드로 설정 하는 열을 기준으로 정렬할 때 정렬 문자를 직접 표시 해야 설정 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>This method works only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not set.</source>
          <target state="translated">경우에만 사용할 수 있는이 방법의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="3758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>When you bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to an external data source, you must use the sorting operations provided by that data source.</source>
          <target state="translated">바인딩하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 외부 데이터 원본에 해당 데이터 원본에서 제공 하는 정렬 작업을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>When you provide your own data source by implementing virtual mode, you must also handle the sorting operations yourself.</source>
          <target state="translated">가상 모드 구현 하 여 사용자 지정 데이터 소스를 제공 하는 경우 또한 정렬 작업이 직접 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>Calling this method automatically sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이 메서드를 집합이 자동으로 호출 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> 속성을 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method overload in a multiple column sort scenario.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 여러 열 정렬 시나리오에서 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="3762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface is implemented in the <ph id="ph2">`RowComparer`</ph> class.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> 인터페이스에서 구현 되는 <ph id="ph2">`RowComparer`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="3763" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3764" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph>이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="3765" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3766" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="3767" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The column by which to sort the contents of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 내용을 정렬할 기준이 되는 열입니다.</target>       </trans-unit>
        <trans-unit id="3768" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3769" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>Sorts the contents of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control in ascending or descending order based on the contents of the specified column.</source>
          <target state="translated">지정된 열의 내용을 기준으로 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 내용을 오름차순이나 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>This method sorts the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> by comparing values in the specified column.</source>
          <target state="translated">이 메서드는의 내용을 정렬 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 지정 된 열의 값을 비교 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="3771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>By default, the sort operation will use the <ph id="ph1">&lt;xref:System.Collections.Comparer.Compare%2A&gt;</ph> method to compare pairs of cells in the column using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">정렬 작업이 기본적으로 사용 된 <ph id="ph1">&lt;xref:System.Collections.Comparer.Compare%2A&gt;</ph> 메서드를 사용 하 여 열에 있는 셀의 쌍을 비교는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>For columns with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> properties are set automatically and the appropriate sorting glyph is displayed.</source>
          <target state="translated">열에 대 한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성이로 설정 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> 속성이 자동으로 설정 되 고 적절 한 정렬 문자 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="3773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>For columns with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">열에 대 한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성이로 설정 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph>를 통해 직접 정렬 문자를 표시 해야 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>You can customize the sorting operation used by this method by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
          <target state="translated">처리 하 여이 메서드에서 사용 되는 정렬 작업을 사용자 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has not been set.</source>
          <target state="translated">이 이벤트는 발생만 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="3776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has been set, this method works for data-bound columns only.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성이 설정 되어,이 방법은 데이터 바인딩된 열에 대해서만 작동 합니다.</target>       </trans-unit>
        <trans-unit id="3777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>Data-bound columns have had their <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> property set.</source>
          <target state="translated">데이터 바인딩된 열에는 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType&gt;</ph> 속성 집합입니다.</target>       </trans-unit>
        <trans-unit id="3778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>This causes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType&gt;</ph> property to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 인해는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType&gt;</ph> 반환할 속성 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control contains both bound and unbound columns, you must implement virtual mode to maintain the values of the unbound columns when the control is sorted by a bound column.</source>
          <target state="translated">경우에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 바인딩된 및 바인딩되지 않은 열을 포함 하는 컨트롤, 바인딩된 열에서 컨트롤 정렬 될 때 바인딩되지 않은 열의 값을 유지 하기 위해 가상 모드 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>You can do this by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and handling the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event.</source>
          <target state="translated">설정 하 여이 수행할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 및 처리는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>If the column is editable, you should also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event.</source>
          <target state="translated">열이 편집할 수를 처리 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">가상 모드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 가상 모드 구현<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>Sorting by unbound columns when the control is data-bound is not supported.</source>
          <target state="translated">컨트롤이 데이터 바인딩된 경우 바인딩되지 않은 열에서 정렬이 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> in a programmatic sort.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 프로그래밍 방식으로 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="3785" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The specified column is not part of this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated">지정된 열이 이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 일부가 아닌 경우</target>       </trans-unit>
        <trans-unit id="3786" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3787" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property has been set and the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /&gt;</ph> property of the specified column returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성이 설정되었고 지정된 열의 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환하는 경우</target>       </trans-unit>
        <trans-unit id="3788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source><ph id="ph1">&lt;paramref name="dataGridViewColumn" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataGridViewColumn" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /&gt;</ph> property of the specified column returns <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정되고 지정된 열의 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /&gt;</ph> 속성이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환하는 경우</target>       </trans-unit>
        <trans-unit id="3790" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3791" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The object specified by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property does not implement the <ph id="ph2">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성에 의해 지정된 개체가 <ph id="ph2">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> 인터페이스를 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="3792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)">
          <source>The object specified by the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> property has a <ph id="ph2">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> property value of <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.DataSource" /&gt;</ph> 속성에 의해 지정된 개체에서 <ph id="ph2">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3794" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> compares two cell values to perform a sort operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>가 정렬 작업을 수행하기 위해 두 셀 값을 비교할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3795" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not set and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property value is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">이 이벤트는 발생만 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> 속성이 설정 되지 않은 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성 값은 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3796" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>This event compares pairs of cells in the column being sorted.</source>
          <target state="translated">이 이벤트는 정렬 하 고 열에 있는 셀의 쌍을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="3797" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>It occurs only when the user clicks the header of a column with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>, or when you call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29&gt;</ph> overload.</source>
          <target state="translated">사용자 지정 된 열의 머리글이 클릭할 때 발생 한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>, 호출 하는 경우 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="3798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>When this event occurs for a column with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">지정 된 열에 대해이 이벤트가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>를 통해 직접 정렬 문자를 표시 해야 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>You can use this event to sort rows using the cell values in one column or in multiple columns.</source>
          <target state="translated">하나의 열 또는 여러 열에 셀 값을 사용 하 여 행을 정렬 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A&gt;</ph> properties to compare cell values in the column specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A&gt;</ph> 속성에 지정 된 열에 셀 값을 비교는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A&gt;</ph> properties to access values in other columns through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A&gt;</ph> 속성을 통해 다른 열의 값에에서 액세스 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> in a multiple column sort.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> 여러 열 정렬에서 합니다.</target>       </trans-unit>
        <trans-unit id="3804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.SortCompare">
          <source>This example is part of a larger example provided in <bpt id="p1">[</bpt>How to: Customize Sorting in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">이 예제는 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 정렬 사용자 지정<ept id="p1">](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3805" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control completes a sorting operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤이 정렬 작업을 완료할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>This event does not occur when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the control is sorted by an unbound column.</source>
          <target state="translated">이 이벤트가 발생 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 컨트롤 바인딩되지 않은 열으로 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="3807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>The following code example illustrates how to ensure that the current cell is visible after sorting.</source>
          <target state="translated">다음 코드 예제에는 정렬 한 후 현재 셀이 표시 되도록 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>This code works only with an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">이 코드는 바인딩되지 않은 에서만 작동 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="3810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>With a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control bound to an external data source, the current cell is not automatically persisted when sorting.</source>
          <target state="translated">와 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀 자동으로 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>To run this example, paste the following code into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`dataGridView1`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`dataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.Sorted">
          <source>In C#, you must also connect the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> event to the event handler.</source>
          <target state="translated">C#의 연결도 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sorted&gt;</ph> 이벤트를 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3813" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>Gets the column by which the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> contents are currently sorted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 내용의 현재 정렬 기준이 되는 열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumn" /&gt;</ph> by which the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> contents are currently sorted.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 내용의 현재 정렬 기준이 되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is not sorted, this property will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 정렬 되지 않으면이 속성은 반환 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>When the column indicated by this property has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType&gt;</ph>, it will display a sorting glyph based on the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> property.</source>
          <target state="translated">이 속성에 의해 표시 되는 열에는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType&gt;</ph>의 값에 따라 정렬 문자 모양이 표시 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">인 열의 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType&gt;</ph>를 통해 직접 정렬 문자를 표시 해야 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>The value of this property is not meaningful when you sort the control using custom sorting.</source>
          <target state="translated">사용자 지정 정렬을 사용 하 여 컨트롤을 정렬 하는 경우에이 속성의 값은 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>For more information about custom sorting, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
          <target state="translated">사용자 지정 정렬 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortedColumn">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> property in a programmatic sort.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> 속성에 프로그래밍 방식 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="3821" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>Gets a value indicating whether the items in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control are sorted in ascending or descending order, or are not sorted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 있는 항목이 오름차순 또는 내림차순으로 정렬되었는지, 아니면 정렬되지 않았는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SortOrder" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.SortOrder" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="3823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>This property is used to determine which sorting glyph appears when the column specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> property has a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>.</source>
          <target state="translated">이 속성을 사용 하 여 지정 된 열 때 표시 되는 정렬 문자 모양을 결정할는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>, you must display and hide the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A&gt;</ph> property.</source>
          <target state="translated">인 열의 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 의 속성 값 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>를 표시 하며를 통해 직접 정렬 문자를 숨기는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable&gt;</ph>, you can display the sorting glyph, but space is not reserved for it if the column is automatically resized.</source>
          <target state="translated">인 열의 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable&gt;</ph>, 정렬 문자를 표시할 수 있지만 열 크기가 자동으로 조정 하는 경우 공간에 대 한 예약 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>The value of this property is not meaningful when you sort the control using custom sorting.</source>
          <target state="translated">사용자 지정 정렬을 사용 하 여 컨트롤을 정렬 하는 경우에이 속성의 값은 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>For more information about custom sorting, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
          <target state="translated">사용자 지정 정렬 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.SortOrder">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> property in a programmatic sort.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> 속성에 프로그래밍 방식 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="3829" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>Gets or sets a value indicating whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</source>
          <target state="translated">Tab 키를 누를 때 포커스가 컨트롤의 다음 셀로 이동하는 대신, 탭 순서의 다음 컨트롤로 이동하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TAB key moves the focus to the next control in the tab order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Tab 키를 누를 때 포커스가 탭 순서의 다음 컨트롤로 이동하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>Setting this property to <ph id="ph1">`false`</ph> allows the TAB key to move the focus through the grid of cells.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`false`</ph> 표 셀을 통해 포커스를 이동 하려면 TAB 키를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="3832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>The following table describes how the cell focus changes when the given TAB key combinations are pressed.</source>
          <target state="translated">다음 표에서 지정 된 탭 키 조합을 누르면 셀 포커스가 변경 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="3833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>Key combination</source>
          <target state="translated">키 조합</target>       </trans-unit>
        <trans-unit id="3834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>Result</source>
          <target state="translated">결과</target>       </trans-unit>
        <trans-unit id="3835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>TAB</source>
          <target state="translated">Tab</target>       </trans-unit>
        <trans-unit id="3836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the focus moves to the next cell in the row.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 행의 다음 셀으로 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If the focus is in the last cell in the row, the focus moves to the first cell in the next row.</source>
          <target state="translated">행의 마지막 셀에 포커스가 있으면 포커스가 다음 행의 첫 번째 셀으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If the focus is in the last cell in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, the focus moves to the next control in the tab order.</source>
          <target state="translated">마지막 셀에 포커스가 있으면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, 탭 순서의 다음 컨트롤로 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>SHIFT+TAB</source>
          <target state="translated">Shift+Tab</target>       </trans-unit>
        <trans-unit id="3840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the focus moves to the previous cell in the row.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 이전 행의 셀으로 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If the focus is in the first cell in the row, the focus moves to the last cell in the previous row.</source>
          <target state="translated">행의 첫 번째 셀에 포커스가 있으면 마지막으로 이전 행의 셀에에서 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>If the focus is in the first cell in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, the focus moves to the previous control in the tab order.</source>
          <target state="translated">첫 번째 셀에 포커스가 있으면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, 탭 순서의 이전 컨트롤에 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>CTRL+TAB</source>
          <target state="translated">Ctrl+Tab</target>       </trans-unit>
        <trans-unit id="3844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.StandardTab">
          <source>The focus moves to the next control in the tab order.</source>
          <target state="translated">탭 순서의 다음 컨트롤로 포커스가 이동 합니다.</target>       </trans-unit>
        <trans-unit id="3845" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.StyleChanged">
          <source>Occurs when the control style changes.</source>
          <target state="translated">컨트롤 스타일이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3846" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.StyleChanged">
          <source>This event is not relevant to this control.</source>
          <target state="translated">이 이벤트는이 컨트롤과 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="3847" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.StyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="3849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="3850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> instance.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="3851" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>This method has already been called for this control.</source>
          <target state="translated">이 컨트롤에 대해 이 메서드가 이미 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="3852" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="3853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="3854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> instance.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="3855" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.Text">
          <source>Gets or sets the text associated with the control.</source>
          <target state="translated">컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Text">
          <source>The text associated with the control.</source>
          <target state="translated">컨트롤에 연결된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="3857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.Text">
          <source>This property is not meaningful for this control.</source>
          <target state="translated">이 속성은 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3858" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.TextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Text" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridView.Text" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="3859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.TextChanged">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> property is not meaningful for this control, its value can be changed, thereby causing this event to occur.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> 속성은이 컨트롤에 의미가 없습니다, 해당 값을 변경할 수로 인해이 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="3860" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>Gets or sets the header cell located in the upper left corner of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤의 왼쪽 맨 위에 있는 머리글 셀을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /&gt;</ph> located at the upper left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>의 왼쪽 맨 위에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>Setting this property allows you to set a value for the cell, associate a shortcut menu with it, or perform any other operations you can perform on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderCell&gt;</ph>.</source>
          <target state="translated">이 속성 설정 셀에 대 한 값을 설정, 바로 가기 메뉴를, 연결 또는에서 수행할 수 있습니다 다른 작업을 수행할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderCell&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3863" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>In applications designed for use with right-to-left languages, the cell represented by this property is typically in the upper-right corner.</source>
          <target state="translated">오른쪽에서 왼쪽 언어와 사용 하기 위해 설계 된 응용 프로그램,이 속성이 나타내는 셀이 오른쪽 위 모퉁이에 일반적으로 합니다.</target>       </trans-unit>
        <trans-unit id="3864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>The following code example uses this property to display a value in the upper-left corner of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하 여의 왼쪽 위 모서리에 값을 표시 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="3865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>This value labels a child table in a master/detail scenario.</source>
          <target state="translated">이 값 마스터/세부 시나리오에서 자식 테이블을 표시합니다.</target>       </trans-unit>
        <trans-unit id="3866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> class overview topic.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph> 클래스 개요 항목입니다.</target>       </trans-unit>
        <trans-unit id="3867" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>The column index of the cell to update, or -1 to indicate a row header cell.</source>
          <target state="translated">업데이트할 셀의 열 인덱스이며, 행 머리글 셀을 나타내는 경우에는 -1입니다.</target>       </trans-unit>
        <trans-unit id="3868" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>The row index of the cell to update, or -1 to indicate a column header cell.</source>
          <target state="translated">업데이트할 셀의 행 인덱스이며, 열 머리글 셀을 나타내는 경우에는 -1입니다.</target>       </trans-unit>
        <trans-unit id="3869" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>Forces the cell at the specified location to update its error text.</source>
          <target state="translated">지정된 위치에 있는 셀에서 해당 오류 텍스트가 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="3870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>Use this method when you maintain cell error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event.</source>
          <target state="translated">이 메서드를 사용 하 여 유지 하는 경우 셀의 오류 텍스트 직접 처리 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>Call this method when you change the stored error text for the specified cell.</source>
          <target state="translated">지정된 된 셀에 대 한 저장 된 오류 텍스트를 변경 하는 경우이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>This will invalidate the cell, forcing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated error text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event handler.</source>
          <target state="translated">셀을 무효화이 강제 적용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤을 통해 업데이트 된 오류 텍스트를 검색는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>Although you can use this method to update errors for header cells, column header cells do not display error glyphs.</source>
          <target state="translated">머리글 셀에 대 한 오류를 업데이트 하려면이 메서드를 사용 하 여 있지만 열 머리글 셀에 오류 문자 모양을 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3874" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="3875" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3876" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="3877" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>The zero-based column index of the cell with the new value.</source>
          <target state="translated">새 값을 포함하는 셀의 열 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3878" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>The zero-based row index of the cell with the new value.</source>
          <target state="translated">새 값을 포함하는 셀의 행 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3879" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>Forces the control to update its display of the cell at the specified location based on its new value, applying any automatic sizing modes currently in effect.</source>
          <target state="translated">현재 유효한 자동 크기 조정 모드를 적용하여 컨트롤이 새 값을 기준으로 지정된 위치에 있는 셀의 표시를 업데이트하도록 합니다.</target>       </trans-unit>
        <trans-unit id="3880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>Use this method when you maintain cell values in virtual mode and you update a value in your custom data cache outside of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event handler.</source>
          <target state="translated">이 메서드를 사용 하 여 가상 모드에 있는 셀 값을 유지 하 고 외부의 사용자 지정 데이터 캐시의 값을 업데이트 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>This method invalidates the cell, forcing the control to retrieve the new value through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event handler and apply any automatic sizing modes that are in effect.</source>
          <target state="translated">해당 컨트롤을 통해 새 값을 검색 하는 셀을 무효화 하는이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 이벤트 처리기 및 적용 되는 자동 크기 조정 모드를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="3882" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is less than zero or greater than the number of columns in the control minus one.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="3883" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3884" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than zero or greater than the number of rows in the control minus one.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="3885" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridView">
          <source>Forces one or more rows to update their error text.</source>
          <target state="translated">하나 이상의 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="3886" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source>The zero-based index of the row to update.</source>
          <target state="translated">업데이트할 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3887" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source>Forces the row at the given row index to update its error text.</source>
          <target state="translated">지정된 행 인덱스에 있는 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="3888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source>This method is useful when you maintain row error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
          <target state="translated">이 메서드는 유지 하는 경우 행 오류 텍스트 직접 처리 하 여 유용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source>Call this method when you change the stored error text for the specified row.</source>
          <target state="translated">지정된 된 행에 대 한 저장 된 오류 텍스트를 변경 하는 경우이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event handler.</source>
          <target state="translated">이렇게 하면 강제로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어를 통해 업데이트 된 텍스트를 검색 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3891" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3892" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>The zero-based index of the first row in the set of rows to update.</source>
          <target state="translated">업데이트할 행 집합에서 첫 번째 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3893" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>The zero-based index of the last row in the set of rows to update.</source>
          <target state="translated">업데이트할 행 집합에서 마지막 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3894" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>Forces the rows in the given range to update their error text.</source>
          <target state="translated">지정된 범위의 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="3895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>This method is useful when you maintain row error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
          <target state="translated">이 메서드는 유지 하는 경우 행 오류 텍스트 직접 처리 하 여 유용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>Call this method when you change the stored error text for the specified rows.</source>
          <target state="translated">지정된 된 행에 대 한 저장 된 오류 텍스트를 변경 하는 경우이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event handler.</source>
          <target state="translated">이렇게 하면 강제로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어를 통해 업데이트 된 텍스트를 검색 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3898" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndexStart" /&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndexStart" /&gt;</ph>가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3899" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3900" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndexEnd" /&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndexEnd" /&gt;</ph>가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3901" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3902" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rowIndexEnd" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="rowIndexStart" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndexEnd" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="rowIndexStart" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="3903" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>The zero-based index of the first row to update.</source>
          <target state="translated">업데이트할 첫 번째 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="3904" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to update the specified row and all subsequent rows.</source>
          <target state="translated">지정된 행 및 모든 후속 행을 업데이트하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3905" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>Forces the specified row or rows to update their height information.</source>
          <target state="translated">지정된 행에서 해당 높이 정보가 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="3906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>This method is useful when you maintain row heights yourself using handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> events.</source>
          <target state="translated">이 메서드는 행 높이 대 한 처리기를 사용 하 여 직접 관리 하는 경우에 유용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>Call this method whenever you change the stored row heights outside of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event handler.</source>
          <target state="translated">이 메서드를 호출 하 여 외부에 저장 된 행 높이 변경할 때마다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated height information through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event handler.</source>
          <target state="translated">이렇게 하면 강제로 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어를 통해 업데이트 된 높이 정보를 검색 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="3909" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than 0 and <ph id="ph2">&lt;paramref name="updateToEnd" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 0보다 작고 <ph id="ph2">&lt;paramref name="updateToEnd" /&gt;</ph>가 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3910" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3911" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is less than -1 and <ph id="ph2">&lt;paramref name="updateToEnd" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 -1보다 작고 <ph id="ph2">&lt;paramref name="updateToEnd" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3912" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3913" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is greater than the highest row index in the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.Rows" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGridView.Rows" /&gt;</ph> 컬렉션의 가장 높은 행 인덱스보다 큰 경우</target>       </trans-unit>
        <trans-unit id="3914" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.UserAddedRow">
          <source>Occurs when the user has finished adding a row to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 행을 추가하는 작업을 마쳤을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserAddedRow">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserAddedRow">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserAddedRow&gt;</ph> event to update a label displaying the total number of entries in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserAddedRow&gt;</ph> 에 있는 항목의 총 수를 표시 하는 레이블을 업데이트 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserAddedRow">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3918" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>Occurs when the user has finished deleting a row from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에서 행을 삭제하는 작업을 마쳤을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3921" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletedRow&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletedRow&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> named <ph id="ph2">`DataGridView1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 라는 <ph id="ph2">`DataGridView1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3925" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletedRow">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletedRow&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletedRow&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3926" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridView.UserDeletingRow">
          <source>Occurs when the user deletes a row from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에서 행을 삭제할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="3927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletingRow">
          <source>This event can be canceled to prevent a row deletion from being completed.</source>
          <target state="translated">완료 되 고에서 행 삭제를 방지 하기 위해이 이벤트를 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletingRow">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletingRow">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph> event to cancel the deletion of rows from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> if the starting balance row is included in the selection.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph> 에서 행 삭제를 취소 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 시작 균형 행 선택 영역에 포함 된 경우.</target>       </trans-unit>
        <trans-unit id="3930" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridView.UserDeletingRow">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3931" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.UserSetCursor">
          <source>Gets the default or user-specified value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> 속성의 기본값 또는 사용자 지정 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.UserSetCursor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the normal value of the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> 속성의 일반 값을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.UserSetCursor">
          <source>Although you can set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property, its value can change depending on the location of the mouse pointer.</source>
          <target state="translated">값을 설정할 수 있지만는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 속성, 마우스 포인터의 위치에 따라 해당 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.UserSetCursor">
          <source>Use this property to retrieve the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property in its normal state, which is either its default value, or a value specified in code.</source>
          <target state="translated">값을 검색 하려면이 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 속성의 기본값 또는 코드에서 지정 된 값 중 하나는 정상 상태에 있습니다.</target>       </trans-unit>
        <trans-unit id="3935" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.VerticalScrollBar">
          <source>Gets the vertical scroll bar of the control.</source>
          <target state="translated">컨트롤의 세로 스크롤 막대를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VerticalScrollBar">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph> representing the vertical scroll bar.</source>
          <target state="translated">세로 스크롤 막대를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3937" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset">
          <source>Gets the number of pixels by which the control is scrolled vertically.</source>
          <target state="translated">컨트롤이 세로로 스크롤된 픽셀 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset">
          <source>The number of pixels by which the control is scrolled vertically.</source>
          <target state="translated">컨트롤이 세로로 스크롤된 픽셀 수입니다.</target>       </trans-unit>
        <trans-unit id="3939" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>Gets or sets a value indicating whether you have provided your own data-management operations for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control.</source>
          <target state="translated">사용자가 직접 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤에 대한 데이터 관리 작업을 제공했는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> uses data-management operations that you provide; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph>에서 사용자 지정 데이터 관리 작업을 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>Virtual mode is designed for use with very large stores of data.</source>
          <target state="translated">가상 모드는 매우 큰 데이터 저장소와 사용 하기 위해 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="3943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you create a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> with a set number of rows and columns and then handle the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event to populate the cells.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>를 만들면는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 한 행 및 열과 다음 핸들의 수는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> 셀을 채우는 데 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="3944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>Virtual mode requires implementation of an underlying data cache to handle the population, editing, and deletion of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> cells based on actions of the user.</source>
          <target state="translated">가상 모드 인구, 편집 및 삭제를 처리 하는 기본 데이터 캐시의 구현이 필요 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 사용자의 동작을 기준으로 하는 셀입니다.</target>       </trans-unit>
        <trans-unit id="3945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>For more information about implementing virtual mode, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
          <target state="translated">가상 모드 구현에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 컨트롤에서 가상 모드 구현<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>You must use virtual mode to maintain the values of unbound columns when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is in bound mode.</source>
          <target state="translated">바인딩되지 않은 열의 값을 유지 하기 위해 가상 모드를 사용 해야 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤은 바인딩된 모드에 있습니다.</target>       </trans-unit>
        <trans-unit id="3947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>Sorting by unbound columns in bound mode is not supported.</source>
          <target state="translated">바인딩된 모드에 바인딩되지 않은 열을 정렬할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridView.VirtualMode">
          <source>The following code example code uses virtual mode to create a table of positive integers.</source>
          <target state="translated">다음 코드 예제에서는 코드의 정수 테이블을 만들 가상 모드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="3949" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3950" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>Processes window messages.</source>
          <target state="translated">창 메시지를 처리합니다.</target>       </trans-unit>
        <trans-unit id="3951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType&gt;</ph> method on the base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType&gt;</ph> 기본 클래스에 메서드.</target>       </trans-unit>
        <trans-unit id="3952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="3953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">권한 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>