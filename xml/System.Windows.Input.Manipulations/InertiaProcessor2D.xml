<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InertiaProcessor2D.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa0ba327c15587eb184c809f1699ed9c026ddd1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa0ba327c15587eb184c809f1699ed9c026ddd1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>Implements the extrapolation of a manipulation's position, orientation, and average radius.</source>
          <target state="translated">조작 위치, 방향 및 평균 반지름의 보외법을 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D&gt;</ph> object enables your application to extrapolate an element's location, orientation, and other properties by simulating real-world behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D&gt;</ph> 개체에는 응용 프로그램이 실제 동작을 시뮬레이션 하 여 요소의 위치, 방향 및 기타 속성을 추정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>For instance, when a user moves an element and then releases it, the element can continue moving, decelerate, and then slowly stop.</source>
          <target state="translated">예를 들어, 사용자가 요소를 이동 했다가 놓으면 때 요소 수 계속 이동, 감속 및 천천히 중지 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>An inertia processor implements this behavior by causing the affine 2-D values (origin, scale, translation, and rotation) to change over a specified time at a specified deceleration rate.</source>
          <target state="translated">관성 프로세서 관계 2-d 값 (원점, 크기 조정, 변환 및 회전)이 지정된 된 감속 속도로에 지정된 된 시간에 따라 변경 하 여이 동작을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>An inertia processor by itself does not cause an element to move and decelerate.</source>
          <target state="translated">관성 프로세서 단독으로 요소를 이동 하 고 감속 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>Your application receives information from an inertia processor and applies the values as needed to an application-specific element.</source>
          <target state="translated">응용 프로그램 정보를 받아 관성 프로세서에서 응용 프로그램별 요소에 필요에 따라 값을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>Typically, an application uses the information received from an inertia processor to change the location, size or orientation of an element.</source>
          <target state="translated">일반적으로 응용 프로그램 관성 프로세서에서 받은 정보를 사용 하 여 위치, 크기 또는 요소의 방향을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>Inertia processing is typically used in conjunction with manipulation processing.</source>
          <target state="translated">관성 처리는 일반적으로 조작 처리와 함께에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D&gt;</ph> class.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
          <source>The timestamp to complete extrapolation, in 100-nanosecond ticks.</source>
          <target state="translated">100나노초 눈금으로 추정을 완료하기 위한 타임스탬프입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
          <source>Completes final extrapolation by using the specified timestamp and raises the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /&gt;</ph> event.</source>
          <target state="translated">지정된 타임스탬프를 사용하여 최종 추정을 완료하고 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
          <source>Timestamps are in 100-nanosecond units.</source>
          <target state="translated">타임 스탬프가 100 나노초 단위로 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
          <source>In the following example, an event handler for the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType&gt;</ph> event checks to see if inertia processing is running and if so, stops it by calling the <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType&gt;</ph> 이벤트 검사 관성 처리에서 실행 되는 경우 그리고 있다면 참조를 호출 하 여 중지 된 <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
          <source>The timestamp parameter is less than the initial or previous timestamp.</source>
          <target state="translated">타임스탬프 매개 변수가 초기 또는 이전 타임스탬프보다 작은 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed">
          <source>Occurs when extrapolation has completed.</source>
          <target state="translated">보외법이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta">
          <source>Occurs when the extrapolation origin has changed or when translation, scaling, or rotation have occurred.</source>
          <target state="translated">보외법 원점이 변경되거나 변환, 배율 조정 또는 회전이 수행되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType&gt;</ph> event and the <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType&gt;</ph> event are the same type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType&gt;</ph> 이벤트 및 <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType&gt;</ph> 이벤트는 같은 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta">
          <source>Typically, you can use the same event handler for both events.</source>
          <target state="translated">일반적으로 두 이벤트에 대 한 동일한 이벤트 처리기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior">
          <source>Gets or sets the expansion behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 확장 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior">
          <source>The expansion behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 확장 동작입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
          <source>Gets or sets the x-coordinate for the initial origin, in coordinate units.</source>
          <target state="translated">초기 원점의 X 좌표(좌표 단위)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
          <source>The x-coordinate for the initial origin, in coordinate units.</source>
          <target state="translated">초기 원점의 X 좌표(좌표 단위)입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
          <source>The origin point represented by the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> properties is the average position of all manipulators associated with an element.</source>
          <target state="translated">원점을 나타내는 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> 속성 요소에 연결 된 모든 조작자의 평균 위치입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
          <source>A valid value for <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> is any finite number.</source>
          <target state="translated">유효한 값에 대 한 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> 은 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
          <source>The default value is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
          <source>Gets or sets the y-coordinate for the initial origin, in coordinate units.</source>
          <target state="translated">초기 원점의 Y 좌표(좌표 단위)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
          <source>The y-coordinate for the initial origin, in coordinate units.</source>
          <target state="translated">초기 원점의 Y 좌표(좌표 단위)입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
          <source>The origin point represented by the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> properties is the average position of all manipulators associated with an element.</source>
          <target state="translated">원점을 나타내는 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> 속성 요소에 연결 된 모든 조작자의 평균 위치입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
          <source>A valid value for <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> is any finite number.</source>
          <target state="translated">유효한 값에 대 한 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A&gt;</ph> 은 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
          <source>The default value is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning">
          <source>Gets whether inertia is currently in progress.</source>
          <target state="translated">관성이 현재 진행 중인지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning">
          <source>A Boolean value indicating whether inertia is currently in progress.</source>
          <target state="translated">관성이 현재 진행 중인지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning">
          <source>In the following example, an event handler for the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType&gt;</ph> event checks to see if inertia processing is running and, if so, stops it by calling the <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed&gt;</ph> method.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType&gt;</ph> 확인 관성 처리가 실행 되 고,이 경우 호출 하 여 중지 하는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source>The timestamp to perform extrapolation, in 100-nanosecond ticks.</source>
          <target state="translated">100나노초 눈금으로 나타낸 추정을 수행할 타임스탬프입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source>Extrapolates the manipulation's position, orientation, and average radius at the specified time.</source>
          <target state="translated">지정된 시간의 조작 위치, 방향 및 평균 반지름을 추정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source>The manipulation's position, orientation, and average radius at the specified time.</source>
          <target state="translated">지정된 시간의 조작 위치, 방향 및 평균 반지름입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if extrapolation is in progress; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if extrapolation has completed.</source>
          <target state="translated">추정이 진행 중인 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 추정이 완료되었으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source>Timestamps are in 100-nanosecond units.</source>
          <target state="translated">타임 스탬프가 100 나노초 단위로 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
          <source>The timestamp parameter is less than the initial or previous timestamp.</source>
          <target state="translated">타임스탬프 매개 변수가 초기 또는 이전 타임스탬프보다 작은 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior">
          <source>Gets or sets the rotation behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 회전 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior">
          <source>The rotation behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 회전 동작입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A&gt;</ph> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A&gt;</ph> 관성 처리는 개체 3---1.5 시간 시작 방향에서 회전할 수 있도록 속성이 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)">
          <source>Parameters to set.</source>
          <target state="translated">설정할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)">
          <source>Sets parameters on the inertia processor.</source>
          <target state="translated">관성 프로세서에 대해 매개 변수를 설정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior">
          <source>Gets or sets the translation behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 변환 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior">
          <source>The translation behavior of the inertia processor.</source>
          <target state="translated">관성 프로세서의 변환 동작입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>