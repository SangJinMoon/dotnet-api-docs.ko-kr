<Type Name="Manipulator2D" FullName="System.Windows.Input.Manipulations.Manipulator2D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7c2d10e9dcb25c393606dac8137e369778d31a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30648387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Manipulator2D" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Manipulator2D extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.Manipulator2D" />
  <TypeSignature Language="VB.NET" Value="Public Structure Manipulator2D" />
  <TypeSignature Language="C++ CLI" Value="public value class Manipulator2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>특정 시점의 2D 조작자를 나타냅니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Manipulator2D (int id, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 id, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As Integer, x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Manipulator2D(int id, float x, float y);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="id">이 조작자에 대한 고유 ID입니다.</param>
        <param name="x">조작자의 X 좌표입니다.</param>
        <param name="y">조작자의 Y 좌표입니다.</param>
        <summary>지정된 속성을 사용하여 새 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 X 및 y 매개 변수 둘 다 유한 숫자 여야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" />-좌표 또는 <paramref name="y" />-좌표는 <see langword="float.NaN" />, <see langword="float.PositiveInfinity" /> 또는 <see langword="float.NegativeInfinity" />입니다. 이러한 값은 모두 사용할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">이 개체와 비교할 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />개체입니다.</param>
        <summary>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />개체가 지정된 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체와 같은 값을 가지는지 여부를 확인합니다.</summary>
        <returns>
          두 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체가 동일한 형식을 갖고 같은 값을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.Manipulator2D.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
        <returns>이 인스턴스의 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.Manipulator2D.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 고유 ID를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 고유 ID입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Input.Manipulations.Manipulator2D manipulator1, System.Windows.Input.Manipulations.Manipulator2D manipulator2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.Manipulations.Manipulator2D manipulator1, valuetype System.Windows.Input.Manipulations.Manipulator2D manipulator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (manipulator1 As Manipulator2D, manipulator2 As Manipulator2D) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Input::Manipulations::Manipulator2D manipulator1, System::Windows::Input::Manipulations::Manipulator2D manipulator2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manipulator1" Type="System.Windows.Input.Manipulations.Manipulator2D" />
        <Parameter Name="manipulator2" Type="System.Windows.Input.Manipulations.Manipulator2D" />
      </Parameters>
      <Docs>
        <param name="manipulator1">비교할 첫 번째 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체입니다.</param>
        <param name="manipulator2">비교할 두 번째 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체입니다.</param>
        <summary>지정된 두 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 값이 같은지를 확인합니다.</summary>
        <returns>
          두 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.Windows.Input.Manipulations.Manipulator2D.Equals%2A?displayProperty=nameWithType>]]>.</format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Input.Manipulations.Manipulator2D manipulator1, System.Windows.Input.Manipulations.Manipulator2D manipulator2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.Manipulations.Manipulator2D manipulator1, valuetype System.Windows.Input.Manipulations.Manipulator2D manipulator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (manipulator1 As Manipulator2D, manipulator2 As Manipulator2D) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Input::Manipulations::Manipulator2D manipulator1, System::Windows::Input::Manipulations::Manipulator2D manipulator2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manipulator1" Type="System.Windows.Input.Manipulations.Manipulator2D" />
        <Parameter Name="manipulator2" Type="System.Windows.Input.Manipulations.Manipulator2D" />
      </Parameters>
      <Docs>
        <param name="manipulator1">비교할 첫 번째 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체입니다.</param>
        <param name="manipulator2">비교할 두 번째 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체입니다.</param>
        <summary>지정된 두 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 값이 다른지 여부를 확인합니다.</summary>
        <returns>
          두 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 값이 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자에 대해 해당 하는 방법은의 부정을 <xref:System.Windows.Input.Manipulations.Manipulator2D.Equals%2A?displayProperty=nameWithType>]]>. </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.Manipulator2D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 X 좌표를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 X 좌표입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정할 때 값 값은 유한한 값 이어야 합니다. 이 속성의 기본값은 영 (0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.Manipulator2D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 Y 좌표를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> 개체의 Y 좌표입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정할 때 값 값은 유한한 값 이어야 합니다. 이 속성의 기본값은 영 (0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>