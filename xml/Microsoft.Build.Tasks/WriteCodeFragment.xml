<Type Name="WriteCodeFragment" FullName="Microsoft.Build.Tasks.WriteCodeFragment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f374363cde244ecb01b2be5dc98e2bf1fa14b63" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30335507" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WriteCodeFragment : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WriteCodeFragment extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.WriteCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class WriteCodeFragment&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class WriteCodeFragment : Microsoft::Build::Tasks::TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ea199-101">생성된 지정 코드 조각을 사용하여 임시 코드 파일을 생성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea199-101">Generates a temporary code file with the specified generated code fragment.</span>
      </span>
      <span data-ttu-id="ea199-102">파일을 삭제하지는 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea199-102">Does not delete the file.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WriteCodeFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WriteCodeFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea199-103">생성된 지정 코드 조각을 사용하여 임시 코드 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-103">Creates a temporary code file with the specified generated code fragment.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAttributes">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyAttributes As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssemblyAttributes { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea199-104">쓸 특성을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-104">Gets or sets the attributes to write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea199-105">값이 특성의 전체 형식 이름인 항목을 반환합니다(예: "System.AssemblyVersionAttribute").</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-105">Returns an item whose value is the full type name of he attribute, for example, "System.AssemblyVersionAttribute".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea199-106">각 메타 데이터 형식이 System.String 해야 매개 변수의 이름-값 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-106">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>  
  
 <span data-ttu-id="ea199-107">사용자를 선호할 수 있습니다 또는 일부 특성 위치 생성자 인수를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-107">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>  <span data-ttu-id="ea199-108">"_Parameter1", "_Parameter2"와 같은 메타 데이터 이름을 사용 하는 것을 설정 하려면 등입니다. 매개 변수 인덱스를 건너 뛰 경우 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-108">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea199-109">WriteCodeFragment 메서드를 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-109">Executes the WriteCodeFragment method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea199-110">코드 조각을 작성하는 경우 true를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-110">Returns true if the code fragment was written.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea199-111">생성할 코드의 언어를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-111">Gets or sets the language of code to generate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea199-112">생성할 코드의 언어를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-112">Returns the language of code to generate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea199-113">언어 이름은 모든 언어는 CodeDom 공급자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-113">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="ea199-114">예를 들어, "C#", "VisualBasic"입니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-114">For example, "C#", "VisualBasic".</span></span> <span data-ttu-id="ea199-115">내보낸 파일에는 해당 언어에 대 한 기본 확장 프로그램을 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-115">The file emitted is given the default extension for that language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputDirectory { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea199-116">생성된 코드의 대상 폴더(일반적으로 중간 폴더)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-116">Gets or sets the destination folder for the generated code, typically the intermediate folder.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea199-117">생성된 코드의 대상 폴더를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-117">Returns the destination folder for the generated code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea199-118">생성된 파일의 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-118">Gets or sets the path to the file that was generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea199-119">생성된 파일의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea199-119">Returns the path to the file that was generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea199-120">파일 이름으로이 속성을 설정 하는 경우 대상 폴더가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-120">If setting this property with a file name, the destination folder will be prepended.</span></span>  
  
 <span data-ttu-id="ea199-121">대상 폴더 루 팅 된 값으로이 속성을 설정 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-121">If setting this property with a rooted value, the destination folder will be ignored.</span></span>  
  
 <span data-ttu-id="ea199-122">이 속성을 설정 하지 WriteCodeFragment 선택한 언어에 대 한 대상 폴더, 임의의 파일 이름 및 기본 확장 프로그램을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ea199-122">If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>