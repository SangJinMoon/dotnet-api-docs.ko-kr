<Type Name="IExpressionEditorInstance" FullName="System.Activities.Presentation.View.IExpressionEditorInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4453c85fdb38fe8729f9151748abb790e5b98a95" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExpressionEditorInstance" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionEditorInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.IExpressionEditorInstance" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionEditorInstance" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExpressionEditorInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e258e-101">식 편집기 인스턴스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e258e-101">Represents an expression editor instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e258e-102">식 편집기 인스턴스에 대한 자세한 내용은 <xref:System.Activities.Presentation.View.IExpressionEditorService>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e258e-102">For a detailed description of an expression editor instance, see <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-103">식 편집기 인스턴스가 Return 키를 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-103">Gets or sets a value that indicates whether the expression editor instance accepts the RETURN key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-104">식 편집기가 Return 키를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-104">
              <see langword="true" /> if the expression editor accepts the RETURN key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-105">식 편집기 인스턴스가 Tab 키를 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-105">Gets or sets a value that indicates whether the expression editor instance accepts the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-106">식 편집기가 Tab 키를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-106">
              <see langword="true" /> if the expression editor accepts the TAB key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCompleteWord">
      <MemberSignature Language="C#" Value="public bool CanCompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-107">식 편집기 인스턴스가 사용자가 입력하고 있는 문자열을 완성할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-107">Gets a Boolean value that indicates whether the expression editor instance can complete the string being typed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-108">
            <see langword="true" />로 설정된 <see cref="T:System.Boolean" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-108">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCopy">
      <MemberSignature Language="C#" Value="public bool CanCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCopy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-109">식 편집기 인스턴스를 종료할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-109">Gets a Boolean value that indicates whether the expression editor instance can be closed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-110">식 편집기 인스턴스를 종료할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-110">
              <see langword="true" /> if the expression editor instance can be closed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCut">
      <MemberSignature Language="C#" Value="public bool CanCut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCut" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-111">식을 잘라낼 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-111">Gets a Boolean value that indicates whether the expression can be cut.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-112">식을 잘라낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-112">
              <see langword="true" /> if the expression can be cut; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanDecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanDecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanDecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-113">Intellisense 필터링을 사용할 때 필터 수준을 낮출 수 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-113">Returns a value that indicates whether the filter level can be decreased when using Intellisense filtering.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-114">필터 수준을 내릴 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-114">
              <see langword="true" /> if the filter level can be decreased; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool CanGlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanGlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanGlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-115">식 편집기 인스턴스가 식에서 전역 IntelliSense를 검색할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-115">Gets a Boolean value that indicates whether the expression editor instance can retrieve global IntelliSense on the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-116">
            <see langword="true" />로 설정된 <see cref="T:System.Boolean" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-116">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanIncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanIncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanIncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanIncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanIncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanIncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-117">Intellisense 필터링을 사용할 때 필터 수준을 높일 수 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-117">Returns a value that indicates whether the filter level can be increased when using Intellisense filtering.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-118">필터 수준을 높일 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-118">
              <see langword="true" /> if the filter level can be increased; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanParameterInfo">
      <MemberSignature Language="C#" Value="public bool CanParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-119">식 편집기 인스턴스가 식에서 매개 변수 정보를 검색할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-119">Gets a Boolean value that indicates whether the expression editor instance can retrieve parameter information on the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-120">
            <see langword="true" />로 설정된 <see cref="T:System.Boolean" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-120">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-121">식을 붙여 넣을 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-121">Gets a Boolean value that indicates whether the expression can be pasted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-122">식을 붙여넣을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-122">
              <see langword="true" /> if the expression can be pasted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanQuickInfo">
      <MemberSignature Language="C#" Value="public bool CanQuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanQuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanQuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanQuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanQuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-123">식 편집기 인스턴스가 IntelliSense 요약 정보 도구 설명에 표시할 형식 정보를 검색할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-123">Gets a Boolean value that indicates whether the expression editor instance can retrieve type information to be shown in an IntelliSense quick info tool tip.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-124">
            <see langword="true" />로 설정된 <see cref="T:System.Boolean" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-124">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRedo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRedo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRedo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-125">시스템이 작업을 다시 실행할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-125">Gets a Boolean value that indicates whether the system can redo the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-126">시스템이 작업을 다시 실행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-126">
              <see langword="true" /> if the system can redo the operation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUndo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-127">시스템이 작업을 실행 취소할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-127">Gets a Boolean value that indicates whether the system can undo the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-128">시스템이 작업을 취소할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-128">
              <see langword="true" /> if the system can undo the operation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-129">편집기 인스턴스의 선택을 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-129">Clears the selection in the editor instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-130">편집기 항목을 닫고 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-130">Closes and purges the editor items.</span>
          </span>
          <span data-ttu-id="e258e-131">특정 인스턴스 편집기 인스턴스가 종료됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-131">This will close the specific expression editor instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-132">식 편집기 인스턴스가 종료될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-132">Occurs when the expression editor instance is closing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWord">
      <MemberSignature Language="C#" Value="public bool CompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-133">식 편집기 인스턴스가 사용자가 입력한 부분 단어에 대한 완성 목록을 제공할 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-133">Determines whether the expression editor instance can provide a list of completions for the partial word typed by the user.</span>
          </span>
          <span data-ttu-id="e258e-134">예를 들어 사용자가 입력하고 있는 단어를 완성하는 데 도움이 되도록 멤버, 인수 및 메서드 이름을 보여 줄 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-134">For example, member, argument, and method names can be shown to the user in an attempt to help them complete the word they are typing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-135">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-135">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public bool Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-136">활성 식을 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-136">Copies the active expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-137">복사에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-137">
              <see langword="true" /> if the copy is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public bool Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-138">활성 식을 잘라냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-138">Cuts the active expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-139">잘라내기에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-139">
              <see langword="true" /> if the cut is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool DecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.DecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function DecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-140">Intellisense 필터 목록에서 모든 항목이 표시되도록 필터 수준을 낮추고 이 작업이 성공적인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-140">Decreases the filter level to show all items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-141">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-141">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-142">편집기 인스턴스에 포커스를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-142">Sets focus on the editor instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommittedText">
      <MemberSignature Language="C#" Value="public string GetCommittedText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCommittedText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GetCommittedText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommittedText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCommittedText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-143">식을 생성하는 데 사용된 텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-143">Gets the text used to generate an expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-144">식을 생성하는 데 사용된 텍스트가 포함된 <see cref="T:System.String" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-144">Returns a <see cref="T:System.String" /> that contains the text used to generate an expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool GlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function GlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-145">식 편집기에서 식에 대한 전역 IntelliSense를 검색하고 이 작업이 성공적인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-145">Retrieves global IntelliSense on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-146">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-146">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler GotAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.GotAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event GotAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-147">식 편집기 인스턴스가 집계 포커스를 가질 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-147">Occurs when the expression editor instance has aggregate focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAggregateFocus">
      <MemberSignature Language="C#" Value="public bool HasAggregateFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAggregateFocus" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HasAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAggregateFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAggregateFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-148">인스턴스에 집계 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-148">Gets a value that indicates whether the instance has aggregate focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-149">편집 인스턴스에 집계 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-149">
              <see langword="true" /> if the editor instance has aggregate focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e258e-150"><xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> 또는 <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A>에 의해 생성된 컨트롤이 포커스를 가지면 인스턴스도 집계 포커스를 가집니다.</span><span class="sxs-lookup"><span data-stu-id="e258e-150">The instance has aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> or any other control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-151">가로 스크롤 막대가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-151">Gets or sets a value that indicates whether the horizontal scrollbar is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-152">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-152">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostControl">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Control HostControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Control HostControl" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Control ^ HostControl { System::Windows::Controls::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-153">
            <see langword="ExpressionTextBox" />에서 표시하는 데 사용할 수 있는 <see cref="T:System.Windows.Controls.Control" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-153">Gets a <see cref="T:System.Windows.Controls.Control" /> instance that can be used to display in the <see langword="ExpressionTextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-154">
            <see cref="T:System.Windows.Controls.Control" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-154">Returns <see cref="T:System.Windows.Controls.Control" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool IncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.IncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function IncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-155">Intellisense 필터 목록에서 공통 항목이 표시되도록 필터 수준을 높이고 이 작업이 성공적인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-155">Increases the filter level to show common items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-156">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-156">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler LostAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.LostAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event LostAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-157">식 편집기 인스턴스가 집계 포커스를 잃을 때 발생하는 이벤트를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-157">Represents an event that is raised when the expression editor instance loses aggregate focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e258e-158"><xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> 및 <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A>에 의해 생성된 모든 컨트롤이 포커스를 잃으면 인스턴스도 집계 포커스를 잃습니다.</span><span class="sxs-lookup"><span data-stu-id="e258e-158">The instance loses aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> and every control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> loose focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-159">
            <see langword="ExpressionTextBox" /> 컨트롤에 의해 표시되는 최대 텍스트 줄 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-159">Gets or sets the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span>
          </span>
          <span data-ttu-id="e258e-160">이 속성은 <see langword="ExpressionTextBox" /> 컨트롤의 확장 가능한 높이를 암시적으로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-160">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control when growing to fit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-161">
            <see langword="ExpressionTextBox" /> 컨트롤에 의해 표시되는 최대 텍스트 줄 수를 포함하는 <see cref="T:System.Int32" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-161">Returns an <see cref="T:System.Int32" /> that containing the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-162">
            <see langword="ExpressionTextBox" /> 컨트롤에 의해 표시되는 최소 텍스트 줄 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-162">Gets or sets the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span>
          </span>
          <span data-ttu-id="e258e-163">이 속성은 <see langword="ExpressionTextBox" /> 컨트롤의 높이를 암시적으로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-163">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-164">반환 된 <see cref="T:System.Int32" /> 줄의 텍스트를 표시할 수의 최소 수를 포함 하는 <see langword="ExpressionTextBox" /> 제어 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-164">Returns an <see cref="T:System.Int32" /> that contains the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfo">
      <MemberSignature Language="C#" Value="public bool ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function ParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-165">식 편집기에서 식에 대한 매개 변수 정보를 검색하고 이 작업이 성공적인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-165">Retrieves parameter information on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-166">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-166">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public bool Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-167">활성 식을 붙여 넣습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-167">Pastes the active expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-168">붙여넣기가 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-168">
              <see langword="true" /> if the paste is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfo">
      <MemberSignature Language="C#" Value="public bool QuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.QuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function QuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool QuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-169">IntelliSense 요약 정보 도구 설명에 형식 정보가 표시되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-169">Determines whether type information to be shown in an IntelliSense quick info tool tip.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-170">이 메서드가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-170">
              <see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-171">편집기에서 실행 취소된 마지막 작업을 다시 적용합니다. 즉, 실행 취소 작업의 결과를 되돌립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-171">Reapplies the last operation that was undone in the editor, that is, reverse the effects of the undo operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-172">다시 실행이 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-172">
              <see langword="true" /> if the redo is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-173">텍스트의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-173">Gets or sets the value of the text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-174">
            <see cref="T:System.String" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-174">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-175">식 편집기 인스턴스의 텍스트가 변경될 때 발생하는 이벤트를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-175">Represents an event that is raised when the text in an expression editor instance is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e258e-176">편집기의 마지막 작업을 실행 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-176">Undoes the last operation in the editor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e258e-177">실행 취소가 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-177">
              <see langword="true" /> if the undo is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e258e-178">세로 스크롤 막대가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-178">Gets or sets a value that indicates whether the vertical scrollbar is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e258e-179">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e258e-179">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>