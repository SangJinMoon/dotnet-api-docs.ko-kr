<Type Name="DynamicClass" FullName="System.Web.Query.Dynamic.DynamicClass">
  <TypeSignature Language="C#" Value="public abstract class DynamicClass" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DynamicClass extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Query.Dynamic.DynamicClass" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DynamicClass" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicClass abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24531-101"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 컨트롤의 값을 사용하여 새 클래스를 만드는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="24531-101">Provides functionality to create new classes from values in a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24531-102">경우는 <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> 속성이 포함 되는 식으로 설정 되어는 `new` 함수는 클래스를 동적으로 만들에 지정 된 속성만 포함 하는 `new` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="24531-102">When the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property is set to an expression that contains the `new` function, a class is dynamically created that contains only the properties specified in the `new` function.</span></span> <span data-ttu-id="24531-103">파서는 만듭니다는 `new` 확장 하 여 클래스는 <xref:System.Web.Query.Dynamic.DynamicClass> 클래스.</span><span class="sxs-lookup"><span data-stu-id="24531-103">The parser creates the `new` class by extending the <xref:System.Web.Query.Dynamic.DynamicClass> class.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DynamicClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Query.Dynamic.DynamicClass.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DynamicClass();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24531-104"><see cref="T:System.Web.Query.Dynamic.DynamicClass" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="24531-104">Initializes a new instance of the <see cref="T:System.Web.Query.Dynamic.DynamicClass" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Query.Dynamic.DynamicClass.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24531-105">동적 클래스의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="24531-105">Returns a string representation of the dynamic class.</span></span></summary>
        <returns><span data-ttu-id="24531-106">동적 클래스 및 해당 속성을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="24531-106">A string that represents the dynamic class and its properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24531-107">경우는 <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> 속성이 포함 되는 식으로 설정 되어는 `new` 함수는 클래스를 동적으로 만들에 지정 된 속성만 포함 하는 `new` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="24531-107">When the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property is set to an expression that contains the `new` function, a class is dynamically created that contains only the properties specified in the `new` function.</span></span> <span data-ttu-id="24531-108">파서는 만듭니다는 `new` 확장 하 여 클래스는 <xref:System.Web.Query.Dynamic.DynamicClass> 클래스.</span><span class="sxs-lookup"><span data-stu-id="24531-108">The parser creates the `new` class by extending the <xref:System.Web.Query.Dynamic.DynamicClass> class.</span></span> <span data-ttu-id="24531-109"><xref:System.Web.Query.Dynamic.DynamicClass.ToString%2A> 메서드는 클래스에서 속성의 문자열 표현을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="24531-109">The <xref:System.Web.Query.Dynamic.DynamicClass.ToString%2A> methods creates a string representation of the properties in the class.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>