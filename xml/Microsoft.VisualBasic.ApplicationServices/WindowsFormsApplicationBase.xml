<Type Name="WindowsFormsApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="178758c2200488db67f46e123fe11c916bc7f54e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WindowsFormsApplicationBase extends Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsFormsApplicationBase&#xA;Inherits ConsoleApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsApplicationBase : Microsoft::VisualBasic::ApplicationServices::ConsoleApplicationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>현재 응용 프로그램과 관련된 속성, 메서드 및 이벤트를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 표시 하는 속성은 `My.Application` 개체는 현재 응용 프로그램 또는 DLL에만 연관 된 데이터를 반환 합니다. 시스템 수준 정보는 `My.Application`을 사용하여 변경할 수 없습니다.  
  
 `My.Application` 개체는 다음 클래스로 구성됩니다.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>는 모든 프로젝트에서 사용 가능한 멤버를 제공합니다.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Windows Forms 응용 프로그램에서 사용할 수 있는 멤버를 제공 합니다.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> 콘솔 응용 프로그램에서 사용할 수 있는 멤버를 제공 합니다.  
  
   
  
## Examples  
 이 예제에서는 응용 프로그램의 열려 있는 폼을 반복 하는 루프를 사용 하 여 현재 스레드의에서 직접 액세스할 수 있는 양식을 선택 하 고에서 해당 제목을 표시는 <xref:System.Windows.Forms.ListBox> 제어 합니다. 열려 있는 폼을 액세스 하는 방법에 대 한 정보를 참조 하십시오. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>합니다.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 이 예제 Windows Forms 응용 프로그램 이라는 폼이 있어야 `Form1` 목록 상자를 포함 하는 `ListBox1`합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase(Microsoft::VisualBasic::ApplicationServices::AuthenticationMode authenticationMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="authenticationMode" Type="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />
      </Parameters>
      <Docs>
        <param name="authenticationMode">
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />. 응용 프로그램의 인증 모드를 지정합니다.</param>
        <summary>지정한 인증 모드를 사용하여 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `authenticationMode` 매개 변수는는 <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows> 강력한 형식의 설정 하려고 시도 하는 열거형 값을 다음이 생성자 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성을는 <xref:System.Security.Principal.WindowsPrincipal> 현재 사용자에 대 한 합니다.  
  
 경우는 `authenticationMode` 매개 변수는는 <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined> 열거형 값을 다음이 생성자가 현재 스레드의 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성은 변경 하지 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ApplicationContext ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ApplicationContext ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationContext As ApplicationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ApplicationContext ^ ApplicationContext { System::Windows::Forms::ApplicationContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ApplicationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows Forms 응용 프로그램의 현재 스레드에 대한 <see cref="T:System.Windows.Forms.ApplicationContext" /> 개체를 가져옵니다.</summary>
        <value>이 속성은 현재 스레드의 <see cref="T:System.Windows.Forms.ApplicationContext" /> 개체를 반환합니다. 이 개체는 스레드에 대한 컨텍스트 정보를 포함합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 **모든** 탭 합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ApplicationContext" />
      </Docs>
    </Member>
    <Member MemberName="DoEvents">
      <MemberSignature Language="C#" Value="public void DoEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DoEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 메시지 큐에 있는 모든 Windows 메시지를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.DoEvents` 메서드를 사용 하면 응용 프로그램 코드를 실행 하는 동안 발생할 수 있는 다른 이벤트를 처리할 수 있습니다. `My.Application.DoEvents` 메서드는 같은 동작의 <xref:System.Windows.Forms.Application.DoEvents%2A> 메서드.  
  
 Windows Forms 응용 프로그램을 실행 하면 다음 이벤트가 처리 될 때까지 대기 하는 새 양식을 만듭니다. 폼에 이벤트를 처리할 때마다 단추 클릭과 같은 해당 이벤트와 연결 된 모든 코드를 처리 합니다. 다른 모든 이벤트는 큐에서 대기 합니다. 코드에서 이벤트를 처리 하는 동안 응용 프로그램 응답 하지 않습니다. 예를 들어 다른 창 맨 위로 끌면 경우 창이 그려지지 않습니다.  
  
 호출 하는 경우 `My.Application.DoEvents` 응용 프로그램 코드에서 다른 이벤트를 처리할 수 있습니다. 예를 들어, 데이터를 추가 하는 코드는 <xref:System.Windows.Forms.ListBox> 루프에서 및를 호출 하는 루프의 각 단계를 수행한 후 `My.Application.DoEvents`, 폼이 다른 창 위로 끌 때 다시 그려집니다. 제거 하는 경우 `My.Application.DoEvents` 사용자 코드에서 폼이 그려집니다 단추의 click 이벤트 처리기가 완료 될 때까지 실행 합니다.  
  
 일반적으로 메시지를 처리 하는 루프에서이 메서드를 사용 합니다.  
  
> [!NOTE]
>  `My.Application.DoEvents` 메서드 이벤트를 처리 하지 동일한 방식으로 폼 마찬가지로 합니다. 직접 폼을 다중 스레딩을 사용 이벤트를 처리 합니다. 자세한 내용은 참조 [다중 스레드 응용 프로그램](http://msdn.microsoft.com/library/a06a1a56-dd16-44e8-bc01-2c2255511bc6)합니다.  
  
> [!CAUTION]
>  사용자 인터페이스 (UI) 이벤트를 처리 하는 메서드를 호출 하는 경우는 `My.Application.DoEvents` 메서드를 완료 되기 전에 메서드가 다시 입력할 수 있습니다. 이 때문에 발생할 수 있습니다는 `My.Application.DoEvents` Windows 메시지를 처리 하는 메서드 및 Windows 메시지 이벤트를 발생 시킬 수 있습니다.  
  
 다음 표에서 관련 된 작업의 예는 `My.Application.DoEvents` 메서드.  
  
|후|보기|  
|-|-|  
|UI 사용 중일 때 입력에 응답할 수 있는 폼을 허용 합니다.|[연습: 이벤트 처리](~/docs/visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 사용 하 여이 예제는 `My.Application.DoEvents` 방법에 대 한 ui `TextBox1` 를 업데이트 합니다.  
  
 [!code-vb[VbVbalrMyApplication#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#6)]  
  
 이 코드에 있는 형식 이어야 합니다는 `TextBox1` 구성 요소는 `Text` 속성입니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련된 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="EnableVisualStyles">
      <MemberSignature Language="C#" Value="protected bool EnableVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Property EnableVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool EnableVisualStyles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 응용 프로그램에서 창이나 컨트롤 등에 대해 Windows XP 스타일을 사용할지 여부를 확인합니다.</summary>
        <value>이 응용 프로그램에서 창이나 컨트롤 등에 대해 XP 창 스타일을 사용할지 여부를 나타내는 <see cref="T:System.Boolean" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 메서드를 호출할지 여부를 확인 하려면이 속성을 사용 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HideSplashScreen">
      <MemberSignature Language="C#" Value="protected void HideSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void HideSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HideSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HideSplashScreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>응용 프로그램의 시작 화면을 숨깁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 클래스는 별도 스레드에서 시작 화면을 만듭니다. 이 메서드는 올바른 스레드에서에 대 한 호출을 마샬링합니다.  
  
 이 메서드는 기본 폼에서 수행 되는 경우 로드 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleInstance">
      <MemberSignature Language="C#" Value="protected bool IsSingleInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsSingleInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSingleInstance { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 응용 프로그램이 단일 인스턴스 응용 프로그램인지 여부를 확인합니다.</summary>
        <value>이 응용 프로그램이 단일 인스턴스 응용 프로그램인지 여부를 나타내는 <see cref="T:System.Boolean" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> 메서드가이 속성을 사용 하 여이 응용 프로그램에 단일 인스턴스 응용 프로그램 인지 여부를 확인 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 응용 프로그램의 기본 폼을 가져오거나 설정합니다.</summary>
        <value>이 응용 프로그램의 기본 폼을 가져오거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 `MainForm` 속성을 가져오거나 설정할는 <xref:System.Windows.Forms.Form> Visual Basic 응용 프로그램 시작/종료 모델 응용 프로그램의 기본 폼으로 사용 하는 개체입니다.  
  
 이 속성은 Visual Basic 응용 프로그램 시작/종료 모델을 지원 합니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 응용 프로그램을 종료 하는 경우에이 속성에 변경 내용이 유지 되지 않습니다. 기본 폼을 영구적으로 변경 하려면의 설정을 변경 해야는 **프로젝트 디자이너**합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSplashScreenDisplayTime">
      <MemberSignature Language="C#" Value="public int MinimumSplashScreenDisplayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumSplashScreenDisplayTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumSplashScreenDisplayTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시작 화면이 표시되는 최소 시간(밀리초)을 결정합니다.</summary>
        <value>
          <see langword="Integer" />. 시작 화면이 표시되는 최소 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.MinimumSplashScreenDisplayTime` 속성을 사용 하면 표시 되는 응용 프로그램의 시작 화면을 원하는 시간의 최소 길이 지정할 수 있습니다. 기본 폼이이 속성에서 지정 된 것 보다 짧은 시간 안에 초기화을 완료 하면 시작 화면이 요청된 된 양의 시간이 지나서 기본 폼이 표시 될 때까지 유지 됩니다. 응용 프로그램 시작 시간이, 기본 폼이 활성화 되 면 시작 화면이 닫혀 있습니다.  
  
 프로젝트 디자이너를 사용 하 여 응용 프로그램의 시작 화면을 추가할 때 설정는 `My.Application.MinimumSplashScreenDisplayTime` 속성을 2000으로 2 초 시간의 최소 표시 합니다.  
  
 이 속성은 Visual Basic 응용 프로그램 모델을 지원 합니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 설정 해야는 `My.Application.MinimumSplashScreenDisplayTime` 속성을 재정의 하는 메서드에서 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 또는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> 메서드. 메서드를 재정의 하는 코드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 클래스는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 입력 해야 합니다.  
  
| |  
|-|  
|멤버를 재정의 하는 것에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br />자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 설정 하는 방법을 보여 주는이 예제는 `My.Application.MinimumSplashScreenDisplayTime` 속성을 재정의 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#51)]  
  
 이 예제에서는 프로젝트의 시작 화면 있어야 합니다.  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에이 코드를 입력 해야 합니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>네트워크 가용성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램은 `NetworkAvailabilityChanged` 네트워크의 사용 가능 여부가 변경 될 때마다 이벤트입니다. 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 의 속성은 `e` 매개 변수는 네트워크 연결의 새 상태를 가져옵니다. 네트워크 연결의 현재 상태를 가져오려면는 <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> 속성입니다.  
  
 이 이벤트는 다른 사용자 인터페이스 이벤트와 함께 응용 프로그램의 주 스레드에서 발생 합니다. 이 통해 이벤트 처리기는 응용 프로그램의 UI에 직접 액세스할 수 있습니다. 그러나 응용 프로그램이이 이벤트는 발생 하는 경우 다른 사용자 인터페이스 이벤트를 처리 중인 경우이 이벤트를 처리할 수 다른 이벤트 처리기가 완료 되거나는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> 메서드.  
  
 <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> 이벤트 처럼이 이벤트는 모든 응용 프로그램 유형에 사용할 수 있는 동일한 기능을 제공 합니다.  
  
 에 대 한 코드는 `NetworkAvailabilityChanged` 이벤트 처리기는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 저장 됩니다.  
  
| |  
|-|  
|응용 프로그램 이벤트에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트 **솔루션 탐색기.** 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br />자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
> [!NOTE]
>  대부분의 네트워크 허브 대규모 네트워크에서의 허브 연결이 끊어진 경우에 네트워크 연결을 제공 합니다. 따라서 유선된 연결에 대 한이 이벤트는 컴퓨터와 허브 간의 연결이 변경을 나타냅니다.  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Windows 95, Windows 98에서 실행 되는 경우 또는 Windows 2000에서 관리자가 아닌으로 실행 될 때 응용 프로그램에서 이벤트가 발생 하지 않습니다. 이러한 운영 체제에서 응용 프로그램이 실행 될 수 있습니다를 사용 하 여는 <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> 네트워크 가용성을 확인할 속성입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 호출는 `SetConnectionStatus` 기본 메서드 `Form1` 네트워크 가용성 변경 될 때 클래스입니다.  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에 코드를 입력 해야 합니다. 이 창에 액세스 하려면이 항목의 주의 섹션에서 지침을 따릅니다.  
  
 프로젝트 라는 폼이 있어야 합니다. `Form1`합니다. 라는 메서드가 있어야 `SetConnectionStatus` 를 사용 하는 `Boolean` 매개 변수입니다.  
  
 [!code-vb[VbVbalrMyApplication#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateMainForm">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateMainForm ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateMainForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateMainForm ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateMainForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 디자이너에서 시작 화면과 기본 폼을 구성하는 코드를 내보낼 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 아무 작업도 수행 하지 않습니다. 그러나 선택 하면 기본 폼의 Visual Basic에서 응용 프로그램에 대 한 **프로젝트 디자이너**를 설정 하는 방법으로이 메서드를 재정의 하는 디자이너는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> 기본 폼의 새 인스턴스를 속성.  
  
 이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateSplashScreen">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateSplashScreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 디자이너에서 시작 화면을 초기화하는 코드를 내보낼 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 아무 작업도 수행 하지 않습니다. Visual Basic에서 응용 프로그램에 대 한 시작 화면을 선택 하는 경우 **프로젝트 디자이너**, 디자이너 재정의 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> 메서드를 설정 하는 메서드로 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> 시작 화면 폼의 새 인스턴스 속성 .  
  
 이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; commandLineArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnInitialize(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; commandLineArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInitialize (commandLineArgs As ReadOnlyCollection(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnInitialize(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ commandLineArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.STAThread</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLineArgs" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="commandLineArgs">현재 응용 프로그램의 문자열을 명령줄 인수로 포함하는 <see langword="String" />의 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />입니다.</param>
        <summary>응용 프로그램에서 Windows 인증을 사용하는 경우 기본 응용 프로그램 스레드의 비주얼 스타일, 텍스트 표시 스타일 및 현재 보안 주체를 설정하고 시작 화면이 정의되어 있는 경우 이 시작 화면을 초기화합니다.</summary>
        <returns>응용 프로그램 시작을 계속해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드 비주얼 스타일, 텍스트 표시 스타일 및 기본 응용 프로그램 스레드 (Windows 인증을 사용 하는 응용 프로그램) 하는 경우에 대 한 현재 보안 주체를 설정 및 호출 `ShowSplashScreen` 모두 `/nosplash` 나 `-nosplash` 로 사용 되는 명령줄 인수입니다.  
  
 이 메서드는 다음 메서드를 호출합니다.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      </Docs>
    </Member>
    <Member MemberName="OnRun">
      <MemberSignature Language="C#" Value="protected virtual void OnRun ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnRun() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRun ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>초기화가 완료된 후 기본 응용 프로그램 실행을 시작할 준비가 되면 시작 지점을 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 Windows Forms 메시지 루프를 시작 하기 전에이 메서드를 호출는 `OnCreateMainForm` (응용 프로그램의 기본 폼 만들려는) 및 `HideSplashScreen` (시작 화면 닫기)을 메서드:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>. 기본 폼을 초기화 하는 코드를 내보낼 디자이너에 대 한 방법을 제공 합니다.  
  
     기본적으로이 메서드는 아무 작업도 수행 하지 않습니다. 그러나 선택 하면 기본 폼의 Visual Basic에서 응용 프로그램에 대 한 **프로젝트 디자이너**, 디자이너 재정의 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> 메서드를 설정 하는 메서드로 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> 기본 폼의 새 인스턴스를 속성.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>. 응용 프로그램에 정의 된 시작 화면에 열려 있는 경우이 메서드는 시작 화면을 닫습니다.  
  
     기본적으로이 메서드는 시작 화면을 닫습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 응용 프로그램이 종료될 때 코드가 실행될 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 기본 응용 프로그램에서 처리 되지 않은 예외가 발생 하는 경우 실행 되지 않습니다.  
  
 기본적으로이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnStartup(class Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStartup (eventArgs As StartupEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStartup(Microsoft::VisualBasic::ApplicationServices::StartupEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />. 응용 프로그램의 명령줄 인수를 포함하며 응용 프로그램 시작을 취소해야 하는지 여부를 나타냅니다.</param>
        <summary>파생 클래스에서 재정의된 경우 응용 프로그램이 시작될 때 코드가 실행될 수 있도록 합니다.</summary>
        <returns>응용 프로그램을 계속 시작해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 이벤트입니다. 이벤트 처리기는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 이벤트 인수의 속성입니다. 경우 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 은 `True`,이 메서드가 반환 `False` 응용 프로그램 시작을 취소할 수 있습니다. 그렇지 않으면 이 메서드는 `True`를 반환합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStartupNextInstance">
      <MemberSignature Language="C#" Value="protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnStartupNextInstance(class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartupNextInstance (eventArgs As StartupNextInstanceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartupNextInstance(Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />. 후속 응용 프로그램 인스턴스의 명령줄 인스턴스를 포함하며 예외 처리기를 종료할 때 첫 번째 응용 프로그램 인스턴스를 포그라운드로 가져와야 하는지 여부를 나타냅니다.</param>
        <summary>파생 클래스에서 재정의된 경우 단일 인스턴스 응용 프로그램의 후속 인스턴스가 시작될 때 코드가 실행될 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 이벤트입니다. 이벤트 처리기는 <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 이벤트 인수의 속성입니다. 경우 <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 은 `True`, 기본 폼을 활성화 하는 메서드. 그렇지 않은 경우 기본 폼의 현재 상태로 그대로 사용 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnUnhandledException(class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnhandledException (e As UnhandledExceptionEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnUnhandledException(Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</param>
        <summary>파생 클래스에서 재정의된 경우 응용 프로그램에서 처리되지 않은 예외가 발생할 때 코드가 실행될 수 있도록 합니다.</summary>
        <returns>
          <see cref="T:System.Boolean" /> 이벤트가 생성되었는지 여부를 나타내는 <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> 으로 디버거가 연결 되어 있지 않습니다 및 처리 하는 사용자는 `UnhandledException` 이벤트입니다. 이벤트 처리기는 <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 속성입니다. 경우 <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 은 `False`, 응용 프로그램은 예외 처리기에서 반환 될 때 종료 이벤트가 처리 되지 않은 경우 또는 합니다. 그렇지 않으면 응용 프로그램의 제어 하는 Windows Forms 메시지 루프에 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
      </Docs>
    </Member>
    <Member MemberName="OpenForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormCollection OpenForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FormCollection OpenForms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenForms As FormCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormCollection ^ OpenForms { System::Windows::Forms::FormCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램의 열려 있는 모든 폼 컬렉션을 가져옵니다.</summary>
        <value>응용 프로그램의 열려 있는 모든 폼이 들어 있는 <see cref="T:System.Windows.Forms.FormCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.OpenForms` 속성 응용 프로그램의 모든 열려 있는 폼의 컬렉션을 가져옵니다. 동작은 동일는 <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=nameWithType> 속성입니다.  
  
> [!NOTE]
>  `My.Application.OpenForms` 속성 열려 있는 모든 폼, 관계 없이 반환을 연 스레드입니다. 확인 해야는 <xref:System.Windows.Forms.Control.InvokeRequired%2A> ;에 액세스 하기 전에 각 폼의 속성, throw 할 수 있습니다는 <xref:System.InvalidOperationException> 예외입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 응용 프로그램의 열려 있는 폼 반복 실행 현재 스레드에서 직접 액세스할 수 있는 선택 하 고에서 해당 제목을 표시는 <xref:System.Windows.Forms.ListBox> 제어 합니다. 이 예제 Windows Forms 응용 프로그램 이라는 폼이 있어야 `Form1` 목록 상자를 포함 하는 `ListBox1`합니다.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 응용 프로그램의 열려 있는 폼을 반복 하 고에서 해당 제목을 표시 하는이 예제는 <xref:System.Windows.Forms.ListBox> 제어 합니다.  
  
 [!code-vb[VbVbalrMyApplication#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드에 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.FormCollection" />
        <altmember cref="P:System.Windows.Forms.Application.OpenForms" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Run(string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="commandLine">
          <see langword="String" /> 형식의 배열입니다. <see langword="Sub Main" />의 명령줄입니다.</param>
        <summary>Visual Basic 응용 프로그램 모델을 설정하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Run` 메서드 Visual Basic 응용 프로그램 모델에 대 한 지원을 제공 합니다. 이 메서드를 호출 하 여 응용 프로그램의 에서만 해야 `Sub Main`합니다. 기본적으로는 `Sub Main` Windows Forms의 응용 프로그램에서는이 메서드를 호출 합니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">모든 환경 변수를 액세스 하는 기능을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">레지스트리 변수에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련된 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.SocketPermission">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT 성능 카운터 구성 요소에 대 한 액세스 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SaveMySettingsOnExit">
      <MemberSignature Language="C#" Value="public bool SaveMySettingsOnExit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveMySettingsOnExit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveMySettingsOnExit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveMySettingsOnExit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램이 종료될 때 사용자 설정을 저장할지 여부를 결정합니다.</summary>
        <value>
          <see langword="Boolean" />. <see langword="True" />이면 응용 프로그램이 종료될 때 사용자 설정이 저장되고, 그렇지 않으면 설정이 암시적으로 저장되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SaveMySettingsOnExit` 런타임에 응용 프로그램 설정을 저장 하는 방법을 변경 하려면 사용자 속성을 사용 합니다. 사용 하 여 명시적으로 설정 변경 사항을 저장할 수 있습니다는 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 의 메서드는 `My.Settings` 개체입니다. 변경 하 고 설정을 저장 하는 방법에 대 한 자세한 내용은 참조 [응용 프로그램 속성](http://msdn.microsoft.com/library/0ad4926f-636e-41f8-a5b1-faf9d9b0a254)합니다.  
  
 응용 프로그램을 종료 하는 경우에이 속성에 변경 내용이 유지 되지 않습니다. 변경 하는 `SaveMySettingsOnExit` 속성 영구적으로 변경 해야 설정에는 **프로젝트 디자이너**:  
  
| |  
|-|  
|프로젝트 디자이너의 설정을 변경 하려면|  
|1.  **솔루션 탐색기**에서 프로젝트를 선택합니다. 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  선택 **종료 시 My.Settings 저장**합니다.|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에는 두 부분으로 구성 합니다.  
  
-   `InitializeSaveMySettingsOnExit` 서브루틴의 선택된 상태를 초기화 하는 <xref:System.Windows.Forms.CheckBox> 컨트롤의 현재 값을는 `SaveMySettingsOnExit` 속성입니다.  
  
-   `SaveMySettingsOnExit_CheckedChanged` 서브루틴에 대 한 변경 내용을 처리 하는 <xref:System.Windows.Forms.CheckBox> 업데이트 하도록 컨트롤의 `My.Application.SaveMySettingsOnExit` 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#12)]  
  
 이 예제가 작동 하려면 응용 프로그램 있어야는 <xref:System.Windows.Forms.CheckBox> 라는 컨트롤 `SaveMySettingsOnExit`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="ShowSplashScreen">
      <MemberSignature Language="C#" Value="protected void ShowSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void ShowSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowSplashScreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>응용 프로그램에 정의된 시작 화면이 있는지 여부를 확인하고 시작 화면이 있으면 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드를 호출 `OnCreateSplashScreen` 스레드로부터 안전한 방식입니다.  
  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> 시작을 표시 하는 코드를 포함 하는 메서드 이상으로 지정 된 밀리초 수에 대 한 화면는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> 속성입니다. 이 기능을 사용 하려면 설정 해야는 `My.Application.MinimumSplashScreenDisplayTime` 속성을 재정의 하는 메서드에서 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> 또는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> 메서드를 사용 하 여 응용 프로그램을 시작 화면을 추가 하거나는 **프로젝트 디자이너**합니다. 자세한 내용은 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>을 참조하세요.  
  
 이 메서드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event Shutdown As ShutdownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::ShutdownEventHandler ^ Shutdown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램이 종료되면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램은 `Shutdown` 종료 되기 전에 합니다. 이 옵션을 사용 하면 응용 프로그램에서 리소스를 닫는 방법을 제어할 수 있습니다. 이 이벤트는 Visual Basic 응용 프로그램 모델의 일부입니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 에 대 한 코드는 `Shutdown` 이벤트 처리기는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 저장 됩니다.  
  
| |  
|-|  
|응용 프로그램 이벤트에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br />자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 응용 프로그램이 종료 될 때 메시지를 로깅합니다.  
  
 [!code-vb[VbVbalrMyApplication#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#13)]  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에 코드를 입력 해야 합니다. 이 창에 액세스 하려면이 항목의 주의 섹션에서 지침을 따릅니다. 자세한 내용은 참조 [하는 방법: 로그 메시지는 응용 프로그램이 시작 또는 종료 하는 아래로](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStyle">
      <MemberSignature Language="C#" Value="protected internal Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ShutdownStyle As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::VisualBasic::ApplicationServices::ShutdownMode ShutdownStyle { Microsoft::VisualBasic::ApplicationServices::ShutdownMode get(); void set(Microsoft::VisualBasic::ApplicationServices::ShutdownMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램의 기본 폼이 닫힐 때 발생하는 동작을 결정합니다.</summary>
        <value>기본 폼이 닫힐 때 응용 프로그램에서 수행해야 하는 동작을 나타내는 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> 메서드 경우 응용 프로그램 기본 폼을 닫거나 열려 있는 다른 폼 새 기본 폼으로 승격 되어야 하는 경우를 종료 해야 결정 하려면이 속성의 값을 확인 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" />
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form SplashScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property SplashScreen As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ SplashScreen { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 응용 프로그램의 시작 화면을 가져오거나 설정합니다.</summary>
        <value>응용 프로그램에서 시작 화면으로 사용하는 <see cref="T:System.Windows.Forms.Form" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.SplashScreen` 속성 가져오거나 설정할 수 있습니다는 <xref:System.Windows.Forms.Form> 응용 프로그램에서 시작 화면으로 사용 하는 개체, 응용 프로그램을 시작 하는 동안 표시 되는 첫 번째 그래픽 형식입니다.  
  
 이 속성은 Visual Basic 응용 프로그램 모델을 지원 합니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 응용 프로그램을 종료 하는 경우에이 속성에 변경 내용이 유지 되지 않습니다. 시작 화면을 영구적으로 변경 하려면의 설정을 변경 해야는 **프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 사용 하 여이 예제는 `My.Application.SplashScreen` 속성 및 `My.Application.Startup` 응용 프로그램이 시작 될 때 시작 화면이 상태 정보로 업데이트 하는 이벤트입니다.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 이 예제를 실행 하려면 프로젝트 있어야 이라는 시작 화면이 `SplashScreen1`합니다. 시작 화면 라는 속성이 있어야 `Status` 하는 사용자 인터페이스를 업데이트 합니다.  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에이 코드를 입력 해야 합니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">이 속성 및 <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> 속성에 할당된 값이 동일한 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupEventHandler ^ Startup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램이 시작되면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반 (비 인스턴스) 응용 프로그램에서 발생 된 `Startup` 이벤트가 발생할 때마다 시작 합니다. 단일 인스턴스 응용 프로그램에서 발생 된 `Startup` 발생 없으면 응용 프로그램이 이미 활성, 그렇지 않으면만 시작 될 때 이벤트는 `StartupNextInstance` 이벤트입니다. 자세한 내용은 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>을 참조하세요.  
  
 이 이벤트는 Visual Basic 응용 프로그램 모델의 일부입니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 사용할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 `e` 매개 변수를 로드 하는 응용 프로그램의 시작 폼을 제어 합니다. 경우는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성이 `True`, 시작 폼이 시작 되지 않습니다. 이 경우 사용자 코드 시작 코드 경로 호출 해야 합니다.  
  
 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> 의 속성은 `e` 매개 변수 또는 <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> 응용 프로그램의 명령줄 인수에 액세스 하는 속성입니다.  
  
 에 대 한 코드는 `Startup` 이벤트 처리기는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 저장 됩니다.  
  
| |  
|-|  
|응용 프로그램 이벤트에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br /> 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 사용 하 여이 예제는 `My.Application.SplashScreen` 속성 및 `My.Application.Startup` 응용 프로그램이 시작 될 때 시작 화면이 상태 정보로 업데이트 하는 이벤트입니다.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 이 예제를 실행 하려면 프로젝트 있어야 이라는 시작 화면이 `SplashScreen1`합니다. 시작 화면 라는 속성이 있어야 `Status` 하는 사용자 인터페이스를 업데이트 합니다.  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에 코드를 입력 해야 합니다. 이 창에 액세스 하려면이 항목의 주의 섹션에서 지침을 따릅니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">이 이벤트에 대 한 이벤트 처리기를 추가 하는 기능을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" /></permission>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="StartupNextInstance">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      <MemberSignature Language="VB.NET" Value="Public Event StartupNextInstance As StartupNextInstanceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventHandler ^ StartupNextInstance;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단일 인스턴스 응용 프로그램을 시작하려고 할 때 해당 응용 프로그램이 이미 활성 상태이면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 인스턴스 응용 프로그램에서 발생 된 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 이미 활성화 된 경우 응용 프로그램을 다시 시작 하려고 할 때 이벤트입니다. 단일 인스턴스 응용 프로그램을 처음으로 시작 되 면 발생는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 이벤트입니다. 자세한 내용은 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>을 참조하세요.  
  
 이 이벤트는 Visual Basic 응용 프로그램 모델의 일부입니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 이 이벤트는 다른 사용자 인터페이스 이벤트와 함께 응용 프로그램의 주 스레드에서 발생 합니다. 따라서 이벤트 처리기를 응용 프로그램의 사용자 인터페이스에 직접 액세스할 수 있습니다. 그러나 응용 프로그램이이 이벤트는 발생 하는 경우 다른 사용자 인터페이스 이벤트를 처리 중인 경우이 이벤트를 처리할 수 다른 이벤트 처리기가 완료 되거나는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> 메서드.  
  
> [!NOTE]
>  `StartupNextInstance` 이벤트는 단일 인스턴스 응용 프로그램에만 발생 합니다. 응용 프로그램에 대 한 단일 인스턴스 동작을 사용 하도록 설정 하려면 확인 해야 합니다는 **단일 인스턴스 응용 프로그램** 프로젝트 디자이너에서 확인란 합니다.  
  
| |  
|-|  
|단일 인스턴스 응용 프로그램을 확인 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  선택 된 **단일 인스턴스 응용 프로그램** 확인란 합니다.|  
  
 사용 해야 합니다는 <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> 의 속성은 `e` 매개 변수를 단일 인스턴스 응용 프로그램을 시작을 시도 하기 위해 인수에 액세스 합니다. <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> 속성은 단일 인스턴스 응용 프로그램의 첫 번째 인스턴스를 시작 하는 데 사용 되는 인수를 제공 합니다.  
  
 에 대 한 코드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 이벤트 처리기는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 저장 됩니다.  
  
| |  
|-|  
|응용 프로그램 이벤트에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br />자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
 다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Application.StartupNextInstance` 이벤트입니다.  
  
|대상|보기|  
|-|-|  
|첫 번째 응용 프로그램 인스턴스의 명령줄 인수를 확인 합니다.|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|예|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 사용 하 여이 예제는 `e` 의 매개 변수는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 응용 프로그램의 명령줄 인수를 검사 하는 이벤트 처리기입니다. 로 시작 하는 인수가 있는 경우 `/input=`, 인수에 지정 된 나머지 표시 됩니다.  
  
 [!code-vb[VbVbalrMyApplication#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#15)]  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에 코드를 입력 해야 합니다. 이 창에 액세스 하려면이 항목의 주의 섹션에서 지침을 따릅니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램에서 처리되지 않은 예외가 발생할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램은 `UnhandledException` 은 처리 되지 않은 예외가 발생할 때 이벤트입니다. 이 이벤트는 Visual Basic 응용 프로그램 모델의 일부입니다. 자세한 내용은 참조 [Visual Basic 응용 프로그램 모델의 개요](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)합니다.  
  
 사용할 수 있습니다는 <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> 속성은 `e` 매개 변수가이 이벤트를 발생 시킨 처리 되지 않은 예외에 액세스할 수 있습니다.  
  
 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 의 속성은 `e` 응용 프로그램이 종료 여부를 제어 하는 매개 변수입니다. 기본적으로 <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 은 `True`합니다. 따라서 응용 프로그램을 완료 한 후 끝내는 `UnhandledException` 이벤트 처리기입니다. 값을 설정할 수 `False` 에 `UnhandledException` 이벤트 처리기를 실행 하 고, 응용 프로그램을 유지 하 고 대기 상태로 반환 하도록 합니다.  
  
 에 대 한 코드는 `UnhandledException` 이벤트 처리기는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 저장 됩니다.  
  
| |  
|-|  
|응용 프로그램 이벤트에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.|  
  
 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
> [!NOTE]
>  Visual Basic 컴파일러에서 처리 되지 않은 예외를 처리 하는 디버거를 사용 하도록 설정 하려면이 이벤트를 발생 시킬 디버깅에 대해 작성 된 응용 프로그램을 방지 합니다. 즉, Visual Studio 통합 개발 환경 디버거에서 실행 하 여 응용 프로그램을 테스트 하는 경우 프로그램 `UnhandledException` 이벤트 처리기 호출 되지 것입니다. 디버깅을 위해 응용 프로그램을 구축 하는 방법에 대 한 자세한 내용은 참조 [/debug (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/debug.md)합니다.  
  
## <a name="tasks"></a>작업  
 다음 표에서 관련 된 작업의 예는 `My.Application.UnhandledException` 이벤트입니다.  
  
|대상|보기|  
|-|-|  
|처리 되지 않은 예외 기록|[방법: 예외 기록](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows Forms 응용 프로그램|**예**|  
|클래스 라이브러리|아니요|  
|콘솔 응용 프로그램|아니요|  
|Windows Forms 컨트롤 라이브러리|아니요|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|아니요|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 사용 하 여이 예제는 `My.Application.UnhandledException` 처리 되지 않은 예외 이벤트를 모두 기록 합니다.  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에 코드를 입력 해야 합니다. 이 창에 액세스 하려면이 항목의 설명 섹션에 있는 절차를 따릅니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 때문에 `UnhandledException` 디버거가 응용 프로그램에 연결 될 때 이벤트가 발생 하지 않습니다,이 예제에서는 Visual Studio 통합 개발 환경 외부에서 실행 해야 합니다.  
  
 [!code-vb[VbVbalrMyApplication#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#17)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">이 이벤트에 대 한 이벤트 처리기를 추가 하는 기능을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" /></permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="protected static bool UseCompatibleTextRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property bool UseCompatibleTextRendering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 이 속성은 디자이너가 응용 프로그램 폼의 기본 텍스트 렌더링 엔진을 지정하는 데 사용될 수 있습니다.</summary>
        <value>
          <see langword="Boolean" />. 값이 <see langword="False" /> 응용 프로그램에 대 한 기본 텍스트 렌더링 엔진을 사용 해야 함을 나타냅니다 [! INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]입니다. <see langword="True" /> 값은 응용 프로그램에서 Visual Basic .NET 2002 및 Visual Basic .NET 2003의 텍스트 렌더링 엔진을 사용해야 함을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 속성이 반환 `False` 텍스트를 지정 하는 GDI 렌더링 엔진에 대 한 [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] 응용 프로그램의 폼에 대해 사용할 수 있습니다. 그러나 반환 하도록이 속성을 재정의할 수 `True` 고 GDI + 텍스트 렌더링 엔진, Visual Basic.NET 2002 및 Visual Basic.NET 2003에서 사용 되는 응용 프로그램의 폼에 사용 하도록 지정 합니다.  
  
 이 속성은 의해 호출 됩니다는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 생성자입니다.  
  
 메서드를 재정의 하는 코드는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 클래스는 기본적으로 숨겨져 있는 ApplicationEvents.vb 파일에 입력 해야 합니다.  
  
| |  
|-|  
|멤버를 재정의 하는 것에 대 한 코드 편집기 창에 액세스 하려면|  
|1.  선택한 프로젝트와 **솔루션 탐색기**, 클릭 **속성** 에 **프로젝트** 메뉴.<br />2.  **응용 프로그램** 탭을 클릭합니다.<br />3.  **응용 프로그램 이벤트 보기** 단추를 클릭하여 코드 편집기를 엽니다.<br /><br />자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.|  
  
   
  
## Examples  
 GDI + 텍스트 렌더링 엔진을 재정의 하 여 응용 프로그램의 기본 렌더링 엔진으로 설정 하는 방법을 보여 주는이 예제는 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A> 속성입니다.  
  
```vb  
Protected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  
    Get  
        ' Use the GDI+ text rendering engine.  
        Return True  
    End Get  
End Property  
```  
  
 응용 프로그램 이벤트에 대 한 코드 편집기 창에이 코드를 입력 해야 합니다. 자세한 내용은 [프로젝트 디자이너, 응용 프로그램 페이지(Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)를 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>