<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="682fe-101">현재 사용자에 대한 정보에 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-101">Provides access to the information about the current user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-102">의해 노출 되는 메서드와 속성은 `My.User` 개체는 현재 사용자에 대 한 정보에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-102">The properties and methods exposed by the `My.User` object provide access to the information about the current user.</span></span> <span data-ttu-id="682fe-103">"현재 사용자"의 의미는 Windows 및 웹 응용 프로그램 간에 약간 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-103">The meaning of "current user" differs slightly between Windows and Web applications.</span></span> <span data-ttu-id="682fe-104">Windows 응용 프로그램에서 현재 사용자는 응용 프로그램을 실행 하는 사용자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-104">In a Windows application, the current user is the user who runs the application.</span></span> <span data-ttu-id="682fe-105">웹 응용 프로그램에서 현재 사용자는 사용자 응용 프로그램에 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-105">In a Web application, the current user is the user who accesses the application.</span></span>  
  
 <span data-ttu-id="682fe-106">`My.User` 속성에 액세스할 수도 <xref:System.Security.Principal.IPrincipal> 현재 사용자에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-106">The `My.User` property also provides access to the <xref:System.Security.Principal.IPrincipal> for the current user.</span></span> <span data-ttu-id="682fe-107">Principal 개체를 해당 사용자의 id 및 사용자가 속한 모든 역할을 포함 하 여 사용자의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-107">A principal object represents the user's security context, including that user's identity and any roles to which the user belongs.</span></span>  
  
 <span data-ttu-id="682fe-108">Windows 응용 프로그램의 경우이 속성은 동일한 기능을 제공 된 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-108">For Windows applications, this property provides the same functionality as the <xref:System.Threading.Thread.CurrentPrincipal%2A> property.</span></span> <span data-ttu-id="682fe-109">웹 응용 프로그램에서는이 속성은 동일한 기능을 제공 된 <xref:System.Web.HttpContext.User%2A> 반환 되는 개체의 속성은 <xref:System.Web.HttpContext.Current%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-109">For Web applications, this property provides the same functionality as the <xref:System.Web.HttpContext.User%2A> property of the object returned by the <xref:System.Web.HttpContext.Current%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-110">프로젝트만 기반 Windows 응용 프로그램에는 **Windows 응용 프로그램** 서식 파일 초기화는 `My.User` 기본적으로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-110">For Windows applications, only projects built on the **Windows Application** template initialize the `My.User` object by default.</span></span> <span data-ttu-id="682fe-111">다른 모든 Windows 프로젝트 형식에 초기화 해야 합니다는 `My.User` 호출 하 여 개체는 <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> 메서드 값을 할당 하 여 명시적으로 또는 <xref:System.Threading.Thread.CurrentPrincipal%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-111">In all other Windows project types, you must initialize the `My.User` object by calling the <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-112">`My.User` 개체 이러한 운영 체제 로그온 한 사용자의 개념을 지원 하지 않으므로 Windows 95, Windows 98에서 실행 될 경우 현재 Windows 사용자에 대 한 정보를 보고할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-112">The `My.User` object cannot report information about the current Windows user when run under Windows 95 and Windows 98 because those operating systems do not support the concept of a logged-on user.</span></span> <span data-ttu-id="682fe-113">사용 하려면 사용자 지정 인증을 구현 해야 합니다는 `My.User` 이러한 운영 체제에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-113">You must implement custom authentication to use the `My.User` object on those operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682fe-114">이 예제에서는 응용 프로그램 창 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석 하 여 `My.User.Name` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-114">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="682fe-115"><see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-116">의해 노출 되는 메서드와 속성은 `My.User` 개체는 현재 사용자에 대 한 정보에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-116">The properties and methods exposed by the `My.User` object provide access to information about the current user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="682fe-117">현재 보안 주체(역할 기반 보안용)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-117">Gets or sets the current principal (for role-based security).</span></span></summary>
        <value><span data-ttu-id="682fe-118">보안 컨텍스트를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-118">A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-119">설정할 수 있습니다는 `My.User.CurrentPrincipal` 속성을 구현 하는 개체는 <xref:System.Security.Principal.IPrincipal> 인터페이스를 사용자 지정 인증을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-119">You can set the `My.User.CurrentPrincipal` property to an object that implements the <xref:System.Security.Principal.IPrincipal> interface to enable custom authentication.</span></span>  
  
 <span data-ttu-id="682fe-120">대부분의 프로젝트 형식에서이 속성 가져오고 스레드의 현재 보안 주체를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-120">In most project types, this property gets and sets the thread's current principal.</span></span> <span data-ttu-id="682fe-121">ASP.NET 응용 프로그램에서이 속성 가져오고 현재 HTTP 요청의 사용자 id에 대 한 보안 정보를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-121">In an ASP.NET application, this property gets and sets the security information for the current HTTP request's user identity.</span></span>  
  
 <span data-ttu-id="682fe-122">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 **모든** 탭 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-122">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-123">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-123">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-124">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-124">Project type</span></span>|<span data-ttu-id="682fe-125">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-125">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-126">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-126">Windows Application</span></span>|<span data-ttu-id="682fe-127">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-127">**Yes**</span></span>|  
|<span data-ttu-id="682fe-128">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-128">Class Library</span></span>|<span data-ttu-id="682fe-129">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-129">**Yes**</span></span>|  
|<span data-ttu-id="682fe-130">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-130">Console Application</span></span>|<span data-ttu-id="682fe-131">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-131">**Yes**</span></span>|  
|<span data-ttu-id="682fe-132">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-132">Windows Control Library</span></span>|<span data-ttu-id="682fe-133">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-133">**Yes**</span></span>|  
|<span data-ttu-id="682fe-134">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-134">Web Control Library</span></span>|<span data-ttu-id="682fe-135">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-135">**Yes**</span></span>|  
|<span data-ttu-id="682fe-136">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-136">Windows Service</span></span>|<span data-ttu-id="682fe-137">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-137">**Yes**</span></span>|  
|<span data-ttu-id="682fe-138">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-138">Web Site</span></span>|<span data-ttu-id="682fe-139">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-139">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682fe-140">이 예제에서는 응용 프로그램 창 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석을 `My.User.Name` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-140">This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682fe-141">호출자에게 보안 주체를 설정하는 데 필요한 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-141">The caller does not have the permission required to set the principal.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-142">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-142">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-143">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="682fe-144">스레드의 현재 보안 주체를 응용 프로그램을 시작한 Windows 사용자로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-144">Sets the thread's current principal to the Windows user that started the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-145">사용할 수는 `My.User.InitializeWithWindowsUser` 메서드를 응용 프로그램을 시작한 Windows 사용자에 게는 스레드의 현재 보안 주체를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-145">You can use the `My.User.InitializeWithWindowsUser` method to set the thread's current principal to the Windows user that started the application.</span></span> <span data-ttu-id="682fe-146">Windows 응용 프로그램에서 Visual Basic 응용 프로그램 모델 시작 시 기본적으로이 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-146">The Visual Basic Application Model in a Windows application calls this method at startup by default.</span></span> <span data-ttu-id="682fe-147">다른 프로젝트 형식에서 설정 해야이 메서드를 명시적으로 호출 하 여 또는 값을 할당 하 여 스레드의 현재 보안 주체 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-147">In other project types, you must set the thread's current principal by calling this method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="682fe-148">Windows 프로젝트에는 `My.User` 스레드의 현재 보안 주체를 기반으로 하는 개체; 이므로이 메서드는 정보를 변경할 수 `My.User` 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-148">In Windows projects, the `My.User` object is based on the thread's current principal; therefore, this method can change the information `My.User` returns.</span></span> <span data-ttu-id="682fe-149">ASP.NET 응용 프로그램에서 `My.User` 개체는 현재 HTTP 요청 사용자 id를 기반으로 하며이 메서드에 의해 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-149">In an ASP.NET application, the `My.User` object is based on the current HTTP request's user identity, and is unaffected by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-150">정확한 동작은 `My.User` 개체에 응용 프로그램이 실행 되는 운영 체제 및 응용 프로그램 종류에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-150">The exact behavior of the `My.User` object depends on the type of application and on the operating system on which the application runs.</span></span> <span data-ttu-id="682fe-151">자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-151">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
 <span data-ttu-id="682fe-152">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 **모든** 탭 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-152">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-153">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-153">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-154">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-154">Project type</span></span>|<span data-ttu-id="682fe-155">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-155">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-156">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-156">Windows Application</span></span>|<span data-ttu-id="682fe-157">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-157">**Yes**</span></span>|  
|<span data-ttu-id="682fe-158">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-158">Class Library</span></span>|<span data-ttu-id="682fe-159">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-159">**Yes**</span></span>|  
|<span data-ttu-id="682fe-160">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-160">Console Application</span></span>|<span data-ttu-id="682fe-161">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-161">**Yes**</span></span>|  
|<span data-ttu-id="682fe-162">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-162">Windows Control Library</span></span>|<span data-ttu-id="682fe-163">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-163">**Yes**</span></span>|  
|<span data-ttu-id="682fe-164">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-164">Web Control Library</span></span>|<span data-ttu-id="682fe-165">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-165">**Yes**</span></span>|  
|<span data-ttu-id="682fe-166">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-166">Windows Service</span></span>|<span data-ttu-id="682fe-167">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-167">**Yes**</span></span>|  
|<span data-ttu-id="682fe-168">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-168">Web Site</span></span>|<span data-ttu-id="682fe-169">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-169">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-170">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-170">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-171">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-171">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="682fe-172">현재 사용자를 나타내는 Principal 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-172">Gets or sets the principal object representing the current user.</span></span></summary>
        <value><span data-ttu-id="682fe-173">현재 사용자를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-173">An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-174">에 <xref:Microsoft.VisualBasic.ApplicationServices.User> 개체를이 속성을 래핑하는 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-174">In the <xref:Microsoft.VisualBasic.ApplicationServices.User> object, this property wraps the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="682fe-175">다른 기능을 제공 하기 위해 파생된 클래스에서이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-175">Override this method in a derived class to provide different behavior.</span></span> <span data-ttu-id="682fe-176">예를 들어는 <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> 속성이이 속성을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-176">For example, the <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> property overrides this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="682fe-177">사용자가 인증되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-177">Gets a value that indicates whether the user has been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="682fe-178">사용자가 인증되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-178"><see langword="True" /> if the user was authenticated; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-179">`My.User.IsAuthenticated` 속성을 사용 하면 현재 사용자가 인증 된 경우를 확인 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-179">The `My.User.IsAuthenticated` property allows your code to determine if the current user has been authenticated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-180">정확한 동작은 `My.User` 개체 및 응용 프로그램이 실행 되는 운영 체제에서 응용 프로그램의 종류에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-180">The exact behavior of `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="682fe-181">자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-181">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-182">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-182">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-183">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-183">Project type</span></span>|<span data-ttu-id="682fe-184">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-184">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-185">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-185">Windows Application</span></span>|<span data-ttu-id="682fe-186">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-186">**Yes**</span></span>|  
|<span data-ttu-id="682fe-187">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-187">Class Library</span></span>|<span data-ttu-id="682fe-188">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-188">**Yes**</span></span>|  
|<span data-ttu-id="682fe-189">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-189">Console Application</span></span>|<span data-ttu-id="682fe-190">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-190">**Yes**</span></span>|  
|<span data-ttu-id="682fe-191">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-191">Windows Control Library</span></span>|<span data-ttu-id="682fe-192">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-192">**Yes**</span></span>|  
|<span data-ttu-id="682fe-193">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-193">Web Control Library</span></span>|<span data-ttu-id="682fe-194">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-194">**Yes**</span></span>|  
|<span data-ttu-id="682fe-195">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-195">Windows Service</span></span>|<span data-ttu-id="682fe-196">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-196">**Yes**</span></span>|  
|<span data-ttu-id="682fe-197">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-197">Web Site</span></span>|<span data-ttu-id="682fe-198">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-198">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682fe-199">이 예제는 사용자가 리소스에 액세스 하기 전에 인증 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-199">This example verifies that the user has been authenticated before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-200">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-200">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-201">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-201">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="682fe-202">현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-202">Determines whether the current user belongs to the specified role.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="682fe-203">멤버 자격을 확인할 기본 제공 Windows 역할입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-203">The built-in Windows role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="682fe-204">현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-204">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns>
          <span data-ttu-id="682fe-205">현재 사용자가 지정한 역할의 멤버이면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-205"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-206">`My.User.IsInRole` 메서드를 사용 하면 현재 사용자 지정된 된 역할의 멤버 인지 확인 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-206">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="682fe-207">오버 로드는 `My.User.IsInRole` 에 쉽게 액세스할 수를 제공 하는 문자열을 사용 하는 메서드는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 현재 보안 주체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="682fe-207">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="682fe-208">오버 로드는 `My.User.IsInRole` 를 받는 메서드에 `BuiltInRole` 열거형 현재 보안 주체에 따라 다르게 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-208">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="682fe-209">Windows 사용자 계정 이면 (<xref:System.Security.Principal.WindowsPrincipal>),이 함수는 변환 `role` 을 해당 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 호출의 결과 반환 하 고 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-209">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="682fe-210">이 함수에 열거형 값의 이름을 전달 합니다. 현재 보안 주체가 다른 보안 주체 이면 `role` 주체의 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="682fe-210">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-211">정확한 동작은 `My.User` 개체 및 응용 프로그램이 실행 되는 운영 체제에서 응용 프로그램의 종류에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-211">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="682fe-212">자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-212">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-213">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-213">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-214">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-214">Project type</span></span>|<span data-ttu-id="682fe-215">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-215">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-216">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-216">Windows Application</span></span>|<span data-ttu-id="682fe-217">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-217">**Yes**</span></span>|  
|<span data-ttu-id="682fe-218">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-218">Class Library</span></span>|<span data-ttu-id="682fe-219">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-219">**Yes**</span></span>|  
|<span data-ttu-id="682fe-220">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-220">Console Application</span></span>|<span data-ttu-id="682fe-221">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-221">**Yes**</span></span>|  
|<span data-ttu-id="682fe-222">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-222">Windows Control Library</span></span>|<span data-ttu-id="682fe-223">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-223">**Yes**</span></span>|  
|<span data-ttu-id="682fe-224">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-224">Web Control Library</span></span>|<span data-ttu-id="682fe-225">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-225">**Yes**</span></span>|  
|<span data-ttu-id="682fe-226">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-226">Windows Service</span></span>|<span data-ttu-id="682fe-227">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-227">**Yes**</span></span>|  
|<span data-ttu-id="682fe-228">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-228">Web Site</span></span>|<span data-ttu-id="682fe-229">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-229">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682fe-230">이 예제에서는 리소스에 액세스 하기 전에 사용자가 관리자 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-230">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-231">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-231">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-232">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-232">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="682fe-233">멤버 여부를 확인하기 위한 역할의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-233">The name of the role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="682fe-234">현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-234">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns>
          <span data-ttu-id="682fe-235">현재 사용자가 지정한 역할의 멤버이면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-235"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-236">`My.User.IsInRole` 메서드를 사용 하면 현재 사용자 지정된 된 역할의 멤버 인지 확인 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-236">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="682fe-237">오버 로드는 `My.User.IsInRole` 에 쉽게 액세스할 수를 제공 하는 문자열을 사용 하는 메서드는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 현재 보안 주체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="682fe-237">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="682fe-238">오버 로드는 `My.User.IsInRole` 를 받는 메서드에 `BuiltInRole` 열거형 현재 보안 주체에 따라 다르게 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-238">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="682fe-239">Windows 사용자 계정 이면 (<xref:System.Security.Principal.WindowsPrincipal>),이 함수는 변환 `role` 을 해당 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 호출의 결과 반환 하 고 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-239">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="682fe-240">이 함수에 열거형 값의 이름을 전달 합니다. 현재 보안 주체가 다른 보안 주체 이면 `role` 주체의 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="682fe-240">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-241">정확한 동작은 `My.User` 개체 및 응용 프로그램이 실행 되는 운영 체제에서 응용 프로그램의 종류에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-241">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="682fe-242">자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-242">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-243">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-243">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-244">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-244">Project type</span></span>|<span data-ttu-id="682fe-245">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-245">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-246">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-246">Windows Application</span></span>|<span data-ttu-id="682fe-247">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-247">**Yes**</span></span>|  
|<span data-ttu-id="682fe-248">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-248">Class Library</span></span>|<span data-ttu-id="682fe-249">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-249">**Yes**</span></span>|  
|<span data-ttu-id="682fe-250">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-250">Console Application</span></span>|<span data-ttu-id="682fe-251">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-251">**Yes**</span></span>|  
|<span data-ttu-id="682fe-252">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-252">Windows Control Library</span></span>|<span data-ttu-id="682fe-253">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-253">**Yes**</span></span>|  
|<span data-ttu-id="682fe-254">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-254">Web Control Library</span></span>|<span data-ttu-id="682fe-255">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-255">**Yes**</span></span>|  
|<span data-ttu-id="682fe-256">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-256">Windows Service</span></span>|<span data-ttu-id="682fe-257">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-257">**Yes**</span></span>|  
|<span data-ttu-id="682fe-258">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-258">Web Site</span></span>|<span data-ttu-id="682fe-259">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-259">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682fe-260">이 예제에서는 리소스에 액세스 하기 전에 사용자가 관리자 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-260">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-261">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-261">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-262">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-262">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="682fe-263">현재 사용자의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-263">Gets the name of the current user.</span></span></summary>
        <value>
          <span data-ttu-id="682fe-264"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="682fe-264"><see langword="String" />.</span></span> <span data-ttu-id="682fe-265">현재 사용자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-265">The name of the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="682fe-266">사용할 수는 `My.User` 현재 사용자에 대 한 정보를 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-266">You can use the `My.User` object to get information about the current user.</span></span>  
  
 <span data-ttu-id="682fe-267">사용자를 인증 하는 보안 주체의 사용자 이름의 형식을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-267">The principal that authenticates the user also controls the format of the user name.</span></span> <span data-ttu-id="682fe-268">기본적으로 응용 프로그램에서 Windows 인증을 사용 하 고 사용자 이름에 도메인 \ 사용자 이름 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-268">By default, an application uses Windows authentication, and the user name has the format DOMAIN\USERNAME.</span></span> <span data-ttu-id="682fe-269">보안 주체의 사용자 지정 구현을 동일한 형식을 반드시 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-269">A custom implementation of the principal does not necessarily use the same format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-270">`My.User.Name` 속성이 이러한 운영 체제 사용자 이름을 인식 하지 않기 때문에 Windows 95, Windows 98에서 실행 될 경우 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-270">The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682fe-271">정확한 동작은 `My.User` 개체 및 응용 프로그램이 실행 되는 운영 체제에서 응용 프로그램의 종류에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-271">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="682fe-272">자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-272">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="682fe-273">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="682fe-273">Availability by Project Type</span></span>  
  
|<span data-ttu-id="682fe-274">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="682fe-274">Project type</span></span>|<span data-ttu-id="682fe-275">사용 가능</span><span class="sxs-lookup"><span data-stu-id="682fe-275">Available</span></span>|  
|-|-|  
|<span data-ttu-id="682fe-276">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-276">Windows Application</span></span>|<span data-ttu-id="682fe-277">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-277">**Yes**</span></span>|  
|<span data-ttu-id="682fe-278">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-278">Class Library</span></span>|<span data-ttu-id="682fe-279">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-279">**Yes**</span></span>|  
|<span data-ttu-id="682fe-280">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="682fe-280">Console Application</span></span>|<span data-ttu-id="682fe-281">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-281">**Yes**</span></span>|  
|<span data-ttu-id="682fe-282">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-282">Windows Control Library</span></span>|<span data-ttu-id="682fe-283">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-283">**Yes**</span></span>|  
|<span data-ttu-id="682fe-284">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="682fe-284">Web Control Library</span></span>|<span data-ttu-id="682fe-285">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-285">**Yes**</span></span>|  
|<span data-ttu-id="682fe-286">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="682fe-286">Windows Service</span></span>|<span data-ttu-id="682fe-287">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-287">**Yes**</span></span>|  
|<span data-ttu-id="682fe-288">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="682fe-288">Web Site</span></span>|<span data-ttu-id="682fe-289">**예**</span><span class="sxs-lookup"><span data-stu-id="682fe-289">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682fe-290">이 예제에서는 응용 프로그램 창 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석 하 여 `My.User.Name` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-290">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682fe-291">코드에 적용되는 보안 사용 권한 집합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="682fe-291">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="682fe-292">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="682fe-292">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>