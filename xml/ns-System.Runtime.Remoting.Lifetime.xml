<Namespace Name="System.Runtime.Remoting.Lifetime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ac8c7510ea8c5026f390f2936bebfb8b315c4f4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30735637" /></Metadata><Docs>
    <summary><span data-ttu-id="cb363-101"><see cref="N:System.Runtime.Remoting.Lifetime" /> 네임스페이스에는 원격 개체의 수명을 관리하는 클래스가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-101">The <see cref="N:System.Runtime.Remoting.Lifetime" /> namespace contains classes that manage the lifetime of remote objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb363-102">일반적으로 분산된 된 가비지 수집 참조 횟수와 개체의 수명을 제어에 대 한 ping을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-102">Traditionally, distributed garbage collection uses reference counts and pinging for control over the lifetime of objects.</span></span> <span data-ttu-id="cb363-103">서비스 당 몇 명의 클라이언트만 사용 하는 경우 작동 하지만 수천 개의 서비스 클라이언트가 사용 하는 경우 확장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-103">This works well when there are a few clients per service, but doesn't scale well when there are thousands of clients per service.</span></span> <span data-ttu-id="cb363-104">원격 수명 서비스는 각 서비스를 사용 하 여 임대를 연결 하 고 해당 임대 시간이 만료 되 면 서비스를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-104">The remoting lifetime service associates a lease with each service, and deletes a service when its lease time expires.</span></span> <span data-ttu-id="cb363-105">수명 서비스는 일반 가비지 수집기의 기능에 대해 수행할 수와 함께 조정 됩니다 서버당 클라이언트 수가 증가 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cb363-105">The lifetime service can take on the function of a traditional distributed garbage collector, and it also adjusts well when the numbers of clients per server increases.</span></span>  
  
 <span data-ttu-id="cb363-106">각 애플리케이션 도메인에서 해당 도메인의 임대를 제어 하는 일을 담당 하는 임대 관리자가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-106">Each application domain contains a lease manager that is responsible for controlling leases in its domain.</span></span> <span data-ttu-id="cb363-107">모든 임대는 만료 된 임대 시간에 대 한 주기적으로 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-107">All leases are examined periodically for expired lease times.</span></span> <span data-ttu-id="cb363-108">임대가 만료 된 경우 하나 이상의 임대 스폰서가 호출 되며 임대를 갱신할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-108">If a lease has expired, one or more of the lease's sponsors are invoked and given the opportunity to renew the lease.</span></span> <span data-ttu-id="cb363-109">를 하지 않으면 스폰서가 임대를 갱신할 임대 관리자가 임대를 제거 하 고 가비지 수집기에서 개체를 수집할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-109">If none of the sponsors decides to renew the lease, the lease manager removes the lease and the object can be collected by the garbage collector.</span></span> <span data-ttu-id="cb363-110">임대 관리자에는 남은 임대 시간을 기준으로 정렬 하는 임대를 사용 하 여 임대 목록을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-110">The lease manager maintains a lease list with leases sorted by remaining lease time.</span></span> <span data-ttu-id="cb363-111">남은 시간이 가장 짧은 사용 하 여 임대 목록 맨 위에 있는 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cb363-111">The leases with the shortest remaining time are stored at the top of the list.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>