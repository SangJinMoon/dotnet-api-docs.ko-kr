<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FilterType.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7227bfd3c996bd0bd5cb7115e9d6a7df40c10722cd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27bfd3c996bd0bd5cb7115e9d6a7df40c10722cd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Routing.Configuration.FilterType">
          <source>Specifies the type of filter to use when routing messages.</source>
          <target state="translated">메시지를 라우팅할 때 사용할 필터의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Routing.Configuration.FilterType">
          <source>For more information about using <ph id="ph1">&lt;xref:System.ServiceModel.Routing.Configuration.FilterType&gt;</ph>, see <ph id="ph2">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Routing.Configuration.FilterType&gt;</ph> 사용에 대한 자세한 내용은 <ph id="ph2">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.Action">
          <source>Use <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /&gt;</ph> to filter on an action.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /&gt;</ph>를 사용하여 작업을 필터링합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.And">
          <source>Use <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /&gt;</ph> to filter on two message filters, ANDed together.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /&gt;</ph>를 사용하여 AND가 적용된 두 메시지 필터를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.Custom">
          <source>Use a user-defined filter.</source>
          <target state="translated">사용자 정의 필터를 사용합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress">
          <source>Use <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /&gt;</ph> with <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /&gt;</ph> set to <bpt id="p1">**</bpt>false<ept id="p1">**</ept> to filter on the address.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /&gt;</ph>을 <bpt id="p1">**</bpt>false<ept id="p1">**</ept>로 설정한 채로 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /&gt;</ph>를 사용하여 주소를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName">
          <source>Use the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /&gt;</ph> to filter on the name of the service endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /&gt;</ph>를 사용하여 서비스 끝점의 이름을 필터링합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll">
          <source>Use the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /&gt;</ph> to match all messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /&gt;</ph>를 사용하여 모든 일치 메시지를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress">
          <source>Use <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /&gt;</ph> with <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /&gt;</ph> set to <bpt id="p1">**</bpt>false<ept id="p1">**</ept> to filter on the address using longest prefix matching.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /&gt;</ph>을 <bpt id="p1">**</bpt>false<ept id="p1">**</ept>로 설정한 채로 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /&gt;</ph>를 사용하여 가장 긴 접두사 일치 조건에서 주소를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Routing.Configuration.FilterType.XPath">
          <source>Use the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /&gt;</ph> to filter on an XPath expression.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /&gt;</ph>를 사용하여 XPath 식을 필터링합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>