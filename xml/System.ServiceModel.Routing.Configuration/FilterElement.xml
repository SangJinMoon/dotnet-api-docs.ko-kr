<Type Name="FilterElement" FullName="System.ServiceModel.Routing.Configuration.FilterElement">
  <TypeSignature Language="C#" Value="public class FilterElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterElement : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4fbac-101">필터 요소를 정의하는 구성 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-101">Represents a configuration element that defines a filter element.</span></span> <span data-ttu-id="4fbac-102">이 요소는 필터 형식뿐 아니라 필터에 필요한 모든 지원 데이터나 매개 변수를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-102">This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fbac-103"><see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomType">
      <MemberSignature Language="C#" Value="public string CustomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-104">필터로 사용할 사용자 지정 형식의 정규화된 형식 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-104">Gets or sets the fully-qualified type name of the custom type to be used as a filter.</span></span></summary>
        <value><span data-ttu-id="4fbac-105">정규화된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-105">The fully-qualified type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fbac-106"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A>을 사용자 지정으로 설정하면 <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A>은 만들 클래스의 정규화된 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-106">If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create.</span></span> <span data-ttu-id="4fbac-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>는 <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> 필터를 계산하는 동안 사용할 값도 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter.</span></span> <span data-ttu-id="4fbac-108"><xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A>은 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> 정보가 포함된 문자열 값을 허용하는 생성자를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-108">The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.</span></span>  
  
 <span data-ttu-id="4fbac-109">자세한 내용은 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4fbac-109">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter1">
      <MemberSignature Language="C#" Value="public string Filter1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter1" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter1", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-110">이 구성 요소의 filter1 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-110">Gets or sets the filter1 data of this configuration element.</span></span> <span data-ttu-id="4fbac-111">이 값은 <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />이 And로 설정된 경우에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-111">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to And.</span></span></summary>
        <value><span data-ttu-id="4fbac-112">이 요소의 filter1 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-112">The filter1 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fbac-113"><xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A>의 콘텐츠는 AND 필터를 계산하는 중에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-113">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter.</span></span> <span data-ttu-id="4fbac-114">자세한 내용은 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4fbac-114">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter2">
      <MemberSignature Language="C#" Value="public string Filter2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter2" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter2 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter2", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-115">이 구성 요소의 filter2 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-115">Gets or sets the filter2 data of this configuration element.</span></span> <span data-ttu-id="4fbac-116">이 값은 <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />이 AND로 설정된 경우에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-116">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to AND.</span></span></summary>
        <value><span data-ttu-id="4fbac-117">이 요소의 filter2 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-117">The filter2 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fbac-118"><xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A>의 콘텐츠는 AND 필터를 계산하는 중에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-118">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters.</span></span> <span data-ttu-id="4fbac-119">자세한 내용은 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4fbac-119">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterData">
      <MemberSignature Language="C#" Value="public string FilterData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterData" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterData", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-120">이 구성 요소의 필터 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-120">Gets or sets the filter data of this configuration element.</span></span></summary>
        <value><span data-ttu-id="4fbac-121">이 요소의 필터 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-121">The filter data of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fbac-122">다음 표에서는 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>의 값에 따른 <xref:System.ServiceModel.Routing.Configuration.FilterType>의 의미를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-122">The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.</span></span>  
  
|<span data-ttu-id="4fbac-123">필터 형식</span><span class="sxs-lookup"><span data-stu-id="4fbac-123">Filter  Type</span></span>|<span data-ttu-id="4fbac-124">설명</span><span class="sxs-lookup"><span data-stu-id="4fbac-124">Description</span></span>|<span data-ttu-id="4fbac-125">필터 데이터 의미</span><span class="sxs-lookup"><span data-stu-id="4fbac-125">Filter Data Meaning</span></span>|<span data-ttu-id="4fbac-126">예제 필터</span><span class="sxs-lookup"><span data-stu-id="4fbac-126">Example Filter</span></span>|  
|------------------|-----------------|-------------------------|--------------------|  
|<span data-ttu-id="4fbac-127">작업</span><span class="sxs-lookup"><span data-stu-id="4fbac-127">Action</span></span>|<span data-ttu-id="4fbac-128">WCF에 포함된 ActionMessageFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-128">Uses the ActionMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="4fbac-129">필터링할 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-129">The Action to filter upon.</span></span>|<span data-ttu-id="4fbac-130">\<filter name="action1" filterType="Action" filterData="http://ACTION" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-130">\<filter name="action1" filterType="Action" filterData="http://ACTION" /></span></span>|  
|<span data-ttu-id="4fbac-131">주소</span><span class="sxs-lookup"><span data-stu-id="4fbac-131">Address</span></span>|<span data-ttu-id="4fbac-132">호스트 이름 무시 == true로 설정하여 WCF에 포함된 EndpointAddressMessageFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-132">Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="4fbac-133">To 헤더의 필터링할 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-133">The address to filter upon (in the To header).</span></span>|<span data-ttu-id="4fbac-134">\<filter name="address1" filterType="Address" filterData="http://host/vdir/s.svc/b"  /></span><span class="sxs-lookup"><span data-stu-id="4fbac-134">\<filter name="address1" filterType="Address" filterData="http://host/vdir/s.svc/b"  /></span></span>|  
|<span data-ttu-id="4fbac-135">AddressPrefix</span><span class="sxs-lookup"><span data-stu-id="4fbac-135">AddressPrefix</span></span>|<span data-ttu-id="4fbac-136">호스트 이름 무시 == true로 설정하여 WCF에 포함된 PrefixEndpointAddressMessageFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-136">Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="4fbac-137">가장 긴 접두사 일치를 사용하여 필터링을 적용할 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-137">The address to filter upon using longest prefix matching.</span></span>|<span data-ttu-id="4fbac-138">\<filter name="prefix1" filterType="AddressPrefix" filterData="http://host" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-138">\<filter name="prefix1" filterType="AddressPrefix" filterData="http://host" /></span></span>|  
|<span data-ttu-id="4fbac-139">StrictAnd</span><span class="sxs-lookup"><span data-stu-id="4fbac-139">StrictAnd</span></span>|<span data-ttu-id="4fbac-140">반환하기 전에 항상 두 조건을 확인하는 사용자 지정 AndMessageFilter입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-140">A custom AndMessageFilter that always evaluates both conditions before returning.</span></span>|<span data-ttu-id="4fbac-141">filterData는 사용되지 않습니다. 대신 filter1 및 filter2가 해당 메시지 필터의 이름을 가지며(테이블에도 있음) 여기에 AND가 적용되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-141">filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.</span></span>|<span data-ttu-id="4fbac-142">\<filter name="and1" filterType="And" filter1="address1" filter2="action1" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-142">\<filter name="and1" filterType="And" filter1="address1" filter2="action1" /></span></span>|  
|<span data-ttu-id="4fbac-143">사용자 지정</span><span class="sxs-lookup"><span data-stu-id="4fbac-143">Custom</span></span>|<span data-ttu-id="4fbac-144">MessageFilter를 확장하고 문자열을 사용하는 생성자를 가진 사용자 정의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-144">A user-defined type that extends MessageFilter and has a constructor taking a string.</span></span>|<span data-ttu-id="4fbac-145">customType 특성은 만들 클래스의 정규화된 형식 이름입니다. filterData는 필터를 만들 때 생성자에 전달할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-145">customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.</span></span>|<span data-ttu-id="4fbac-146">\<filter name="custom1" filterType="Custom" customType="CustomAssembly.CustomMsgFilter, CustomAssembly" filterData="Custom Data" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-146">\<filter name="custom1" filterType="Custom" customType="CustomAssembly.CustomMsgFilter, CustomAssembly" filterData="Custom Data" /></span></span>|  
|<span data-ttu-id="4fbac-147">EndpointName</span><span class="sxs-lookup"><span data-stu-id="4fbac-147">EndpointName</span></span>|<span data-ttu-id="4fbac-148">라우팅 서비스에만 사용할 수 있는 사용자 지정 메시지 필터로, 서비스 끝점의 이름에 따라 메시지를 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-148">A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.</span></span>|<span data-ttu-id="4fbac-149">서비스 끝점의 이름 예: "serviceEndpoint1"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-149">The name of the service endpoint, for example: "serviceEndpoint1".</span></span>  <span data-ttu-id="4fbac-150">이는 라우팅 서비스에서 노출되는 끝점 중 하나여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-150">This should be one of the endpoints exposed on the Routing Service.</span></span>|<span data-ttu-id="4fbac-151">\<filter name="stock1" filterType="Endpoint" filterData="SvcEndpoint" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-151">\<filter name="stock1" filterType="Endpoint" filterData="SvcEndpoint" /></span></span>|  
|<span data-ttu-id="4fbac-152">MatchAll</span><span class="sxs-lookup"><span data-stu-id="4fbac-152">MatchAll</span></span>|<span data-ttu-id="4fbac-153">WCF에 포함된 MatchAllMessageFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-153">Uses the MatchAllMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="4fbac-154">N/A</span><span class="sxs-lookup"><span data-stu-id="4fbac-154">N/A</span></span>|<span data-ttu-id="4fbac-155">\<filter name="matchAll1" filterType="MatchAll" /></span><span class="sxs-lookup"><span data-stu-id="4fbac-155">\<filter name="matchAll1" filterType="MatchAll" /></span></span>|  
|<span data-ttu-id="4fbac-156">XPath</span><span class="sxs-lookup"><span data-stu-id="4fbac-156">XPath</span></span>|<span data-ttu-id="4fbac-157">WCF에 포함된 XPathMessageFilter를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-157">Uses the XPathMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="4fbac-158">메시지를 대조할 때 사용하는 XPath 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-158">The XPath query to use when matching messages.</span></span>|<span data-ttu-id="4fbac-159">\<필터 이름 = "XPath1" filterType "XPath" filterData = = "//ns:element" / ></span><span class="sxs-lookup"><span data-stu-id="4fbac-159">\<filter name="XPath1" filterType="XPath" filterData="//ns:element" /></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Routing.Configuration.FilterType FilterType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterType As FilterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Routing::Configuration::FilterType FilterType { System::ServiceModel::Routing::Configuration::FilterType get(); void set(System::ServiceModel::Routing::Configuration::FilterType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-160">이 구성 요소의 <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-160">Gets or sets the <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> of this configuration element.</span></span></summary>
        <value><span data-ttu-id="4fbac-161">이 요소의 필터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-161">The filter type of this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fbac-162">이 구성 요소의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-162">Gets or sets the name of this configuration element.</span></span></summary>
        <value><span data-ttu-id="4fbac-163">이 구성 요소의 고유한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4fbac-163">The unique name of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>