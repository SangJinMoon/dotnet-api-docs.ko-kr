<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaSet.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de049e0953bd01f68f7214056a7531dd4c85931d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de049e0953bd01f68f7214056a7531dd4c85931d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Contains a cache of XML Schema definition language (XSD) schemas.</source>
          <target state="translated">XSD(XML 스키마 정의 언어) 스키마의 캐시를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">이렇게 하면 코드의 보안을 손상 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML 스키마 (인라인 스키마 포함)는 기본적으로 서비스 거부 공격; 되기 쉬우므로 신뢰할 수 없는 경우에는 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">스키마 유효성 검사 오류 메시지와 예외는 정적 콘텐츠 모델이 나 스키마 파일에 대 한 URI 경로 대 한 중요 한 정보를 노출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 하십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Additional security considerations are covered in the "Security Considerations" section.</source>
          <target state="translated">"보안 고려 사항" 섹션에 추가 보안 고려 사항은 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a cache or library where you can store XML Schema definition language (XSD) schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 캐시 또는 라이브러리 XML 스키마 정의 언어 (XSD) 스키마를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>은 파일 또는 URL에서 스키마에 액세스하는 대신 메모리에 있는 스키마를 캐시하여 성능을 향상시킵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</source>
          <target state="translated">각 스키마 네임 스페이스 URI로 식별 되 및 스키마 집합에 추가할 때 된 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph> property to assign the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object an XML reader should use for data validation.</source>
          <target state="translated">사용 하면는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph> 에 할당할 속성의 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 개체 XML 판독기가 데이터 유효성 검사에 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Security Considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources.</source>
          <target state="translated">알 수 없거나 신뢰할 수 없는 소스에서 스키마를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">이렇게 하면 코드의 보안을 손상 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">외부 네임 스페이스 또는 위치에서 참조 되는 등의 가져오기 및 스키마의 redefine 요소를 포함 하거나 가져오는 스키마의 기본 URI에 대해 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">예를 들어, 포함 하거나 가져오는 스키마의 기본 URI가 비어 있는 경우 또는 <ph id="ph1">`null`</ph>, 외부 위치가 현재 디렉터리를 기준으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 클래스는 기본적으로 외부 스키마를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">포함, 가져오기의 해상도 사용 하지 않도록 설정 하는 스키마의 요소를 재정의 설정의 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> class to parse and match regular expressions in an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스에서 사용 하 여 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> 클래스를 구문 분석 및 XML 스키마의 정규식과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</source>
          <target state="translated">유효성 검사 XML 스키마의 정규식과 패턴 패싯의 CPU 사용량이 증가할된 포함 될 수 있습니다 및 고가용성 시나리오에서 사용 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">사용 하기 때문에 발생 한 예외는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스 같은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 클래스에는 신뢰할 수 없는 경우에는 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 예외를 발생 하는 스키마 파일의 URI 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> 신뢰할 수 없는 시나리오에서 속성을 노출 되지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">예외를 신뢰할 수 없는 시나리오에 중요 한 정보가 노출 되지 않는 올바르게 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The following example validates an XML file using schemas stored in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>에 저장된 스키마를 사용하여 XML 파일의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The namespace in the XML file, <ph id="ph1">`urn:bookstore-schema`</ph>, identifies which schema in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated">XML 파일의 네임스페이스 <ph id="ph1">`urn:bookstore-schema`</ph>는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>에서 유효성 검사에 사용할 스키마를 식별합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Input</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The sample uses the following two input files.</source>
          <target state="translated">이 샘플에서는 다음 두 입력 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Output</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">유효성 검사 오류: 네임스페이스 'urn:bookstore-schema'의 요소 'book'이 잘못된 자식 요소 'author'를 가지고 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'title' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">'author' 대신 'title'이 필요합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">유효성 검사 오류: 네임스페이스 'urn:bookstore-schema'의 요소 'author'가 잘못된 자식 요소 'name'을 가지고 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'first-name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">'name' 대신 'first-name'이 필요합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Adds the given XML Schema definition language (XSD) schema to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 XSD(XML 스키마 정의 언어) 스키마를 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Adds the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">스키마가 유효한 경우에는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">스키마가 유효하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>가 지정된 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object already exists in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method does nothing.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 에 이미 개체가 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드는 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드의 기능은 동일 합니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">스키마가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Adds all the XML Schema definition language (XSD) schemas in the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마를 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">스키마를 추가 하려면 먼저는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 성공적으로 전처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">전처리는 다음과 같은 기본 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">스키마는 W3C XML 스키마의 규칙에 따라 구조 유효성 검사 하지만 스키마 완전히 유효성이 검사 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에도 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">가져온된 스키마는 별도 요소로 추가 됩니다 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 포함 하는의 일부 개체 및 포함 된 스키마를 구성 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`true`</ph>, all schemas in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add are added to the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 추가 하는 <ph id="ph3">`true`</ph>의 모든 스키마는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 추가 하려면에 추가 되는 <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`false`</ph>, each schema added is preprocessed before being added.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 추가할 <ph id="ph3">`false`</ph>, 추가 되기 전에 추가 된 각 스키마는 전처리 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If any of the schemas in the newly added <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> fails to be preprocessed, no schemas are added; instead, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown.</source>
          <target state="translated">에 새로 추가 된 스키마의 경우 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 전처리 실패 없는 스키마가 추가 됩니다; 대신,는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>As a result, the following two code example are not equivalent.</source>
          <target state="translated">결과적으로, 다음 두 코드 예에서는 같지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The previous two code examples are not equivalent.</source>
          <target state="translated">이전 두 코드 예제는 동일 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the first example, if an invalid schema exists in <ph id="ph1">`schemaSet1`</ph> and its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, no schemas are added to <ph id="ph4">`schemaSet`</ph>.</source>
          <target state="translated">에 잘못 된 스키마가 있는 경우 첫 번째 예제에서 <ph id="ph1">`schemaSet1`</ph> 및 해당 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성이 <ph id="ph3">`false`</ph>, 스키마에 추가 됩니다 <ph id="ph4">`schemaSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the second example, a number of schemas can be added to <ph id="ph1">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.</source>
          <target state="translated">두 번째 예제에서는 여러 스키마를 추가할 수 있습니다 <ph id="ph1">`schemaSet`</ph> 잘못 된 스키마가 발견 되 고 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The following code example illustrates adding schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then adding the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to a new <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 추가 스키마를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 다음 추가 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 새 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 를 사용 하는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>A schema in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 스키마가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">스키마 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 속성 또는 스키마에서 지정된 <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept>를 사용할 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL that specifies the schema to load.</source>
          <target state="translated">로드할 스키마를 지정하는 URL입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adds the XML Schema definition language (XSD) schema at the URL specified to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 URL에 있는 XSD(XML 스키마 정의 언어) 스키마를 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">스키마가 유효한 경우에는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">스키마가 유효하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>가 지정된 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">스키마를 추가 하려면 먼저는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 성공적으로 전처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">전처리는 다음과 같은 기본 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">스키마는 W3C XML 스키마의 규칙에 따라 구조 유효성 검사 하지만 스키마 완전히 유효성이 검사 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에도 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">가져온된 스키마는 별도 요소로 추가 됩니다 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 포함 하는의 일부 개체 및 포함 된 스키마를 구성 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adding a schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the same target namespace and schema location URL as a schema already contained within the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> will return the original schema object.</source>
          <target state="translated">에 스키마 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 내에 이미 포함 된 스키마와 대상 위치 URL 네임 스페이스와 스키마 같은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 원래 스키마 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>When a new schema is successfully added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">새 스키마에 성공적으로 추가 된 경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 로 설정 되어 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any include or import elements encountered in an XML schema are resolved when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">XML 스키마에 포함 또는 가져오기 요소는 해결 된 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Failure to resolve include and import elements results in a schema validation warning and if no <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> has been specified for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, these warning will not be reported.</source>
          <target state="translated">확인 실패 등을 가져오면 요소는 스키마 유효성 검사 경고 되지 않은 경우 및 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> 에 대 한 지정 된는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 개체 이러한 경고가 보고 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If a schema with the same target namespace as a schema that already exists in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, both schemas are added.</source>
          <target state="translated">경우에 이미 있는 스키마와 동일한 대상 네임 스페이스를 가진 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 두 스키마가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>This behavior differs from the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> object.</source>
          <target state="translated">이 동작은 사용 되지 않는에서 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 에 매개 변수로 대상 네임 스페이스를 지정할 필요 없이 스키마에 정의 된 대상 네임 스페이스를 사용 하는 기능이 때는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Specifying <ph id="ph1">`null`</ph> in the <ph id="ph2">`targetNamespace`</ph> parameter of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema, as illustrated in the following code example.</source>
          <target state="translated">지정 하 <ph id="ph1">`null`</ph> 에 <ph id="ph2">`targetNamespace`</ph> 의 매개 변수는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드에 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 다음 코드 예제에 설명 된 대로 스키마에 정의 된 대상 네임 스페이스를 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In the code example above, <ph id="ph1">`null`</ph> is specified as the <ph id="ph2">`targetNamespace`</ph> parameter to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">위의 코드 예제 <ph id="ph1">`null`</ph> 로 지정 된 <ph id="ph2">`targetNamespace`</ph> 매개 변수를는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>As a result, the <ph id="ph1">`targetNamespace`</ph> defined in the books.xml file is used.</source>
          <target state="translated">결과적으로 <ph id="ph1">`targetNamespace`</ph> 정의 books.xml 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the result of calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method would be identical if <ph id="ph2">http://www.contoso.com/books</ph> had been specified as the <ph id="ph3">`targetNamespace`</ph> parameter.</source>
          <target state="translated">이 경우, 호출의 결과 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 방법은 동일한 것 경우 <ph id="ph2">http://www.contoso.com/books</ph> 로 지정 된는 <ph id="ph3">`targetNamespace`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</source>
          <target state="translated">W3C XML 스키마 정의 된 대상 네임 스페이스를 가진 스키마에 포함 될 대상 네임 스페이스가 없는 스키마를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</source>
          <target state="translated">이 경우 스키마의 대상 네임 스페이스에 정의 된 대상 네임 스페이스가 없는 스키마 강제 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The included schema is treated as if it had that target namespace defined.</source>
          <target state="translated">포함 된 스키마는 해당 대상 네임 스페이스에 정의 된 것 처럼 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Similarly, schemas without a target namespace can be added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and coerced into the target namespace specified by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method, as illustrated in the following example.</source>
          <target state="translated">마찬가지로,에 대상 네임 스페이스가 없는 스키마를 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 지정 된 대상 네임 스페이스로 강제로 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드를 다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema above is added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the target namespace <ph id="ph2">http://www.contoso.com/new/targetnamespace</ph> (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>.</source>
          <target state="translated">위의 스키마에 추가 되 면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 대상 네임 스페이스를 가진 <ph id="ph2">http://www.contoso.com/new/targetnamespace</ph> (에서처럼 아래 코드), 것 처럼 처리 됩니다 대상 네임 스페이스는 스키마에서 선언 된 <ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following code example adds the <ph id="ph1">http://www.contoso.com/books.xsd</ph> schema with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 추가 <ph id="ph1">http://www.contoso.com/books.xsd</ph> 스키마의 대상 네임 스페이스와 <ph id="ph2">http://www.contoso.com/books</ph> 에 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The example uses the <ph id="ph1">`books.xsd`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`books.xsd`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is not valid.</source>
          <target state="translated">스키마가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL passed as a parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 URL이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">스키마 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 속성 또는 스키마에서 지정된 <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept>를 사용할 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Adds the XML Schema definition language (XSD) schema contained in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에 포함된 XSD(XML 스키마 정의 언어) 스키마를 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">스키마가 유효한 경우에는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">스키마가 유효하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>가 지정된 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">스키마를 추가 하려면 먼저는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 성공적으로 전처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">전처리는 다음과 같은 기본 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">스키마는 W3C XML 스키마의 규칙에 따라 구조 유효성 검사 하지만 스키마 완전히 유효성이 검사 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에도 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">가져온된 스키마는 별도 요소로 추가 됩니다 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 포함 하는의 일부 개체 및 포함 된 스키마를 구성 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Successfully retrieved schemas imported or included by the schemas contained in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are also added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 가져오거나에 포함 된 스키마가 포함 된 스키마를 검색는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 에 추가 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is not positioned on the root element, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown unless the current item is an element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 루트 요소에 배치 되지 않은 한 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 현재 항목은 요소 하지 않으면 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the current item is an <ph id="ph1">`xs:schema`</ph> element, the schema document is read into the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; otherwise, an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown because the schema is not valid.</source>
          <target state="translated">현재 항목을 한 <ph id="ph1">`xs:schema`</ph> 스키마 문서에 읽어올 요소는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 그렇지 않으면는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 스키마 잘못 되어 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 놓입니다 시퀀스의 첫 번째 노드만 XML 노드 시퀀스에 대해 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema was created from a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method call, the value of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</source>
          <target state="translated">스키마에서 생성 된 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> 값, 메서드 호출에서 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> 인라인 스키마 처리가 W3C XML 스키마 문서에 적용 되지 않기 때문 속성이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is not used to resolve references to namespaces or schema locations in include and import elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 의 네임 스페이스 또는 스키마 위치에 대 한 참조가 포함 및 import 요소를 해결 하려면 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 에 매개 변수로 대상 네임 스페이스를 지정할 필요 없이 스키마에 정의 된 대상 네임 스페이스를 사용 하는 기능이 때는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Specifying <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema.</source>
          <target state="translated">지정 하 <ph id="ph1">`null`</ph> 또는 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 스키마에 정의 된 대상 네임 스페이스를 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>For an example of this behavior, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">이 동작의 예 참조는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The remaining functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드의 나머지 기능은 동일 합니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following code example adds the books.xsd schema contained in the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">에 포함 된 books.xsd 스키마를 추가 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 의 대상 네임 스페이스를 가진 <ph id="ph2">http://www.contoso.com/books</ph> 에 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is not valid.</source>
          <target state="translated">스키마가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The default is an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> instance with the <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정된 <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph> class specifies Unique Particle Attribution (UPA) validation options for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph> 클래스에 대 한 Unique Particle Attribution UPA () 유효성 검사 옵션을 지정 합니다.는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>For more information about enabling UPA validation checks, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph> property.</source>
          <target state="translated">UPA 유효성 검사를 사용 하도록 설정 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Compiles the XML Schema definition language (XSD) schemas added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into one logical schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가된 XSD(XML 스키마 정의 언어) 스키마를 하나의 논리 스키마로 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>This method is called automatically when validation is needed and the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has not been previously compiled—for example, when an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used as an input to create an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of an <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
          <target state="translated">이 메서드는 자동으로 유효성 검사가 필요 및 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 이전에 컴파일되지 않았습니다-예를 들어,는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 만들려는 입력으로 사용는 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> 속성의는 <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is already in the compiled state, this method will not recompile the schemas.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 은 이미 컴파일된 상태에서이 메서드는 다시 컴파일하지 스키마입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If this method executes successfully, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드가 성공적으로 실행 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Schemas that have been previously compiled by an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not recompiled.</source>
          <target state="translated">이전에 컴파일된 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 컴파일되지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, schemas that were compiled using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> will be recompiled.</source>
          <target state="translated">그러나 사용 하 여 컴파일된 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 다시 컴파일됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">호출 해야는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 스키마 (또는 포함/import)에 추가한 후 변경한 경우 메서드는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 메서드는 W3C XML 스키마의 규칙에 따라 구조적 유효성에 대 한 스키마를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">그러나 전체 유효성 검사를 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">내부 및 외부 스키마 구성 요소에 대 한 참조도 확인 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에도 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">가져온된 스키마는 별도 요소로 추가 됩니다 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 개별 스키마는 등의 일부를 구성 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">다시 처리에 대 한 호출에 성공 하면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성이 false로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>An error occurred when validating and compiling the schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 스키마에 대해 유효성을 검사하고 컴파일하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Indicates whether an XML Schema definition language (XSD) schema is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">XSD(XML 스키마 정의 언어) 스키마가 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">스키마 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 대상 네임스페이스 URI가 있는 XSD(XML 스키마 정의 언어) 스키마가 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a schema with the specified target namespace URI is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 대상 네임스페이스 URI가 있는 스키마가 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Schemas that are indirectly added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are detected by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method; for example, imported schemas.</source>
          <target state="translated">에 직접 추가 된 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 에 의해 검색 된 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> 방법으로, 예를 들어 가져온된 스키마입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>As a result, if a schema for the <ph id="ph1">http://www.contoso.com/retail</ph> namespace which imports a schema for the <ph id="ph2">http://www.contoso.com/books</ph> namespace is added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, calling <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> with <ph id="ph5">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id="ph6">`true`</ph>.</source>
          <target state="translated">결과적으로 하는 경우에 대 한 스키마는 <ph id="ph1">http://www.contoso.com/retail</ph> 네임 스페이스에 대 한 스키마를 가져옵니다는 <ph id="ph2">http://www.contoso.com/books</ph> 네임 스페이스에 추가 되는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>호출, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> 와 <ph id="ph5">`http://www.contoso.com/books`</ph> 를 매개 변수로 반환 <ph id="ph6">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>Indicates whether the specified XML Schema definition language (XSD) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 XSD(XML 스키마 정의 언어) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체가 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The array to copy the objects to.</source>
          <target state="translated">개체를 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The index in the array where copying will begin.</source>
          <target state="translated">복사를 시작할 배열 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> objects from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the given array, starting at the given index.</source>
          <target state="translated">지정된 인덱스부터 시작하여 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>의 모든 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체를 지정된 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The following example copies all the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to an array of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 모든 복사는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 개체에 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 배열에 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>Gets the number of logical XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 논리 XSD(XML 스키마 정의 언어) 스키마의 개수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>The number of logical schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 논리 스키마의 개수입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>If there are two schemas for the namespace <ph id="ph1">`http://www.contoso.com`</ph> in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</source>
          <target state="translated">두 개의 스키마 네임 스페이스에 대 한 경우 <ph id="ph1">`http://www.contoso.com`</ph> 에 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> 속성은 스키마 유효성 검사를 위해 단일 논리 스키마로 처리 됩니다 때문에 1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>However, if a schema for the namespace <ph id="ph1">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace, the value of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would be 2.</source>
          <target state="translated">그러나 경우 네임 스페이스에 대 한 스키마 <ph id="ph1">`http://www.contoso.com/retail`</ph> 에 대 한 스키마를 가져올는 <ph id="ph2">`http://www.contoso.com/books`</ph> 네임 스페이스의 값은 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> 속성은 2 일 수입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 특성을 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>The collection of global attributes.</source>
          <target state="translated">전역 특성의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 요소를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>The collection of global elements.</source>
          <target state="translated">전역 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 단순 및 복합 형식을 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The collection of global simple and complex types.</source>
          <target state="translated">전역 단순 및 복합 형식의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph> property always returns a type that represents the <ph id="ph2">`xs:anyType`</ph> complex type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph> 속성은 항상 나타내는 형식을 반환는 <ph id="ph2">`xs:anyType`</ph> 복합 유형입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 XSD(XML 스키마 정의 언어) 스키마가 컴파일되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled since the last time a schema was added or removed from the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 스키마를 마지막으로 추가하거나 제거한 후 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>의 스키마가 컴파일되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is not affected if schemas are edited while in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>에 있는 동안 스키마를 편집해도 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 속성에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Updates of the individual schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not tracked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>에서 개별 스키마를 업데이트한 내용은 추적되지 않습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property can be <ph id="ph2">`true`</ph> even though one of the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been altered, as long as no schemas were added or removed from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">결과적으로 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>에 포함된 스키마 중 하나를 변경해도 <ph id="ph2">`true`</ph>에서 스키마를 추가하거나 제거하지 않으면 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 속성은 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 예제는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성 참조는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>Gets the default <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> when loading new XML Schema definition language (XSD) schemas.</source>
          <target state="translated">새 XSD(XML 스키마 정의 언어) 스키마를 로드할 때 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>에서 사용하는 기본 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>A table of atomized string objects.</source>
          <target state="translated">원자화된 문자열 개체의 테이블입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>에서 제거할 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 XSD(XML 스키마 정의 언어) 스키마를 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object removed from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the schema was not found in the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>에서 제거된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체이거나, 해당 스키마가 <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 없는 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removing a schema from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">스키마를 제거 하 고 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 여러 스키마를 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>를 사용 하 여 스키마 중 하나를 제거는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">올바른 스키마가 아닌 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>에서 제거할 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 XSD(XML 스키마 정의 언어) 스키마와 해당 스키마에 가져온 모든 스키마를 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object and all its imports were successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체와 해당 개체에 가져온 모든 항목이 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method removes the specified schema and all the schemas it imports from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, as long as there are no dependencies on the schema or its imported schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> 메서드는 지정된 된 스키마와에서 가져온 모든 스키마 제거는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>로 가져온된 스키마 또는 스키마에 종속성이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If there are dependencies on the schema or its imported schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, nothing is removed and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">스키마 또는에서 가져온된 스키마에 대 한 종속성이 있는 경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, 아무 것도 제거 하 고 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If <ph id="ph1">`false`</ph> is returned and a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> is defined, a warning is sent to the event handler describing the dependencies.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph> 반환 됩니다 및 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> 은 정의 된 종속성을 설명 하는 이벤트 처리기에 경고가 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If the specified schema imports other schemas and the specified schema was previously removed with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method will not remove the imported schemas and will return <ph id="ph3">`false`</ph>.</source>
          <target state="translated">지정된 된 스키마 다른 스키마를 가져오고 지정된 된 스키마와 이전에 제거 된 경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> 가져온된 스키마를 제거 하지 것입니다 메서드와 돌아갑니다 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>For example, if <ph id="ph1">`parentSchema`</ph> imports <ph id="ph2">`childSchema1`</ph> and <ph id="ph3">`childSchema2`</ph> the following code will only remove <ph id="ph4">`parentSchema`</ph>, but not the imported <ph id="ph5">`childSchema1`</ph> and <ph id="ph6">`childSchema2`</ph> schemas:</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`parentSchema`</ph> 가져옵니다 <ph id="ph2">`childSchema1`</ph> 및 <ph id="ph3">`childSchema2`</ph> 다음 코드는 제거만 <ph id="ph4">`parentSchema`</ph>는 가져오지 않는 <ph id="ph5">`childSchema1`</ph> 및 <ph id="ph6">`childSchema2`</ph> 스키마:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code will remove the <ph id="ph1">`parentSchema`</ph> and the imported schemas:</source>
          <target state="translated">다음 코드는 제거는 <ph id="ph1">`parentSchema`</ph> 및 가져온된 스키마:</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method has no effect on the state of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> 메서드의 상태에 영향을 주지는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas and all the schemas it imports using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 여러 스키마를 추가 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>를 사용 하 여 가져온 모든 스키마 및 스키마 중 하나를 제거는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema to reprocess.</source>
          <target state="translated">다시 처리할 스키마입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocesses an XML Schema definition language (XSD) schema that already exists in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 이미 있는 XSD(XML 스키마 정의 언어) 스키마를 다시 처리합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is a valid schema.</source>
          <target state="translated">스키마가 유효한 경우에는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">스키마가 유효하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>가 지정된 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocessing a schema performs all the preprocessing steps performed on a schema when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">스키마에서 수행 된 모든 전처리 단계가 수행 스키마를 다시 처리 하면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> is successful, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">경우에 대 한 호출 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 성공는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성이 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The Reprocess method should be used after a schema in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified, after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has performed compilation.</source>
          <target state="translated">스키마 후 다시 처리할 메서드를 사용할 수는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 가 수정 된 후에 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 컴파일을 수행한 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">호출 해야는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 스키마 (또는 포함/import)에 추가한 후 변경한 경우 메서드는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 메서드는 W3C XML 스키마의 규칙에 따라 구조적 유효성에 대 한 스키마를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">그러나 전체 유효성 검사를 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">내부 및 외부 스키마 구성 요소에 대 한 참조도 확인 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에도 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">가져온된 스키마는 별도 요소로 추가 됩니다 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 개별 스키마는 등의 일부를 구성 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">다시 처리에 대 한 호출에 성공 하면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성이 false로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates reprocessing a schema added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">다음 예제에 추가 된 스키마를 다시 처리는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is compiled using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method, and the schema added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is modified, the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property will be set to <ph id="ph5">`true`</ph>, even though a schema in the <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified.</source>
          <target state="translated">후의 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 를 사용 하 여 컴파일됩니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> 메서드와에 추가 된 스키마는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 수정 되는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph5">`true`</ph>되더라도에서 스키마는 <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method performs all the preprocessing performed by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method and sets the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 메서드 수행 하 여 수행 된 모든 전처리는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 메서드 및 집합의 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">스키마가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter does not already exist in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">매개 변수로 전달된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 아직 없는 경우</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Returns a collection of XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 추가된 모든 스키마를 포함하는 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가된 스키마가 없으면 빈 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 개체가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">이 메서드가 반환 간접적으로 추가 된 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 가져오기를 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph> 메서드는 사용 되지 않는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">모든 스키마에 대해 반복 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">스키마 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 지정된 네임스페이스에 속하는 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 추가되고 지정된 네임스페이스에 속하는 모든 스키마가 포함된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에 추가된 스키마가 없으면 빈 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 개체가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If the <ph id="ph1">`targetNamespace`</ph> parameter is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, then all schemas without a namespace are returned.</source>
          <target state="translated">경우는 <ph id="ph1">`targetNamespace`</ph> 매개 변수는 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, 네임 스페이스 없이 모든 스키마가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">이 메서드가 반환 간접적으로 추가 된 스키마는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 가져오기를 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph> 메서드는 사용 되지 않는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">http://www.contoso.com/books</ph> namespace in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">모든 스키마에 대해 반복 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">http://www.contoso.com/books</ph> 네임 스페이스에는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</source>
          <target state="translated">XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받을 이벤트 처리기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Sets an event handler for receiving information about schema validation errors when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are called.</source>
          <target state="translated">스키마 유효성 검사 오류에 대 한 정보를 받는 이벤트 처리기를 설정 하면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>If an event handler is not defined, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown on any validation errors where the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">이벤트 처리기를 정의 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 유효성 검사 오류에서 throw 되 여기서는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> 은 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Exceptions are not thrown for validation errors with an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">사용 하 여 유효성 검사 오류에 대 한 예외가 throw 되지 않습니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The following code example illustrates adding a <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> to capture errors and warnings when validating an XML document against a schema.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> 스키마에 대해 XML 문서의 유효성을 검사할 때 오류 및 경고를 캡처할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xml file as an input.</source>
          <target state="translated">이 예제에서는 입력으로 books.xml 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xsd file as an input.</source>
          <target state="translated">이 예제에서는 입력으로 books.xsd 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>를 설정합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 네임 스페이스에서 참조 되는 위치를 포함 하 고 언제 든 지 사용 하 여 스키마가 추가 되는 스키마의 요소를 가져오는 분석에 사용 되는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">외부 네임 스페이스 또는 위치에서 참조 되는 등의 가져오기 및 스키마의 redefine 요소를 포함 하거나 가져오는 스키마의 기본 URI에 대해 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">예를 들어, 포함 하거나 가져오는 스키마의 기본 URI가 비어 있는 경우 또는 <ph id="ph1">`null`</ph>, 외부 위치가 현재 디렉터리를 기준으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 클래스는 기본적으로 외부 스키마를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">포함, 가져오기의 해상도 사용 하지 않도록 설정 하는 스키마의 요소를 재정의 설정의 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph> 속성을 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>