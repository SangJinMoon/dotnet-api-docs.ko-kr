<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchema.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e5670012a2291fcf6ad80297ce12c8ef147aeaf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e5670012a2291fcf6ad80297ce12c8ef147aeaf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) <bpt id="p1">[</bpt>XML Schema Part 1: Structures<ept id="p1">](http://www.w3.org/TR/xmlschema-1/)</ept> and <bpt id="p2">[</bpt>XML Schema Part 2: Datatypes<ept id="p2">](http://www.w3.org/TR/xmlschema-2/)</ept> specifications.</source>
          <target state="translated">W3C(World Wide Web 컨소시엄) <bpt id="p1">[</bpt>XML 스키마 파트 1: 구조<ept id="p1">](http://www.w3.org/TR/xmlschema-1/)</ept> 및 <bpt id="p2">[</bpt>XML 스키마 파트 2: 데이터 형식<ept id="p2">](http://www.w3.org/TR/xmlschema-2/)</ept> 사양에서 지정한 XML 스키마의 메모리 내 표현입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">이렇게 하면 코드의 보안을 손상 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML 스키마 (인라인 스키마 포함)는 기본적으로 서비스 거부 공격; 되기 쉬우므로 신뢰할 수 없는 경우에는 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class, may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">사용 하기 때문에 발생 한 예외는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 클래스 같은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 클래스, 신뢰할 수 없는 경우에는 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 예외를 발생 하는 스키마 파일의 URI 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> 신뢰할 수 없는 시나리오에서 속성을 노출 되지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Exceptions should be properly handled so this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">신뢰할 수 없는 시나리오에 중요 한 정보가 노출 되지 않는 되므로 예외 올바르게 처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The following example creates a schema definition.</source>
          <target state="translated">다음 예제에서는 스키마 정을 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The following XML file is generated for the preceding code example.</source>
          <target state="translated">다음 XML 파일은 이전 코드 예제에 대해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Gets or sets the form for attributes declared in the target namespace of the schema.</source>
          <target state="translated">스키마의 대상 네임스페이스에서 선언된 특성에 해당하는 폼을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix.</source>
          <target state="translated">대상 네임스페이스의 특성을 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The value must be one of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> values shown in the following table.</source>
          <target state="translated">값 중 하나 여야 합니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 다음 표에 표시 된 값입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The attribute form is not specified in schema.</source>
          <target state="translated">특성 형식 스키마에 지정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Attributes from the target namespace must be qualified with the namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사가 포함 된 대상 네임 스페이스의 특성을 정규화 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Attributes from the target namespace are not required to be qualified with the namespace prefix.</source>
          <target state="translated">특성 대상 네임 스페이스에서 네임 스페이스 접두사로 한 정해야 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>This value is the global default for all attributes declared in the target namespace.</source>
          <target state="translated">이 값은 대상 네임스페이스에서 선언된 모든 특성에 대한 전역 기본값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Individual attributes can override this setting for the local scope using the <ph id="ph1">`form`</ph> attribute.</source>
          <target state="translated">개별 특성을 사용 하 여 로컬 범위에 대해이 설정을 재정의할 수는 <ph id="ph1">`form`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.AttributeGroups">
          <source>Gets the post-schema-compilation value of all the global attribute groups in the schema.</source>
          <target state="translated">스키마에 있는 모든 전역 특성 그룹의 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeGroups">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the global attribute groups in the schema.</source>
          <target state="translated">스키마에 있는 모든 전역 특성 그룹의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Attributes">
          <source>Gets the post-schema-compilation value for all the attributes in the schema.</source>
          <target state="translated">스키마에 있는 모든 특성에 대한 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Attributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the attributes in the schema.</source>
          <target state="translated">스키마에 있는 모든 특성의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="blockDefault" /&gt;</ph> attribute which sets the default value of the <ph id="ph2">&lt;see langword="block" /&gt;</ph> attribute on element and complex types in the <ph id="ph3">&lt;see langword="targetNamespace" /&gt;</ph> of the schema.</source>
          <target state="translated">스키마의 <ph id="ph1">&lt;see langword="blockDefault" /&gt;</ph>에 포함된 요소 및 복합 형식에 대한 <ph id="ph2">&lt;see langword="block" /&gt;</ph> 특성의 기본값을 설정하는 <ph id="ph3">&lt;see langword="targetNamespace" /&gt;</ph> 특성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> value representing the different methods for preventing derivation.</source>
          <target state="translated">파생 방지를 위해 서로 다른 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The default value is <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The <ph id="ph1">`block`</ph> attribute prevents a <ph id="ph2">`complexType`</ph> or element that has the specified type of derivation from being used in place of the inherited <ph id="ph3">`complexType`</ph> or element.</source>
          <target state="translated"><ph id="ph1">`block`</ph> 특성이 않습니다는 <ph id="ph2">`complexType`</ph> 또는 지정된 된 형식의 상속 된 위치에 사용 되 고 파생 된 요소 <ph id="ph3">`complexType`</ph> 또는 요소입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>This attribute's value can either be a white space separated list of restriction, extension and substitution or the value can contain <ph id="ph1">`#all`</ph> or a list that is a subset of extension, restriction, or substitution.</source>
          <target state="translated">이 특성의이 값 제한, 확장 및 대체 공백 구분 된 목록이 수 또는 값은 포함할 수 <ph id="ph1">`#all`</ph> 또는 확장, 제한, 또는 대체의 하위 집합 목록입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The following table lists the possible values of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>.</source>
          <target state="translated">다음 표에서 가능한 값을 나열 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, there are no restrictions on type derivations in the schema.</source>
          <target state="translated">기본적으로는 스키마에 파생 형식에 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Overrides the default derivation method and allows any type derivations in the schema.</source>
          <target state="translated">기본 파생 메서드를 재정의 하 고 스키마의 모든 형식 파생을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Extension.</source>
          <target state="translated">기본적으로이 스키마의 요소 확장에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to element and complex type elements.</source>
          <target state="translated">요소와 복합 형식 요소에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Restriction.</source>
          <target state="translated">기본적으로이 스키마의 요소 제한에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Union.</source>
          <target state="translated">기본적으로이 스키마의 요소는 공용 구조체에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">단순 형식에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by List.</source>
          <target state="translated">기본적으로이 스키마의 요소는 목록으로 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">단순 형식에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by any method.</source>
          <target state="translated">기본적으로 이 스키마의 요소는 어떤 메서드에 의해서도 파생될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about XML Schema validation errors.</source>
          <target state="translated">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The validation event handler that receives information about the XML Schema validation errors.</source>
          <target state="translated">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph> used to resolve namespaces referenced in <ph id="ph2">&lt;see langword="include" /&gt;</ph> and <ph id="ph3">&lt;see langword="import" /&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="include" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="import" /&gt;</ph> 요소에서 참조된 모든 네임스페이스를 확인하는 데 사용할 <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>If the SOM references other namespaces through the <ph id="ph1">`import`</ph> or <ph id="ph2">`include`</ph> elements, the <ph id="ph3">`XmlResolver`</ph> is used to resolve these references.</source>
          <target state="translated">SOM 통해 다른 네임 스페이스를 참조 하는 경우는 <ph id="ph1">`import`</ph> 또는 <ph id="ph2">`include`</ph> 요소는 <ph id="ph3">`XmlResolver`</ph> 이러한 참조를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>If the resolver is set to <ph id="ph1">`null`</ph>, this indicates that the user does not care about resolving <ph id="ph2">`import`</ph> or <ph id="ph3">`include`</ph> elements.</source>
          <target state="translated">확인자로 설정 되어 있으면 <ph id="ph1">`null`</ph>,이 해결 하는 방법에 대 한 사용자 고려 하지 않고 나타냅니다 <ph id="ph2">`import`</ph> 또는 <ph id="ph3">`include`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>In this case, the references are not resolved.</source>
          <target state="translated">이 경우 참조 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The resolver is not cached after the <ph id="ph1">`Compile`</ph> method completes.</source>
          <target state="translated">해결 프로그램 후 캐시 되지 않습니다는 <ph id="ph1">`Compile`</ph> 메서드가 완료 되 면입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class to resolve external schemas referenced in include, import, or redefine elements by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 클래스 포함, 가져오기, 또는 기본적으로 요소를 다시 정의에서 참조 하는 외부 스키마를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>You can disable resolution of external schemas by passing null as the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> parameter.</source>
          <target state="translated">Null을 전달 하 여 외부 스키마의 해상도 비활성화할 수는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Gets or sets the form for elements declared in the target namespace of the schema.</source>
          <target state="translated">스키마의 대상 네임스페이스에서 선언된 요소에 해당하는 폼을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> value that indicates if elements from the target namespace are required to be qualified with the namespace prefix.</source>
          <target state="translated">대상 네임스페이스의 요소를 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The value must be one of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> values shown in the following table.</source>
          <target state="translated">값 중 하나 여야 합니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 다음 표에 표시 된 값입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The element form is not specified in the schema.</source>
          <target state="translated">스키마에서 요소 양식 지정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Elements from the target namespace must be qualified with the namespace prefix.</source>
          <target state="translated">대상 네임 스페이스에서 요소를 네임 스페이스 접두사로 한정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Elements from the target namespace are not required to be qualified with the namespace prefix.</source>
          <target state="translated">대상 네임 스페이스에서 요소를 네임 스페이스 접두사로 한 정해야 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>This value is the global default for all elements declared in the target namespace.</source>
          <target state="translated">이 값은 대상 네임스페이스에서 선언된 모든 요소에 대한 전역 기본값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Individual elements can override this setting for the local scope by using the <ph id="ph1">`form`</ph> attribute.</source>
          <target state="translated">개별 요소를 사용 하 여 로컬 범위에 대해이 설정을 재정의할 수 있습니다는 <ph id="ph1">`form`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Elements">
          <source>Gets the post-schema-compilation value for all the elements in the schema.</source>
          <target state="translated">스키마에 있는 모든 요소에 대한 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Elements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the elements in the schema.</source>
          <target state="translated">스키마에 있는 모든 요소의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> attribute which sets the default value of the <ph id="ph2">&lt;see langword="final" /&gt;</ph> attribute on elements and complex types in the target namespace of the schema.</source>
          <target state="translated">스키마의 대상 네임스페이스에 포함된 요소 및 복합 형식에 대한 <ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> 특성의 기본값을 설정하는 <ph id="ph2">&lt;see langword="final" /&gt;</ph> 특성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> value representing the different methods for preventing derivation.</source>
          <target state="translated">파생 방지를 위해 서로 다른 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The default value is <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The <ph id="ph1">`final`</ph> attribute prevents the specified type of derivation of an element or complex type.</source>
          <target state="translated"><ph id="ph1">`final`</ph> 요소의 파생의 지정된 된 형식 또는 복합 형식 특성에 사용 하지 못하게 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>This value can contain <ph id="ph1">`#all`</ph> or a list that is a subset of extension or restriction.</source>
          <target state="translated">이 값은 포함할 수 <ph id="ph1">`#all`</ph> 또는 확장 또는 제한의 하위 집합 목록입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The following table lists the possible values of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>.</source>
          <target state="translated">다음 표에서 가능한 값을 나열 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, there are no restrictions on type derivations in the schema.</source>
          <target state="translated">기본적으로는 스키마에 파생 형식에 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Overrides the default derivation method and allows any type derivations in the schema.</source>
          <target state="translated">기본 파생 메서드를 재정의 하 고 스키마의 모든 형식 파생을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Extension.</source>
          <target state="translated">기본적으로이 스키마의 요소 확장에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to element and complex type elements.</source>
          <target state="translated">요소와 복합 형식 요소에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Restriction.</source>
          <target state="translated">기본적으로이 스키마의 요소 제한에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Union.</source>
          <target state="translated">기본적으로이 스키마의 요소는 공용 구조체에 의해 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">단순 형식에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by List.</source>
          <target state="translated">기본적으로이 스키마의 요소는 목록으로 파생 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">단순 형식에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by any method.</source>
          <target state="translated">기본적으로 이 스키마의 요소는 어떤 메서드에 의해서도 파생될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Groups">
          <source>Gets the post-schema-compilation value of all the groups in the schema.</source>
          <target state="translated">스키마에 있는 모든 그룹의 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Groups">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the groups in the schema.</source>
          <target state="translated">스키마에 있는 모든 그룹의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>Gets or sets the string ID.</source>
          <target state="translated">문자열 ID를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>The ID of the string.</source>
          <target state="translated">문자열 ID입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>The default value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>Gets the collection of included and imported schemas.</source>
          <target state="translated">포함된 스키마와 가져온 스키마의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of the included and imported schemas.</source>
          <target state="translated">포함된 스키마와 가져온 스키마의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> method expects only <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> and its derived types (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) as parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> 메서드에서 예상만 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> 및 파생된 형식 (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>The following example illustrates adding an included schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> collection of an existing <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 포함된 된 스키마에 추가 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> 기존 컬렉션 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
          <source>The XML schema instance namespace.</source>
          <target state="translated">XML 스키마 인스턴스 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source>Indicates if the schema has been compiled.</source>
          <target state="translated">스키마가 컴파일되었는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if schema has been compiled, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스키마가 컴파일되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>Gets the collection of schema elements in the schema and is used to add new element types at the <ph id="ph1">&lt;see langword="schema" /&gt;</ph> element level.</source>
          <target state="translated">스키마에 있는 스키마 요소의 컬렉션을 가져오며 <ph id="ph1">&lt;see langword="schema" /&gt;</ph> 요소 수준에서 새 요소 형식을 추가하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of schema elements in the schema.</source>
          <target state="translated">스키마에 있는 스키마 요소의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>The collection of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnnotation&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttributeGroup&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph>, <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>, <ph id="ph7">&lt;xref:System.Xml.Schema.XmlSchemaGroup&gt;</ph>, or <ph id="ph8">&lt;xref:System.Xml.Schema.XmlSchemaNotation&gt;</ph>.</source>
          <target state="translated">컬렉션 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnnotation&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttributeGroup&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph>, <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>, <ph id="ph7">&lt;xref:System.Xml.Schema.XmlSchemaGroup&gt;</ph>, 또는 <ph id="ph8">&lt;xref:System.Xml.Schema.XmlSchemaNotation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.Namespace">
          <source>The XML schema namespace.</source>
          <target state="translated">XML 스키마 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.Namespace">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Notations">
          <source>Gets the post-schema-compilation value for all notations in the schema.</source>
          <target state="translated">스키마에 있는 모든 표기법에 대한 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Notations">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all notations in the schema.</source>
          <target state="translated">스키마에 있는 모든 표기법의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Reads an XML Schema.</source>
          <target state="translated">XML 스키마를 읽습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The supplied data stream.</source>
          <target state="translated">제공된 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about XML Schema syntax errors.</source>
          <target state="translated">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema  from the supplied stream.</source>
          <target state="translated">제공된 스트림에서 XML 스키마를 읽습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML 스키마를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>를 지정하지 않으면 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML Schema to read.</source>
          <target state="translated">읽을 XML 스키마를 포함하는 <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about the XML Schema syntax errors.</source>
          <target state="translated">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema from the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>에서 XML 스키마를 읽습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML 스키마를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>를 지정하지 않으면 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML Schema to read.</source>
          <target state="translated">읽을 XML 스키마를 포함하는 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about the XML Schema syntax errors.</source>
          <target state="translated">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema from the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 XML 스키마를 읽습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML 스키마를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>를 지정하지 않으면 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.SchemaTypes">
          <source>Gets the post-schema-compilation value of all schema types in the schema.</source>
          <target state="translated">스키마에 있는 모든 스키마 형식의 스키마 컴파일 이후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.SchemaTypes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of all schema types in the schema.</source>
          <target state="translated">스키마에 있는 모든 스키마 형식의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.</source>
          <target state="translated">스키마 대상 네임스페이스의 URI(Uniform Resource Identifier)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>The schema target namespace.</source>
          <target state="translated">스키마 대상 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph> is the namespace of all schema components in this schema as well as any schema included using the <ph id="ph2">`include`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph> 으로이 스키마의 모든 스키마 구성 요소를 사용 하 여 포함 된 모든 스키마의 네임 스페이스는 <ph id="ph2">`include`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>Included schemas must either have the same target namespace as the containing schema or have no target namespace specified.</source>
          <target state="translated">포함 된 스키마 포함 하는 스키마와 동일한 대상 네임 스페이스에 있어야 하거나 대상 네임 스페이스가 없는 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
          <source>Gets and sets the qualified attributes which do not belong to the schema target namespace.</source>
          <target state="translated">스키마 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
          <source>An array of qualified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> objects that do not belong to the schema target namespace.</source>
          <target state="translated">스키마 대상 네임스페이스에 속하지 않는 정규화된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>Gets or sets the version of the schema.</source>
          <target state="translated">스키마의 버전을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>The version of the schema.</source>
          <target state="translated">스키마의 버전입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>The default value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Writes out an XML Schema.</source>
          <target state="translated">XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
          <source>The supplied data stream.</source>
          <target state="translated">제공된 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
          <source>Writes the XML Schema to the supplied data stream.</source>
          <target state="translated">제공된 데이터 스트림에 XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>에 XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 매개 변수가 null인 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>The supplied data stream.</source>
          <target state="translated">제공된 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> using the <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> specified.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>를 사용하여 제공된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>에 XML 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">제공 된 <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>에 XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">제공 된 <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 XML 스키마를 작성합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">제공 된 <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>