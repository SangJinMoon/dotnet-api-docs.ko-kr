<Type Name="XmlSchema" FullName="System.Xml.Schema.XmlSchema">
  <TypeSignature Language="C#" Value="public class XmlSchema : System.Xml.Schema.XmlSchemaObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchema extends System.Xml.Schema.XmlSchemaObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchema" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchema&#xA;Inherits XmlSchemaObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchema : System::Xml::Schema::XmlSchemaObject" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Xml.Schema.XmlSchemaObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlRoot("schema", Namespace="http://www.w3.org/2001/XMLSchema")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57f62-101">W3C(World Wide Web 컨소시엄) [XML 스키마 파트 1: 구조](http://www.w3.org/TR/xmlschema-1/) 및 [XML 스키마 파트 2: 데이터 형식](http://www.w3.org/TR/xmlschema-2/) 사양에서 지정한 XML 스키마의 메모리 내 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-101">An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) [XML Schema Part 1: Structures](http://www.w3.org/TR/xmlschema-1/) and [XML Schema Part 2: Datatypes](http://www.w3.org/TR/xmlschema-2/) specifications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   <span data-ttu-id="57f62-102">위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="57f62-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="57f62-103">이렇게 하면 코드의 보안을 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="57f62-104">XML 스키마 (인라인 스키마 포함)는 기본적으로 서비스 거부 공격; 되기 쉬우므로 신뢰할 수 없는 경우에는 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="57f62-105">사용 하기 때문에 발생 한 예외는 <xref:System.Xml.Schema.XmlSchema> 클래스 같은 <xref:System.Xml.Schema.XmlSchemaException> 클래스, 신뢰할 수 없는 경우에는 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-105">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchema> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class, may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="57f62-106">예를 들어는 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 속성은 <xref:System.Xml.Schema.XmlSchemaException> 예외를 발생 하는 스키마 파일의 URI 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-106">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="57f62-107"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 신뢰할 수 없는 시나리오에서 속성을 노출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-107">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="57f62-108">신뢰할 수 없는 시나리오에 중요 한 정보가 노출 되지 않는 되므로 예외 올바르게 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-108">Exceptions should be properly handled so this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57f62-109">다음 예제에서는 스키마 정을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-109">The following example creates a schema definition.</span></span>  
  
 [!code-cpp[Classic WebData XmlSchema Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchema Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchema Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchema Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchema Example/VB/source.vb#1)]  
  
 <span data-ttu-id="57f62-110">다음 XML 파일은 이전 코드 예제에 대해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-110">The following XML file is generated for the preceding code example.</span></span>  
  
 [!code-xml[Classic WebData XmlSchema Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlSchema Example/XML/source.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchema();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57f62-111"><see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-111">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchema" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeFormDefault">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm AttributeFormDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm AttributeFormDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeFormDefault As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm AttributeFormDefault { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("attributeFormDefault")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-112">스키마의 대상 네임스페이스에서 선언된 특성에 해당하는 폼을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-112">Gets or sets the form for attributes declared in the target namespace of the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-113">대상 네임스페이스의 특성을 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-113">The <see cref="T:System.Xml.Schema.XmlSchemaForm" /> value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix.</span></span> <span data-ttu-id="57f62-114">기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-114">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-115">값 중 하나 여야 합니다는 <xref:System.Xml.Schema.XmlSchemaForm> 다음 표에 표시 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-115">The value must be one of the <xref:System.Xml.Schema.XmlSchemaForm> values shown in the following table.</span></span>  
  
|<span data-ttu-id="57f62-116"><xref:System.Xml.Schema.XmlSchemaForm> 값</span><span class="sxs-lookup"><span data-stu-id="57f62-116"><xref:System.Xml.Schema.XmlSchemaForm> Value</span></span>|<span data-ttu-id="57f62-117">설명</span><span class="sxs-lookup"><span data-stu-id="57f62-117">Description</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|  
|<xref:System.Xml.Schema.XmlSchemaForm.None>|<span data-ttu-id="57f62-118">특성 형식 스키마에 지정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-118">The attribute form is not specified in schema.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaForm.Qualified>|<span data-ttu-id="57f62-119">네임 스페이스 접두사가 포함 된 대상 네임 스페이스의 특성을 정규화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-119">Attributes from the target namespace must be qualified with the namespace prefix.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaForm.Unqualified>|<span data-ttu-id="57f62-120">특성 대상 네임 스페이스에서 네임 스페이스 접두사로 한 정해야 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-120">Attributes from the target namespace are not required to be qualified with the namespace prefix.</span></span>|  
  
 <span data-ttu-id="57f62-121">이 값은 대상 네임스페이스에서 선언된 모든 특성에 대한 전역 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-121">This value is the global default for all attributes declared in the target namespace.</span></span> <span data-ttu-id="57f62-122">개별 특성을 사용 하 여 로컬 범위에 대해이 설정을 재정의할 수는 `form` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-122">Individual attributes can override this setting for the local scope using the `form` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeGroups">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable AttributeGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable AttributeGroups" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.AttributeGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeGroups As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ AttributeGroups { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-123">스키마에 있는 모든 전역 특성 그룹의 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-123">Gets the post-schema-compilation value of all the global attribute groups in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-124">스키마에 있는 모든 전역 특성 그룹의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-124">An <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> collection of all the global attribute groups in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ Attributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-125">스키마에 있는 모든 특성에 대한 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-125">Gets the post-schema-compilation value for all the attributes in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-126">스키마에 있는 모든 특성의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-126">An <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> collection of all the attributes in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockDefault">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod BlockDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod BlockDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.BlockDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockDefault As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod BlockDefault { System::Xml::Schema::XmlSchemaDerivationMethod get(); void set(System::Xml::Schema::XmlSchemaDerivationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("blockDefault")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-127">스키마의 <see langword="blockDefault" />에 포함된 요소 및 복합 형식에 대한 <see langword="block" /> 특성의 기본값을 설정하는 <see langword="targetNamespace" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-127">Gets or sets the <see langword="blockDefault" /> attribute which sets the default value of the <see langword="block" /> attribute on element and complex types in the <see langword="targetNamespace" /> of the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-128">파생 방지를 위해 서로 다른 메서드를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-128">An <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> value representing the different methods for preventing derivation.</span></span> <span data-ttu-id="57f62-129">기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-129">The default value is <see langword="XmlSchemaDerivationMethod.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-130">`block` 특성이 않습니다는 `complexType` 또는 지정된 된 형식의 상속 된 위치에 사용 되 고 파생 된 요소 `complexType` 또는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-130">The `block` attribute prevents a `complexType` or element that has the specified type of derivation from being used in place of the inherited `complexType` or element.</span></span> <span data-ttu-id="57f62-131">이 특성의이 값 제한, 확장 및 대체 공백 구분 된 목록이 수 또는 값은 포함할 수 `#all` 또는 확장, 제한, 또는 대체의 하위 집합 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-131">This attribute's value can either be a white space separated list of restriction, extension and substitution or the value can contain `#all` or a list that is a subset of extension, restriction, or substitution.</span></span>  
  
 <span data-ttu-id="57f62-132">다음 표에서 가능한 값을 나열 <xref:System.Xml.Schema.XmlSchemaDerivationMethod>합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-132">The following table lists the possible values of <xref:System.Xml.Schema.XmlSchemaDerivationMethod>.</span></span>  
  
|<span data-ttu-id="57f62-133">값</span><span class="sxs-lookup"><span data-stu-id="57f62-133">Value</span></span>|<span data-ttu-id="57f62-134">설명</span><span class="sxs-lookup"><span data-stu-id="57f62-134">Description</span></span>|  
|-----------|-----------------|  
|`None`|<span data-ttu-id="57f62-135">기본적으로는 스키마에 파생 형식에 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-135">By default, there are no restrictions on type derivations in the schema.</span></span>|  
|`Empty`|<span data-ttu-id="57f62-136">기본 파생 메서드를 재정의 하 고 스키마의 모든 형식 파생을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-136">Overrides the default derivation method and allows any type derivations in the schema.</span></span>|  
|`Extension`|<span data-ttu-id="57f62-137">기본적으로이 스키마의 요소 확장에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-137">By default, elements in this schema cannot be derived by Extension.</span></span> <span data-ttu-id="57f62-138">요소와 복합 형식 요소에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-138">Applies only to element and complex type elements.</span></span>|  
|`Restriction`|<span data-ttu-id="57f62-139">기본적으로이 스키마의 요소 제한에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-139">By default, elements in this schema cannot be derived by Restriction.</span></span>|  
|`Union`|<span data-ttu-id="57f62-140">기본적으로이 스키마의 요소는 공용 구조체에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-140">By default, elements in this schema cannot be derived by Union.</span></span> <span data-ttu-id="57f62-141">단순 형식에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-141">Applies only to simple types.</span></span>|  
|`List`|<span data-ttu-id="57f62-142">기본적으로이 스키마의 요소는 목록으로 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-142">By default, elements in this schema cannot be derived by List.</span></span> <span data-ttu-id="57f62-143">단순 형식에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-143">Applies only to simple types.</span></span>|  
|`All`|<span data-ttu-id="57f62-144">`#all`.</span><span class="sxs-lookup"><span data-stu-id="57f62-144">`#all`.</span></span> <span data-ttu-id="57f62-145">기본적으로 이 스키마의 요소는 어떤 메서드에 의해서도 파생될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-145">By default, elements in this schema cannot be derived by any method.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compile">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57f62-146">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-146">Compiles the XML Schema Object Model (SOM) into schema information for validation.</span></span> <span data-ttu-id="57f62-147">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-147">Used to check the syntactic and semantic structure of the programmatically built SOM.</span></span> <span data-ttu-id="57f62-148">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-148">Semantic validation checking is performed during compilation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="57f62-149"><xref:System.Xml.Schema.XmlSchema.Compile%2A> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="57f62-149">The <xref:System.Xml.Schema.XmlSchema.Compile%2A> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler"><span data-ttu-id="57f62-150">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-150">The validation event handler that receives information about XML Schema validation errors.</span></span></param>
        <summary><span data-ttu-id="57f62-151">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-151">Compiles the XML Schema Object Model (SOM) into schema information for validation.</span></span> <span data-ttu-id="57f62-152">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-152">Used to check the syntactic and semantic structure of the programmatically built SOM.</span></span> <span data-ttu-id="57f62-153">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-153">Semantic validation checking is performed during compilation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="57f62-154"><xref:System.Xml.Schema.XmlSchema.Compile%2A> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="57f62-154">The <xref:System.Xml.Schema.XmlSchema.Compile%2A> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler"><span data-ttu-id="57f62-155">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-155">The validation event handler that receives information about the XML Schema validation errors.</span></span></param>
        <param name="resolver"><span data-ttu-id="57f62-156"><see langword="include" /> 및 <see langword="import" /> 요소에서 참조된 모든 네임스페이스를 확인하는 데 사용할 <see langword="XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-156">The <see langword="XmlResolver" /> used to resolve namespaces referenced in <see langword="include" /> and <see langword="import" /> elements.</span></span></param>
        <summary><span data-ttu-id="57f62-157">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-157">Compiles the XML Schema Object Model (SOM) into schema information for validation.</span></span> <span data-ttu-id="57f62-158">프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-158">Used to check the syntactic and semantic structure of the programmatically built SOM.</span></span> <span data-ttu-id="57f62-159">의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-159">Semantic validation checking is performed during compilation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-160">SOM 통해 다른 네임 스페이스를 참조 하는 경우는 `import` 또는 `include` 요소는 `XmlResolver` 이러한 참조를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-160">If the SOM references other namespaces through the `import` or `include` elements, the `XmlResolver` is used to resolve these references.</span></span> <span data-ttu-id="57f62-161">확인자로 설정 되어 있으면 `null`,이 해결 하는 방법에 대 한 사용자 고려 하지 않고 나타냅니다 `import` 또는 `include` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-161">If the resolver is set to `null`, this indicates that the user does not care about resolving `import` or `include` elements.</span></span> <span data-ttu-id="57f62-162">이 경우 참조 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-162">In this case, the references are not resolved.</span></span> <span data-ttu-id="57f62-163">해결 프로그램 후 캐시 되지 않습니다는 `Compile` 메서드가 완료 되 면입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-163">The resolver is not cached after the `Compile` method completes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57f62-164"><xref:System.Xml.Schema.XmlSchema.Compile%2A> 메서드는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="57f62-164">The <xref:System.Xml.Schema.XmlSchema.Compile%2A> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57f62-165"><xref:System.Xml.Schema.XmlSchema.Compile%2A> 메서드는 <xref:System.Xml.XmlUrlResolver> 클래스 포함, 가져오기, 또는 기본적으로 요소를 다시 정의에서 참조 하는 외부 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-165">The <xref:System.Xml.Schema.XmlSchema.Compile%2A> method uses the <xref:System.Xml.XmlUrlResolver> class to resolve external schemas referenced in include, import, or redefine elements by default.</span></span> <span data-ttu-id="57f62-166">Null을 전달 하 여 외부 스키마의 해상도 비활성화할 수는 <xref:System.Xml.XmlResolver> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-166">You can disable resolution of external schemas by passing null as the <xref:System.Xml.XmlResolver> parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementFormDefault">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm ElementFormDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm ElementFormDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementFormDefault As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm ElementFormDefault { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("elementFormDefault")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-167">스키마의 대상 네임스페이스에서 선언된 요소에 해당하는 폼을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-167">Gets or sets the form for elements declared in the target namespace of the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-168">대상 네임스페이스의 요소를 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-168">The <see cref="T:System.Xml.Schema.XmlSchemaForm" /> value that indicates if elements from the target namespace are required to be qualified with the namespace prefix.</span></span> <span data-ttu-id="57f62-169">기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-169">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-170">값 중 하나 여야 합니다는 <xref:System.Xml.Schema.XmlSchemaForm> 다음 표에 표시 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-170">The value must be one of the <xref:System.Xml.Schema.XmlSchemaForm> values shown in the following table.</span></span>  
  
|<span data-ttu-id="57f62-171"><xref:System.Xml.Schema.XmlSchemaForm> 값</span><span class="sxs-lookup"><span data-stu-id="57f62-171"><xref:System.Xml.Schema.XmlSchemaForm> Value</span></span>|<span data-ttu-id="57f62-172">설명</span><span class="sxs-lookup"><span data-stu-id="57f62-172">Description</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|  
|<xref:System.Xml.Schema.XmlSchemaForm.None>|<span data-ttu-id="57f62-173">스키마에서 요소 양식 지정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-173">The element form is not specified in the schema.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaForm.Qualified>|<span data-ttu-id="57f62-174">대상 네임 스페이스에서 요소를 네임 스페이스 접두사로 한정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-174">Elements from the target namespace must be qualified with the namespace prefix.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaForm.Unqualified>|<span data-ttu-id="57f62-175">대상 네임 스페이스에서 요소를 네임 스페이스 접두사로 한 정해야 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-175">Elements from the target namespace are not required to be qualified with the namespace prefix.</span></span>|  
  
 <span data-ttu-id="57f62-176">이 값은 대상 네임스페이스에서 선언된 모든 요소에 대한 전역 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-176">This value is the global default for all elements declared in the target namespace.</span></span> <span data-ttu-id="57f62-177">개별 요소를 사용 하 여 로컬 범위에 대해이 설정을 재정의할 수 있습니다는 `form` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-177">Individual elements can override this setting for the local scope by using the `form` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable Elements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ Elements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-178">스키마에 있는 모든 요소에 대한 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-178">Gets the post-schema-compilation value for all the elements in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-179">스키마에 있는 모든 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-179">An <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> collection of all the elements in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalDefault">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod FinalDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod FinalDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.FinalDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property FinalDefault As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod FinalDefault { System::Xml::Schema::XmlSchemaDerivationMethod get(); void set(System::Xml::Schema::XmlSchemaDerivationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("finalDefault")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-180">스키마의 대상 네임스페이스에 포함된 요소 및 복합 형식에 대한 <see langword="finalDefault" /> 특성의 기본값을 설정하는 <see langword="final" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-180">Gets or sets the <see langword="finalDefault" /> attribute which sets the default value of the <see langword="final" /> attribute on elements and complex types in the target namespace of the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-181">파생 방지를 위해 서로 다른 메서드를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-181">An <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> value representing the different methods for preventing derivation.</span></span> <span data-ttu-id="57f62-182">기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-182">The default value is <see langword="XmlSchemaDerivationMethod.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-183">`final` 요소의 파생의 지정된 된 형식 또는 복합 형식 특성에 사용 하지 못하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-183">The `final` attribute prevents the specified type of derivation of an element or complex type.</span></span> <span data-ttu-id="57f62-184">이 값은 포함할 수 `#all` 또는 확장 또는 제한의 하위 집합 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-184">This value can contain `#all` or a list that is a subset of extension or restriction.</span></span>  
  
 <span data-ttu-id="57f62-185">다음 표에서 가능한 값을 나열 <xref:System.Xml.Schema.XmlSchemaDerivationMethod>합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-185">The following table lists the possible values of <xref:System.Xml.Schema.XmlSchemaDerivationMethod>.</span></span>  
  
|<span data-ttu-id="57f62-186">값</span><span class="sxs-lookup"><span data-stu-id="57f62-186">Value</span></span>|<span data-ttu-id="57f62-187">설명</span><span class="sxs-lookup"><span data-stu-id="57f62-187">Description</span></span>|  
|-----------|-----------------|  
|`None`|<span data-ttu-id="57f62-188">기본적으로는 스키마에 파생 형식에 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-188">By default, there are no restrictions on type derivations in the schema.</span></span>|  
|`Empty`|<span data-ttu-id="57f62-189">기본 파생 메서드를 재정의 하 고 스키마의 모든 형식 파생을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-189">Overrides the default derivation method and allows any type derivations in the schema.</span></span>|  
|`Extension`|<span data-ttu-id="57f62-190">기본적으로이 스키마의 요소 확장에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-190">By default, elements in this schema cannot be derived by Extension.</span></span> <span data-ttu-id="57f62-191">요소와 복합 형식 요소에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-191">Applies only to element and complex type elements.</span></span>|  
|`Restriction`|<span data-ttu-id="57f62-192">기본적으로이 스키마의 요소 제한에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-192">By default, elements in this schema cannot be derived by Restriction.</span></span>|  
|`Union`|<span data-ttu-id="57f62-193">기본적으로이 스키마의 요소는 공용 구조체에 의해 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-193">By default, elements in this schema cannot be derived by Union.</span></span> <span data-ttu-id="57f62-194">단순 형식에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-194">Applies only to simple types.</span></span>|  
|`List`|<span data-ttu-id="57f62-195">기본적으로이 스키마의 요소는 목록으로 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-195">By default, elements in this schema cannot be derived by List.</span></span> <span data-ttu-id="57f62-196">단순 형식에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-196">Applies only to simple types.</span></span>|  
|`All`|<span data-ttu-id="57f62-197">`#all`.</span><span class="sxs-lookup"><span data-stu-id="57f62-197">`#all`.</span></span> <span data-ttu-id="57f62-198">기본적으로 이 스키마의 요소는 어떤 메서드에 의해서도 파생될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-198">By default, elements in this schema cannot be derived by any method.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable Groups" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ Groups { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-199">스키마에 있는 모든 그룹의 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-199">Gets the post-schema-compilation value of all the groups in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-200">스키마에 있는 모든 그룹의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-200">An <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> collection of all the groups in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("id", DataType="ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-201">문자열 ID를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-201">Gets or sets the string ID.</span></span></summary>
        <value><span data-ttu-id="57f62-202">문자열 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-202">The ID of the string.</span></span> <span data-ttu-id="57f62-203">기본값은 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-203">The default value is <see langword="String.Empty" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectCollection Includes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectCollection Includes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Includes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Includes As XmlSchemaObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectCollection ^ Includes { System::Xml::Schema::XmlSchemaObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("include", typeof(System.Xml.Schema.XmlSchemaInclude))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("import", typeof(System.Xml.Schema.XmlSchemaImport))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("redefine", typeof(System.Xml.Schema.XmlSchemaRedefine))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-204">포함된 스키마와 가져온 스키마의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-204">Gets the collection of included and imported schemas.</span></span></summary>
        <value><span data-ttu-id="57f62-205">포함된 스키마와 가져온 스키마의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-205">An <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> of the included and imported schemas.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-206"><xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A> 메서드에서 예상만 <xref:System.Xml.Schema.XmlSchemaExternal> 및 파생된 형식 (<xref:System.Xml.Schema.XmlSchemaImport>, <xref:System.Xml.Schema.XmlSchemaInclude>, 및 <xref:System.Xml.Schema.XmlSchemaRedefine>) 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-206">The <xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A> method expects only <xref:System.Xml.Schema.XmlSchemaExternal> and its derived types (<xref:System.Xml.Schema.XmlSchemaImport>, <xref:System.Xml.Schema.XmlSchemaInclude>, and <xref:System.Xml.Schema.XmlSchemaRedefine>) as parameters.</span></span> <span data-ttu-id="57f62-207">다음 예제에서는 포함된 된 스키마에 추가 <xref:System.Xml.Schema.XmlSchema.Includes%2A> 기존 컬렉션 <xref:System.Xml.Schema.XmlSchema> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-207">The following example illustrates adding an included schema to the <xref:System.Xml.Schema.XmlSchema.Includes%2A> collection of an existing <xref:System.Xml.Schema.XmlSchema> object.</span></span>  
  
```vb  
Dim schema As XmlSchema = New XmlSchema()  
  
Dim textReader As XmlTextReader = New XmlTextReader("include.xsd")  
Dim includeSchema As XmlSchema = XmlSchema.Read(textReader, null)  
  
Dim include As XmlSchemaInclude = New XmlSchemaInclude()  
include.Schema = includeSchema;  
schema.Includes.Add(include);  
```  
  
```csharp  
XmlSchema schema = new XmlSchema();  
  
XmlTextReader textReader = new XmlTextReader("include.xsd");  
XmlSchema includeSchema = XmlSchema.Read(textReader, null);  
  
XmlSchemaInclude include = new XmlSchemaInclude();  
include.Schema = includeSchema;  
schema.Includes.Add(include);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceNamespace">
      <MemberSignature Language="C#" Value="public const string InstanceNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string InstanceNamespace" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchema.InstanceNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Const InstanceNamespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ InstanceNamespace;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-208">XML 스키마 인스턴스 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-208">The XML schema instance namespace.</span></span> <span data-ttu-id="57f62-209">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-209">This field is constant.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-210">스키마가 컴파일되었는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-210">Indicates if the schema has been compiled.</span></span></summary>
        <value>
          <span data-ttu-id="57f62-211">스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-211"><see langword="true" /> if schema has been compiled, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="57f62-212">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-212">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As XmlSchemaObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectCollection ^ Items { System::Xml::Schema::XmlSchemaObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("annotation", typeof(System.Xml.Schema.XmlSchemaAnnotation))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("attribute", typeof(System.Xml.Schema.XmlSchemaAttribute))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("attributeGroup", typeof(System.Xml.Schema.XmlSchemaAttributeGroup))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("complexType", typeof(System.Xml.Schema.XmlSchemaComplexType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("simpleType", typeof(System.Xml.Schema.XmlSchemaSimpleType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("element", typeof(System.Xml.Schema.XmlSchemaElement))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("group", typeof(System.Xml.Schema.XmlSchemaGroup))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("notation", typeof(System.Xml.Schema.XmlSchemaNotation))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-213">스키마에 있는 스키마 요소의 컬렉션을 가져오며 <see langword="schema" /> 요소 수준에서 새 요소 형식을 추가하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-213">Gets the collection of schema elements in the schema and is used to add new element types at the <see langword="schema" /> element level.</span></span></summary>
        <value><span data-ttu-id="57f62-214">스키마에 있는 스키마 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-214">An <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> of schema elements in the schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-215">컬렉션 <xref:System.Xml.Schema.XmlSchemaAnnotation>, <xref:System.Xml.Schema.XmlSchemaAttribute>, <xref:System.Xml.Schema.XmlSchemaAttributeGroup>, <xref:System.Xml.Schema.XmlSchemaComplexType>, <xref:System.Xml.Schema.XmlSchemaSimpleType>, <xref:System.Xml.Schema.XmlSchemaElement>, <xref:System.Xml.Schema.XmlSchemaGroup>, 또는 <xref:System.Xml.Schema.XmlSchemaNotation>합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-215">The collection of <xref:System.Xml.Schema.XmlSchemaAnnotation>, <xref:System.Xml.Schema.XmlSchemaAttribute>, <xref:System.Xml.Schema.XmlSchemaAttributeGroup>, <xref:System.Xml.Schema.XmlSchemaComplexType>, <xref:System.Xml.Schema.XmlSchemaSimpleType>, <xref:System.Xml.Schema.XmlSchemaElement>, <xref:System.Xml.Schema.XmlSchemaGroup>, or <xref:System.Xml.Schema.XmlSchemaNotation>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public const string Namespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Namespace" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchema.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Const Namespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Namespace;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-216">XML 스키마 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-216">The XML schema namespace.</span></span> <span data-ttu-id="57f62-217">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-217">This field is constant.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notations">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable Notations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable Notations" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Notations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Notations As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ Notations { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-218">스키마에 있는 모든 표기법에 대한 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-218">Gets the post-schema-compilation value for all notations in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-219">스키마에 있는 모든 표기법의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-219">An <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> collection of all notations in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57f62-220">XML 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-220">Reads an XML Schema.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchema Read (System.IO.Stream stream, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchema Read(class System.IO.Stream stream, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchema ^ Read(System::IO::Stream ^ stream, System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="57f62-221">제공된 데이터 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-221">The supplied data stream.</span></span></param>
        <param name="validationEventHandler"><span data-ttu-id="57f62-222">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-222">The validation event handler that receives information about XML Schema syntax errors.</span></span></param>
        <summary><span data-ttu-id="57f62-223">제공된 스트림에서 XML 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-223">Reads an XML Schema  from the supplied stream.</span></span></summary>
        <returns><span data-ttu-id="57f62-224">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-224">The <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XML Schema.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="57f62-225"><see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-225">An <see cref="T:System.Xml.Schema.XmlSchemaException" /> is raised if no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchema Read (System.IO.TextReader reader, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchema Read(class System.IO.TextReader reader, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchema ^ Read(System::IO::TextReader ^ reader, System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="57f62-226">읽을 XML 스키마를 포함하는 <see langword="TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-226">The <see langword="TextReader" /> containing the XML Schema to read.</span></span></param>
        <param name="validationEventHandler"><span data-ttu-id="57f62-227">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-227">The validation event handler that receives information about the XML Schema syntax errors.</span></span></param>
        <summary><span data-ttu-id="57f62-228">제공된 <see cref="T:System.IO.TextReader" />에서 XML 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-228">Reads an XML Schema from the supplied <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="57f62-229">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-229">The <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XML Schema.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="57f62-230"><see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-230">An <see cref="T:System.Xml.Schema.XmlSchemaException" /> is raised if no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchema Read (System.Xml.XmlReader reader, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchema Read(class System.Xml.XmlReader reader, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchema ^ Read(System::Xml::XmlReader ^ reader, System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="57f62-231">읽을 XML 스키마를 포함하는 <see langword="XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-231">The <see langword="XmlReader" /> containing the XML Schema to read.</span></span></param>
        <param name="validationEventHandler"><span data-ttu-id="57f62-232">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-232">The validation event handler that receives information about the XML Schema syntax errors.</span></span></param>
        <summary><span data-ttu-id="57f62-233">제공된 <see cref="T:System.Xml.XmlReader" />에서 XML 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-233">Reads an XML Schema from the supplied <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="57f62-234">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-234">The <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XML Schema.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="57f62-235"><see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-235">An <see cref="T:System.Xml.Schema.XmlSchemaException" /> is raised if no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable SchemaTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable SchemaTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.SchemaTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ SchemaTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-236">스키마에 있는 모든 스키마 형식의 스키마 컴파일 이후 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-236">Gets the post-schema-compilation value of all schema types in the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-237">스키마에 있는 모든 스키마 형식의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-237">An <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> of all schema types in the schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespace">
      <MemberSignature Language="C#" Value="public string TargetNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.TargetNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("targetNamespace", DataType="anyURI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-238">스키마 대상 네임스페이스의 URI(Uniform Resource Identifier)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-238">Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.</span></span></summary>
        <value><span data-ttu-id="57f62-239">스키마 대상 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-239">The schema target namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f62-240"><xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A> 으로이 스키마의 모든 스키마 구성 요소를 사용 하 여 포함 된 모든 스키마의 네임 스페이스는 `include` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-240">The <xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A> is the namespace of all schema components in this schema as well as any schema included using the `include` element.</span></span> <span data-ttu-id="57f62-241">포함 된 스키마 포함 하는 스키마와 동일한 대상 네임 스페이스에 있어야 하거나 대상 네임 스페이스가 없는 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-241">Included schemas must either have the same target namespace as the containing schema or have no target namespace specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute[] UnhandledAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute[] UnhandledAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.UnhandledAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property UnhandledAttributes As XmlAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ UnhandledAttributes { cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ get(); void set(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAnyAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-242">스키마 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-242">Gets and sets the qualified attributes which do not belong to the schema target namespace.</span></span></summary>
        <value><span data-ttu-id="57f62-243">스키마 대상 네임스페이스에 속하지 않는 정규화된 <see cref="T:System.Xml.XmlAttribute" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-243">An array of qualified <see cref="T:System.Xml.XmlAttribute" /> objects that do not belong to the schema target namespace.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchema.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("version", DataType="token")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f62-244">스키마의 버전을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-244">Gets or sets the version of the schema.</span></span></summary>
        <value><span data-ttu-id="57f62-245">스키마의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-245">The version of the schema.</span></span> <span data-ttu-id="57f62-246">기본값은 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-246">The default value is <see langword="String.Empty" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57f62-247">XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-247">Writes out an XML Schema.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="57f62-248">제공된 데이터 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-248">The supplied data stream.</span></span></param>
        <summary><span data-ttu-id="57f62-249">제공된 데이터 스트림에 XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-249">Writes the XML Schema to the supplied data stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="57f62-250">쓸 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-250">The <see cref="T:System.IO.TextWriter" /> to write to.</span></span></param>
        <summary><span data-ttu-id="57f62-251">제공된 <see cref="T:System.IO.TextWriter" />에 XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-251">Writes the XML Schema to the supplied <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="57f62-252">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-252">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span></span></param>
        <summary><span data-ttu-id="57f62-253">제공된 <see cref="T:System.Xml.XmlWriter" />에 XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-253">Writes the XML Schema to the supplied <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57f62-254"><paramref name="writer" /> 매개 변수가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="57f62-254">The <paramref name="writer" /> parameter is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.Stream stream, System.Xml.XmlNamespaceManager namespaceManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.IO.Stream stream, class System.Xml.XmlNamespaceManager namespaceManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::Stream ^ stream, System::Xml::XmlNamespaceManager ^ namespaceManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="namespaceManager" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="57f62-255">제공된 데이터 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-255">The supplied data stream.</span></span></param>
        <param name="namespaceManager"><span data-ttu-id="57f62-256"><see cref="T:System.Xml.XmlNamespaceManager" /></span><span class="sxs-lookup"><span data-stu-id="57f62-256">The <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></param>
        <summary><span data-ttu-id="57f62-257">지정된 <see cref="T:System.IO.Stream" />를 사용하여 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />에 XML 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-257">Writes the XML Schema to the supplied <see cref="T:System.IO.Stream" /> using the <see cref="T:System.Xml.XmlNamespaceManager" /> specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="57f62-258">제공 된 <xref:System.Xml.XmlNamespaceManager> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-258">Supplying an <xref:System.Xml.XmlNamespaceManager> disables automatic namespace prefix mapping.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.TextWriter writer, System.Xml.XmlNamespaceManager namespaceManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.IO.TextWriter writer, class System.Xml.XmlNamespaceManager namespaceManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (writer As TextWriter, namespaceManager As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::TextWriter ^ writer, System::Xml::XmlNamespaceManager ^ namespaceManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="namespaceManager" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="57f62-259">쓸 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-259">The <see cref="T:System.IO.TextWriter" /> to write to.</span></span></param>
        <param name="namespaceManager"><span data-ttu-id="57f62-260"><see cref="T:System.Xml.XmlNamespaceManager" /></span><span class="sxs-lookup"><span data-stu-id="57f62-260">The <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></param>
        <summary><span data-ttu-id="57f62-261">제공된 <see cref="T:System.IO.TextWriter" />에 XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-261">Writes the XML Schema to the supplied <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="57f62-262">제공 된 <xref:System.Xml.XmlNamespaceManager> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-262">Supplying an <xref:System.Xml.XmlNamespaceManager> disables automatic namespace prefix mapping.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Xml.XmlWriter writer, System.Xml.XmlNamespaceManager namespaceManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.Xml.XmlWriter writer, class System.Xml.XmlNamespaceManager namespaceManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (writer As XmlWriter, namespaceManager As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Xml::XmlWriter ^ writer, System::Xml::XmlNamespaceManager ^ namespaceManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="namespaceManager" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="57f62-263">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-263">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span></span></param>
        <param name="namespaceManager"><span data-ttu-id="57f62-264"><see cref="T:System.Xml.XmlNamespaceManager" /></span><span class="sxs-lookup"><span data-stu-id="57f62-264">The <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></param>
        <summary><span data-ttu-id="57f62-265">제공된 <see cref="T:System.Xml.XmlWriter" />에 XML 스키마를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-265">Writes the XML Schema to the supplied <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="57f62-266">제공 된 <xref:System.Xml.XmlNamespaceManager> 자동 네임 스페이스 접두사 매핑을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f62-266">Supplying an <xref:System.Xml.XmlNamespaceManager> disables automatic namespace prefix mapping.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>