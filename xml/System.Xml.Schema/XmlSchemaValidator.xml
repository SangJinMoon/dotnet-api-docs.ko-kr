<Type Name="XmlSchemaValidator" FullName="System.Xml.Schema.XmlSchemaValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="593dcfff13b2f3c4579da94de3116830777dc050" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaValidator sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9dd4-101">XSD(XML 스키마 정의 언어) 스키마 유효성 검사 엔진을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9dd4-101">Represents an XML Schema Definition Language (XSD) Schema validation engine.</span>
      </span>
      <span data-ttu-id="d9dd4-102">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9dd4-102">The <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   <span data-ttu-id="d9dd4-103">위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-103">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="d9dd4-104">이렇게 하면 코드의 보안을 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-104">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="d9dd4-105">XML 스키마 (인라인 스키마 포함)는 기본적으로 서비스 거부 공격; 되기 쉬우므로 신뢰할 수 없는 경우에는 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-105">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="d9dd4-106">스키마 유효성 검사 오류 메시지와 예외는 정적 콘텐츠 모델이 나 스키마 파일에 대 한 URI 경로 대 한 중요 한 정보를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-106">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="d9dd4-107">신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 하십시오.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-107">Be careful not to expose this information to untrusted callers.</span></span>  
  
 <span data-ttu-id="d9dd4-108"><xref:System.Xml.Schema.XmlSchemaValidator> 클래스는 밀어넣기 기반 방식으로 XML 스키마에 대해 XML 데이터의 유효성을 검사할 수 있는 효과적인 고성능 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-108">The <xref:System.Xml.Schema.XmlSchemaValidator> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</span></span> <span data-ttu-id="d9dd4-109">예를 들어, <xref:System.Xml.Schema.XmlSchemaValidator> 클래스를 사용하면 XML 문서로 serialize한 다음 유효성 검사 XML 판독기를 사용하여 문서를 다시 구문 분석할 필요 없이 내부에서 직접 XML Infoset의 유효성을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-109">For example, the <xref:System.Xml.Schema.XmlSchemaValidator> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</span></span> <span data-ttu-id="d9dd4-110"><xref:System.Xml.Schema.XmlSchemaValidator> 클래스 사용자 지정 XML 데이터 소스를 통해 또는 유효성 검사 XML 작성기를 작성 하는 방법으로 유효성 검사 엔진을 빌드하는 데 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-110">The <xref:System.Xml.Schema.XmlSchemaValidator> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</span></span>  
  
 <span data-ttu-id="d9dd4-111">에 대 한 자세한 내용은 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스를 참조 하십시오.는 [XmlSchemaValidator 밀어넣기 기반 유효성 검사](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-111">For more information about the <xref:System.Xml.Schema.XmlSchemaValidator> class, see the [XmlSchemaValidator Push-Based Validation](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9dd4-112"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 의 유효성 검사 플래그는 <xref:System.Xml.Schema.XmlSchemaValidator> 없는 개체 집합 기본값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-112">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="d9dd4-113">또한는 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 속성은 <xref:System.Xml.Schema.XmlSchemaValidator> 개체가 `null` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-113">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="d9dd4-114">결과적으로 외부 스키마에서 참조 되는 가져오기 또는 redefine 요소 해결 되지 않은 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-114">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-115">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-115">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-116">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-116">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-117">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-117">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-118">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-118">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.IXmlNamespaceResolver namespaceResolver, valuetype System.Xml.Schema.XmlSchemaValidationFlags validationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable, schemas As XmlSchemaSet, namespaceResolver As IXmlNamespaceResolver, validationFlags As XmlSchemaValidationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaValidator(System::Xml::XmlNameTable ^ nameTable, System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::Xml::Schema::XmlSchemaValidationFlags validationFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="validationFlags" Type="System.Xml.Schema.XmlSchemaValidationFlags" />
      </Parameters>
      <Docs>
        <param name="nameTable">
          <span data-ttu-id="d9dd4-119">원자화된 문자열 형식의 요소 및 특성 이름이 포함된 <see cref="T:System.Xml.XmlNameTable" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-119">An <see cref="T:System.Xml.XmlNameTable" /> object containing element and attribute names as atomized strings.</span>
          </span>
        </param>
        <param name="schemas">
          <span data-ttu-id="d9dd4-120">유효성 검사에 사용할 XSD(XML 스키마 정의 언어) 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-120">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas used for validation.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="d9dd4-121">유효성을 검사하는 동안 발견된 네임스페이스를 확인하는 데 사용하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-121">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used for resolving namespaces encountered during validation.</span>
          </span>
        </param>
        <param name="validationFlags">
          <span data-ttu-id="d9dd4-122">스키마 유효성 검사 옵션을 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-122">An <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> value specifying schema validation options.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-123">
            <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-123">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-124">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-124">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="d9dd4-125">콘텐츠는 <xref:System.Xml.Schema.XmlSchemaSet> 매개 변수는 내부에 복사 됩니다 <xref:System.Xml.Schema.XmlSchemaSet> 개체 때는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 또는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 유효성 검사 옵션을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-125">The contents of the <xref:System.Xml.Schema.XmlSchemaSet> parameter are copied into an internal <xref:System.Xml.Schema.XmlSchemaSet> object when the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> or the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation options are set.</span></span> <span data-ttu-id="d9dd4-126">결과적으로, 입력에 변경 <xref:System.Xml.Schema.XmlSchemaSet> 유효성 검사 중에 개체를 유효성 검사의 결과 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-126">As a result, changes to the input <xref:System.Xml.Schema.XmlSchemaSet> object during validation do not affect the outcome of validation.</span></span>  
  
-   <span data-ttu-id="d9dd4-127">경우는 <xref:System.Xml.Schema.XmlSchemaSet> 지정 된 매개 변수는 컴파일되지 해당 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-127">If the <xref:System.Xml.Schema.XmlSchemaSet> parameter specified is not compiled, its <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method is called.</span></span>  
  
-   <span data-ttu-id="d9dd4-128"><xref:System.Xml.IXmlNamespaceResolver> 매개 변수는 유효성 검사를 위해 특히 중요 `xs:QName` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-128">The <xref:System.Xml.IXmlNamespaceResolver> parameter is especially important for validating `xs:QName` types.</span></span> <span data-ttu-id="d9dd4-129"><xref:System.Xml.Schema.XmlSchemaValidator> 클래스 범위에서 네임 스페이스를 복사 하지 않습니다는 <xref:System.Xml.IXmlNamespaceResolver> 개체 하지만 대신에 대 한 참조를 보유 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-129">The <xref:System.Xml.Schema.XmlSchemaValidator> class does not copy the in-scope namespaces from the <xref:System.Xml.IXmlNamespaceResolver> object but instead holds a reference to it.</span></span> <span data-ttu-id="d9dd4-130">이렇게 하면 새 네임 스페이스에 추가할 수 있습니다.는 <xref:System.Xml.IXmlNamespaceResolver> 유효성 검사 프로세스 중에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-130">This allows new namespaces to be added to the <xref:System.Xml.IXmlNamespaceResolver> object during the validation process.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9dd4-131"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 의 유효성 검사 플래그는 <xref:System.Xml.Schema.XmlSchemaValidator> 없는 개체 집합 기본값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-131">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="d9dd4-132">또한는 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 속성은 <xref:System.Xml.Schema.XmlSchemaValidator> 개체가 `null` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-132">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="d9dd4-133">결과적으로 외부 스키마에서 참조 되는 가져오기 또는 redefine 요소 해결 되지 않은 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-133">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-134">에 대 한 예제는 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> 생성자 참조는 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-134">For an example of the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-135">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-135">One or more of the parameters specified are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">
          <span data-ttu-id="d9dd4-136">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 매개 변수에 포함된 스키마를 컴파일하는 동안 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-136">An error occurred while compiling schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="AddSchema">
      <MemberSignature Language="C#" Value="public void AddSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSchema (schema As XmlSchema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSchema(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">
          <span data-ttu-id="d9dd4-137">유효성 검사에 사용되는 스키마 집합에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-137">An <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the set of schemas used for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-138">유효성 검사에 사용되는 스키마 집합에 XSD(XML 스키마 정의 언어) 스키마를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-138">Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-139">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-139">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-140"><xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> 유효성을 검사 중인 XML 문서에 인라인 XML 스키마의 효과 시뮬레이션 하 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-140">The <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</span></span>  
  
-   <span data-ttu-id="d9dd4-141"><xref:System.Xml.Schema.XmlSchema> 매개 변수의 대상 네임스페이스는 이미 <xref:System.Xml.Schema.XmlSchemaValidator> 개체에 발생한 요소나 특성의 대상 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-141">The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object.</span></span>  
  
-   <span data-ttu-id="d9dd4-142">경우는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 유효성 검사 옵션을 설정 하지 않으면는 <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-142">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> validation option is not set, the <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-143">지정된 <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-143">The <see cref="T:System.Xml.Schema.XmlSchema" /> parameter specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-144">
            <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수의 대상 네임스페이스가 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체에서 이미 발견한 요소 또는 특성의 대상 네임스페이스와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-144">The target namespace of the <see cref="T:System.Xml.Schema.XmlSchema" /> parameter matches that of any element or attribute already encountered by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">
          <span data-ttu-id="d9dd4-145">
            <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-145">The <see cref="T:System.Xml.Schema.XmlSchema" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="EndValidation">
      <MemberSignature Language="C#" Value="public void EndValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndValidation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndValidation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-146">유효성 검사를 끝내고 전체 XML 문서에서 identity 제약 조건을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-146">Ends validation and checks identity constraints for the entire XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-147"><xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> 메서드 유효성 검사를 끝내 고 전체 XML 문서에 대 한 identity 제약 조건을 확인는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 유효성 검사 옵션을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-147">The <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> method ends validation and checks identity constraints for the entire XML document if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> validation option is set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-148">XML 문서에 identity 제약 조건 오류가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-148">An identity constraint error was found in the XML document.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedAttributes () As XmlSchemaAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaAttribute ^&gt; ^ GetExpectedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAttribute[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-149">현재 요소 컨텍스트에 나타날 수 있는 특성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-149">Returns the expected attributes for the current element context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-150">
            <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체의 배열이거나, 나타날 수 있는 특성이 없는 경우 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-150">An array of <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects or an empty array if there are no expected attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-151">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-151">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-152">경우는 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 메서드 직후에 호출 되는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 메서드를 XML 문서에 나타날 수 있는 모든 특성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-152">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned.</span></span>  
  
-   <span data-ttu-id="d9dd4-153">경우는 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 메서드를 한 번 이상 호출한 후에 호출 됩니다는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드를 현재 요소에 대 한 유효성 검사 아직 하지 않은 특성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-153">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedParticles">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedParticles () As XmlSchemaParticle()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaParticle ^&gt; ^ GetExpectedParticles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-154">현재 요소 컨텍스트에 나타날 수 있는 파티클을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-154">Returns the expected particles in the current element context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-155">
            <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> 개체의 배열이거나, 나타날 수 있는 파티클이 없는 경우 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-155">An array of <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> objects or an empty array if there are no expected particles.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-156"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 메서드가 반환할 수 있는 유효한 파티클은 <xref:System.Xml.Schema.XmlSchemaElement> 및 <xref:System.Xml.Schema.XmlSchemaAny> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-156">The valid particles that can be returned by the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method are instances of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAny> classes.</span></span>  
  
 <span data-ttu-id="d9dd4-157">내용 모델의 compositor가 `xs:sequence`인 경우 시퀀스에서 다음 파티클만 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-157">When the compositor for the content model is an `xs:sequence`, only the next particle in the sequence is returned.</span></span> <span data-ttu-id="d9dd4-158">내용 모델의 compositor가 `xs:all` 또는 `xs:choice`인 경우 현재 요소 컨텍스트에서 따를 수 있는 유효한 파티클이 모두 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-158">If the compositor for the content model is an `xs:all` or an `xs:choice`, then all valid particles that could follow in the current element context are returned.</span></span>  
  
 <span data-ttu-id="d9dd4-159">예를 들어, XSD(XML 스키마 정의 언어) 스키마 및 이 스키마를 따르는 XML 문서에서 `book` 요소의 유효성을 검사한 후에는 `book` 요소가 현재 요소 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-159">For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the `book` element, the `book` element is the current element context.</span></span> <span data-ttu-id="d9dd4-160"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 메서드는 <xref:System.Xml.Schema.XmlSchemaElement> 요소를 나타내는 단일 `title` 개체가 포함된 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-160">The <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `title` element.</span></span> <span data-ttu-id="d9dd4-161">유효성 검사 컨텍스트가 `title` 요소인 경우 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 메서드는 빈 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-161">When the validation context is the `title` element, the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method returns an empty array.</span></span> <span data-ttu-id="d9dd4-162"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 요소의 유효성을 검사한 후 `title` 요소의 유효성을 검사하기 전에 `description` 메서드를 호출하면 <xref:System.Xml.Schema.XmlSchemaElement> 요소를 나타내는 단일 `description` 개체가 포함된 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-162">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method is called after the `title` element has been validated but before the `description` element has been validated, it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `description` element.</span></span> <span data-ttu-id="d9dd4-163"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 요소의 유효성을 검사한 후 `description` 메서드를 호출하면 와일드카드를 나타내는 단일 <xref:System.Xml.Schema.XmlSchemaAny> 개체가 포함된 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-163">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method is called after the `description` element has been validated then it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaAny> object representing the wildcard.</span></span>  
  
```vb  
Dim reader As XmlReader =  XmlReader.Create("input.xml")   
  
Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   
schemaSet.Add(Nothing, "schema.xsd")  
Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   
  
Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  
validator.Initialize()  
  
validator.ValidateElement("book", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("title", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
validator.ValidateEndElement(Nothing)  
  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("description", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  
    Console.WriteLine(particle.GetType())  
Next  
  
validator.ValidateElement("namespace", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlReader reader = XmlReader.Create("input.xml");  
  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize();  
  
validator.ValidateElement("book", "", null);  
  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("title", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("description", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())  
{  
    Console.WriteLine(particle.GetType());  
}  
  
validator.ValidateElement("namespace", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
validator.ValidateEndElement(null);  
```  
  
 <span data-ttu-id="d9dd4-164">이 예제에서는 다음 XML을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-164">The example takes the following XML as input.</span></span>  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="book">`  
  
 `<xs:complexType>`  
  
 `<xs:sequence>`  
  
 `<xs:element name="title" type="xs:string" />`  
  
 `<xs:element name="description" type="xs:string" />`  
  
 `<xs:any processContents ="lax"/>`  
  
 `</xs:sequence>`  
  
 `</xs:complexType>`  
  
 `</xs:element>`  
  
 `</xs:schema>`  
  
 <span data-ttu-id="d9dd4-165">이 예제에서는 다음 XSD 스키마를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-165">The example takes the following XSD schema as input.</span></span>  
  
 `<book>`  
  
 `<title>My Book</title>`  
  
 `<description>My Book's Description</description>`  
  
 `<namespace>System.Xml.Schema</namespace>`  
  
 `</book>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaParticle" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAny" />
      </Docs>
    </Member>
    <Member MemberName="GetUnspecifiedDefaultAttributes">
      <MemberSignature Language="C#" Value="public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetUnspecifiedDefaultAttributes(class System.Collections.ArrayList defaultAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUnspecifiedDefaultAttributes (defaultAttributes As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetUnspecifiedDefaultAttributes(System::Collections::ArrayList ^ defaultAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAttributes" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="defaultAttributes">
          <span data-ttu-id="d9dd4-166">요소 컨텍스트에서 유효성 검사를 수행하는 동안 발견되지 않은 특성에 대해 <see cref="T:System.Collections.ArrayList" /> 개체로 채울 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-166">An <see cref="T:System.Collections.ArrayList" /> to populate with <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects for any attributes not yet encountered during validation in the element context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-167">기본 특성에 대한 identity 제약 조건의 유효성을 검사하고, 요소 컨텍스트에서 <see cref="T:System.Collections.ArrayList" /> 메서드를 사용하여 아직 유효성이 검사되지 않고 기본값을 사용하는 모든 특성에 대해 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체로 지정된 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-167">Validates identity constraints on the default attributes and populates the <see cref="T:System.Collections.ArrayList" /> specified with <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects for any attributes with default values that have not been previously validated using the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method in the element context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-168"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 메서드를 호출 하 여 현재 요소에 대 한 모든 특성을 확인 한 후 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-168">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span> <span data-ttu-id="d9dd4-169">유효성을 검사 중인 XML 문서에 삽입할 기본 특성을 결정하려면 <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 메서드를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-169">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should be used to determine what default attributes are to be inserted into the XML document being validated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-170">
            <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체의 상태를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-170">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-171">
            <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체의 상태를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-171">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-172"><xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 메서드는 생성 후 즉시 호출 하는 경우에 유효만 <xref:System.Xml.Schema.XmlSchemaValidator> 개체를 호출한 후 또는 <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-172">The <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method is only valid if called immediately after the construction of an <xref:System.Xml.Schema.XmlSchemaValidator> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-173">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-173">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-174">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-174">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-175">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-175">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-176">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-176">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-177">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 개체를 만든 직후 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />을 호출한 후가 아닌 시점에 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-177">Calling the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> method is valid immediately after the construction of an <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object or after a call to <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Xml.Schema.XmlSchemaObject partialValidationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (partialValidationType As XmlSchemaObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Xml::Schema::XmlSchemaObject ^ partialValidationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
      </Parameters>
      <Docs>
        <param name="partialValidationType">
          <span data-ttu-id="d9dd4-178">부분 유효성 검사를 위해 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 개체의 유효성 검사 컨텍스트를 초기화하는 데 사용할 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, <see cref="T:System.Xml.Schema.XmlSchemaType" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-178">An <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, or <see cref="T:System.Xml.Schema.XmlSchemaType" /> object used to initialize the validation context of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object for partial validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-179">지정된 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />를 사용하여 부분 유효성 검사를 위해 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 개체의 상태를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-179">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object using the <see cref="T:System.Xml.Schema.XmlSchemaObject" /> specified for partial validation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-180"><xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>를 매개 변수로 사용하는 <xref:System.Xml.Schema.XmlSchemaObject> 메서드는 부분 유효성 검사를 위해 <xref:System.Xml.Schema.XmlSchemaValidator> 개체를 시작 상태로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-180">The <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method that takes an <xref:System.Xml.Schema.XmlSchemaObject> as a parameter initializes an <xref:System.Xml.Schema.XmlSchemaValidator> object to its starting state for partial validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-181">다음 예제에서는 부분 유효성 검사를 위해 <xref:System.Xml.Schema.XmlSchemaObject> 메서드를 사용하여 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-181">In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method.</span></span> <span data-ttu-id="d9dd4-182">`orderNumber` 개체의 <xref:System.Xml.XmlQualifiedName> 속성이 반환하는 <xref:System.Xml.Schema.XmlSchemaObjectTable> 컬렉션에서 <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A>으로 스키마 요소를 선택하여 <xref:System.Xml.Schema.XmlSchemaSet> 스키마 요소를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-182">The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span> <span data-ttu-id="d9dd4-183">그러면 <xref:System.Xml.Schema.XmlSchemaValidator> 개체가 이 특정 요소의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-183">The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "schema.xsd")  
schemaSet.Compile()  
Dim nameTable As NameTable = New NameTable()  
Dim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
  
Dim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  
validator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName("orderNumber")))  
  
validator.ValidateElement("orderNumber", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateText("123")  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
schemaSet.Compile();  
NameTable nameTable = new NameTable();  
XmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName("orderNumber")]);  
  
validator.ValidateElement("orderNumber", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateText("123");  
validator.ValidateEndElement(null);  
```  
  
 <span data-ttu-id="d9dd4-184">이 예제에서는 다음 XML 스키마를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-184">The example takes the following XML schema as input.</span></span>  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="orderNumber" type="xs:int" />`  
  
 `</xs:schema>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-185">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 개체를 만든 직후 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />을 호출한 후가 아닌 시점에 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-185">Calling the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> method is valid immediately after the construction of an <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object or after a call to <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9dd4-186">
            <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 매개 변수가 <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-186">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parameter is not an <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, or <see cref="T:System.Xml.Schema.XmlSchemaType" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-187">
            <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 매개 변수는 <see langword="null" />일 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-187">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaObject" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
      </Docs>
    </Member>
    <Member MemberName="LineInfoProvider">
      <MemberSignature Language="C#" Value="public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.IXmlLineInfo LineInfoProvider" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property LineInfoProvider As IXmlLineInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::IXmlLineInfo ^ LineInfoProvider { System::Xml::IXmlLineInfo ^ get(); void set(System::Xml::IXmlLineInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.IXmlLineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-188">유효성을 검사할 XML 노드의 줄 번호 정보를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-188">Gets or sets the line number information for the XML node being validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9dd4-189">
            <see cref="T:System.Xml.IXmlLineInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-189">An <see cref="T:System.Xml.IXmlLineInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="d9dd4-190">모든 줄 정보를 보고 <xref:System.Xml.Schema.XmlSchemaValidationException> 유효성 검사 프로세스 중에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-190">Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.</span></span>  
  
-   <span data-ttu-id="d9dd4-191">기본 <xref:System.Xml.IXmlLineInfo> 에서 반환 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> 속성에 대 한 0을 반환 합니다.는 <xref:System.Xml.IXmlLineInfo.LineNumber%2A> 및 <xref:System.Xml.IXmlLineInfo.LinePosition%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-191">The default <xref:System.Xml.IXmlLineInfo> object returned by the <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="SkipToEndElement">
      <MemberSignature Language="C#" Value="public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToEndElement (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-192">현재 요소 콘텐츠를 성공적으로 건너뛴 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-192">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set if the current element content is successfully skipped.</span>
          </span>
          <span data-ttu-id="d9dd4-193">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-193">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-194">현재 요소 내용의 유효성 검사를 생략하고 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체를 준비하여 부모 요소의 컨텍스트에서 내용의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-194">Skips validation of the current element content and prepares the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object to validate content in the parent element's context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-195">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-195">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-196"><xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> 메서드는 현재 요소 내용의 유효성 검사를 생략 하 고 준비는 <xref:System.Xml.Schema.XmlSchemaValidator> 개체는 부모 요소의 컨텍스트에서 내용의 유효성을 검사 하는 현재 요소의 모든 자식에 대 한 유효성 검사를 생략 하는 것과 같습니다 한 다음 호출 된 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-196">The <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> method skips validation of the current element content and prepares the <xref:System.Xml.Schema.XmlSchemaValidator> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-197">현재 요소 콘텐츠를 성공적으로 건너뛰면는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-197">If the current element content is successfully skipped, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9dd4-198">건너뛴된 콘텐츠에 유효성 검사 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-198">No validation errors are reported on skipped content.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-199">
            <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-199">The <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-200">예를 들어, <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-200">For example, calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-201">유효성을 검사할 XML 노드의 소스 URI를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-201">Gets or sets the source URI for the XML node being validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9dd4-202">유효성을 검사할 XML 노드의 소스 URI를 나타내는 <see cref="T:System.Uri" /> 개체입니다. 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-202">A <see cref="T:System.Uri" /> object representing the source URI for the XML node being validated; the default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="d9dd4-203">URI에서 보고 되는 소스 <xref:System.Xml.Schema.XmlSchemaValidationException> 유효성 검사 프로세스 중에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-203">The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.</span></span>  
  
-   <span data-ttu-id="d9dd4-204">경우는 <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A> 속성이 설정 되지 않은, XML 문서에 대 한 파일 이름이 <xref:System.String.Empty> 유효성 검사 오류 메시지에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-204">If the <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A> property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-205">현재 요소 컨텍스트에서 특성의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-205">Validates the attribute in the current element context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, string attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As String, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::String ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="d9dd4-206">유효성을 검사할 특성의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-206">The local name of the attribute to validate.</span>
          </span>
        </param>
        <param name="namespaceUri">
          <span data-ttu-id="d9dd4-207">유효성을 검사할 특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-207">The namespace URI of the attribute to validate.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="d9dd4-208">유효성을 검사할 특성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-208">The value of the attribute to validate.</span>
          </span>
        </param>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-209">특성의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-209">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the attribute.</span>
          </span>
          <span data-ttu-id="d9dd4-210">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-210">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-211">현재 요소 컨텍스트에서 특성의 이름, 네임스페이스 URI 및 값에 대해 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-211">Validates the attribute name, namespace URI, and value in the current element context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-212">유효성이 검사된 특성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-212">The validated attribute's value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-213">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-213">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-214"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 메서드를 호출 하 여 현재 요소에 대 한 모든 특성을 확인 한 후 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-214">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-215">경우는 <xref:System.Xml.Schema.XmlSchemaAttribute> 개체에 전달 된는 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 메서드는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드 특성에 대해 유효성을 검사는 <xref:System.Xml.Schema.XmlSchemaAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-215">If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.</span></span>  
  
-   <span data-ttu-id="d9dd4-216">현재 요소 컨텍스트에서 특성이 성공적으로 확인 되 면는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-216">If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-217">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-217">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-218">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-218">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-219">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-219">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-220">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-220">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-221">특성이 현재 요소 컨텍스트에서 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-221">The attribute is not valid in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-222">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-222">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-223">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-223">For example, calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-224">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-224">One or more of the parameters specified are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, class System.Xml.Schema.XmlValueGetter attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As XmlValueGetter, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlValueGetter ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.Xml.Schema.XmlValueGetter" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="d9dd4-225">유효성을 검사할 특성의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-225">The local name of the attribute to validate.</span>
          </span>
        </param>
        <param name="namespaceUri">
          <span data-ttu-id="d9dd4-226">유효성을 검사할 특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-226">The namespace URI of the attribute to validate.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="d9dd4-227">특성 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-227">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span>
          </span>
        </param>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-228">특성의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-228">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the attribute.</span>
          </span>
          <span data-ttu-id="d9dd4-229">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-229">This parameter and can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-230">현재 요소 컨텍스트에서 특성의 이름, 네임스페이스 URI 및 값에 대해 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-230">Validates the attribute name, namespace URI, and value in the current element context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-231">유효성이 검사된 특성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-231">The validated attribute's value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-232">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-232">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-233"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 메서드를 호출 하 여 현재 요소에 대 한 모든 특성을 확인 한 후 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-233">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-234">경우는 <xref:System.Xml.Schema.XmlSchemaAttribute> 개체에 전달 된는 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 메서드는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 메서드 특성에 대해 유효성을 검사는 <xref:System.Xml.Schema.XmlSchemaAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-234">If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.</span></span>  
  
-   <span data-ttu-id="d9dd4-235">현재 요소 컨텍스트에서 특성이 성공적으로 확인 되 면는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-235">If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-236">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-236">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-237">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-237">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-238">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-238">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-239">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-239">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-240">특성이 현재 요소 컨텍스트에서 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-240">The attribute is not valid in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-241">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-241">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-242">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-242">For example, calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-243">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-243">One or more of the parameters specified are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-244">현재 컨텍스트에서 요소의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-244">Validates the element in the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="d9dd4-245">유효성을 검사할 요소의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-245">The local name of the element to validate.</span>
          </span>
        </param>
        <param name="namespaceUri">
          <span data-ttu-id="d9dd4-246">유효성을 검사할 요소의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-246">The namespace URI of the element to validate.</span>
          </span>
        </param>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-247">요소 이름의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-247">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element's name.</span>
          </span>
          <span data-ttu-id="d9dd4-248">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-248">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-249">현재 컨텍스트에서 요소의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-249">Validates the element in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-250">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-250">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-251">요소 이름을 현재 컨텍스트에서 유효성이 성공적으로 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-251">If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
-   <span data-ttu-id="d9dd4-252">요소 이름 또는 특성 중 하나라도 잘못 된 경우 현재 컨텍스트는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>고, 그렇지 않으면는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이로 설정 되어 <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-252">If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-253">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-253">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-254">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-254">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-255">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-255">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-256">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-256">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-257">요소 이름이 현재 컨텍스트에서 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-257">The element's name is not valid in the current context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-258">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-258">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-259">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-259">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo, xsiType As String, xsiNil As String, xsiSchemaLocation As String, xsiNoNamespaceSchemaLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::String ^ xsiType, System::String ^ xsiNil, System::String ^ xsiSchemaLocation, System::String ^ xsiNoNamespaceSchemaLocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="xsiType" Type="System.String" />
        <Parameter Name="xsiNil" Type="System.String" />
        <Parameter Name="xsiSchemaLocation" Type="System.String" />
        <Parameter Name="xsiNoNamespaceSchemaLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="d9dd4-260">유효성을 검사할 요소의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-260">The local name of the element to validate.</span>
          </span>
        </param>
        <param name="namespaceUri">
          <span data-ttu-id="d9dd4-261">유효성을 검사할 요소의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-261">The namespace URI of the element to validate.</span>
          </span>
        </param>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-262">요소 이름의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-262">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element's name.</span>
          </span>
          <span data-ttu-id="d9dd4-263">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-263">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="xsiType">
          <span data-ttu-id="d9dd4-264">요소의 <c>xsi:Type</c> 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-264">The <c>xsi:Type</c> attribute value of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-265">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-265">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="xsiNil">
          <span data-ttu-id="d9dd4-266">요소의 <c>xsi:Nil</c> 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-266">The <c>xsi:Nil</c> attribute value of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-267">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-267">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="xsiSchemaLocation">
          <span data-ttu-id="d9dd4-268">요소의 <c>xsi:SchemaLocation</c> 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-268">The <c>xsi:SchemaLocation</c> attribute value of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-269">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-269">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="xsiNoNamespaceSchemaLocation">
          <span data-ttu-id="d9dd4-270">요소의 <c>xsi:NoNamespaceSchemaLocation</c> 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-270">The <c>xsi:NoNamespaceSchemaLocation</c> attribute value of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-271">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-271">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-272">지정된 <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> 및 <c>xsi:NoNamespaceSchemaLocation</c> 특성 값으로 현재 컨텍스트에서 요소의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-272">Validates the element in the current context with the <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c>, and <c>xsi:NoNamespaceSchemaLocation</c> attribute values specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-273">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-273">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-274">요소 이름을 현재 컨텍스트에서 유효성이 성공적으로 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-274">If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
-   <span data-ttu-id="d9dd4-275">요소 이름이 나 특성 중 하나는 현재 컨텍스트에서 유효 하지 않은 경우는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>고, 그렇지 않으면는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-275">If the element name or any of its attributes are invalid in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
-   <span data-ttu-id="d9dd4-276">경우는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 값에 대 한 매개 변수로 전달 되지 않았습니다 고 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> 생성자 `xsi:SchemaLocation` 및 `xsi:NoNamespaceSchemaLocation` 특성 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-276">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> value was not passed as a parameter to the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, `xsi:SchemaLocation` and `xsi:NoNamespaceSchemaLocation` attribute values are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-277">요소 이름이 현재 컨텍스트에서 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-277">The element's name is not valid in the current context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-278">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-278">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-279">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-279">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEndElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-280">단순 콘텐츠를 포함하는 요소에 대해 해당 데이터 형식을 기준으로 요소의 텍스트 콘텐츠가 유효한지 확인하고 복합 콘텐츠를 포함하는 요소에 대해 현재 요소의 콘텐츠가 완전한지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-280">Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-281">요소의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-281">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-282">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-282">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-283">단순 콘텐츠를 포함하는 요소에 대해 해당 데이터 형식을 기준으로 요소의 텍스트 콘텐츠가 유효한지 확인하고 복합 콘텐츠를 포함하는 요소에 대해 현재 요소의 콘텐츠가 완전한지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-283">Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-284">요소에 단순 콘텐츠가 있는 경우 요소의 구문 분석되고 형식화된 텍스트 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-284">The parsed, typed text value of the element if the element has simple content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-285">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-285">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-286">단순 콘텐츠가 있는 요소의 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드 확인 요소의 텍스트 콘텐츠의 데이터 형식이 올바른지 및 구문 분석 된 형식화 된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-286">For elements with simple content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</span></span> <span data-ttu-id="d9dd4-287">요소의 텍스트 콘텐츠를 결과에 대 한 이전 호출에서 가져온 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-287">The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</span></span>  
  
-   <span data-ttu-id="d9dd4-288">복합 콘텐츠가 있는 요소에 대 한는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드는 현재 요소의 콘텐츠가 완전 한지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-288">For elements with complex content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method verifies if the content of the current element is complete.</span></span>  
  
-   <span data-ttu-id="d9dd4-289">요소에 있는 경우 기본 값에서 반환 되는 값은 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드는 요소에 대 한 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-289">If the element has a default value, the value returned from the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is the default value for the element.</span></span>  
  
-   <span data-ttu-id="d9dd4-290">경우는 <xref:System.Xml.Schema.XmlSchemaValidator> 으로 생성 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 값을 매개 변수로 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 요소에 적용 되는 방법을 검사 identity 제약 조건 규칙 (있는 경우).</span><span class="sxs-lookup"><span data-stu-id="d9dd4-290">If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> value as a parameter, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method checks the identity constraint rules (if any) that apply to the element.</span></span>  
  
-   <span data-ttu-id="d9dd4-291">현재 컨텍스트에서 요소는 유효성을 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-291">If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-292">요소의 콘텐츠가 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-292">The element's content is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-293">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-293">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-294">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-294">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method is called after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo, typedValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::Object ^ typedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-295">요소의 텍스트 콘텐츠에 대한 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-295">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the text content of the element.</span>
          </span>
          <span data-ttu-id="d9dd4-296">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-296">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="typedValue">
          <span data-ttu-id="d9dd4-297">요소의 형식화된 텍스트 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-297">The typed text content of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-298">지정된 요소의 데이터 형식을 기준으로 해당 요소의 텍스트 콘텐츠가 유효한지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-298">Verifies if the text content of the element specified is valid according to its data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9dd4-299">요소의 구문 분석되고 형식화된 단순 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-299">The parsed, typed simple content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9dd4-300">에 대 한 유효성을 검사할 경우는 `xs:key`, `xs:keyref`, 또는 `xs:unique` identity 제약 조건을 사용 하지 않는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-300">If you are validating against the `xs:key`, `xs:keyref`, or `xs:unique` identity constraints, do not use the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload.</span></span> <span data-ttu-id="d9dd4-301">대신, 호출의 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 메서드는 요소의 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-301">Instead, call the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method and pass it the value of the element.</span></span> <span data-ttu-id="d9dd4-302">그런 다음 호출에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드 오버 로드를 사용 <xref:System.Xml.Schema.XmlSchemaInfo> 요소의 텍스트 콘텐츠의 데이터 형식이 올바른지 확인 하려면를 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-302">Then call the  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload, which takes <xref:System.Xml.Schema.XmlSchemaInfo> as an argument, to verify that the text content of the element is valid according to its data type.</span></span>  
  
 <span data-ttu-id="d9dd4-303">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-303">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-304">단순 콘텐츠가 있는 요소의 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> 메서드 확인 요소의 텍스트 콘텐츠의 데이터 형식이 올바른지 및 구문 분석 된 형식화 된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-304">For elements with simple content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</span></span> <span data-ttu-id="d9dd4-305">요소의 텍스트 콘텐츠를 매개 변수로 전달 된 입력 된 콘텐츠를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-305">The text content of the element is obtained from the typed content passed as a parameter.</span></span>  
  
-   <span data-ttu-id="d9dd4-306">경우에 대 한 호출이 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 메서드 이전에 적용 되는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-306">If calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method have been previously made, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
-   <span data-ttu-id="d9dd4-307">요소에 있는 경우 복합 콘텐츠는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-307">If the element has complex content an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
-   <span data-ttu-id="d9dd4-308">경우는 <xref:System.Xml.Schema.XmlSchemaValidator> 으로 생성 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 값을 매개 변수로 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 요소에 적용 되는 방법을 검사 identity 제약 조건 규칙 (있는 경우).</span><span class="sxs-lookup"><span data-stu-id="d9dd4-308">If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> value as a parameter, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method checks the identity constraint rules (if any) that apply to the element.</span></span>  
  
-   <span data-ttu-id="d9dd4-309">현재 컨텍스트에서 요소는 유효성을 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성 유효성 검사의 결과가 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-309">If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-310">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-310">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-311">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-311">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-312">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-312">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-313">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-313">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-314">요소의 텍스트 콘텐츠가 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-314">The element's text content is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-315">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 메서드의 호출 순서가 잘못되거나(예: <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우), <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드를 이전에 호출했거나, 요소에 복합 콘텐츠가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-315">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method was not called in the correct sequence (for example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method is called after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), calls to the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method have been previously made, or the element has complex content.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-316">형식화된 텍스트 콘텐츠 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-316">The typed text content parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndOfAttributes">
      <MemberSignature Language="C#" Value="public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEndOfAttributes(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEndOfAttributes (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEndOfAttributes(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">
          <span data-ttu-id="d9dd4-317">요소 컨텍스트의 필수 특성이 모두 있는지를 화인하는 유효성 검사가 성공할 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-317">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful verification that all the required attributes in the element context are present.</span>
          </span>
          <span data-ttu-id="d9dd4-318">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-318">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-319">요소 컨텍스트에 필수 특성이 모두 있는지 확인하고 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체를 준비하여 요소의 자식 내용의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-319">Verifies whether all the required attributes in the element context are present and prepares the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object to validate the child content of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-320">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-320">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-321"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 메서드 하기 전에 항상 호출 해야 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-321">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>.</span></span>  
  
-   <span data-ttu-id="d9dd4-322"><xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> 요소 내용의 유효성 검사를 진행 하기 전에 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-322">The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> method must be called before proceeding with validation of an element's content.</span></span>  
  
-   <span data-ttu-id="d9dd4-323">요소 컨텍스트에 필수 특성이 모두 있는 경우에 <xref:System.Xml.Schema.XmlSchemaInfo> 지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaValidity.Valid>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-323">If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Valid>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-324">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-324">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-325">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-325">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-326">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-326">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-327">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-327">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-328">현재 요소 컨텍스트의 필수 특성 중 하나 이상이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-328">One or more of the required attributes in the current element context were not found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-329">
            <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-329">The <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-330">예를 들어, <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-330">For example, calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-331">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-331">One or more of the parameters specified are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateText">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-332">현재 요소 컨텍스트에서 텍스트가 허용되는지 확인하고 현재 요소에 단순 내용이 있는지 확인하기 위해 텍스트를 누적합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-332">Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::String ^ elementValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <span data-ttu-id="d9dd4-333">현재 요소 컨텍스트에서 유효성을 검사할 텍스트 <see langword="string" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-333">A text <see langword="string" /> to validate in the current element context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-334">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 텍스트를 누적시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-334">Validates whether the text <see langword="string" /> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-335">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-335">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-336">요소에 있는 경우 단순 콘텐츠를 텍스트 `string` 지정을 호출할 때마다 연결는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 때까지 메서드는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-336">If the element has simple content, the text `string` specified is concatenated on each call to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called.</span></span> <span data-ttu-id="d9dd4-337">경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드가 호출 되 면 모든 텍스트의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-337">When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.</span></span>  
  
-   <span data-ttu-id="d9dd4-338">요소의 내용이 복합, 텍스트 연결 없음 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-338">If the element has complex content, no text concatenation occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-339">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-339">The text <see langword="string" /> specified is not allowed in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-340">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-340">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-341">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-341">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-342">텍스트 <see langword="string" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-342">The text <see langword="string" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <span data-ttu-id="d9dd4-343">텍스트 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-343">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-344">지정된 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 개체에서 반환된 텍스트를 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 텍스트를 누적시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-344">Validates whether the text returned by the <see cref="T:System.Xml.Schema.XmlValueGetter" /> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-345">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-345">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method.</span></span>  
  
-   <span data-ttu-id="d9dd4-346">요소에 있는 경우 단순 콘텐츠를 텍스트 `string` 지정을 호출할 때마다 연결는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 때까지 메서드는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-346">If the element has simple content, the text `string` specified is concatenated on each call to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called.</span></span> <span data-ttu-id="d9dd4-347">경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 메서드가 호출 되 면 모든 텍스트의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-347">When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.</span></span>  
  
-   <span data-ttu-id="d9dd4-348">요소의 내용이 복합, 텍스트 연결 없음 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-348">If the element has complex content, no text concatenation occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-349">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-349">The text <see langword="string" /> specified is not allowed in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-350">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-350">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-351">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-351">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9dd4-352">텍스트 <see langword="string" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-352">The text <see langword="string" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateWhitespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-353">현재 요소 컨텍스트에서 공백을 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 공백을 누적시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-353">Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::String ^ elementValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <span data-ttu-id="d9dd4-354">현재 요소 컨텍스트에서 유효성을 검사할 공백 <see langword="string" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-354">A white space <see langword="string" /> to validate in the current element context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-355">지정된 <see langword="string" />에 있는 공백을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 공백을 누적시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-355">Validates whether the white space in the <see langword="string" /> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-356">현재 요소 컨텍스트에서 공백을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-356">White space is not allowed in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-357">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-357">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-358">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-358">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <span data-ttu-id="d9dd4-359">공백 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-359">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9dd4-360">지정된 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 개체에서 반환된 공백을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 공백을 누적시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-360">Validates whether the white space returned by the <see cref="T:System.Xml.Schema.XmlValueGetter" /> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="d9dd4-361">현재 요소 컨텍스트에서 공백을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-361">White space is not allowed in the current element context.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9dd4-362">
            <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-362">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method was not called in the correct sequence.</span>
          </span>
          <span data-ttu-id="d9dd4-363">예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-363">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-364">스키마 유효성을 검사하는 동안 발생하는 스키마 유효성 검사 경고 및 오류를 받을 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-364">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> that receives schema validation warnings and errors encountered during schema validation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9dd4-365">되지 않은 경우 <xref:System.Xml.Schema.ValidationEventHandler> 지정는 <xref:System.Xml.Schema.XmlSchemaValidationException> 인 모든 스키마 유효성 검사 오류에 대해 throw 되는 <xref:System.Xml.Schema.XmlSeverityType> 값 <xref:System.Xml.Schema.XmlSeverityType.Error>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-365">If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="d9dd4-366"><xref:System.Xml.Schema.XmlSchemaValidationException> 인 유효성 검사 경고에 대 한 throw 되지 않습니다는 <xref:System.Xml.Schema.XmlSeverityType> 값 <xref:System.Xml.Schema.XmlSeverityType.Warning>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-366">An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9dd4-367">다음 예제에서는 유효성을 검사는 `contosoBooks.xml` 에 대 한 파일은 `contosoBooks.xsd` 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-367">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="d9dd4-368">이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-368">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="d9dd4-369">이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-369">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="d9dd4-370">이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-370">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventSender">
      <MemberSignature Language="C#" Value="public object ValidationEventSender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ValidationEventSender" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationEventSender As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ValidationEventSender { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-371">유효성 검사 이벤트의 sender 개체로 보낼 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-371">Gets or sets the object sent as the sender object of a validation event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9dd4-372">
            <see cref="T:System.Object" />입니다. 기본값은 이 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-372">An <see cref="T:System.Object" />; the default is this <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9dd4-373">유효성 검사 이벤트의 예제를 보려면는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-373">For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9dd4-374">
            <c>xs:import</c> 및 <c>xs:include</c> 요소뿐만 아니라 <c>xsi:schemaLocation</c> 및 <c>xsi:noNamespaceSchemaLocation</c> 특성을 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" /> 개체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-374">Sets the <see cref="T:System.Xml.XmlResolver" /> object used to resolve <c>xs:import</c> and <c>xs:include</c> elements as well as <c>xsi:schemaLocation</c> and <c>xsi:noNamespaceSchemaLocation</c> attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9dd4-375">
            <see cref="T:System.Xml.XmlResolver" /> 개체입니다. 기본값은 <see cref="T:System.Xml.XmlUrlResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9dd4-375">An <see cref="T:System.Xml.XmlResolver" /> object; the default is an <see cref="T:System.Xml.XmlUrlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9dd4-376"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 의 유효성 검사 플래그는 <xref:System.Xml.Schema.XmlSchemaValidator> 없는 개체 집합 기본값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-376">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="d9dd4-377">또한는 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 속성은 <xref:System.Xml.Schema.XmlSchemaValidator> 개체가 `null` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-377">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="d9dd4-378">결과적으로 외부 스키마에서 참조 되는 가져오기 또는 redefine 요소 해결 되지 않은 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9dd4-378">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>