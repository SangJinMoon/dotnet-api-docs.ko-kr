<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54fec8ddd8d80912cae1352853ba7c3ed04b5d88c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fec8ddd8d80912cae1352853ba7c3ed04b5d88c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas.</source>
          <target state="translated">XSD(XML 스키마 정의 언어)와 XDR(XML-Data Reduced) 스키마의 캐시를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCollection" /&gt;</ph> class class is obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCollection" /&gt;</ph> 클래스는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Use <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>를 사용하세요.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Schemas are loaded using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI).</source>
          <target state="translated">사용 하 여 스키마가 로드는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> 스키마가 네임 스페이스 식별자 URI (Uniform Resource)와 연결 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>For XML Schemas, this will typically be the <ph id="ph1">`targetNamespace`</ph> property of the schema.</source>
          <target state="translated">XML 스키마에 대 한이 일반적으로 됩니다는 <ph id="ph1">`targetNamespace`</ph> 스키마의 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> applies to XML Schemas only.</source>
          <target state="translated">하지만이 클래스는 XML 스키마 및 XDR 스키마를 저장, 메서드 및 속성을 취하 거 나 반환는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> XML 스키마에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>This version of the product supports the World Wide Web Consortium (W3C) XML Schema recommendation located at <ph id="ph1">http://www.w3.org/TR/xmlschema-1</ph> and <ph id="ph2">http://www.w3.org/TR/xmlschema-2</ph>.</source>
          <target state="translated">이 버전의 제품 지원에 있는 World Wide Web Consortium (W3C) XML 스키마 권장 사항 <ph id="ph1">http://www.w3.org/TR/xmlschema-1</ph> 및 <ph id="ph2">http://www.w3.org/TR/xmlschema-2</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>An XML Schema must reference the W3C Schema namespace <ph id="ph1">`http://www.w3.org/2001/XMLSchema`</ph> in its schema element.</source>
          <target state="translated">XML 스키마는 W3C 스키마 네임 스페이스를 참조 해야 <ph id="ph1">`http://www.w3.org/2001/XMLSchema`</ph> 의 schema 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> method for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> 메서드 예제입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source><ph id="ph1">`XmlSchemaCollection`</ph> can be used by <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> for efficient data validation.</source>
          <target state="translated"><ph id="ph1">`XmlSchemaCollection`</ph> 사용할 수 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 효율적인 데이터 유효성 검사에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The following example validates an XML document using the <ph id="ph1">`XmlSchemaCollection`</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 XML 문서의 유효성을 검사는 <ph id="ph1">`XmlSchemaCollection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> is used when loading schemas.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>은 스키마를 로드할 때 사용합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Adds the given schema into the schema collection.</source>
          <target state="translated">지정된 스키마를 스키마 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>Adds the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> to the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">`targetNamespace`</ph> attribute is used to identify this schema.</source>
          <target state="translated"><ph id="ph1">`targetNamespace`</ph> 특성은이 스키마를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>If the schema being added contains references to other namespaces (through <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements), the trust level of the application determines how these other namespaces are resolved.</source>
          <target state="translated">추가 되는 스키마에 다른 네임 스페이스에 대 한 참조가 포함 되어 있으면 (통해 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 요소), 응용 프로그램의 신뢰 수준은 다른 네임 스페이스를 확인 하는 방법이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>(In the .NET Framework version 1.0, a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> was always used).</source>
          <target state="translated">(.NET framework 버전 1.0에서 기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 사용한 항상).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">`Fully trusted code:`</ph> A default <ph id="ph2">`XmlUrlResolver`</ph> with no user credentials is used to resolve any external resources.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> 기본 <ph id="ph2">`XmlUrlResolver`</ph> 없는 사용자와 자격 증명 외부 리소스를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>The schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">다른 네임 스페이스에 대 한 스키마 유효성 검사를 위해서만 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>If these external resources are located on a network resource that requires authentication, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 이러한 외부 리소스에 인증을 요구 하는 네트워크 리소스가 있으면는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 인수 중 하나로 지정 하 고는 <ph id="ph2">`XmlResolver`</ph> 에 필요한 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">`Semi-trusted code:`</ph> External references are not resolved.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> 외부 참조가 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">`XmlSchemaCollection`</ph> is being accessed using the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`XmlResolver`</ph> specified by the <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">`XmlSchemaCollection`</ph> 를 사용 하 여 액세스 하 고는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> 속성을는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`XmlResolver`</ph> 에 지정 된는 <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> you want to add to this collection.</source>
          <target state="translated">이 컬렉션에 추가할 <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.</source>
          <target state="translated">지정한 컬렉션에 정의된 네임스페이스(연결된 스키마 포함)를 모두 이 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>If the schema being added contains references to other namespaces (through <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements or the <ph id="ph3">`x-schema`</ph> attribute), the trust level of the application determines how these other namespaces are resolved.</source>
          <target state="translated">추가 되는 스키마에 다른 네임 스페이스에 대 한 참조가 포함 되어 있으면 (통해 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 요소 또는 <ph id="ph3">`x-schema`</ph> 특성), 응용 프로그램의 신뢰 수준은 다른 네임 스페이스를 확인 하는 방법이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>(In the .NET Framework version 1.0, a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> was always used).</source>
          <target state="translated">(.NET framework 버전 1.0에서 기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 사용한 항상).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source><ph id="ph1">`Fully trusted code:`</ph> A default <ph id="ph2">`XmlUrlResolver`</ph> with no user credentials is used to resolve any external resources.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> 기본 <ph id="ph2">`XmlUrlResolver`</ph> 없는 사용자와 자격 증명 외부 리소스를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>The schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">다른 네임 스페이스에 대 한 스키마 유효성 검사를 위해서만 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>If these external resources are located on a network resource that requires authentication, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 이러한 외부 리소스에 인증을 요구 하는 네트워크 리소스가 있으면는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 인수 중 하나로 지정 하 고는 <ph id="ph2">`XmlResolver`</ph> 에 필요한 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source><ph id="ph1">`Semi-trusted code:`</ph> External references are not resolved.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> 외부 참조가 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>If the <ph id="ph1">`XmlSchemaCollection`</ph> is being accessed using the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`XmlResolver`</ph> specified by the <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">`XmlSchemaCollection`</ph> 를 사용 하 여 액세스 하 고는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> 속성을는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`XmlResolver`</ph> 에 지정 된는 <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The namespace URI associated with the schema.</source>
          <target state="translated">스키마에 연결된 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>For XML Schemas, this will typically be the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>.</source>
          <target state="translated">XML 스키마의 경우 일반적으로 <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The URL that specifies the schema to load.</source>
          <target state="translated">로드할 스키마를 지정하는 URL입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>Adds the schema located by the given URL into the schema collection.</source>
          <target state="translated">지정한 URL에 의해 경로가 지정된 스키마를 스키마 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> added to the schema collection; <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the schema being added is an XDR schema or if there are compilation errors in the schema.</source>
          <target state="translated">스키마 컬렉션에 추가된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 이 이미 컬렉션에 다른 스키마와 함께 추가 되는 스키마는 컬렉션에는 원래 스키마를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>For example, in the following C# code, authors.xsd is removed from the collection and names.xsd is added.</source>
          <target state="translated">예를 들어 다음 C# 코드에서 authors.xsd 컬렉션에서 제거 되 고 names.xsd 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> is <ph id="ph2">`null`</ph> and the schema being added is an XML Schema, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`targetNamespace`</ph> defined in the XML Schema to identify the schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 은 <ph id="ph2">`null`</ph> 고 추가 되는 스키마가 XML 스키마는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`targetNamespace`</ph> 컬렉션의 스키마를 식별 하는 XML 스키마에 정의 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>If the schema being added contains references to other namespaces (through <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements or the <ph id="ph3">`x-schema`</ph> attribute), the trust level of the application determines how these other namespaces are resolved.</source>
          <target state="translated">추가 되는 스키마에 다른 네임 스페이스에 대 한 참조가 포함 되어 있으면 (통해 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 요소 또는 <ph id="ph3">`x-schema`</ph> 특성), 응용 프로그램의 신뢰 수준은 다른 네임 스페이스를 확인 하는 방법이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>(In the .NET Framework version 1.0, a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> was always used).</source>
          <target state="translated">(.NET framework 버전 1.0에서 기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 사용한 항상).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source><ph id="ph1">`Fully trusted code:`</ph> A default <ph id="ph2">`XmlUrlResolver`</ph> with no user credentials is used to resolve any external resources.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> 기본 <ph id="ph2">`XmlUrlResolver`</ph> 없는 사용자와 자격 증명 외부 리소스를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">다른 네임 스페이스에 대 한 스키마 유효성 검사를 위해서만 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>If these external resources are located on a network resource that requires authentication, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 이러한 외부 리소스에 인증을 요구 하는 네트워크 리소스가 있으면는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 인수 중 하나로 지정 하 고는 <ph id="ph2">`XmlResolver`</ph> 에 필요한 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source><ph id="ph1">`Semi-trusted code:`</ph> External references are not resolved.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> 외부 참조가 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>If the <ph id="ph1">`XmlSchemaCollection`</ph> is being accessed using the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`XmlResolver`</ph> specified by the <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">`XmlSchemaCollection`</ph> 를 사용 하 여 액세스 하 고는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> 속성을는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`XmlResolver`</ph> 에 지정 된는 <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The following example validates three XML files using schemas stored in the <ph id="ph1">`XmlSchemaCollection`</ph>.</source>
          <target state="translated">다음 예제에서는 세 개의 XML 파일에 저장 된 스키마를 사용 하 여 유효성을 검사는 <ph id="ph1">`XmlSchemaCollection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The sample uses the following five input files:</source>
          <target state="translated">샘플에서는 다음과 같은 5 개의 입력된 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">올바른 스키마가 아닌 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>The namespace URI associated with the schema.</source>
          <target state="translated">스키마에 연결된 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>For XML Schemas, this will typically be the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>.</source>
          <target state="translated">XML 스키마의 경우 일반적으로 <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> containing the schema to add.</source>
          <target state="translated">추가할 스키마를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>Adds the schema contained in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the schema collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에 포함된 스키마를 스키마 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> added to the schema collection; <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the schema being added is an XDR schema or if there are compilation errors in the schema.</source>
          <target state="translated">스키마 컬렉션에 추가된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>If <ph id="ph1">`ns`</ph> has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 이 이미 컬렉션에 다른 스키마와 함께 추가 되는 스키마는 컬렉션에는 원래 스키마를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>If <ph id="ph1">`ns`</ph> is <ph id="ph2">`null`</ph> and the schema being added is an XML Schema, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`targetNamespace`</ph> defined in the XML Schema to identify the schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 은 <ph id="ph2">`null`</ph> 고 추가 되는 스키마가 XML 스키마는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`targetNamespace`</ph> 컬렉션의 스키마를 식별 하는 XML 스키마에 정의 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema being added contains references to other namespaces (through <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements or the <ph id="ph3">`x-schema`</ph> attribute), the trust level of the application determines how these other namespaces are resolved.</source>
          <target state="translated">추가 되는 스키마에 다른 네임 스페이스에 대 한 참조가 포함 되어 있으면 (통해 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 요소 또는 <ph id="ph3">`x-schema`</ph> 특성), 응용 프로그램의 신뢰 수준은 다른 네임 스페이스를 확인 하는 방법이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>(In the .NET Framework version 1.0, a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> was always used).</source>
          <target state="translated">(.NET framework 버전 1.0에서 기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 사용한 항상).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source><ph id="ph1">`Fully trusted code:`</ph> A default <ph id="ph2">`XmlUrlResolver`</ph> with no user credentials is used to resolve any external resources.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> 기본 <ph id="ph2">`XmlUrlResolver`</ph> 없는 사용자와 자격 증명 외부 리소스를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>The schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">다른 네임 스페이스에 대 한 스키마 유효성 검사를 위해서만 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>If these external resources are located on a network resource that requires authentication, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 이러한 외부 리소스에 인증을 요구 하는 네트워크 리소스가 있으면는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 인수 중 하나로 지정 하 고는 <ph id="ph2">`XmlResolver`</ph> 에 필요한 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source><ph id="ph1">`Semi-trusted code:`</ph> External references are not resolved.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> 외부 참조가 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">`XmlSchemaCollection`</ph> is being accessed using the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`XmlResolver`</ph> specified by the <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">`XmlSchemaCollection`</ph> 를 사용 하 여 액세스 하 고는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType&gt;</ph> 속성을는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`XmlResolver`</ph> 에 지정 된는 <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">올바른 스키마가 아닌 경우</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces referenced in <ph id="ph2">&lt;see langword="include" /&gt;</ph> and <ph id="ph3">&lt;see langword="import" /&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="include" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="import" /&gt;</ph> 요소에서 참조된 모든 네임스페이스를 확인하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, external references are not resolved.</source>
          <target state="translated">이 해결 프로그램이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 외부 참조는 확인되지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>Adds the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> to the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> is used to resolve any external references.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>는 외부 참조를 확인하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> added to the schema collection.</source>
          <target state="translated">스키마 컬렉션에 추가된 <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">`targetNamespace`</ph> attribute is used to identify this schema.</source>
          <target state="translated"><ph id="ph1">`targetNamespace`</ph> 특성은이 스키마를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>If the schema contains <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">스키마를 포함 하는 경우 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 유효성 검사를 위해서만 다른 네임 스페이스는 로드에 대 한 다른 네임 스페이스에 스키마를 참조 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The following example adds a schema to the collection.</source>
          <target state="translated">다음 예제에서는 스키마 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is passed to the <ph id="ph2">`Add`</ph> method which sets the necessary credentials required to access any external resources referenced in the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 에 전달 되는 <ph id="ph2">`Add`</ph> 메서드는 스키마에서 참조 하는 모든 외부 리소스에 액세스 하는 데 필요한 자격 증명을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">올바른 스키마가 아닌 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The namespace URI associated with the schema.</source>
          <target state="translated">스키마에 연결된 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>For XML Schemas, this will typically be the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>.</source>
          <target state="translated">XML 스키마의 경우 일반적으로 <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> containing the schema to add.</source>
          <target state="translated">추가할 스키마를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces referenced in <ph id="ph2">&lt;see langword="include" /&gt;</ph> and <ph id="ph3">&lt;see langword="import" /&gt;</ph> elements or <ph id="ph4">&lt;see langword="x-schema" /&gt;</ph> attribute (XDR schemas).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>는 <ph id="ph2">&lt;see langword="include" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="import" /&gt;</ph> 요소 또는 <ph id="ph4">&lt;see langword="x-schema" /&gt;</ph> 특성(XDR 스키마)에서 참조된 네임스페이스를 확인하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, external references are not resolved.</source>
          <target state="translated">이 해결 프로그램이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 외부 참조는 확인되지 않습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>Adds the schema contained in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the schema collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에 포함된 스키마를 스키마 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> is used to resolve any external resources.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>는 외부 리소스를 확인하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> added to the schema collection; <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the schema being added is an XDR schema or if there are compilation errors in the schema.</source>
          <target state="translated">스키마 컬렉션에 추가된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>If <ph id="ph1">`ns`</ph> has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 이 이미 컬렉션에 다른 스키마와 함께 추가 되는 스키마는 컬렉션에는 원래 스키마를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>If <ph id="ph1">`ns`</ph> is <ph id="ph2">`null`</ph> and the schema being added is an XML Schema, the <ph id="ph3">`Add`</ph> method uses the <ph id="ph4">`targetNamespace`</ph> attribute defined in the XML Schema to identify the schema in the collection.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 은 <ph id="ph2">`null`</ph> 고 추가 되는 스키마가 XML 스키마는 <ph id="ph3">`Add`</ph> 메서드는 <ph id="ph4">`targetNamespace`</ph> 컬렉션의 스키마를 식별 하는 XML 스키마에 정의 된 특성입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>If the schema being added contains references to other namespaces (through <ph id="ph1">`include`</ph> and <ph id="ph2">`import`</ph> elements or the <ph id="ph3">`x-schema`</ph> attribute), the schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">추가 되는 스키마에 다른 네임 스페이스에 대 한 참조가 포함 되어 있으면 (통해 <ph id="ph1">`include`</ph> 및 <ph id="ph2">`import`</ph> 요소 또는 <ph id="ph3">`x-schema`</ph> 특성), 이러한 다른 네임 스페이스에 대 한 스키마 유효성 검사를 위해서만 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>Unlike the original schema, these other schemas are not explicitly added to the schema collection.</source>
          <target state="translated">원래 스키마와는 달리 이러한 스키마는 명시적으로 추가 되지 스키마 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>As a result, they are not accessible using any of the collection methods or properties.</source>
          <target state="translated">결과적으로,이 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">올바른 스키마가 아닌 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>Gets a value indicating whether a schema with the specified namespace is in the collection.</source>
          <target state="translated">지정된 네임스페이스를 가진 스키마가 컬렉션에 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaCollection">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>The namespace URI associated with the schema.</source>
          <target state="translated">스키마에 연결된 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>For XML Schemas, this will typically be the target namespace.</source>
          <target state="translated">XML 스키마의 경우 일반적으로 대상 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>Gets a value indicating whether a schema with the specified namespace is in the collection.</source>
          <target state="translated">지정된 네임스페이스를 가진 스키마가 컬렉션에 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a schema with the specified namespace is in the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 네임스페이스가 컬렉션에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>The following example checks to see if a schema is in the collection.</source>
          <target state="translated">다음 예제에서는 스키마가 컬렉션에 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
          <source>If it is, it displays the schema.</source>
          <target state="translated">인 경우 해당 스키마를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph> of the specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> is in the collection.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>의 <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a schema in the collection with the same <ph id="ph2">&lt;see langword="targetNamespace" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">동일한 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 가진 스키마가 컬렉션에 있으면 <ph id="ph2">&lt;see langword="targetNamespace" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The array to copy the objects to.</source>
          <target state="translated">개체를 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> where copying will begin.</source>
          <target state="translated">복사를 시작할 <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> objects from this collection into the given array starting at the given index.</source>
          <target state="translated">지정된 인덱스에서 시작하여 지정된 배열에 이 컬렉션의 <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> 개체를 모두 복사합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.Count">
          <source>Gets the number of namespaces defined in this collection.</source>
          <target state="translated">이 컬렉션에 정의된 네임스페이스의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Count">
          <source>The number of namespaces defined in this collection.</source>
          <target state="translated">이 컬렉션에 정의된 네임스페이스의 수입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Count">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
          <source>Provides support for the "for each" style iteration over the collection of schemas.</source>
          <target state="translated">스키마 컬렉션에 대해 개별 스타일 반복을 지원합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
          <source>An enumerator for iterating over all schemas in the current collection.</source>
          <target state="translated">현재 컬렉션에 포함된 모든 스키마에 대한 반복을 위한 열거자입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
          <source>The following example displays each of the XML Schemas in the schema collection.</source>
          <target state="translated">다음 예제에서는 스키마 컬렉션에서 각 XML 스키마를 표시합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>The namespace URI associated with the schema you want to return.</source>
          <target state="translated">반환할 스키마에 연결된 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>This will typically be the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph> of the schema.</source>
          <target state="translated">이것은 대개 스키마의 <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph>가 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> associated with the given namespace URI.</source>
          <target state="translated">지정한 네임스페이스 URI에 연결된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph> associated with the namespace URI; <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema.</source>
          <target state="translated">네임스페이스 URI에 연결된 <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다. 지정한 네임스페이스에 연결되어 있는 로드된 스키마가 없거나 네임스페이스가 XDR 스키마에 연결되어 있는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>The following example checks to see if a schema is in the collection.</source>
          <target state="translated">다음 예제에서는 스키마가 컬렉션에 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
          <source>If it is, it displays the schema.</source>
          <target state="translated">인 경우 해당 스키마를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
          <source>Gets the default <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> used by the <ph id="ph2">&lt;see langword="XmlSchemaCollection" /&gt;</ph> when loading new schemas.</source>
          <target state="translated">새 스키마를 로드할 때 <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>에서 사용하는 기본 <ph id="ph2">&lt;see langword="XmlSchemaCollection" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
          <source>An <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array to copy the objects to.</source>
          <target state="translated">개체를 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> where copying will begin.</source>
          <target state="translated">복사를 시작할 <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
          <source>Returns the count of the items in the collection.</source>
          <target state="translated">컬렉션의 항목 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is synchronized, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션이 동기화되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
          <source>Returns a <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the collection.</source>
          <target state="translated">컬렉션에 대한 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>Sets an event handler for receiving information about the XDR and XML schema validation errors.</source>
          <target state="translated">XDR 및 XML 스키마 유효성 검사 오류에 대한 정보를 받는 이벤트 처리기를 설정합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>These events occur when the schemas are added to the collection.</source>
          <target state="translated">이러한 이벤트는 스키마 컬렉션에 추가 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>If an event handler is not provided, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown on any validation errors where the <ph id="ph2">&lt;xref:System.Xml.Schema.ValidationEventArgs.Severity%2A&gt;</ph> is <ph id="ph3">`XmlSeverityType.Error`</ph>.</source>
          <target state="translated">이벤트 처리기를 제공 하지 않으면는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> 유효성 검사 오류에서 throw 되 여기서는 <ph id="ph2">&lt;xref:System.Xml.Schema.ValidationEventArgs.Severity%2A&gt;</ph> 은 <ph id="ph3">`XmlSeverityType.Error`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>To specify an event handler, define a callback function and add it to the <ph id="ph1">`ValidationEventHandler`</ph>.</source>
          <target state="translated">이벤트 처리기를 지정 하려면 콜백 함수를 정의 하 고 추가 하는 <ph id="ph1">`ValidationEventHandler`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않으며로 대체 되었습니다는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>The following example shows how to set an event handler to handle invalid XML Schemas.</source>
          <target state="translated">다음 예제에서는 잘못 된 XML 스키마를 처리 하는 이벤트 처리기를 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
          <source>The preceding example uses the file <ph id="ph1">`invalid.xsd`</ph> as input.</source>
          <target state="translated">앞의 예제 파일을 사용 하 여 <ph id="ph1">`invalid.xsd`</ph> 입력으로 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>