<Type Name="AspLog" FullName="Microsoft.VisualBasic.Logging.AspLog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b2e70d2256b8a255cc91e236262141177d0fcfd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36658776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AspLog : Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AspLog extends Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.AspLog" />
  <TypeSignature Language="VB.NET" Value="Public Class AspLog&#xA;Inherits Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspLog : Microsoft::VisualBasic::Logging::Log" />
  <TypeSignature Language="F#" Value="type AspLog = class&#xA;    inherit Log" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Logging.Log</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a property and methods for writing event and exception information to the application's log listeners.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Log` 에서 액세스할 수 있는 간단한 진입점을 제공 하는 개체는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 로깅 서비스입니다. `WriteEntry` 및 `WriteException` 메서드는 응용 프로그램의 로그 수신기에 메시지를 씁니다. 응용 프로그램의 구성 파일에서 수신기를 구성할 수 있습니다. 자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) 및 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)합니다.  
  
 `My.Application.Log` 개체는 클라이언트 응용 프로그램에 대해서만 사용할 수 있습니다. 웹 응용 프로그램 사용 `My.Log`합니다. 자세한 내용은 <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>을 참조하세요.  
  
 다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Application.Log` 개체입니다.  
  
|대상|참조|  
|--------|---------|  
|응용 프로그램의 로그 수신기에 이벤트 정보 쓰기|[방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|응용 프로그램의 로그 수신기에 예외 정보를 작성 합니다.|[방법: 예외 기록](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|위치를 확인 `My.Application.Log` 정보 기록|[연습: My.Application.Log가 정보를 기록하는 위치 확인](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Log.WriteEntry` 메서드를 사용하여 추적 정보를 기록하는 방법을 보여 줍니다. 자세한 내용은 참조 [하는 방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)합니다.  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Log` 에서 액세스할 수 있는 간단한 진입점을 제공 하는 개체는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 로깅 서비스입니다. `WriteEntry` 및 `WriteException` 메서드는 응용 프로그램의 로그 수신기에 메시지를 씁니다. 응용 프로그램의 구성 파일에서 수신기를 구성할 수 있습니다. 자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) 및 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.AspLog : string -&gt; Microsoft.VisualBasic.Logging.AspLog" Usage="new Microsoft.VisualBasic.Logging.AspLog name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" />. The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Log` 에서 액세스할 수 있는 간단한 진입점을 제공 하는 개체는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 로깅 서비스입니다. `WriteEntry` 및 `WriteException` 메서드는 응용 프로그램의 로그 수신기에 메시지를 씁니다. 응용 프로그램의 구성 파일에서 수신기를 구성할 수 있습니다. 자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) 및 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal override void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="aspLog.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>,으로 해당 이름을 설정 `FileLog`, 심각도 수준으로 메시지를 기록 하도록 구성 <xref:System.Diagnostics.SourceLevels.Information> 이상에 있습니다. 새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 개체 다음에 추가 된 <xref:System.Diagnostics.TraceSource.Listeners%2A> 컬렉션입니다.  
  
 <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> 메서드를 호출 하는 경우는 <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> 속성이 구성 되지 않았습니다. 응용 프로그램의 구성 파일에 추적 소스를 구성할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>