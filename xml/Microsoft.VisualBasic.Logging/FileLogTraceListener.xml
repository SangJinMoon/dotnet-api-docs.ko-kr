<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd87b5c87ae90cca751677a1ff302a09e3997d6b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52216278" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a347d-101">로깅 출력을 파일로 보내는 간단한 수신기를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스 일별 또는 응용 프로그램에서 필요에 따라 로그 파일을 보관 하려면 자동된 유지 관리 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="a347d-103">이 자동 보관 기능 개발자와 관리자의 유지 관리 부담을 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="a347d-104">인스턴스의 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 에 추가할 수는 <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> 또는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 텍스트 파일 로깅 출력을 리디렉션하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="a347d-105">이 클래스의 인스턴스를 추가할 수도 있습니다 `My.Application.Log` 또는 `My.Log` (웹 애플리케이션)에 대 한 Visual Basic 애플리케이션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="a347d-106">자세한 내용은 참조 하세요. [연습: 변경 Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="a347d-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="a347d-107">이 클래스의 주요 기능은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="a347d-108">*보관 기능*합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-108">*Archival functionality*.</span></span> <span data-ttu-id="a347d-109">이 클래스에 의해 생성 된 로그 파일의 이름은 기본 이름 및 이후 버전 로그의 로그 파일을 구분 하는 번호와 함께 날짜에 따라 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="a347d-110">새 로그 파일에는 필요에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="a347d-111">파일 이름의 명시적 형식은 `baseName`[-`dateStamp`] [-`version`].log 이며 여기서:</span><span class="sxs-lookup"><span data-stu-id="a347d-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="a347d-112">합니다 `baseName` 부분은 지정 된 기본 로그 이름을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="a347d-113">합니다 `dateStamp` 부분에 "YYYY-월-일" 형식이 있으며 때 표시 됩니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="a347d-114">같은 둘 이상의 로그 파일이 필요한 경우 `baseName` 하 고 `dateStamp`의 `version` 부를 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="a347d-115">*여러 클래스 인스턴스*합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-115">*Multiple class instances*.</span></span> <span data-ttu-id="a347d-116">인스턴스는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 사용 중인 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="a347d-117">클래스의 다른 인스턴스에서 사용 되는 경우에 파일 공유는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 동일한 프로세스에서 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="a347d-118">클래스 파일을 다른 프로세스에서 사용 중인 경우에 다음 사용 가능한 이름을 사용 하 여 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="a347d-119">*스레드로부터의 안전성*합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-119">*Thread safety*.</span></span> <span data-ttu-id="a347d-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="a347d-121">이렇게 하면 안전 하 게에 메시지를 쓸 로그 여러 스레드에서 잠금을 사용 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="a347d-122">**로그 파일 위치**</span><span class="sxs-lookup"><span data-stu-id="a347d-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="a347d-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성이 사용 하는 한 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 로그 파일을 쓸 일반적인 디렉터리 중 하나를 지정 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="a347d-124">다른 위치에 로그를 쓸 설정 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 해당 위치에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="a347d-125">**로그 파일 이름**</span><span class="sxs-lookup"><span data-stu-id="a347d-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="a347d-126">로그 파일에 대 한 기본 이름이 지정 된 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="a347d-127">현재 로그 파일 이름을 읽을 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="a347d-128">파일 시스템에 다른 여러 속성 및 로그의 현재 상태에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="a347d-129">**로그 유지 관리**</span><span class="sxs-lookup"><span data-stu-id="a347d-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="a347d-130">새 로그 파일을 만들기 위한 최소 빈도 의해 결정 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="a347d-131">값이 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, 매일 또는 매주, 최소 한 번 새 로그 파일을 만들 및 날짜 스탬프는 통합 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="a347d-132">로그 파일의 최대 크기 (바이트)에 의해 결정 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="a347d-133">로그에 기록 하는 추가 메시지는 삭제 되 고에 따라 로그 파일 크기가이 크기를 초과 하는 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성인 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="a347d-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 속성 결정 얼마나 많은 여유 공간 (바이트)를 사용할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="a347d-135">이렇게 하면는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스는 모든 사용 가능한 디스크 공간을 사용 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="a347d-136">사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 로그의 동작을 지정 하는 속성 쓰는 경우 보다 작은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 사용 가능한 바이트.</span><span class="sxs-lookup"><span data-stu-id="a347d-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="a347d-137">**로그 파일 출력 설정**</span><span class="sxs-lookup"><span data-stu-id="a347d-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="a347d-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> 속성이 있는지 여부를 내부 스트림에 플러시될 자동으로 기록할 때마다 로그 파일에 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="a347d-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> 속성이 허용 되는 경우 현재 로그 파일에 메시지를 추가 하거나 새 로그 파일을 쓸 것인지를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="a347d-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성 로그 메시지에서 필드를 구분 하는 데 문자열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="a347d-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> 속성 새 로그 파일을 만들 때 사용할 인코딩을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="a347d-142">**로그 파일 출력**</span><span class="sxs-lookup"><span data-stu-id="a347d-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="a347d-143">합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 고 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 메서드는 로그 파일에 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="a347d-144">이러한 메서드를 확인 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 새 로그를 만들어야 하는지 확인 하려면 동일한 기본 이름 사용 하 여 기존 로그와 함께 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="a347d-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 메서드는 로그 파일에 출력 버퍼에서 현재 메시지를 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="a347d-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드 다른 프로세스에서 사용할 수 있도록 로그 파일을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="a347d-147">**출력을 사용 하도록 설정**</span><span class="sxs-lookup"><span data-stu-id="a347d-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="a347d-148">추적 수신기를 사용 하려면 추적 또는 디버깅을 활성화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="a347d-149">다음 구문은 특정 컴파일러입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="a347d-150">C# 또는 Visual Basic 이외의 컴파일러를 사용 하면 컴파일러에 대 한 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="a347d-151">C# 디버깅을 사용 하려면 다음을 추가 합니다 `/d:DEBUG` 플래그를 추가할 수 있습니다 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="a347d-152">Visual Basic에서 추가 된 `/d:DEBUG=True` 컴파일러 명령줄 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="a347d-153">C#에서 추적을 사용 하려면 추가 합니다 `/d:TRACE` 코드를 컴파일할 때 컴파일러 명령줄 플래그 `#define TRACE` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="a347d-154">Visual Basic에서 추가 된 `/d:TRACE=True` 컴파일러 명령줄 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="a347d-155">수신기의 수준을 설정 하려면 애플리케이션에 대 한 구성 파일을 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="a347d-156">이 파일에 수신기를 추가, 해당 형식을 설정 하 고 해당 매개 변수를 설정, 수신기를 제거 하거나 지울 수 애플리케이션에서 이전에 설정한 모든 수신기입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="a347d-157">다음 예제와 같이 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="a347d-158">이 예제를 실행 하려면 정규화 된 어셈블리 이름을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="a347d-159">참조 된 정규화 된 어셈블리 이름을 가져오는 방법에 대 한 내용은 [어셈블리 이름](~/docs/framework/app-domains/assembly-names.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a"><span data-ttu-id="a347d-160">연습: My.Application.Log가 정보를 기록하는 위치 변경</span><span class="sxs-lookup"><span data-stu-id="a347d-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a347d-161"><see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화하고 이름을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a347d-162">기본 이름을 사용하여 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-163">인스턴스 이름을 설정 하는이 메서드는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> FileLogTraceListener 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="a347d-164">인스턴스 이름을 통해 액세스할 수 있습니다는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="a347d-165">개체(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a347d-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a347d-166"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-166"><see langword="String" />.</span></span> <span data-ttu-id="a347d-167">인스턴스 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="a347d-168">제공된 이름을 사용하여 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-169">이 메서드는 인스턴스 이름을 설정 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 `name`입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="a347d-170">인스턴스 이름을 생각에 액세스할 수 있습니다는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="a347d-171">개체(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a347d-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-172">현재 파일에 출력을 추가할지 또는 새 파일에 쓸지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-172">Determines whether to append the output to the current file or write it to a new file.</span></span></summary>
        <value><span data-ttu-id="a347d-173"><see langword="Boolean" />. <see langword="True" />는 출력이 현재 파일에 추가됨을 나타내고 <see langword="False" />는 출력이 새 파일에 쓰여짐을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="a347d-174">이 속성의 기본 설정은 <see langword="True" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-175">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> 속성은 `False`, 새 파일에 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="a347d-176">속성이 `True`을 하지 않으면 출력이 현재 파일에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-176">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="a347d-177">출력 파일 다른 프로세스에 의해 잠겨 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-177">The output file is locked by another process.</span></span> <span data-ttu-id="a347d-178">이 경우에 통합 된 버전 번호를 사용 하 여 새 로그 파일이 만들어집니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-178">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="a347d-179">현재 파일 크기 보다 크면는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 속성을 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-179">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="a347d-180">이 경우 추가 메시지는 삭제 되 고, 따라는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성인 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-180">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="a347d-181">기존 파일 이름이 지정 된 로그 생성 일정에 따라 만료 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-181">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="a347d-182">이 경우 새 로그 파일이 생성 되 고 날짜 스탬프는 통합 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-182">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-183">로그 파일 스트림에 쓰고 버퍼를 플러시하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-183">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="a347d-184"><see langword="Boolean" />. <see langword="True" />는 쓸 때마다 스트림을 플러시함을 나타내고, 그렇지 않으면 로그 항목이 보다 효율적으로 버퍼링되고 쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-184"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="a347d-185">이 속성의 기본 설정은 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-185">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-186">합니다 `False` 에 대 한 설정의 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> 속성 로그 파일에 한 번에 여러 메시지를 작성 하는 것이 효율적 이므로 대부분의 애플리케이션에 대 한 최상의 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-186">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="a347d-187">사용할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 현재 로그 파일에 있는 모든 메시지를 플러시할 방법의 버퍼를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-187">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="a347d-188">사용할 수도 있습니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드를 암시적으로 로그 파일을 닫기 전에 스트림을 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-188">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-189">로그 파일의 기본 이름을 가져오거나 설정합니다. 이 이름은 전체 로그 파일 이름을 만드는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-189">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="a347d-190"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-190"><see langword="String" />.</span></span> <span data-ttu-id="a347d-191">로그 파일의 기본 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-191">The base name for the log files.</span></span> <span data-ttu-id="a347d-192">기본값은 애플리케이션의 제품 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-192">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-193">합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 는 로그 파일에 대 한 기본 이름을 확인 하는 속성을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-193">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="a347d-194"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성은 현재 전체 로그 파일 이름을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-194">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="a347d-195">로그의 다른 버전을 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-195">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="a347d-196">새 로그 파일에는 필요에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-196">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="a347d-197">전체 로그 파일 이름의 명시적 형식은 `path` \\ `baseName`[-`dateStamp`] [-`iteration`].log 이며 여기서</span><span class="sxs-lookup"><span data-stu-id="a347d-197">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="a347d-198">`path` 부분에 의해 결정 됩니다 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성 및 해당 속성 값으로 설정 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>의 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-198">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="a347d-199">합니다 `baseName` 부분은 지정 된 기본 로그 이름을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-199">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="a347d-200">합니다 `dateStamp` 부분에 "YYYY-월-일" 형식이 있으며 때 표시 됩니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 로 설정 된 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-200">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="a347d-201">같은 둘 이상의 로그 파일이 필요한 경우 `baseName` 하 고 `dateStamp`의 `iteration` 부를 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-201">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a347d-202">현재 로그 파일의 내부 스트림을 닫고 현재 스트림과 관련된 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-202">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-203">호출할 필요가 없습니다를 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드 명시적으로 하기 때문에 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스는 기본 스트림을 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-203">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-204"><see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 속성이 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />으로 설정될 때 로그 파일 디렉터리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-204">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="a347d-205"><see langword="String" />. 로그 파일 디렉터리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-205"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="a347d-206">이 속성의 기본 설정은 애플리케이션 데이터에 대한 사용자 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-206">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-207">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성을 설정 하면 설정 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성을 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-207">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="a347d-208"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성 디렉터리를 확인할 수 없으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-208">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-209">로그 메시지에서 필드를 구분하는 데 사용되는 구분 기호를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-209">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="a347d-210"><see langword="String" />. 로그 메시지의 필드에 사용되는 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-210"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="a347d-211">이 속성의 기본 설정은 TAB 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-211">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-212"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 사용 하면 기본 구분 기호를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-212">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-213">로그 파일에 쓸 때 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적은 경우 취할 동작을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-213">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="a347d-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="a347d-215">로그 파일에 쓸 때 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적거나 로그 파일 크기가 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 속성에서 허용하는 크기보다 큰 경우 취할 동작을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-215">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="a347d-216">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-216">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-217">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성이 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, 예약 된 디스크 공간이 충분 하지 않은 경우 로그 메시지를 자동으로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-217">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="a347d-218">이 기본 동작 및 간단한 애플리케이션에 디스크가 꽉 찼을 경우 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-218">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="a347d-219">보다 강력한 애플리케이션을 설정할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성을 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>를 추가 하 고 `Try...Catch` 로그에 기록 하는 모든 코드의 바깥쪽 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-219">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a347d-220"><see langword="True" />는 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. <see langword="False" />는 관리되지 않는 리소스만 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-220"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a347d-221">내부 스트림을 닫고 관리되는 리소스를 선택적으로 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-221">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-222">`disposing` 매개 변수가 `True`인 경우 이 메서드는 이 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-222">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="a347d-223">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-223">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a347d-224">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-224">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="a347d-225"><see langword="Dispose" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="a347d-225">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="a347d-226">이 메서드를 호출 합니다 <see langword="Dispose" /> 기본 클래스 메서드의 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-226">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-227">새 로그 파일을 만들 때 사용할 인코딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-227">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="a347d-228"><see cref="T:System.Text.Encoding" />. 새 로그 파일을 만들 때 사용할 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-228"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="a347d-229">이 속성의 기본값은 <see cref="T:System.Text.UTF8Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-229">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-230">기존 로그 파일에 텍스트를 추가 하는 경우 해당 파일에 대 한 인코딩이 지정 하는 대신 사용 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-230">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a347d-231">현재 로그 파일에 쓰는 내부 스트림을 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-231">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-232">사용 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 현재 로그 파일에 버퍼링 된 모든 데이터를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-232">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-233">현재 전체 로그 파일 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-233">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="a347d-234"><see langword="String" />. 현재 전체 로그 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-234"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-235"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성은 현재 전체 로그 파일 이름을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-235">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="a347d-236">로그의 다른 버전을 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-236">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="a347d-237">새 로그 파일에는 필요에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-237">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="a347d-238">전체 로그 파일 이름의 명시적 형식은 `path` \\ `baseName`[-`dateStamp`] [-`iteration`].log 이며 여기서:</span><span class="sxs-lookup"><span data-stu-id="a347d-238">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="a347d-239">`path` 부분에 의해 결정 됩니다 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성 및 해당 속성 값으로 설정 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>의 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-239">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="a347d-240">합니다 `baseName` 부분은 지정 된 기본 로그 이름을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-240">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="a347d-241">`dateStamp` 파트의 형식은 YYYY-월-일 및 때 표시 됩니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-241">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="a347d-242">같은 둘 이상의 로그 파일이 필요한 경우 `baseName` 하 고 `dateStamp`의 `iteration` 부를 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-242">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a347d-243">추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-243">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="a347d-244">이 수신기가 인식하는 XML 구성 특성이 포함된 <see langword="String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-244"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-245">에 대 한 사용자 지정 특성을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 인스턴스의 동작을 제어 하는 것에 대 한 XML 구성 파일에서 사용할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-245">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="a347d-246">다른 특성을 사용 하면 구성 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-246">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-247">로깅 시스템의 호스트 이름이 출력에 포함되어야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-247">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="a347d-248"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-248"><see langword="Boolean" />.</span></span> <span data-ttu-id="a347d-249">호스트 식별자가 포함되어야 하면 <see langword="True" />를 사용하고, 그렇지 않으면 <see langword="False" />를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-249">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="a347d-250">기본값은 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-250">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-251">동작을 구성 하려면 속성을 사용 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 고 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a347d-251">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-252">로그 파일의 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-252">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="a347d-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />. 로그 파일의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="a347d-254">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-254">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-255">사용 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성에 의해 결정 된 미리 정의 된 경로 중 하나에 로그 경로 설정 하는 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-255">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="a347d-256">**위치 값**</span><span class="sxs-lookup"><span data-stu-id="a347d-256">**Location value**</span></span>|<span data-ttu-id="a347d-257">**Path**</span><span class="sxs-lookup"><span data-stu-id="a347d-257">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="a347d-258">형식 사용 하 여 모든 사용자 간에 공유 되는 애플리케이션 데이터에 대 한 경로:</span><span class="sxs-lookup"><span data-stu-id="a347d-258">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="a347d-259">에 대 한 일반적인 값 `BasePath` 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="a347d-260">C:\Documents and Settings\All Users\Application Data</span><span class="sxs-lookup"><span data-stu-id="a347d-260">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="a347d-261">값 `CompanyName`, `ProductName`, 및 `ProductVersion` 어셈블리에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="a347d-262">애플리케이션을 시작한 실행 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-262">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="a347d-263">형식 사용 하 여 사용자의 애플리케이션 데이터에 대 한 경로:</span><span class="sxs-lookup"><span data-stu-id="a347d-263">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="a347d-264">에 대 한 일반적인 값 `BasePath` 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-264">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="a347d-265">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="a347d-265">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="a347d-266">값 `CompanyName`, `ProductName`, 및 `ProductVersion` 어셈블리 폼을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-266">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="a347d-267">현재 시스템의 임시 폴더의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-267">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="a347d-268">문자열을 지정 하 여 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 없습니다 비어를 경로로 사용 않으면 그렇지 않으면 사용자의 애플리케이션 데이터에 대 한 경로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-268">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-269">로그 파일 이름에 포함할 날짜를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-269">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="a347d-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="a347d-271">로그 파일 이름에 포함할 날짜를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-271">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="a347d-272">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-272">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-273">중 하나를 할당 합니다 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> 열거형 값을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성을 통해 로그 파일의 이름에 포함할 날짜를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-273">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="a347d-274">날짜 형식은 YYYY-MM-dd입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-274">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="a347d-275">로그 파일 이름의 형식에 자세한 내용은 참조 하세요. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-275">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="a347d-276">**LogFileCreationSchedule 값**</span><span class="sxs-lookup"><span data-stu-id="a347d-276">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="a347d-277">**로그 파일 이름에 날짜**</span><span class="sxs-lookup"><span data-stu-id="a347d-277">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="a347d-278">로그 파일 이름에 현재 날짜를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-278">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="a347d-279">로그 파일 이름에 날짜를 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-279">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="a347d-280">로그 파일 이름에 현재 주의 첫째 요일을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-280">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="a347d-281">주는 토요일에서 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-281">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-282">로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-282">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="a347d-283"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-283"><see langword="Long" />.</span></span> <span data-ttu-id="a347d-284">로그 파일의 최대 허용 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-284">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="a347d-285">기본값은 5000000 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-285">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-286">이 속성을 사용 하 여 로그 파일이 너무 큼 증가 하지 수행 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-286">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="a347d-287">로그 파일 크기 (바이트) 하는 경우 이면이 속성의 값 보다 큰 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 를값에따라클래스가메시지는삭제되고오류는자동또는예외가메시지로그에쓰려고하면throw되<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-287">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="a347d-288">바이트 단위로 사용 가능한 디스크 공간의 양이 로그에 메시지가 기록 되는 고, 그렇지 미만 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-288">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a347d-289">이 속성이 1000보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="a347d-289">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a347d-290">메시지를 로그 파일에 쓰기 위해 필요한 사용 가능한 디스크 공간의 크기(바이트)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-290">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="a347d-291"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-291"><see langword="Long" />.</span></span> <span data-ttu-id="a347d-292">필요한 사용 가능한 디스크 공간의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-292">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="a347d-293">기본값은 10000000 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-293">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-294">이 속성을 사용 하 여는 로그 파일이 완전히 채우지 않을 디스크 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-294">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="a347d-295">사용 가능한 디스크 공간 (바이트)의 경우 이면이 속성의 값 보다 작은 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 값에 따라 클래스 쓰기 시도로 메시지를 로그에 메시지를 무시 하 고 오류 자동 되거나 예외가 throw 되는 < c2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-295">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="a347d-296">로그 파일 크기 (바이트) 보다 크면 메시지가 로그에 기록 하는 고, 그렇지 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-296">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a347d-297">이 속성이 0보다 작은 값으로 설정된 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-297">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a347d-298">추적 데이터를 출력 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-298">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 응용 프로그램 코드에서 호출할 메서드를 사용 하는 것이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="a347d-300">멤버에 의해 이러한 메서드를 호출 합니다 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 출력을 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-300">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a347d-301">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-301">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a347d-302">이 메서드를 호출한 추적 소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-302">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="a347d-303"><see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-303">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="a347d-304">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-304">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="a347d-305">내보낼 추적 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-305">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="a347d-306">추적 정보, 데이터 개체 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-306">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-307">이 방법:</span><span class="sxs-lookup"><span data-stu-id="a347d-307">This method:</span></span>  
  
1.  <span data-ttu-id="a347d-308">출력에 대 한 데이터 및 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-308">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="a347d-309">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-309">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="a347d-310">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-310">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="a347d-311">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-311">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="a347d-312">다음 표에서 표시 되는 순서는 출력 필드를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-312">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="a347d-313">필드는 문자열을 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 뒤에 줄 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-313">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="a347d-314">**필드**</span><span class="sxs-lookup"><span data-stu-id="a347d-314">**Field**</span></span>|<span data-ttu-id="a347d-315">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="a347d-315">**Output condition**</span></span>|<span data-ttu-id="a347d-316">**설명**</span><span class="sxs-lookup"><span data-stu-id="a347d-316">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="a347d-317">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-317">Always</span></span>|<span data-ttu-id="a347d-318">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="a347d-318">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="a347d-319">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-319">Always</span></span>|<span data-ttu-id="a347d-320">열거형 값 이름을 `eventType`입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-320">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="a347d-321">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-321">Always</span></span>|<span data-ttu-id="a347d-322">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-322">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="a347d-323">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-323">Always</span></span>|<span data-ttu-id="a347d-324">`data`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-324">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="a347d-325">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-325">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-326">합니다 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-326">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="a347d-327">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-327">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-328">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-328">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="a347d-329">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-329">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-330">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-331">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-331">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="a347d-332">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-332">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-333">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-334">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-334">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="a347d-335">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-335">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-336">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="a347d-337">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-337">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-338">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-339">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-339">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="a347d-340">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-340">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="a347d-341">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-341">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a347d-342">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-342">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a347d-343">이 메서드를 호출한 추적 소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-343">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="a347d-344"><see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-344">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="a347d-345">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-345">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="a347d-346">데이터로 내보낼 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-346">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="a347d-347">추적 정보, 데이터 개체의 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-347">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-348">이 방법:</span><span class="sxs-lookup"><span data-stu-id="a347d-348">This method:</span></span>  
  
1.  <span data-ttu-id="a347d-349">출력에 대 한 데이터 및 컨텍스트 정보 형식</span><span class="sxs-lookup"><span data-stu-id="a347d-349">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="a347d-350">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-350">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="a347d-351">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-351">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="a347d-352">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-352">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="a347d-353">이 테이블에 나타나는 순서 대로 출력 필드를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-353">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="a347d-354">필드는 문자열을 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 뒤에 줄 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-354">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="a347d-355">**필드**</span><span class="sxs-lookup"><span data-stu-id="a347d-355">**Field**</span></span>|<span data-ttu-id="a347d-356">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="a347d-356">**Output condition**</span></span>|<span data-ttu-id="a347d-357">**설명**</span><span class="sxs-lookup"><span data-stu-id="a347d-357">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="a347d-358">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-358">Always</span></span>|<span data-ttu-id="a347d-359">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="a347d-359">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="a347d-360">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-360">Always</span></span>|<span data-ttu-id="a347d-361">열거형 값 이름을 `eventType`입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-361">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="a347d-362">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-362">Always</span></span>|<span data-ttu-id="a347d-363">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-363">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="a347d-364">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-364">Always</span></span>|<span data-ttu-id="a347d-365">각 요소에 대 한 문자열 표현의 구성 하는 문자열로 `data`구분 하 여, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-365">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="a347d-366">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-366">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-367">합니다 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-367">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="a347d-368">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-368">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-369">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-369">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="a347d-370">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-370">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-371">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-372">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-372">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="a347d-373">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-373">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-374">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-375">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-375">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="a347d-376">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-376">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-377">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="a347d-378">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-378">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-379">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-380">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-380">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="a347d-381">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-381">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="a347d-382">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-382">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a347d-383">추적 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-383">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 응용 프로그램 코드에서 호출할 메서드를 사용 하는 것이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="a347d-385">멤버에 의해 이러한 메서드를 호출 합니다 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 출력을 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-385">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a347d-386">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-386">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a347d-387">이 메서드를 호출한 추적 소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-387">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="a347d-388"><see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-388">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="a347d-389">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-389">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="a347d-390">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-390">A message to write.</span></span></param>
        <summary><span data-ttu-id="a347d-391">추적 정보, 메시지 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-391">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-392">이 방법:</span><span class="sxs-lookup"><span data-stu-id="a347d-392">This method:</span></span>  
  
1.  <span data-ttu-id="a347d-393">출력에 대 한 데이터 및 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-393">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="a347d-394">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-394">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="a347d-395">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-395">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="a347d-396">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-396">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="a347d-397">이 테이블에 나타나는 순서 대로 출력 필드를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-397">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="a347d-398">필드는 문자열을 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 뒤에 줄 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-398">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="a347d-399">**필드**</span><span class="sxs-lookup"><span data-stu-id="a347d-399">**Field**</span></span>|<span data-ttu-id="a347d-400">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="a347d-400">**Output condition**</span></span>|<span data-ttu-id="a347d-401">**설명**</span><span class="sxs-lookup"><span data-stu-id="a347d-401">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="a347d-402">항상</span><span class="sxs-lookup"><span data-stu-id="a347d-402">Always.</span></span>|<span data-ttu-id="a347d-403">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="a347d-403">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="a347d-404">항상</span><span class="sxs-lookup"><span data-stu-id="a347d-404">Always.</span></span>|<span data-ttu-id="a347d-405">열거형 값 이름을 `eventType`입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-405">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="a347d-406">항상</span><span class="sxs-lookup"><span data-stu-id="a347d-406">Always.</span></span>|<span data-ttu-id="a347d-407">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-407">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="a347d-408">항상</span><span class="sxs-lookup"><span data-stu-id="a347d-408">Always.</span></span>|<span data-ttu-id="a347d-409">`message`의 값</span><span class="sxs-lookup"><span data-stu-id="a347d-409">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="a347d-410">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-410">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-411">합니다 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-411">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="a347d-412">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-412">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-413">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-413">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="a347d-414">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-414">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-415">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-416">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-416">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="a347d-417">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-417">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-418">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-419">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-419">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="a347d-420">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-420">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-421">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="a347d-422">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-422">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-423">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-424">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-424">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="a347d-425">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-425">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="a347d-426">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-426">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a347d-427">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-427">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a347d-428">이 메서드를 호출한 추적 소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-428">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="a347d-429"><see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-429">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="a347d-430">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-430">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="a347d-431"><paramref name="args" /> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-431">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="a347d-432">형식을 지정할 개체가 0개 이상 포함된 <see langword="Object" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-432">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="a347d-433">추적 정보, 형식 지정된 개체 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-433">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-434">이 방법:</span><span class="sxs-lookup"><span data-stu-id="a347d-434">This method:</span></span>  
  
1.  <span data-ttu-id="a347d-435">출력에 대 한 데이터 및 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-435">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="a347d-436">새 새 로그 파일을 필요한 경우 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-436">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="a347d-437">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-437">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="a347d-438">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-438">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="a347d-439">이 테이블에 나타나는 순서 대로 출력 필드를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-439">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="a347d-440">필드는 문자열을 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 뒤에 줄 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-440">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="a347d-441">**필드**</span><span class="sxs-lookup"><span data-stu-id="a347d-441">**Field**</span></span>|<span data-ttu-id="a347d-442">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="a347d-442">**Output condition**</span></span>|<span data-ttu-id="a347d-443">**설명**</span><span class="sxs-lookup"><span data-stu-id="a347d-443">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="a347d-444">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-444">Always</span></span>|<span data-ttu-id="a347d-445">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="a347d-445">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="a347d-446">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-446">Always</span></span>|<span data-ttu-id="a347d-447">열거형 값 이름을 `eventType`입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-447">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="a347d-448">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-448">Always</span></span>|<span data-ttu-id="a347d-449">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-449">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="a347d-450">Always</span><span class="sxs-lookup"><span data-stu-id="a347d-450">Always</span></span>|<span data-ttu-id="a347d-451">데이터 `args` 로 포맷 합니다 `format` 문자열과 고정 문화권을 사용 하 여 문자열 변환에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-451">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="a347d-452">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-452">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-453">합니다 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-453">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="a347d-454">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-454">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-455">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-455">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="a347d-456">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-456">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-457">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-458">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-458">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="a347d-459">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-459">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-460">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-461">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-461">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="a347d-462">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-462">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-463">합니다 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="a347d-464">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="a347d-464">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a347d-465">문자열 표현 합니다 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성의 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="a347d-466">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-466">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="a347d-467">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-467">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="a347d-468">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-468">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a347d-469"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-469"><see langword="String" />.</span></span> <span data-ttu-id="a347d-470">쓸 사용자 지정 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-470">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="a347d-471">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-471">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-472"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="a347d-473">중 하나를 사용 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 로그 출력에 컨텍스트 정보를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a347d-474"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="a347d-474"><see langword="String" />.</span></span> <span data-ttu-id="a347d-475">쓸 사용자 지정 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-475">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="a347d-476">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다. 메시지 다음에는 현재 줄 종결자가 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-476">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a347d-477"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-477">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="a347d-478">중 하나를 사용 합니다 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 로그 출력에 컨텍스트 정보를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a347d-478">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>