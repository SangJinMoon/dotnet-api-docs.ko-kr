<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileLogTraceListener.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f10a9802efb1d279e05da80d00df15b90b54dd3d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10a9802efb1d279e05da80d00df15b90b54dd3d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Provides a simple listener that directs logging output to file.</source>
          <target state="translated">로깅 출력을 파일로 보내는 간단한 수신기를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스 일별 또는 응용 프로그램에서 필요에 따라 로그 파일을 보관에 자동된 유지 관리 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</source>
          <target state="translated">이 자동 보관 기능 개발자와 관리자의 유지 관리 업무를 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>An instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to redirect output from logging to a text file.</source>
          <target state="translated">인스턴스 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 에 추가할 수는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> 컬렉션 텍스트 파일 로깅 출력을 리디렉션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Instances of this class can also be added to <ph id="ph1">`My.Application.Log`</ph> or <ph id="ph2">`My.Log`</ph> (for Web applications) in Visual Basic applications.</source>
          <target state="translated">이 클래스의 인스턴스를 추가할 수도 있습니다 <ph id="ph1">`My.Application.Log`</ph> 또는 <ph id="ph2">`My.Log`</ph> (웹 응용 프로그램)에 대 한 Visual Basic 응용 프로그램에 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연습: 변경 위치 My.Application.Log 기록 정보<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The main features of this class are:</source>
          <target state="translated">이 클래스의 주요 기능은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Archival functionality<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>보관 기능<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</source>
          <target state="translated">이 클래스에 의해 생성 된 로그 파일은 기본 이름 및 날짜, 그리고 로그의 연속 버전에서 로그 파일을 구분 하는 번호에 따라 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">새 로그 파일은 필요할 때에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The explicit form of the file name is <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>][-<ph id="ph3">`version`</ph>].log, where:</source>
          <target state="translated">파일 이름의 명시적 형식은 <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>] [-<ph id="ph3">`version`</ph>].log 이며 여기서:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`baseName`</ph> 지정 하는 기본 로그 이름 부분은 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dateStamp`</ph> 파트에 "YYYY-월-일" 형식 및 때 표시 되는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 은 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> 또는 <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`version`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">둘 이상의 로그 파일이 필요 하지 않으면 같은 <ph id="ph1">`baseName`</ph> 및 <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`version`</ph> 부 양수 <ph id="ph4">`Integer`</ph>, 파일 이름에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Multiple class instances<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>여러 클래스 인스턴스<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If an instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to a file that is in use:</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스를 사용 중인 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class shares the file if it is being used by another instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class in the same process.</source>
          <target state="translated">클래스의 다른 인스턴스에서 사용 중인 경우 파일 공유는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 동일한 프로세스에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class creates a new log file using the next available name if the file is being used by another process.</source>
          <target state="translated">클래스 파일을 다른 프로세스에서 사용 되는 경우 다음 사용 가능한 이름을 사용 하 여 새 로그 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Thread safety<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>스레드 안전<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class is thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This allows you to safely write messages to the log from multiple threads without using locks.</source>
          <target state="translated">이 통해 안전 하 게 메시지를 쓸 로그에 여러 스레드에서 잠금을 사용 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Location<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 파일 위치<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property takes a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration to specify one of the typical directories to write the log file to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> 속성이 사용 하는 한 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> 일반 로그 파일을 쓸 대상 디렉터리 중 하나를 지정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To write the log to another location, set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property to that location.</source>
          <target state="translated">다른 위치에 로그를 작성 하려면 설정는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 해당 위치에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 파일 이름<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The base name for the log file is specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">으로 로그 파일에 대 한 기본 이름이 지정 된 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The current log file name can be read from the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property.</source>
          <target state="translated">현재 로그 파일 이름에서 읽을 수는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>It is derived from several other properties and the current state of the logs in the file system.</source>
          <target state="translated">파일 시스템에 다른 여러 속성 및 로그의 현재 상태에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log Maintenance<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 유지 관리<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The minimum frequency for creating new log files is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">새 로그 파일을 만들기 위한 최소 빈도 따라 결정 됩니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>When the value is <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> 또는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, 마다 하루 또는 한 주, 새 로그 파일을 한 번 이상 만들어집니다 및 날짜 스탬프에 통합 됩니다는 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The maximum size (in bytes) of the log file is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property.</source>
          <target state="translated">로그 파일의 최대 크기 (바이트)에 따라 사용자가 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">로그에 기록 하는 추가 메시지는 삭제 되 고에 따라 로그 파일 크기가이 크기를 초과 하는 경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> 속성, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> property determines how much free space (in bytes) must be available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> 속성 결정 여유 공간 크기 (바이트)를 사용할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This helps ensure that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class will not consume all available disk space.</source>
          <target state="translated">이 속성을 사용 하면는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스 모든 사용 가능한 디스크 공간을 사용 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to specify the behavior of log writes when there are less than <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> bytes free.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> 많을 때는 로그의 동작을 지정 하는 속성 씁니다 미만 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> 사용 가능한 바이트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output Settings<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 파일 출력 설정<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> 있는지 여부를 기본 스트림으로 플러시해야 자동으로 쓴 후 로그 파일에 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> 속성을 허용 하는 경우 현재 로그 파일에 메시지를 추가 하거나 새 로그 파일에 쓸지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies the string to use for delimiting the fields within a log message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성 사용은 로그 메시지에서 필드를 구분 하는 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property specifies the encoding to use when creating a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> 속성 새 로그 파일을 만들 때 사용할 인코딩을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 파일 출력<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods write messages to the log file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> 메서드 로그 파일에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property, along with any existing logs with the same base name to determine if a new log should be created.</source>
          <target state="translated">이러한 메서드를 확인는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 속성과 함께 새 로그를 만들어야 하는지 확인 하려면 동일한 기본 이름 가진 기존의 모든 로그.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method flushes any messages currently in the output buffer to the log file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> 메서드는 현재 로그 파일에 출력 버퍼에 있는 모든 메시지를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method closes the log file so that it can be used by other processes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> 메서드 다른 프로세스에서 사용할 수 있도록 로그 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Enabling Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력을 사용 하도록 설정<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">추적 수신기를 사용 하려면 추적 또는 디버깅 사용 하도록 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">다음 구문은 특정 컴파일러입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">이외의 C# 또는 Visual Basic 컴파일러를 사용 하는 경우 컴파일러에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">C#에서 디버깅을 사용 하려면 추가 <ph id="ph1">`/d:DEBUG`</ph> 플래그를 추가할 수 있습니다 또는 코드를 컴파일할 때 컴파일러 명령줄 <ph id="ph2">`#define DEBUG`</ph> 파일의 맨 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual Basic의 추가 <ph id="ph1">`/d:DEBUG=True`</ph> 컴파일러 명령줄을 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">C#에서 추적을 사용 하려면 추가 <ph id="ph1">`/d:TRACE`</ph> 플래그를 추가 하거나 코드를 컴파일할 때 컴파일러 명령줄 <ph id="ph2">`#define TRACE`</ph> 파일의 맨 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual Basic의 추가 <ph id="ph1">`/d:TRACE=True`</ph> 컴파일러 명령줄을 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To set the level of your listener, edit the configuration file for your application.</source>
          <target state="translated">수신기의 수준을 설정 하려면 응용 프로그램에 대 한 구성 파일을 편집 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">이 파일 내에서 수신기를 추가, 유형을 설정 하 고 해당 매개 변수를 설정, 수신기를 제거 하거나 지울 수는 응용 프로그램에서 이전에 설정한 모든 수신기입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For this example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">이 예제를 실행 하려면 정규화 된 어셈블리 이름을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">정규화 된 어셈블리 이름을 확인 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>어셈블리 이름을<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class and sets the name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 이름을 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the default name.</source>
          <target state="translated">기본 이름을 사용하여 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to FileLogTraceListener.</source>
          <target state="translated">인스턴스 이름을 설정 하는이 메서드는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> FileLogTraceListener 클래스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>You can access the instance name through the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">인스턴스 이름을 통해 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>The name of the instance object.</source>
          <target state="translated">인스턴스 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the supplied name.</source>
          <target state="translated">제공된 이름을 사용하여 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to <ph id="ph2">`name`</ph>.</source>
          <target state="translated">인스턴스 이름을 설정 하는이 메서드는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스를 <ph id="ph2">`name`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>You can access the instance name thought the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">인스턴스 이름은 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>Determines whether to append the output to the current file or write it to a new file.</source>
          <target state="translated">현재 파일에 출력을 추가할지 또는 새 파일에 쓸지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the output is appended to the current file, and <ph id="ph3">&lt;see langword="False" /&gt;</ph> indicating that output is written to a new file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>. <ph id="ph2">&lt;see langword="True" /&gt;</ph>는 출력이 현재 파일에 추가됨을 나타내고 <ph id="ph3">&lt;see langword="False" /&gt;</ph>는 출력이 새 파일에 쓰여짐을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">이 속성의 기본 설정은 <ph id="ph1">&lt;see langword="True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property is <ph id="ph2">`False`</ph>, the output is written to a new file.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> 속성은 <ph id="ph2">`False`</ph>, 새 파일에 출력이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the property is <ph id="ph1">`True`</ph>, the output is appended to the current file, unless:</source>
          <target state="translated">속성이 <ph id="ph1">`True`</ph>를 출력 하지 않는 한 현재 파일에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The output file is locked by another process.</source>
          <target state="translated">출력 파일이 다른 프로세스에 의해 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created with a version number that is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">이 경우 새 로그 파일에 통합 된 버전 번호를 가진 만들어집니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The current file size is greater than what the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property allows.</source>
          <target state="translated">현재 파일 크기 보다 크면는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> 속성이 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, additional messages are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">이 상황에서 추가 메시지는 삭제 되 고에 따라는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> 속성, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The existing file name is out of date according to the log-creation schedule specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">기존 파일 이름으로 지정 된 로그 생성 일정에 따라 최신이 고 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created and the date stamp is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">이 경우 새 로그 파일이 만들어지고 날짜 스탬프에 통합 됩니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 이름입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>Indicates whether or not the writing to the log file stream flushes the buffer.</source>
          <target state="translated">로그 파일 스트림에 쓰고 버퍼를 플러시하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>. <ph id="ph2">&lt;see langword="True" /&gt;</ph>는 쓸 때마다 스트림을 플러시함을 나타내고, 그렇지 않으면 로그 항목이 보다 효율적으로 버퍼링되고 쓰여집니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">이 속성의 기본 설정은 <ph id="ph1">&lt;see langword="False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The <ph id="ph1">`False`</ph> setting for the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</source>
          <target state="translated"><ph id="ph1">`False`</ph> 에 대 한 설정에서 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> 속성 로그 파일에 여러 메시지를 한 번에 쓰기를 더 효율적 이므로 대부분의 응용 프로그램에 대 한 최상의 성능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to flush any messages currently in the log file's output buffer.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> 메서드를 현재 로그 파일에 있는 모든 메시지를 플러시할의 버퍼를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can also use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method, which implicitly flushes the stream before closing the log file.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> 메서드를 암시적으로 로그 파일을 닫기 전에 스트림도 플러시합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>Gets or sets the base name for the log files, which is used to create the full log-file name.</source>
          <target state="translated">로그 파일의 기본 이름을 가져오거나 설정합니다. 이 이름은 전체 로그 파일 이름을 만드는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The base name for the log files.</source>
          <target state="translated">로그 파일의 기본 이름입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The default is the application's product name.</source>
          <target state="translated">기본값은 응용 프로그램의 제품 이름입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property determines the base name for the log files that the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> 속성 기본 이름에 따라 로그 파일에 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스를 씁니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 속성은 현재 전체 로그 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">다른 버전의 로그를 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">새 로그 파일은 필요할 때에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The explicit form of the full log file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where</source>
          <target state="translated">전체 로그 파일 이름의 명시적 형식은 <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>].log 이며 여기서</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 부분에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> 속성 및 해당 속성 값으로 설정 됩니다 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`baseName`</ph> 지정 하는 기본 로그 이름 부분은 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dateStamp`</ph> 파트에 "YYYY-월-일" 형식 및 때 표시 되는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> 또는 <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">둘 이상의 로그 파일이 필요 하지 않으면 같은 <ph id="ph1">`baseName`</ph> 및 <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> 부 양수 <ph id="ph4">`Integer`</ph>, 파일 이름에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</source>
          <target state="translated">현재 로그 파일의 내부 스트림을 닫고 현재 스트림과 관련된 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>You do not need to call the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method explicitly, because the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class manages the underlying steam.</source>
          <target state="translated">호출할 필요가 없습니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> 메서드 명시적으로 하기 때문에 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스 내부 스트림은 관리 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>Gets or sets the log file directory when the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> property is set to <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>으로 설정될 때 로그 파일 디렉터리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the name of the log-file directory.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>. 로그 파일 디렉터리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The default setting for this property is the user's directory for application data.</source>
          <target state="translated">이 속성의 기본 설정은 응용 프로그램 데이터에 대한 사용자 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property is set, it also sets the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 속성이 설정 되어 있으면 또한 설정는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> 속성을 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property will throw an exception if the directory cannot be resolved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 속성 디렉터리를 확인할 수 없는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>Gets or sets the delimiter used to delimit fields within a log message.</source>
          <target state="translated">로그 메시지에서 필드를 구분하는 데 사용되는 구분 기호를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the delimiter used for fields within a log message.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>. 로그 메시지의 필드에 사용되는 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The default setting for this property is the TAB character.</source>
          <target state="translated">이 속성의 기본 설정은 TAB 문자입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property allows you to change the default delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성을 사용 하면 기본 구분 기호를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when writing to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property.</source>
          <target state="translated">로그 파일에 쓸 때 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적은 경우 취할 동작을 결정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property, or if the log file size is greater than what the <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> property allows.</source>
          <target state="translated">로그 파일에 쓸 때 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적거나 로그 파일 크기가 <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> 속성에서 허용하는 크기보다 큰 경우 취할 동작을 결정합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, the log messages are silently discarded if there is not enough reserved disk space.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, 예약 된 디스크 공간이 충분 한 경우 로그 메시지에는 자동으로 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</source>
          <target state="translated">이것이 기본 동작 및 간단한 응용 프로그램에 디스크가 꽉 찼을 경우 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>More robust applications can set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, and add <ph id="ph3">`Try...Catch`</ph> blocks around all code that writes to the log.</source>
          <target state="translated">보다 강력한 응용 프로그램을 설정할 수는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, 추가 <ph id="ph3">`Try...Catch`</ph> 로그에 기록 하는 모든 코드의 바깥쪽 블록입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>는 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. <ph id="ph2">&lt;see langword="False" /&gt;</ph>는 관리되지 않는 리소스만 해제합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>Closes the underlying stream and optionally releases the managed resources.</source>
          <target state="translated">내부 스트림을 닫고 관리되는 리소스를 선택적으로 해제합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`True`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`True`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> method of the base class, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 기본 클래스의 메서드 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>Gets or sets the encoding to use when creating a new log file.</source>
          <target state="translated">새 로그 파일을 만들 때 사용할 인코딩을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, which is the encoding to use when creating a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>. 새 로그 파일을 만들 때 사용할 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>The default value of this property is <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</source>
          <target state="translated">이 속성의 기본값은 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">기존 로그 파일에 텍스트를 추가할 때 해당 파일에 대 한 인코딩이로 지정 된 인코딩 대신 사용 됩니다는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Flushes the underlying stream that writes to the current log file.</source>
          <target state="translated">현재 로그 파일에 쓰는 내부 스트림을 플러시합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to write all buffered data to the current log file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> 메서드가 현재 로그 파일에 버퍼링 된 모든 데이터를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>Gets the current full log-file name.</source>
          <target state="translated">현재 전체 로그 파일 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the current full log-file name.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>. 현재 전체 로그 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> 속성은 현재 전체 로그 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">다른 버전의 로그를 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">새 로그 파일은 필요할 때에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The explicit form of the full log-file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where:</source>
          <target state="translated">전체 로그 파일 이름의 명시적 형식은 <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>].log 이며 여기서:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 부분에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> 속성 및 해당 속성 값으로 설정 됩니다 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`baseName`</ph> 지정 하는 기본 로그 이름 부분은 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format YYYY-MM-DD, and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dateStamp`</ph> 파트의 형식은 YYYY-월-일 때 표시 되는 및 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 은 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> 또는 <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">둘 이상의 로그 파일이 필요 하지 않으면 같은 <ph id="ph1">`baseName`</ph> 및 <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> 부 양수 <ph id="ph4">`Integer`</ph>, 파일 이름에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Gets the custom XML configuration attributes supported by the trace listener.</source>
          <target state="translated">추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array containing the XML configuration attributes recognized by this listener.</source>
          <target state="translated">이 수신기가 인식하는 XML 구성 특성이 포함된 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>The custom attributes for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be used in the XML configuration file for controlling the behavior of an instance of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class.</source>
          <target state="translated">에 대 한 사용자 지정 특성은 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 인스턴스의 동작을 제어 하는 XML 구성 파일에서 사용할 수는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">다른 특성을 사용 하면 구성 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Indicates whether or not the host name of the logging machine should be included in the output.</source>
          <target state="translated">로깅 시스템의 호스트 이름이 출력에 포함되어야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the host identifier should be included; otherwise use <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">호스트 식별자가 포함되어야 하면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>를 사용하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="False" /&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>The default value is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use the property to configure the behavior of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods.</source>
          <target state="translated">속성을 사용 하 여 동작을 구성할 수는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Gets or sets location for the log files.</source>
          <target state="translated">로그 파일의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, which is the location for the log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>. 로그 파일의 위치입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to set the log path to one of the predefined paths, determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration values.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> 로그 경로 의해 결정 하는 미리 정의 된 경로 중 하나를 설정 하는 속성은 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Location value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>위치 값<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data that is shared among all users, with the format:</source>
          <target state="translated">형식으로 모든 사용자 간에 공유 되는 응용 프로그램 데이터에 대 한 경로:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">에 대 한 일반적인 값 <ph id="ph1">`BasePath`</ph> 됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings\All Users\Application Data</source>
          <target state="translated">C:\Documents and Settings\All Users\Application 데이터</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come from the assembly.</source>
          <target state="translated">값 <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, 및 <ph id="ph3">`ProductVersion`</ph> 은 어셈블리에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">응용 프로그램을 시작한 실행 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data of a user, with the format:</source>
          <target state="translated">형식으로 사용자의 응용 프로그램 데이터에 대 한 경로:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">에 대 한 일반적인 값 <ph id="ph1">`BasePath`</ph> 됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</source>
          <target state="translated">C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come form the assembly.</source>
          <target state="translated">값 <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, 및 <ph id="ph3">`ProductVersion`</ph> 어셈블리 형성에 야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path of the current system's temporary folder.</source>
          <target state="translated">현재 시스템의 임시 폴더의 경로입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>If the string specified by <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> is not empty, then use it as the path; otherwise use the path for the application data of a user.</source>
          <target state="translated">지정한 문자열은 경우 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> 하지 빈, 다음의 경로로 사용 않으면 그렇지 않으면 사용자의 응용 프로그램 데이터에 대 한 경로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Determines which date to include in the names of the log files.</source>
          <target state="translated">로그 파일 이름에 포함할 날짜를 결정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>This indicates which date to include in the log-file names.</source>
          <target state="translated">로그 파일 이름에 포함할 날짜를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Assign one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> enumeration values to the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property to specify which date to include in the names of the log files.</source>
          <target state="translated">중 하나를 할당 된 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> 열거형 값을 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> 속성을 통해 로그 파일의 이름에 포함할 날짜를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The format of the date is YYYY-MM-DD.</source>
          <target state="translated">날짜 형식은 YYYY입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>For more information on the format of the log file name, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">로그 파일 이름의 형식에 자세한 내용은 참조 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>LogFileCreationSchedule value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>LogFileCreationSchedule 값<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>Date in the log file name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>로그 파일 이름에 날짜<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the current date in the log file name.</source>
          <target state="translated">로그 파일 이름에 현재 날짜를 포함합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Do not include the date in the log file name.</source>
          <target state="translated">로그 파일 이름에 날짜를 포함하지 않습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the first day of the current week in the log file name.</source>
          <target state="translated">로그 파일 이름에 현재 주의 첫째 요일을 포함합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The week starts on Saturday.</source>
          <target state="translated">토요일에 주의 시작합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Gets or sets the maximum allowed size of the log file, in bytes.</source>
          <target state="translated">로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>This is the maximum allowed log-file size, in bytes.</source>
          <target state="translated">로그 파일의 최대 허용 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>The default value is 5000000.</source>
          <target state="translated">기본값은 5000000 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Use this property to make sure that the log files do not grow too large.</source>
          <target state="translated">이 속성을 사용 하 여 로그 파일이 너무 커서 증가 하지 않는 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>If the log file size (in bytes) is greater than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">로그 파일 크기 (바이트) 하는 경우는이 속성의 값 보다 큰 다음 경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 는 값에따라클래스쓰기시도로메시지를로그에메시지를삭제하고오류는자동또는때예외가throw됩니다<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>속성입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</source>
          <target state="translated">사용 가능한 디스크 공간 (바이트)의 양이 메시지는 로그에 기록 하는 그렇지 않은 경우 보다 작은 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>When this property is set to a value less than 1000.</source>
          <target state="translated">이 속성이 1000보다 작은 값으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</source>
          <target state="translated">메시지를 로그 파일에 쓰기 위해 필요한 사용 가능한 디스크 공간의 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>This is the amount of free disk space necessary.</source>
          <target state="translated">필요한 사용 가능한 디스크 공간의 크기입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>The default value is 10000000.</source>
          <target state="translated">기본값은 10000000 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Use this property to make sure that the log files do not completely fill the disk.</source>
          <target state="translated">이 속성을 사용 하 여는 로그 파일 완전히 채우지 않을 디스크 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>If the amount of free disk space (in bytes) is less than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">양을 사용 가능한 디스크 공간 (바이트) 미만인 경우이 속성의 값 다음 경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> 값에 따라 클래스 쓰기 시도로 메시지를 로그에 메시지를 삭제 하 고 오류는 자동 또는 때 예외가 throw 되는 &lt; c2 &gt; <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>  속성입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</source>
          <target state="translated">로그 파일 크기 (바이트) 보다 큰 경우 메시지는 로그에 기록 하는 그렇지 않은 경우 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>When this property is set to a value less than 0.</source>
          <target state="translated">이 속성이 0보다 작은 값으로 설정된 경우입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace data to the output file.</source>
          <target state="translated">추적 데이터를 출력 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">이러한 메서드는의 멤버에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 출력을 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">이 메서드를 호출한 추적 소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">내보낼 추적 데이터입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the output file or stream.</source>
          <target state="translated">추적 정보, 데이터 개체 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method:</source>
          <target state="translated">이 방법:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">필요한 경우 새 로그 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes the information to the log file.</source>
          <target state="translated">로그 파일에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The following table lists the output fields in the order they appear.</source>
          <target state="translated">다음 표에서 순서 대로 출력 필드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">필드가 문자열에 의해 구분 하는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>필드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력 조건<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>설명<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated"><ph id="ph1">`name`</ph>의 값</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">열거형 값 이름 <ph id="ph1">`eventType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated"><ph id="ph1">`id`</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`data`</ph>.</source>
          <target state="translated"><ph id="ph1">`data`</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> 속성은 <ph id="ph2">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The name of the computer.</source>
          <target state="translated">컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the trace source that invoked this method.</source>
          <target state="translated">이 메서드를 호출한 추적 소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">데이터로 내보낼 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the output file or stream.</source>
          <target state="translated">추적 정보, 데이터 개체의 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method:</source>
          <target state="translated">이 방법:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Formats the data and context information for output,</source>
          <target state="translated">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Creates a new log file, if necessary,</source>
          <target state="translated">필요한 경우 새 로그 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">로그 파일에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This table lists the output fields in the order they appear.</source>
          <target state="translated">이 표에서 출력 필드를 순서 대로 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">필드가 문자열에 의해 구분 하는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>필드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력 조건<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>설명<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated"><ph id="ph1">`name`</ph>의 값</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">열거형 값 이름 <ph id="ph1">`eventType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated"><ph id="ph1">`id`</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string consisting of the string representation of each element in <ph id="ph1">`data`</ph>, each separated by <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</source>
          <target state="translated">각 요소에는 문자열 표현으로 이루어진 문자열 <ph id="ph1">`data`</ph>로 구분 하 여 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> 속성은 <ph id="ph2">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace and event information to the output file or stream.</source>
          <target state="translated">추적 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">이러한 메서드는의 멤버에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 출력을 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">이 메서드를 호출한 추적 소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message and event information to the output file or stream.</source>
          <target state="translated">추적 정보, 메시지 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method:</source>
          <target state="translated">이 방법:</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">필요한 경우 새 로그 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes the information to the log file.</source>
          <target state="translated">로그 파일에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">이 표에서 순서 대로 출력 필드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">필드가 문자열에 의해 구분 하는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>필드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력 조건<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>설명<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated"><ph id="ph1">`name`</ph>의 값</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">열거형 값 이름 <ph id="ph1">`eventType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated"><ph id="ph1">`id`</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>의 값</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> 속성은 <ph id="ph2">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The name of the computer.</source>
          <target state="translated">컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">이 메서드를 호출한 추적 소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">형식을 지정할 개체가 0개 이상 포함된 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the output file or stream.</source>
          <target state="translated">추적 정보, 형식 지정된 개체 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method:</source>
          <target state="translated">이 방법:</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Formats the data and context information for output.</source>
          <target state="translated">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Creates a new a new log file, if necessary.</source>
          <target state="translated">새 새 로그 파일이 필요한 경우 만듭니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">로그 파일에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For more information on creating new log file, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">이 표에서 순서 대로 출력 필드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and followed by a line terminator.</source>
          <target state="translated">필드가 문자열에 의해 구분 하는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> 속성을 지정 하 고 다음 줄 종결자입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>필드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력 조건<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>설명<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated"><ph id="ph1">`name`</ph>의 값</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">열거형 값 이름 <ph id="ph1">`eventType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated"><ph id="ph1">`id`</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Always</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The data in <ph id="ph1">`args`</ph> formatted with the <ph id="ph2">`format`</ph> string and using the invariant culture for string conversions.</source>
          <target state="translated">데이터 <ph id="ph1">`args`</ph> 로 포맷 된는 <ph id="ph2">`format`</ph> 문자열과 고정 문화권을 사용 하 여 문자열 변환 합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> 에 플래그가 설정 되어는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> 속성 <ph id="ph2">`eventCache`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">고정 문화권 문자열 변환을 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> 속성은 <ph id="ph2">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">쓸 사용자 지정 메시지입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Writes a verbatim message to disk, without any additional context information.</source>
          <target state="translated">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">중 하나를 사용 하 여는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> 로그 출력에는 컨텍스트 정보를 포함 하는 메서드.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">쓸 사용자 지정 메시지입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</source>
          <target state="translated">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다. 메시지 다음에는 현재 줄 종결자가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">중 하나를 사용 하 여는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> 로그 출력에는 컨텍스트 정보를 포함 하는 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>