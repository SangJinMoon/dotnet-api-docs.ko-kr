<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10a9802efb1d279e05da80d00df15b90b54dd3d7" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="16583-101">로깅 출력을 파일로 보내는 간단한 수신기를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16583-101">Provides a simple listener that directs logging output to file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스 일별 또는 응용 프로그램에서 필요에 따라 로그 파일을 보관에 자동된 유지 관리 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="16583-103">이 자동 보관 기능 개발자와 관리자의 유지 관리 업무를 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="16583-104">인스턴스 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 에 추가할 수는 <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> 또는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 컬렉션 텍스트 파일 로깅 출력을 리디렉션할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="16583-105">이 클래스의 인스턴스를 추가할 수도 있습니다 `My.Application.Log` 또는 `My.Log` (웹 응용 프로그램)에 대 한 Visual Basic 응용 프로그램에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="16583-106">자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="16583-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="16583-107">이 클래스의 주요 기능은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="16583-108">*보관 기능*합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-108">*Archival functionality*.</span></span> <span data-ttu-id="16583-109">이 클래스에 의해 생성 된 로그 파일은 기본 이름 및 날짜, 그리고 로그의 연속 버전에서 로그 파일을 구분 하는 번호에 따라 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="16583-110">새 로그 파일은 필요할 때에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="16583-111">파일 이름의 명시적 형식은 `baseName`[-`dateStamp`] [-`version`].log 이며 여기서:</span><span class="sxs-lookup"><span data-stu-id="16583-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="16583-112">`baseName` 지정 하는 기본 로그 이름 부분은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="16583-113">`dateStamp` 파트에 "YYYY-월-일" 형식 및 때 표시 되는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 은 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="16583-114">둘 이상의 로그 파일이 필요 하지 않으면 같은 `baseName` 및 `dateStamp`, `version` 부 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="16583-115">*여러 클래스 인스턴스*합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-115">*Multiple class instances*.</span></span> <span data-ttu-id="16583-116">인스턴스는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 사용 중인 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="16583-117">클래스의 다른 인스턴스에서 사용 중인 경우 파일 공유는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 동일한 프로세스에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="16583-118">클래스 파일을 다른 프로세스에서 사용 되는 경우 다음 사용 가능한 이름을 사용 하 여 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16583-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="16583-119">*스레드 안전*합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-119">*Thread safety*.</span></span> <span data-ttu-id="16583-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="16583-121">이 통해 안전 하 게 메시지를 쓸 로그에 여러 스레드에서 잠금을 사용 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="16583-122">**로그 파일 위치**</span><span class="sxs-lookup"><span data-stu-id="16583-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="16583-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성이 사용 하는 한 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 일반 로그 파일을 쓸 대상 디렉터리 중 하나를 지정 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="16583-124">다른 위치에 로그를 작성 하려면 설정는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 해당 위치에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="16583-125">**로그 파일 이름**</span><span class="sxs-lookup"><span data-stu-id="16583-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="16583-126">으로 로그 파일에 대 한 기본 이름이 지정 된 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="16583-127">현재 로그 파일 이름에서 읽을 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="16583-128">파일 시스템에 다른 여러 속성 및 로그의 현재 상태에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="16583-129">**로그 유지 관리**</span><span class="sxs-lookup"><span data-stu-id="16583-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="16583-130">새 로그 파일을 만들기 위한 최소 빈도 따라 결정 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="16583-131">값이 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, 마다 하루 또는 한 주, 새 로그 파일을 한 번 이상 만들어집니다 및 날짜 스탬프에 통합 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="16583-132">로그 파일의 최대 크기 (바이트)에 따라 사용자가 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="16583-133">로그에 기록 하는 추가 메시지는 삭제 되 고에 따라 로그 파일 크기가이 크기를 초과 하는 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="16583-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 속성 결정 여유 공간 크기 (바이트)를 사용할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="16583-135">이 속성을 사용 하면는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스 모든 사용 가능한 디스크 공간을 사용 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="16583-136">사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 많을 때는 로그의 동작을 지정 하는 속성 씁니다 미만 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 사용 가능한 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="16583-137">**로그 파일 출력 설정**</span><span class="sxs-lookup"><span data-stu-id="16583-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="16583-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> 있는지 여부를 기본 스트림으로 플러시해야 자동으로 쓴 후 로그 파일에 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="16583-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> 속성을 허용 하는 경우 현재 로그 파일에 메시지를 추가 하거나 새 로그 파일에 쓸지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="16583-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성 사용은 로그 메시지에서 필드를 구분 하는 문자열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="16583-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> 속성 새 로그 파일을 만들 때 사용할 인코딩을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="16583-142">**로그 파일 출력**</span><span class="sxs-lookup"><span data-stu-id="16583-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="16583-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 및 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 메서드 로그 파일에 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="16583-144">이러한 메서드를 확인는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성과 함께 새 로그를 만들어야 하는지 확인 하려면 동일한 기본 이름 가진 기존의 모든 로그.</span><span class="sxs-lookup"><span data-stu-id="16583-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="16583-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 메서드는 현재 로그 파일에 출력 버퍼에 있는 모든 메시지를 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="16583-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드 다른 프로세스에서 사용할 수 있도록 로그 파일을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="16583-147">**출력을 사용 하도록 설정**</span><span class="sxs-lookup"><span data-stu-id="16583-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="16583-148">추적 수신기를 사용 하려면 추적 또는 디버깅 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="16583-149">다음 구문은 특정 컴파일러입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="16583-150">이외의 C# 또는 Visual Basic 컴파일러를 사용 하는 경우 컴파일러에 대 한 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="16583-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="16583-151">C#에서 디버깅을 사용 하려면 추가 `/d:DEBUG` 플래그를 추가할 수 있습니다 또는 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="16583-152">Visual Basic의 추가 `/d:DEBUG=True` 컴파일러 명령줄을 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="16583-153">C#에서 추적을 사용 하려면 추가 `/d:TRACE` 플래그를 추가 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define TRACE` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="16583-154">Visual Basic의 추가 `/d:TRACE=True` 컴파일러 명령줄을 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="16583-155">수신기의 수준을 설정 하려면 응용 프로그램에 대 한 구성 파일을 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="16583-156">이 파일 내에서 수신기를 추가, 유형을 설정 하 고 해당 매개 변수를 설정, 수신기를 제거 하거나 지울 수는 응용 프로그램에서 이전에 설정한 모든 수신기입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="16583-157">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="16583-158">이 예제를 실행 하려면 정규화 된 어셈블리 이름을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="16583-159">정규화 된 어셈블리 이름을 확인 하는 방법에 대 한 정보를 참조 하십시오. [어셈블리 이름을](~/docs/framework/app-domains/assembly-names.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16583-160">
            <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화하고 이름을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-160">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16583-161">기본 이름을 사용하여 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-162">인스턴스 이름을 설정 하는이 메서드는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> FileLogTraceListener 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-162">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="16583-163">인스턴스 이름을 통해 액세스할 수 있습니다는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-163">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="16583-164">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-164">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="16583-165">인스턴스 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-165">The name of the instance object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-166">제공된 이름을 사용하여 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-166">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-167">인스턴스 이름을 설정 하는이 메서드는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 `name`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-167">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="16583-168">인스턴스 이름은 액세스할 수 있습니다는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-168">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-169">현재 파일에 출력을 추가할지 또는 새 파일에 쓸지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-169">Determines whether to append the output to the current file or write it to a new file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-170">
            <see langword="Boolean" />. <see langword="True" />는 출력이 현재 파일에 추가됨을 나타내고 <see langword="False" />는 출력이 새 파일에 쓰여짐을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-170">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span>
          </span>
          <span data-ttu-id="16583-171">이 속성의 기본 설정은 <see langword="True" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-171">The default setting for this property is <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-172">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> 속성은 `False`, 새 파일에 출력이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-172">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="16583-173">속성이 `True`를 출력 하지 않는 한 현재 파일에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-173">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="16583-174">출력 파일이 다른 프로세스에 의해 잠겨 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-174">The output file is locked by another process.</span></span> <span data-ttu-id="16583-175">이 경우 새 로그 파일에 통합 된 버전 번호를 가진 만들어집니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-175">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="16583-176">현재 파일 크기 보다 크면는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 속성이 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-176">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="16583-177">이 상황에서 추가 메시지는 삭제 되 고에 따라는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-177">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="16583-178">기존 파일 이름으로 지정 된 로그 생성 일정에 따라 최신이 고 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-178">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="16583-179">이 경우 새 로그 파일이 만들어지고 날짜 스탬프에 통합 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-179">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-180">로그 파일 스트림에 쓰고 버퍼를 플러시하는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-180">Indicates whether or not the writing to the log file stream flushes the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-181">
            <see langword="Boolean" />. <see langword="True" />는 쓸 때마다 스트림을 플러시함을 나타내고, 그렇지 않으면 로그 항목이 보다 효율적으로 버퍼링되고 쓰여집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-181">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span>
          </span>
          <span data-ttu-id="16583-182">이 속성의 기본 설정은 <see langword="False" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-182">The default setting for this property is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-183">`False` 에 대 한 설정에서 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> 속성 로그 파일에 여러 메시지를 한 번에 쓰기를 더 효율적 이므로 대부분의 응용 프로그램에 대 한 최상의 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-183">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="16583-184">사용할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 메서드를 현재 로그 파일에 있는 모든 메시지를 플러시할의 버퍼를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-184">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="16583-185">사용할 수도 있습니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드를 암시적으로 로그 파일을 닫기 전에 스트림도 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-185">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-186">로그 파일의 기본 이름을 가져오거나 설정합니다. 이 이름은 전체 로그 파일 이름을 만드는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-186">Gets or sets the base name for the log files, which is used to create the full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-187">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-187">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="16583-188">로그 파일의 기본 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-188">The base name for the log files.</span>
          </span>
          <span data-ttu-id="16583-189">기본값은 응용 프로그램의 제품 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-189">The default is the application's product name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-190"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성 기본 이름에 따라 로그 파일에 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-190">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="16583-191"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성은 현재 전체 로그 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-191">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="16583-192">다른 버전의 로그를 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-192">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="16583-193">새 로그 파일은 필요할 때에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-193">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="16583-194">전체 로그 파일 이름의 명시적 형식은 `path` \\ `baseName`[-`dateStamp`] [-`iteration`].log 이며 여기서</span><span class="sxs-lookup"><span data-stu-id="16583-194">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="16583-195">`path` 부분에 의해 결정 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성 및 해당 속성 값으로 설정 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-195">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="16583-196">`baseName` 지정 하는 기본 로그 이름 부분은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-196">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="16583-197">`dateStamp` 파트에 "YYYY-월-일" 형식 및 때 표시 되는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 로 설정 된 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-197">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="16583-198">둘 이상의 로그 파일이 필요 하지 않으면 같은 `baseName` 및 `dateStamp`, `iteration` 부 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-198">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16583-199">현재 로그 파일의 내부 스트림을 닫고 현재 스트림과 관련된 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-199">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-200">호출할 필요가 없습니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 메서드 명시적으로 하기 때문에 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스 내부 스트림은 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-200">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-201">
            <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 속성이 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />으로 설정될 때 로그 파일 디렉터리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-201">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-202">
            <see langword="String" />. 로그 파일 디렉터리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-202">
              <see langword="String" />, which is the name of the log-file directory.</span>
          </span>
          <span data-ttu-id="16583-203">이 속성의 기본 설정은 응용 프로그램 데이터에 대한 사용자 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-203">The default setting for this property is the user's directory for application data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-204">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성이 설정 되어 있으면 또한 설정는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성을 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-204">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="16583-205"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성 디렉터리를 확인할 수 없는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-205">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-206">로그 메시지에서 필드를 구분하는 데 사용되는 구분 기호를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-206">Gets or sets the delimiter used to delimit fields within a log message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-207">
            <see langword="String" />. 로그 메시지의 필드에 사용되는 구분 기호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-207">
              <see langword="String" />, which is the delimiter used for fields within a log message.</span>
          </span>
          <span data-ttu-id="16583-208">이 속성의 기본 설정은 TAB 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-208">The default setting for this property is the TAB character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-209"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 사용 하면 기본 구분 기호를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-209">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-210">로그 파일에 쓸 때 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적은 경우 취할 동작을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-210">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-211">
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-211">
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          </span>
          <span data-ttu-id="16583-212">로그 파일에 쓸 때 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 속성에서 지정한 사용 가능한 공간보다 공간이 더 적거나 로그 파일 크기가 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 속성에서 허용하는 크기보다 큰 경우 취할 동작을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-212">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span>
          </span>
          <span data-ttu-id="16583-213">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-213">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-214">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성이 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, 예약 된 디스크 공간이 충분 한 경우 로그 메시지에는 자동으로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-214">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="16583-215">이것이 기본 동작 및 간단한 응용 프로그램에 디스크가 꽉 찼을 경우 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-215">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="16583-216">보다 강력한 응용 프로그램을 설정할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 속성을 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, 추가 `Try...Catch` 로그에 기록 하는 모든 코드의 바깥쪽 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-216">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="16583-217">
            <see langword="True" />는 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. <see langword="False" />는 관리되지 않는 리소스만 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-217">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-218">내부 스트림을 닫고 관리되는 리소스를 선택적으로 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-218">Closes the underlying stream and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-219">`disposing` 매개 변수가 `True`인 경우 이 메서드는 이 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-219">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="16583-220">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-220">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="16583-221">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="16583-221">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="16583-222">
              <see langword="Dispose" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span>
            <span class="sxs-lookup">
              <span data-stu-id="16583-222">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="16583-223">이 메서드는 <see langword="Dispose" /> 기본 클래스의 메서드 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="16583-223">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-224">새 로그 파일을 만들 때 사용할 인코딩을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-224">Gets or sets the encoding to use when creating a new log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-225">
            <see cref="T:System.Text.Encoding" />. 새 로그 파일을 만들 때 사용할 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-225">
              <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span>
          </span>
          <span data-ttu-id="16583-226">이 속성의 기본값은 <see cref="T:System.Text.UTF8Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-226">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-227">기존 로그 파일에 텍스트를 추가할 때 해당 파일에 대 한 인코딩이로 지정 된 인코딩 대신 사용 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-227">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16583-228">현재 로그 파일에 쓰는 내부 스트림을 플러시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-228">Flushes the underlying stream that writes to the current log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-229">사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 메서드가 현재 로그 파일에 버퍼링 된 모든 데이터를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-229">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-230">현재 전체 로그 파일 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-230">Gets the current full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-231">
            <see langword="String" />. 현재 전체 로그 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-231">
              <see langword="String" />, which is the current full log-file name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-232"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 속성은 현재 전체 로그 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-232">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="16583-233">다른 버전의 로그를 구분 하기 위해 로그 경로, 기본 이름, 날짜 및 숫자에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-233">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="16583-234">새 로그 파일은 필요할 때에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-234">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="16583-235">전체 로그 파일 이름의 명시적 형식은 `path` \\ `baseName`[-`dateStamp`] [-`iteration`].log 이며 여기서:</span><span class="sxs-lookup"><span data-stu-id="16583-235">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="16583-236">`path` 부분에 의해 결정 됩니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 속성 및 해당 속성 값으로 설정 됩니다 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-236">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="16583-237">`baseName` 지정 하는 기본 로그 이름 부분은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-237">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="16583-238">`dateStamp` 파트의 형식은 YYYY-월-일 때 표시 되는 및 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 은 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 또는 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-238">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="16583-239">둘 이상의 로그 파일이 필요 하지 않으면 같은 `baseName` 및 `dateStamp`, `iteration` 부 양수 `Integer`, 파일 이름에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-239">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16583-240">추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-240">Gets the custom XML configuration attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16583-241">이 수신기가 인식하는 XML 구성 특성이 포함된 <see langword="String" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-241">
              <see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-242">에 대 한 사용자 지정 특성은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 인스턴스의 동작을 제어 하는 XML 구성 파일에서 사용할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-242">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="16583-243">다른 특성을 사용 하면 구성 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-243">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-244">로깅 시스템의 호스트 이름이 출력에 포함되어야 하는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-244">Indicates whether or not the host name of the logging machine should be included in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-245">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-245">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="16583-246">호스트 식별자가 포함되어야 하면 <see langword="True" />를 사용하고, 그렇지 않으면 <see langword="False" />를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-246">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span>
          </span>
          <span data-ttu-id="16583-247">기본값은 <see langword="False" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-247">The default value is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-248">속성을 사용 하 여 동작을 구성할 수는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 및 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="16583-248">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-249">로그 파일의 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-249">Gets or sets location for the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-250">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />. 로그 파일의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-250">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span>
          </span>
          <span data-ttu-id="16583-251">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-251">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-252">사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 로그 경로 의해 결정 하는 미리 정의 된 경로 중 하나를 설정 하는 속성은 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-252">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="16583-253">**위치 값**</span><span class="sxs-lookup"><span data-stu-id="16583-253">**Location value**</span></span>|<span data-ttu-id="16583-254">**Path**</span><span class="sxs-lookup"><span data-stu-id="16583-254">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="16583-255">형식으로 모든 사용자 간에 공유 되는 응용 프로그램 데이터에 대 한 경로:</span><span class="sxs-lookup"><span data-stu-id="16583-255">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="16583-256">에 대 한 일반적인 값 `BasePath` 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-256">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="16583-257">C:\Documents and Settings\All Users\Application 데이터</span><span class="sxs-lookup"><span data-stu-id="16583-257">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="16583-258">값 `CompanyName`, `ProductName`, 및 `ProductVersion` 은 어셈블리에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="16583-258">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="16583-259">응용 프로그램을 시작한 실행 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-259">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="16583-260">형식으로 사용자의 응용 프로그램 데이터에 대 한 경로:</span><span class="sxs-lookup"><span data-stu-id="16583-260">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="16583-261">에 대 한 일반적인 값 `BasePath` 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-261">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="16583-262">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="16583-262">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="16583-263">값 `CompanyName`, `ProductName`, 및 `ProductVersion` 어셈블리 형성에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-263">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="16583-264">현재 시스템의 임시 폴더의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-264">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="16583-265">지정한 문자열은 경우 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 하지 빈, 다음의 경로로 사용 않으면 그렇지 않으면 사용자의 응용 프로그램 데이터에 대 한 경로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-265">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-266">로그 파일 이름에 포함할 날짜를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-266">Determines which date to include in the names of the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-267">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-267">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          </span>
          <span data-ttu-id="16583-268">로그 파일 이름에 포함할 날짜를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-268">This indicates which date to include in the log-file names.</span>
          </span>
          <span data-ttu-id="16583-269">기본값은 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-269">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-270">중 하나를 할당 된 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> 열거형 값을 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 속성을 통해 로그 파일의 이름에 포함할 날짜를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-270">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="16583-271">날짜 형식은 YYYY입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-271">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="16583-272">로그 파일 이름의 형식에 자세한 내용은 참조 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-272">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="16583-273">**LogFileCreationSchedule 값**</span><span class="sxs-lookup"><span data-stu-id="16583-273">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="16583-274">**로그 파일 이름에 날짜**</span><span class="sxs-lookup"><span data-stu-id="16583-274">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="16583-275">로그 파일 이름에 현재 날짜를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-275">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="16583-276">로그 파일 이름에 날짜를 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-276">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="16583-277">로그 파일 이름에 현재 주의 첫째 요일을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-277">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="16583-278">토요일에 주의 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-278">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-279">로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-279">Gets or sets the maximum allowed size of the log file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-280">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-280">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="16583-281">로그 파일의 최대 허용 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-281">This is the maximum allowed log-file size, in bytes.</span>
          </span>
          <span data-ttu-id="16583-282">기본값은 5000000 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-282">The default value is 5000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-283">이 속성을 사용 하 여 로그 파일이 너무 커서 증가 하지 않는 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-283">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="16583-284">로그 파일 크기 (바이트) 하는 경우는이 속성의 값 보다 큰 다음 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 는 값에따라클래스쓰기시도로메시지를로그에메시지를삭제하고오류는자동또는때예외가throw됩니다<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-284">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="16583-285">사용 가능한 디스크 공간 (바이트)의 양이 메시지는 로그에 기록 하는 그렇지 않은 경우 보다 작은 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-285">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="16583-286">이 속성이 1000보다 작은 값으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-286">When this property is set to a value less than 1000.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16583-287">메시지를 로그 파일에 쓰기 위해 필요한 사용 가능한 디스크 공간의 크기(바이트)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-287">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16583-288">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-288">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="16583-289">필요한 사용 가능한 디스크 공간의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-289">This is the amount of free disk space necessary.</span>
          </span>
          <span data-ttu-id="16583-290">기본값은 10000000 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-290">The default value is 10000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-291">이 속성을 사용 하 여는 로그 파일 완전히 채우지 않을 디스크 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-291">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="16583-292">양을 사용 가능한 디스크 공간 (바이트) 미만인 경우이 속성의 값 다음 경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 값에 따라 클래스 쓰기 시도로 메시지를 로그에 메시지를 삭제 하 고 오류는 자동 또는 때 예외가 throw 되는 < c2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-292">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="16583-293">로그 파일 크기 (바이트) 보다 큰 경우 메시지는 로그에 기록 하는 그렇지 않은 경우 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-293">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="16583-294">이 속성이 0보다 작은 값으로 설정된 경우입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-294">When this property is set to a value less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16583-295">추적 데이터를 출력 파일에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-295">Writes trace data to the output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="16583-297">이러한 메서드는의 멤버에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 출력을 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-297">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="16583-298">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-298">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="16583-299">이 메서드를 호출한 추적 소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-299">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="16583-300">
            <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-300">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="16583-301">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-301">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="16583-302">내보낼 추적 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-302">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-303">추적 정보, 데이터 개체 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-303">Writes trace information, a data object, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-304">이 방법:</span><span class="sxs-lookup"><span data-stu-id="16583-304">This method:</span></span>  
  
1.  <span data-ttu-id="16583-305">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-305">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="16583-306">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16583-306">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="16583-307">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-307">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="16583-308">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-308">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="16583-309">다음 표에서 순서 대로 출력 필드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="16583-309">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="16583-310">필드가 문자열에 의해 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-310">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="16583-311">**필드**</span><span class="sxs-lookup"><span data-stu-id="16583-311">**Field**</span></span>|<span data-ttu-id="16583-312">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="16583-312">**Output condition**</span></span>|<span data-ttu-id="16583-313">**설명**</span><span class="sxs-lookup"><span data-stu-id="16583-313">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="16583-314">Always</span><span class="sxs-lookup"><span data-stu-id="16583-314">Always</span></span>|<span data-ttu-id="16583-315">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="16583-315">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="16583-316">Always</span><span class="sxs-lookup"><span data-stu-id="16583-316">Always</span></span>|<span data-ttu-id="16583-317">열거형 값 이름 `eventType`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-317">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="16583-318">Always</span><span class="sxs-lookup"><span data-stu-id="16583-318">Always</span></span>|<span data-ttu-id="16583-319">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-319">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="16583-320">Always</span><span class="sxs-lookup"><span data-stu-id="16583-320">Always</span></span>|<span data-ttu-id="16583-321">`data`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-321">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="16583-322">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-322">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-323"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-323">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="16583-324">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-324">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-325"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-325">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="16583-326">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-326">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-327">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-327">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-328">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-328">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="16583-329">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-329">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-330">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-331">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-331">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="16583-332">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-332">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-333"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-333">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="16583-334">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-334">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-335">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-335">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-336">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-336">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="16583-337">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-337">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="16583-338">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-338">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="16583-339">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-339">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="16583-340">이 메서드를 호출한 추적 소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-340">The name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="16583-341">
            <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-341">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="16583-342">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-342">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="16583-343">데이터로 내보낼 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-343">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-344">추적 정보, 데이터 개체의 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-344">Writes trace information, an array of data objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-345">이 방법:</span><span class="sxs-lookup"><span data-stu-id="16583-345">This method:</span></span>  
  
1.  <span data-ttu-id="16583-346">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다</span><span class="sxs-lookup"><span data-stu-id="16583-346">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="16583-347">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16583-347">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="16583-348">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-348">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="16583-349">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-349">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="16583-350">이 표에서 출력 필드를 순서 대로 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="16583-350">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="16583-351">필드가 문자열에 의해 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-351">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="16583-352">**필드**</span><span class="sxs-lookup"><span data-stu-id="16583-352">**Field**</span></span>|<span data-ttu-id="16583-353">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="16583-353">**Output condition**</span></span>|<span data-ttu-id="16583-354">**설명**</span><span class="sxs-lookup"><span data-stu-id="16583-354">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="16583-355">Always</span><span class="sxs-lookup"><span data-stu-id="16583-355">Always</span></span>|<span data-ttu-id="16583-356">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="16583-356">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="16583-357">Always</span><span class="sxs-lookup"><span data-stu-id="16583-357">Always</span></span>|<span data-ttu-id="16583-358">열거형 값 이름 `eventType`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-358">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="16583-359">Always</span><span class="sxs-lookup"><span data-stu-id="16583-359">Always</span></span>|<span data-ttu-id="16583-360">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-360">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="16583-361">Always</span><span class="sxs-lookup"><span data-stu-id="16583-361">Always</span></span>|<span data-ttu-id="16583-362">각 요소에는 문자열 표현으로 이루어진 문자열 `data`로 구분 하 여 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-362">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="16583-363">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-363">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-364"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-364">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="16583-365">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-365">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-366"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-366">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="16583-367">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-367">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-368">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-368">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-369">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-369">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="16583-370">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-370">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-371">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-372">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-372">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="16583-373">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-373">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-374"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-374">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="16583-375">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-375">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-376">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-376">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-377">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-377">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="16583-378">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-378">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="16583-379">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-379">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16583-380">추적 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-380">Writes trace and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="16583-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="16583-382">이러한 메서드는의 멤버에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 출력을 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-382">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="16583-383">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-383">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="16583-384">이 메서드를 호출한 추적 소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-384">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="16583-385">
            <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-385">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="16583-386">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-386">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="16583-387">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-387">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-388">추적 정보, 메시지 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-388">Writes trace information, a message and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-389">이 방법:</span><span class="sxs-lookup"><span data-stu-id="16583-389">This method:</span></span>  
  
1.  <span data-ttu-id="16583-390">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-390">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="16583-391">필요한 경우 새 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16583-391">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="16583-392">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-392">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="16583-393">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-393">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="16583-394">이 표에서 순서 대로 출력 필드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="16583-394">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="16583-395">필드가 문자열에 의해 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 줄 종결자가 뒤 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-395">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="16583-396">**필드**</span><span class="sxs-lookup"><span data-stu-id="16583-396">**Field**</span></span>|<span data-ttu-id="16583-397">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="16583-397">**Output condition**</span></span>|<span data-ttu-id="16583-398">**설명**</span><span class="sxs-lookup"><span data-stu-id="16583-398">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="16583-399">항상</span><span class="sxs-lookup"><span data-stu-id="16583-399">Always.</span></span>|<span data-ttu-id="16583-400">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="16583-400">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="16583-401">항상</span><span class="sxs-lookup"><span data-stu-id="16583-401">Always.</span></span>|<span data-ttu-id="16583-402">열거형 값 이름 `eventType`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-402">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="16583-403">항상</span><span class="sxs-lookup"><span data-stu-id="16583-403">Always.</span></span>|<span data-ttu-id="16583-404">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-404">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="16583-405">항상</span><span class="sxs-lookup"><span data-stu-id="16583-405">Always.</span></span>|<span data-ttu-id="16583-406">`message`의 값</span><span class="sxs-lookup"><span data-stu-id="16583-406">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="16583-407">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-407">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-408"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-408">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="16583-409">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-409">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-410"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-410">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="16583-411">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-411">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-412">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-412">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-413">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-413">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="16583-414">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-414">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-415">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-416">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-416">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="16583-417">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-417">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-418"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-418">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="16583-419">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-419">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-420">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-420">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-421">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-421">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="16583-422">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-422">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="16583-423">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-423">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="16583-424">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-424">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="16583-425">이 메서드를 호출한 추적 소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-425">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="16583-426">
            <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-426">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="16583-427">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-427">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="16583-428">
            <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-428">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="16583-429">형식을 지정할 개체가 0개 이상 포함된 <see langword="Object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-429">An <see langword="Object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-430">추적 정보, 형식 지정된 개체 배열 및 이벤트 정보를 출력 파일이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-430">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-431">이 방법:</span><span class="sxs-lookup"><span data-stu-id="16583-431">This method:</span></span>  
  
1.  <span data-ttu-id="16583-432">출력에 대 한 데이터와 컨텍스트 정보 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-432">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="16583-433">새 새 로그 파일이 필요한 경우 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16583-433">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="16583-434">로그 파일에 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-434">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="16583-435">새 로그 파일을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-435">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="16583-436">이 표에서 순서 대로 출력 필드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="16583-436">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="16583-437">필드가 문자열에 의해 구분 하는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 속성을 지정 하 고 다음 줄 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-437">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="16583-438">**필드**</span><span class="sxs-lookup"><span data-stu-id="16583-438">**Field**</span></span>|<span data-ttu-id="16583-439">**출력 조건**</span><span class="sxs-lookup"><span data-stu-id="16583-439">**Output condition**</span></span>|<span data-ttu-id="16583-440">**설명**</span><span class="sxs-lookup"><span data-stu-id="16583-440">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="16583-441">Always</span><span class="sxs-lookup"><span data-stu-id="16583-441">Always</span></span>|<span data-ttu-id="16583-442">`name`의 값</span><span class="sxs-lookup"><span data-stu-id="16583-442">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="16583-443">Always</span><span class="sxs-lookup"><span data-stu-id="16583-443">Always</span></span>|<span data-ttu-id="16583-444">열거형 값 이름 `eventType`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-444">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="16583-445">Always</span><span class="sxs-lookup"><span data-stu-id="16583-445">Always</span></span>|<span data-ttu-id="16583-446">`id`의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-446">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="16583-447">Always</span><span class="sxs-lookup"><span data-stu-id="16583-447">Always</span></span>|<span data-ttu-id="16583-448">데이터 `args` 로 포맷 된는 `format` 문자열과 고정 문화권을 사용 하 여 문자열 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-448">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="16583-449">경우는 <xref:System.Diagnostics.TraceOptions.Callstack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-449">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-450"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-450">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="16583-451">경우는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-451">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-452"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-452">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="16583-453">경우는 <xref:System.Diagnostics.TraceOptions.DateTime> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-453">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-454">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-454">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-455">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-455">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="16583-456">경우는 <xref:System.Diagnostics.TraceOptions.ProcessId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-456">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-457">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-458">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-458">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="16583-459">경우는 <xref:System.Diagnostics.TraceOptions.ThreadId> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-459">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-460"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-460">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="16583-461">경우는 <xref:System.Diagnostics.TraceOptions.Timestamp> 에 플래그가 설정 되어는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-461">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="16583-462">문자열 표현을 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 속성 `eventCache`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-462">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="16583-463">고정 문화권 문자열 변환을 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16583-463">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="16583-464">경우는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 속성은 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="16583-464">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="16583-465">컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="16583-465">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="16583-466">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-466">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="16583-467">쓸 사용자 지정 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-467">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-468">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-468">Writes a verbatim message to disk, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-469"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-469">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="16583-470">중 하나를 사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 로그 출력에는 컨텍스트 정보를 포함 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="16583-470">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="16583-471">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-471">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="16583-472">쓸 사용자 지정 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-472">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16583-473">추가 컨텍스트 정보 없이 디스크에 약어 메시지를 씁니다. 메시지 다음에는 현재 줄 종결자가 표시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16583-473">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16583-474"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> 메서드 추가 컨텍스트 정보 없이 로그 파일을 특정 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="16583-474">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="16583-475">중 하나를 사용 하 여는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 로그 출력에는 컨텍스트 정보를 포함 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="16583-475">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>