<Type Name="Log" FullName="Microsoft.VisualBasic.Logging.Log">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4cc930b825342b7919d7b5a0a9a55bf3e97fb0a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36658925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Log extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="VB.NET" Value="Public Class Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class Log" />
  <TypeSignature Language="F#" Value="type Log = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ecda2-101">이벤트와 예외 정보를 응용 프로그램의 로그 수신기에 쓰기 위한 속성과 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecda2-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-102">`My.Application.Log` 에서 액세스할 수 있는 간단한 진입점을 제공 하는 개체는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 로깅 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="ecda2-103">`WriteEntry` 및 `WriteException` 메서드는 응용 프로그램의 로그 수신기에 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="ecda2-104">응용 프로그램의 구성 파일에서 수신기를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="ecda2-105">자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) 및 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-106">`My.Application.Log` 개체는 클라이언트 응용 프로그램에 대해서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="ecda2-107">웹 응용 프로그램 사용 `My.Log`합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="ecda2-108">자세한 내용은 <xref:Microsoft.VisualBasic.Logging.AspLog>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-108">For more information, see <xref:Microsoft.VisualBasic.Logging.AspLog>.</span></span>  
  
 <span data-ttu-id="ecda2-109">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="ecda2-110">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-110">To</span></span>|<span data-ttu-id="ecda2-111">참조</span><span class="sxs-lookup"><span data-stu-id="ecda2-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-112">응용 프로그램의 로그 수신기에 이벤트 정보 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="ecda2-113">방법: 로그 메시지 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-113">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="ecda2-114">응용 프로그램의 로그 수신기에 예외 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="ecda2-115">방법: 예외 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-115">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="ecda2-116">위치를 확인 `My.Application.Log` 정보 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="ecda2-117">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-118">이 예제에서는 `My.Application.Log.WriteEntry` 메서드를 사용하여 추적 정보를 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="ecda2-119">자세한 내용은 참조 [하는 방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-119">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-120">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-120">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-121">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.Log : string -&gt; Microsoft.VisualBasic.Logging.Log" Usage="new Microsoft.VisualBasic.Logging.Log name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ecda2-122">
            <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-122">
              <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="ecda2-123">
            <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> 속성 개체에 지정할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-123">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-124">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-124">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileLogWriter">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFileLogWriter As FileLogTraceListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::FileLogTraceListener ^ DefaultFileLogWriter { Microsoft::VisualBasic::Logging::FileLogTraceListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFileLogWriter : Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.FileLogTraceListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-125">
            <see langword="Log" /> 개체의 기반이 되는 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 개체 파일을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-125">Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecda2-126">
            <see langword="Log" /> 개체의 기반이 되는 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-126">Returns the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-127">현재 구성을 확인 하려면이 속성을 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-127">You can use this property to determine the current configuration of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object.</span></span>  
  
 <span data-ttu-id="ecda2-128">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-128">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-129">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-129">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-130">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-130">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-131">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-131">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblynewslot virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="abstract member InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit&#xA;override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="log.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-132">새 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 개체를 만들어 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-132">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-133">이 메서드가 만드는 새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>,으로 해당 이름을 설정 `FileLog`, 심각도 수준으로 메시지를 기록 하도록 구성 <xref:System.Diagnostics.SourceLevels.Information> 이상에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-133">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="ecda2-134">새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 개체 다음에 추가 된 <xref:System.Diagnostics.TraceSource.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-134">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecda2-135"><xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> 메서드를 호출 하는 경우는 <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> 속성이 구성 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-135">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="ecda2-136">응용 프로그램의 구성 파일에 추적 소스를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-136">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="TraceSource">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceSource TraceSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceSource TraceSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceSource As TraceSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceSource ^ TraceSource { System::Diagnostics::TraceSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceSource : System.Diagnostics.TraceSource" Usage="Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-137">
            <see langword="Log" /> 개체의 기반이 되는 <see cref="T:System.Diagnostics.TraceSource" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-137">Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecda2-138">
            <see langword="Log" /> 개체의 기반이 되는 <see cref="T:System.Diagnostics.TraceSource" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-138">Returns the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-139">현재 구성을 확인 하려면이 속성을 사용할 수 있습니다는 `Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-139">You can use this property to determine the current configuration of the `Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-140">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-140">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-141">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-141">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-142">고급 멤버;입니다. 선택 하지 않으면 IntelliSense에 표시 되지 않습니다는 **모든** 탭 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-142">This is an advanced member; it does not show in IntelliSense unless you select the **All** tab.</span></span>  
  
 <span data-ttu-id="ecda2-143">다음 표에서 관련 된 작업의 예는 `TraceSource` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-143">The following table lists an example of a task involving the `TraceSource` property.</span></span>  
  
|<span data-ttu-id="ecda2-144">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-144">To</span></span>|<span data-ttu-id="ecda2-145">보기</span><span class="sxs-lookup"><span data-stu-id="ecda2-145">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-146">각각에 대 한 정보는 `Log` 개체의 로그 수신기입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-146">Get information for each of the `Log` object's log listeners.</span></span>|[<span data-ttu-id="ecda2-147">문제 해결: 로그 수신기</span><span class="sxs-lookup"><span data-stu-id="ecda2-147">Troubleshooting: Log Listeners</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-148">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-148">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-149">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-149">Project type</span></span>|<span data-ttu-id="ecda2-150">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-150">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-151">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-151">Windows Application</span></span>|<span data-ttu-id="ecda2-152">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-152">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-153">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-153">Class Library</span></span>|<span data-ttu-id="ecda2-154">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-154">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-155">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-155">Console Application</span></span>|<span data-ttu-id="ecda2-156">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-156">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-157">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-157">Windows Control Library</span></span>|<span data-ttu-id="ecda2-158">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-158">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-159">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-159">Web Control Library</span></span>|<span data-ttu-id="ecda2-160">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-160">No</span></span>|  
|<span data-ttu-id="ecda2-161">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-161">Windows Service</span></span>|<span data-ttu-id="ecda2-162">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-162">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-163">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-163">Web Site</span></span>|<span data-ttu-id="ecda2-164">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-164">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSource" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-165">응용 프로그램의 로그 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-165">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="log.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ecda2-166">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-166">Required.</span>
          </span>
          <span data-ttu-id="ecda2-167">기록할 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-167">The message to log.</span>
          </span>
          <span data-ttu-id="ecda2-168">
            <c>message</c>가 <see langword="Nothing" />이면 빈 문자열이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-168">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-169">응용 프로그램의 로그 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-169">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-170">`WriteEntry` 메서드는 응용 프로그램의 이벤트 로그 수신기에 메시지를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-170">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-171">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-171">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-172">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-172">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-173">수신기에서 수신 자세한 로그는 `WriteEntry` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-173">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-174">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-174">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-175">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-175">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-176">사용 하지 않는 오버 로드에 대 한는 `id` 인수를는 `id` 에 기록 로그는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-176">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-177">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-177">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-178">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-178">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-179">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-179">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-180">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-180">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-181">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-181">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-182">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-182">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-183">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-183">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-184">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-184">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-185">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-185">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-186">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-186">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-187">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-187">9</span></span>|  
  
 <span data-ttu-id="ecda2-188">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteEntry` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-188">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="ecda2-189">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-189">To</span></span>|<span data-ttu-id="ecda2-190">참조</span><span class="sxs-lookup"><span data-stu-id="ecda2-190">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-191">응용 프로그램의 로그 수신기에 이벤트 정보 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-191">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="ecda2-192">방법: 로그 메시지 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-192">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="ecda2-193">위치를 확인 `Log` 정보 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-193">Determine where `Log` writes information</span></span>|[<span data-ttu-id="ecda2-194">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-194">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-195">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-195">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-196">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-196">Project type</span></span>|<span data-ttu-id="ecda2-197">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-197">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-198">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-198">Windows Application</span></span>|<span data-ttu-id="ecda2-199">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-199">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-200">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-200">Class Library</span></span>|<span data-ttu-id="ecda2-201">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-201">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-202">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-202">Console Application</span></span>|<span data-ttu-id="ecda2-203">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-203">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-204">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-204">Windows Control Library</span></span>|<span data-ttu-id="ecda2-205">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-205">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-206">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-206">Web Control Library</span></span>|<span data-ttu-id="ecda2-207">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-207">No</span></span>|  
|<span data-ttu-id="ecda2-208">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-208">Windows Service</span></span>|<span data-ttu-id="ecda2-209">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-209">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-210">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-210">Web Site</span></span>|<span data-ttu-id="ecda2-211">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-211">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-212">이 예제에서는 `My.Application.Log.WriteEntry` 메서드를 사용하여 추적 정보를 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-212">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="ecda2-213">자세한 내용은 참조 [하는 방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-213">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="ecda2-214">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-214">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-215">변경 `My.Application.Log.WriteEntry` 를 `My.Log.WriteEntry` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-215">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-216">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-216">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-217">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-217">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-218">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-218">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType -&gt; unit" Usage="log.WriteEntry (message, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ecda2-219">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-219">Required.</span>
          </span>
          <span data-ttu-id="ecda2-220">기록할 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-220">The message to log.</span>
          </span>
          <span data-ttu-id="ecda2-221">
            <c>message</c>가 <see langword="Nothing" />이면 빈 문자열이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-221">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="ecda2-222">메시지의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-222">The type of message.</span>
          </span>
          <span data-ttu-id="ecda2-223">기본적으로 <see langword="TraceEventType.Information" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-223">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-224">응용 프로그램의 로그 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-224">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-225">`WriteEntry` 메서드는 응용 프로그램의 이벤트 로그 수신기에 메시지를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-225">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-226">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-226">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-227">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-227">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-228">수신기에서 수신 자세한 로그는 `WriteEntry` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-228">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-229">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-229">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-230">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-230">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-231">사용 하지 않는 오버 로드에 대 한는 `id` 인수를는 `id` 에 기록 로그는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-231">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-232">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-232">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-233">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-233">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-234">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-234">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-235">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-235">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-236">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-236">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-237">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-237">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-238">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-238">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-239">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-239">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-240">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-240">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-241">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-241">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-242">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-242">9</span></span>|  
  
 <span data-ttu-id="ecda2-243">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteEntry` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-243">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="ecda2-244">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-244">To</span></span>|<span data-ttu-id="ecda2-245">참조</span><span class="sxs-lookup"><span data-stu-id="ecda2-245">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-246">응용 프로그램의 로그 수신기에 이벤트 정보 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-246">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="ecda2-247">방법: 로그 메시지 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-247">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="ecda2-248">위치를 확인 `Log` 정보 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-248">Determine where `Log` writes information</span></span>|[<span data-ttu-id="ecda2-249">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-249">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-250">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-250">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-251">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-251">Project type</span></span>|<span data-ttu-id="ecda2-252">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-252">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-253">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-253">Windows Application</span></span>|<span data-ttu-id="ecda2-254">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-254">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-255">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-255">Class Library</span></span>|<span data-ttu-id="ecda2-256">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-256">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-257">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-257">Console Application</span></span>|<span data-ttu-id="ecda2-258">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-258">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-259">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-259">Windows Control Library</span></span>|<span data-ttu-id="ecda2-260">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-260">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-261">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-261">Web Control Library</span></span>|<span data-ttu-id="ecda2-262">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-262">No</span></span>|  
|<span data-ttu-id="ecda2-263">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-263">Windows Service</span></span>|<span data-ttu-id="ecda2-264">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-264">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-265">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-265">Web Site</span></span>|<span data-ttu-id="ecda2-266">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-266">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-267">이 예제에서는 `My.Application.Log.WriteEntry` 메서드를 사용하여 추적 정보를 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-267">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="ecda2-268">자세한 내용은 참조 [하는 방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-268">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="ecda2-269">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-269">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-270">변경 `My.Application.Log.WriteEntry` 를 `My.Log.WriteEntry` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-270">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ecda2-271">메시지 형식이 <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-271">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-272">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-272">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-273">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-273">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-274">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-274">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="log.WriteEntry (message, severity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ecda2-275">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-275">Required.</span>
          </span>
          <span data-ttu-id="ecda2-276">기록할 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-276">The message to log.</span>
          </span>
          <span data-ttu-id="ecda2-277">
            <c>message</c>가 <see langword="Nothing" />이면 빈 문자열이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-277">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="ecda2-278">메시지의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-278">The type of message.</span>
          </span>
          <span data-ttu-id="ecda2-279">기본적으로 <see langword="TraceEventType.Information" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-279">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ecda2-280">일반적으로 상관 관계에 사용되는 메시지 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-280">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="ecda2-281">기본적으로 표에 설명된 대로 <c>entryType</c>과 관련이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-281">By default, related to <c>entryType</c> as described in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-282">응용 프로그램의 로그 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-282">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-283">`WriteEntry` 메서드는 응용 프로그램의 이벤트 로그 수신기에 메시지를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-283">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-284">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-284">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-285">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-285">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-286">수신기에서 수신 자세한 로그는 `WriteEntry` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-286">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-287">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-287">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-288">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-288">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-289">사용 하지 않는 오버 로드에 대 한는 `id` 인수를는 `id` 에 기록 로그는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-289">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-290">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-290">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-291">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-291">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-292">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-292">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-293">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-293">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-294">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-294">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-295">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-295">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-296">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-296">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-297">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-297">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-298">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-298">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-299">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-299">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-300">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-300">9</span></span>|  
  
 <span data-ttu-id="ecda2-301">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteEntry` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-301">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="ecda2-302">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-302">To</span></span>|<span data-ttu-id="ecda2-303">참조</span><span class="sxs-lookup"><span data-stu-id="ecda2-303">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-304">응용 프로그램의 로그 수신기에 이벤트 정보 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-304">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="ecda2-305">방법: 로그 메시지 쓰기</span><span class="sxs-lookup"><span data-stu-id="ecda2-305">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="ecda2-306">위치를 확인 `Log` 정보 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-306">Determine where `Log` writes information</span></span>|[<span data-ttu-id="ecda2-307">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-307">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-308">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-308">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-309">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-309">Project type</span></span>|<span data-ttu-id="ecda2-310">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-310">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-311">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-311">Windows Application</span></span>|<span data-ttu-id="ecda2-312">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-312">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-313">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-313">Class Library</span></span>|<span data-ttu-id="ecda2-314">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-314">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-315">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-315">Console Application</span></span>|<span data-ttu-id="ecda2-316">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-316">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-317">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-317">Windows Control Library</span></span>|<span data-ttu-id="ecda2-318">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-318">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-319">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-319">Web Control Library</span></span>|<span data-ttu-id="ecda2-320">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-320">No</span></span>|  
|<span data-ttu-id="ecda2-321">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-321">Windows Service</span></span>|<span data-ttu-id="ecda2-322">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-322">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-323">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-323">Web Site</span></span>|<span data-ttu-id="ecda2-324">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-324">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-325">이 예제에서는 `My.Application.Log.WriteEntry` 메서드를 사용하여 추적 정보를 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-325">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="ecda2-326">자세한 내용은 참조 [하는 방법: 로그 메시지 쓰기](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-326">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="ecda2-327">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-327">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-328">변경 `My.Application.Log.WriteEntry` 를 `My.Log.WriteEntry` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-328">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ecda2-329">메시지 형식이 <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-329">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-330">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-330">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-331">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-331">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-332">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-332">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecda2-333">응용 프로그램의 로그 수신기에 예외 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-333">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception -&gt; unit" Usage="log.WriteException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="ecda2-334">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-334">Required.</span>
          </span>
          <span data-ttu-id="ecda2-335">기록할 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-335">Exception to log.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-336">응용 프로그램의 로그 수신기에 예외 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-336">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-337">`WriteException` 메서드는 응용 프로그램의 이벤트 로그 수신기에 대 한 예외에 포함 된 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-337">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-338">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-338">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-339">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-339">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-340">수신기에서 수신 자세한 로그는 `WriteException` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-340">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-341">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-341">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-342">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-342">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-343">사용 하지 않는 오버 로드에 대 한는 `id` 인수를 로그에 기록 된 식별자는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-343">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-344">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-344">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-345">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-345">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-346">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-346">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-347">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-347">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-348">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-348">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-349">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-349">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-350">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-350">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-351">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-351">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-352">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-352">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-353">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-353">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-354">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-354">9</span></span>|  
  
 <span data-ttu-id="ecda2-355">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteException` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-355">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="ecda2-356">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-356">To</span></span>|<span data-ttu-id="ecda2-357">보기</span><span class="sxs-lookup"><span data-stu-id="ecda2-357">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-358">응용 프로그램의 이벤트 로그 수신기에 예외 정보를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-358">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="ecda2-359">방법: 예외 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-359">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="ecda2-360">`Log`가 정보를 쓰는 위치를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-360">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="ecda2-361">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-361">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-362">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-362">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-363">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-363">Project type</span></span>|<span data-ttu-id="ecda2-364">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-364">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-365">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-365">Windows Application</span></span>|<span data-ttu-id="ecda2-366">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-366">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-367">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-367">Class Library</span></span>|<span data-ttu-id="ecda2-368">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-368">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-369">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-369">Console Application</span></span>|<span data-ttu-id="ecda2-370">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-370">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-371">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-371">Windows Control Library</span></span>|<span data-ttu-id="ecda2-372">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-372">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-373">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-373">Web Control Library</span></span>|<span data-ttu-id="ecda2-374">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-374">No</span></span>|  
|<span data-ttu-id="ecda2-375">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-375">Windows Service</span></span>|<span data-ttu-id="ecda2-376">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-376">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-377">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-377">Web Site</span></span>|<span data-ttu-id="ecda2-378">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-378">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-379">사용 하는 방법을 보여 주는이 예제는 `My.Application.Log.WriteException` 예외를 기록 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-379">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="ecda2-380">`Dim` 및 `MsgBox` 줄의 주석 처리를 제거하여 <xref:System.NullReferenceException> 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-380">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="ecda2-381">자세한 내용은 참조 [하는 방법: 로그 예외](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-381">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="ecda2-382">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-382">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-383">변경 `My.Application.Log.WriteException` 를 `My.Log.WriteException` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-383">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecda2-384">
            <paramref name="ex" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-384">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-385">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-385">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-386">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-386">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-387">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-387">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="ecda2-388">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-388">Required.</span>
          </span>
          <span data-ttu-id="ecda2-389">기록할 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-389">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="ecda2-390">메시지의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-390">The type of message.</span>
          </span>
          <span data-ttu-id="ecda2-391">기본적으로 <see cref="F:System.Diagnostics.TraceEventType.Error" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-391">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="ecda2-392">메시지에 추가할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-392">String to append to the message.</span>
          </span>
          <span data-ttu-id="ecda2-393">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-393">By default, this is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-394">응용 프로그램의 로그 수신기에 예외 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-394">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-395">`WriteException` 메서드는 응용 프로그램의 이벤트 로그 수신기에 대 한 예외에 포함 된 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-395">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-396">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-396">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-397">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-397">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-398">수신기에서 수신 자세한 로그는 `WriteException` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-398">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-399">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-399">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-400">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-400">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-401">사용 하지 않는 오버 로드에 대 한는 `id` 인수를 로그에 기록 된 식별자는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-401">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-402">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-402">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-403">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-403">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-404">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-404">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-405">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-405">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-406">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-406">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-407">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-407">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-408">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-408">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-409">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-409">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-410">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-410">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-411">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-411">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-412">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-412">9</span></span>|  
  
 <span data-ttu-id="ecda2-413">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteException` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-413">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="ecda2-414">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-414">To</span></span>|<span data-ttu-id="ecda2-415">보기</span><span class="sxs-lookup"><span data-stu-id="ecda2-415">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-416">응용 프로그램의 이벤트 로그 수신기에 예외 정보를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-416">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="ecda2-417">방법: 예외 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-417">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="ecda2-418">`Log`가 정보를 쓰는 위치를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-418">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="ecda2-419">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-419">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-420">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-420">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-421">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-421">Project type</span></span>|<span data-ttu-id="ecda2-422">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-422">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-423">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-423">Windows Application</span></span>|<span data-ttu-id="ecda2-424">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-424">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-425">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-425">Class Library</span></span>|<span data-ttu-id="ecda2-426">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-426">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-427">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-427">Console Application</span></span>|<span data-ttu-id="ecda2-428">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-428">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-429">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-429">Windows Control Library</span></span>|<span data-ttu-id="ecda2-430">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-430">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-431">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-431">Web Control Library</span></span>|<span data-ttu-id="ecda2-432">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-432">No</span></span>|  
|<span data-ttu-id="ecda2-433">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-433">Windows Service</span></span>|<span data-ttu-id="ecda2-434">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-434">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-435">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-435">Web Site</span></span>|<span data-ttu-id="ecda2-436">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-436">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-437">사용 하는 방법을 보여 주는이 예제는 `My.Application.Log.WriteException` 예외를 기록 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-437">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="ecda2-438">`Dim` 및 `MsgBox` 줄의 주석 처리를 제거하여 <xref:System.NullReferenceException> 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-438">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="ecda2-439">자세한 내용은 참조 [하는 방법: 로그 예외](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-439">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="ecda2-440">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-440">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-441">변경 `My.Application.Log.WriteException` 를 `My.Log.WriteException` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-441">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecda2-442">
            <paramref name="ex" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-442">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ecda2-443">메시지 형식이 <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-443">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-444">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-444">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-445">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-445">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-446">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-446">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string * int -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="ecda2-447">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-447">Required.</span>
          </span>
          <span data-ttu-id="ecda2-448">기록할 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-448">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="ecda2-449">메시지의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-449">The type of message.</span>
          </span>
          <span data-ttu-id="ecda2-450">기본적으로 <see cref="F:System.Diagnostics.TraceEventType.Error" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-450">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="ecda2-451">메시지에 추가할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-451">String to append to the message.</span>
          </span>
          <span data-ttu-id="ecda2-452">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-452">By default, this is an empty string.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ecda2-453">일반적으로 상관 관계에 사용되는 메시지 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-453">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="ecda2-454">기본적으로 설명 부분에 있는 표에 설명된 대로 <c>entryType</c>과 관련이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-454">By default, related to <c>entryType</c> as described in the table in the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecda2-455">응용 프로그램의 로그 수신기에 예외 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-455">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecda2-456">`WriteException` 메서드는 응용 프로그램의 이벤트 로그 수신기에 대 한 예외에 포함 된 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-456">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="ecda2-457">클라이언트 응용 프로그램에서의 `Log` 개체를 통해 사용할 수는 `My.Application.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-457">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="ecda2-458">웹 응용 프로그램에는 `Log` 개체를 통해 사용할 수는 `My.Log` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-458">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="ecda2-459">수신기에서 수신 자세한 로그는 `WriteException` 메서드의 메시지 참조 [연습: 결정 위치 My.Application.Log 기록 정보](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-459">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="ecda2-460">기본 로그 수신기를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-460">You can change default log listeners.</span></span> <span data-ttu-id="ecda2-461">자세한 내용은 [응용 프로그램 로그 작업](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ecda2-461">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="ecda2-462">사용 하지 않는 오버 로드에 대 한는 `id` 인수를 로그에 기록 된 식별자는 다음 표에 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-462">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="ecda2-463">기본값 `id`</span><span class="sxs-lookup"><span data-stu-id="ecda2-463">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="ecda2-464">0</span><span class="sxs-lookup"><span data-stu-id="ecda2-464">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="ecda2-465">1</span><span class="sxs-lookup"><span data-stu-id="ecda2-465">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="ecda2-466">2</span><span class="sxs-lookup"><span data-stu-id="ecda2-466">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="ecda2-467">3</span><span class="sxs-lookup"><span data-stu-id="ecda2-467">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="ecda2-468">4</span><span class="sxs-lookup"><span data-stu-id="ecda2-468">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="ecda2-469">5</span><span class="sxs-lookup"><span data-stu-id="ecda2-469">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="ecda2-470">6</span><span class="sxs-lookup"><span data-stu-id="ecda2-470">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="ecda2-471">7</span><span class="sxs-lookup"><span data-stu-id="ecda2-471">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="ecda2-472">8</span><span class="sxs-lookup"><span data-stu-id="ecda2-472">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="ecda2-473">10</span><span class="sxs-lookup"><span data-stu-id="ecda2-473">9</span></span>|  
  
 <span data-ttu-id="ecda2-474">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `WriteException` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-474">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="ecda2-475">대상</span><span class="sxs-lookup"><span data-stu-id="ecda2-475">To</span></span>|<span data-ttu-id="ecda2-476">보기</span><span class="sxs-lookup"><span data-stu-id="ecda2-476">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="ecda2-477">응용 프로그램의 이벤트 로그 수신기에 예외 정보를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-477">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="ecda2-478">방법: 예외 기록</span><span class="sxs-lookup"><span data-stu-id="ecda2-478">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="ecda2-479">`Log`가 정보를 쓰는 위치를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-479">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="ecda2-480">연습: My.Application.Log가 정보를 기록하는 위치 확인</span><span class="sxs-lookup"><span data-stu-id="ecda2-480">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="ecda2-481">프로젝트 형식에 따라 가용성</span><span class="sxs-lookup"><span data-stu-id="ecda2-481">Availability by Project Type</span></span>  
  
|<span data-ttu-id="ecda2-482">프로젝트 형식</span><span class="sxs-lookup"><span data-stu-id="ecda2-482">Project type</span></span>|<span data-ttu-id="ecda2-483">사용 가능</span><span class="sxs-lookup"><span data-stu-id="ecda2-483">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="ecda2-484">Windows 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-484">Windows Application</span></span>|<span data-ttu-id="ecda2-485">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-485">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-486">클래스 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-486">Class Library</span></span>|<span data-ttu-id="ecda2-487">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-487">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-488">콘솔 응용 프로그램</span><span class="sxs-lookup"><span data-stu-id="ecda2-488">Console Application</span></span>|<span data-ttu-id="ecda2-489">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-489">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-490">Windows 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-490">Windows Control Library</span></span>|<span data-ttu-id="ecda2-491">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-491">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-492">웹 컨트롤 라이브러리</span><span class="sxs-lookup"><span data-stu-id="ecda2-492">Web Control Library</span></span>|<span data-ttu-id="ecda2-493">아니요</span><span class="sxs-lookup"><span data-stu-id="ecda2-493">No</span></span>|  
|<span data-ttu-id="ecda2-494">Windows 서비스</span><span class="sxs-lookup"><span data-stu-id="ecda2-494">Windows Service</span></span>|<span data-ttu-id="ecda2-495">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-495">**Yes**</span></span>|  
|<span data-ttu-id="ecda2-496">웹 사이트</span><span class="sxs-lookup"><span data-stu-id="ecda2-496">Web Site</span></span>|<span data-ttu-id="ecda2-497">**예**</span><span class="sxs-lookup"><span data-stu-id="ecda2-497">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecda2-498">사용 하는 방법을 보여 주는이 예제는 `My.Application.Log.WriteException` 예외를 기록 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="ecda2-498">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="ecda2-499">`Dim` 및 `MsgBox` 줄의 주석 처리를 제거하여 <xref:System.NullReferenceException> 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-499">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="ecda2-500">자세한 내용은 참조 [하는 방법: 로그 예외](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-500">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="ecda2-501">이 코드 예제에서는 클라이언트 응용 프로그램 내 에서만 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-501">This code example can run only within a client application.</span></span> <span data-ttu-id="ecda2-502">변경 `My.Application.Log.WriteException` 를 `My.Log.WriteException` 웹 응용 프로그램에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ecda2-502">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecda2-503">
            <paramref name="ex" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-503">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ecda2-504">메시지 형식이 <see cref="T:System.Diagnostics.TraceEventType" /> 열거형 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-504">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ecda2-505">부분 신뢰 코드에서 메서드를 호출하지만 완전 신뢰가 필요한 이벤트 로그 수신기에 기록하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-505">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="ecda2-506">파일 및 폴더에 액세스하는 기능을 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-506">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="ecda2-507">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecda2-507">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
  </Members>
</Type>