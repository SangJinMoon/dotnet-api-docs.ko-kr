<Type Name="RegistrationHelper" FullName="System.EnterpriseServices.RegistrationHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc2c66414ce15c4074602b44f093969e6f93ca23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistrationHelper : MarshalByRefObject, System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrationHelper extends System.MarshalByRefObject implements class System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.RegistrationHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrationHelper&#xA;Inherits MarshalByRefObject&#xA;Implements IRegistrationHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationHelper sealed : MarshalByRefObject, System::EnterpriseServices::IRegistrationHelper" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRegistrationHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("89a86e7b-c229-4008-9baa-2f5c8411d7e0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="af884-101">COM+ 카탈로그에 어셈블리를 설치하고 구성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af884-101">Installs and configures assemblies in the COM+ catalog.</span>
      </span>
      <span data-ttu-id="af884-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af884-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af884-103"><xref:System.EnterpriseServices.RegistrationHelper> .NET 서비스 설치 도구 (Regsvcs.exe)와 처음 활성화 될 때 수행 되는 자동 등록 단계에서 사용 되는 <xref:System.EnterpriseServices.ServicedComponent>합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-103"><xref:System.EnterpriseServices.RegistrationHelper> is used by both the .NET Services Installation Tool (Regsvcs.exe) and the automatic registration steps that are performed on first activation of a <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af884-104">
            <see cref="T:System.EnterpriseServices.RegistrationHelper" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-104">Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationHelper" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af884-105">COM+ 카탈로그에 사용할 수 있는 런타임 구성 요소를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-105">Provides the run-time components available to the COM+ catalog.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string assembly, string&amp; application, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="tlb" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="af884-106">설치할 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-106">The file name of the assembly to install.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="af884-107">어셈블리를 설치할 COM+ 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-107">The name of the COM+ application to install into.</span>
          </span>
          <span data-ttu-id="af884-108">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-108">This parameter can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="af884-109">매개 변수가 <see langword="null" />이고 어셈블리에 <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />가 포함되어 있으면 특성이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-109">If the parameter is <see langword="null" /> and the assembly contains a <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, then the attribute is used.</span>
          </span>
          <span data-ttu-id="af884-110">그렇지 않은 경우에는 응용 프로그램의 이름이 어셈블리 이름을 기반으로 생성되고 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-110">Otherwise, the name of the application is generated based on the name of the assembly, then is returned.</span>
          </span>
        </param>
        <param name="tlb">
          <span data-ttu-id="af884-111">출력 형식 라이브러리 내보내기 파일(Tlbexp.exe)의 이름이거나 등록 도우미가 해당 이름을 생성하는 경우 <see langword="null" />을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-111">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains <see langword="null" /> if the registration helper is expected to generate the name.</span>
          </span>
          <span data-ttu-id="af884-112">호출이 완료되면 사용된 실제 이름이 매개 변수에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-112">The actual name used is placed in the parameter on call completion.</span>
          </span>
        </param>
        <param name="installFlags">
          <span data-ttu-id="af884-113">
            <see cref="T:System.EnterpriseServices.InstallationFlags" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-113">A bitwise combination of the <see cref="T:System.EnterpriseServices.InstallationFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-114">COM+ 응용 프로그램에 명명된 어셈블리를 설치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-114">Installs the named assembly in a COM+ application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af884-115"><xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> 다음 단계를 수행 합니다: 등록, 생성 형식 라이브러리, 형식 라이브러리의 등록, 지정 된 응용 프로그램 및 형식 라이브러리에 포함 된 구성 요소 구성에서 형식 라이브러리를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-115"><xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> performs the following steps: registration, generation of a type library, registration of the type library, installation of the type library under the specified application, and configuration of the components contained in the type library.</span></span>  
  
 <span data-ttu-id="af884-116">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-116">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af884-117">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 `InstalAssembly` COM + 응용 프로그램에 명명 된 어셈블리를 설치 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="af884-117">The following code example shows how to use the `InstalAssembly` method to install a named assembly in a COM+ application.</span></span>  
  
 [!code-cpp[EnterpriseServices Registration#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#1)]
 [!code-csharp[EnterpriseServices Registration#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#1)]
 [!code-vb[EnterpriseServices Registration#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">
          <span data-ttu-id="af884-118">입력 어셈블리에 강력한 이름이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-118">The input assembly does not have a strong name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="af884-119">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-119">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="af884-120">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-120">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="af884-121">레지스트리에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-121">for the ability to access the registry.</span>
          </span>
          <span data-ttu-id="af884-122">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-122">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssembly(string assembly, string&amp; application, string partition, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, partition As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ partition, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="tlb" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="af884-123">설치할 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-123">The file name of the assembly to install.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="af884-124">어셈블리를 설치할 COM+ 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-124">The name of the COM+ application to install into.</span>
          </span>
          <span data-ttu-id="af884-125">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-125">This parameter can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="af884-126">매개 변수가 <see langword="null" />이고 어셈블리에 <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />가 포함되어 있으면 특성이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-126">If the parameter is <see langword="null" /> and the assembly contains a <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, then the attribute is used.</span>
          </span>
          <span data-ttu-id="af884-127">그렇지 않은 경우에는 응용 프로그램의 이름이 어셈블리 이름을 기반으로 생성되고 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-127">Otherwise, the name of the application is generated based on the name of the assembly, then is returned.</span>
          </span>
        </param>
        <param name="partition">
          <span data-ttu-id="af884-128">파티션의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-128">The name of the partition.</span>
          </span>
          <span data-ttu-id="af884-129">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-129">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="tlb">
          <span data-ttu-id="af884-130">출력 형식 라이브러리 내보내기 파일(Tlbexp.exe)의 이름이거나 등록 도우미가 해당 이름을 생성하는 경우 <see langword="null" />을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-130">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains <see langword="null" /> if the registration helper is expected to generate the name.</span>
          </span>
          <span data-ttu-id="af884-131">호출이 완료되면 사용된 실제 이름이 매개 변수에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-131">The actual name used is placed in the parameter on call completion.</span>
          </span>
        </param>
        <param name="installFlags">
          <span data-ttu-id="af884-132">
            <see cref="T:System.EnterpriseServices.InstallationFlags" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-132">A bitwise combination of the <see cref="T:System.EnterpriseServices.InstallationFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-133">COM+ 응용 프로그램에 명명된 어셈블리를 설치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-133">Installs the named assembly in a COM+ application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af884-134"><xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> 다음 단계를 수행 합니다: 등록, 생성 형식 라이브러리, 형식 라이브러리의 등록, 지정 된 응용 프로그램 및 형식 라이브러리에 포함 된 구성 요소 구성에서 형식 라이브러리를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-134"><xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> performs the following steps: registration, generation of a type library, registration of the type library, installation of the type library under the specified application, and configuration of the components contained in the type library.</span></span>  
  
 <span data-ttu-id="af884-135">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-135">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">
          <span data-ttu-id="af884-136">입력 어셈블리에 강력한 이름이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-136">The input assembly does not have a strong name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="af884-137">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-137">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="af884-138">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-138">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="af884-139">레지스트리에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-139">for the ability to access the registry.</span>
          </span>
          <span data-ttu-id="af884-140">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-140">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <span data-ttu-id="af884-141">설치할 어셈블리를 식별하는 <see cref="T:System.EnterpriseServices.RegistrationConfig" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-141">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifying the assembly to install.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-142">COM+ 응용 프로그램에 명명된 어셈블리를 설치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-142">Installs the named assembly in a COM+ application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af884-143">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="af884-143">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af884-144">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 `InstalAssemblyFromConfig` COM + 응용 프로그램에 명명 된 어셈블리를 설치 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="af884-144">The following code example shows how to use the `InstalAssemblyFromConfig` method to install a named assembly in a COM+ application.</span></span>  
  
 [!code-cpp[EnterpriseServices Registration#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#2)]
 [!code-csharp[EnterpriseServices Registration#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#2)]
 [!code-vb[EnterpriseServices Registration#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af884-145">이전에 <see cref="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />를 사용하여 등록한 어셈블리를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-145">Uninstalls an assembly previous registered with <see cref="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallAssembly(string assembly, string application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UninstallAssembly(System::String ^ assembly, System::String ^ application);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="af884-146">제거할 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-146">The file name of the assembly to uninstall.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="af884-147">이 이름이 <see langword="null" />이 아닌 경우 어셈블리의 구성 요소를 포함하는 응용 프로그램의 이름이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-147">If this name is not <see langword="null" />, it is the name of the application that contains the components in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-148">지정된 응용 프로그램에서 어셈블리를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-148">Uninstalls the assembly from the given application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">
          <span data-ttu-id="af884-149">입력 어셈블리에 강력한 이름이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-149">The input assembly does not have a strong name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="af884-150">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-150">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="af884-151">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-151">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application, string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssembly(string assembly, string application, string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String, partition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssembly(System::String ^ assembly, System::String ^ application, System::String ^ partition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="af884-152">제거할 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-152">The file name of the assembly to uninstall.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="af884-153">이 이름이 <see langword="null" />이 아닌 경우 어셈블리의 구성 요소를 포함하는 응용 프로그램의 이름이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-153">If this name is not <see langword="null" />, it is the name of the application that contains the components in the assembly.</span>
          </span>
        </param>
        <param name="partition">
          <span data-ttu-id="af884-154">파티션의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-154">The name of the partition.</span>
          </span>
          <span data-ttu-id="af884-155">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-155">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-156">지정된 응용 프로그램에서 어셈블리를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-156">Uninstalls the assembly from the given application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">
          <span data-ttu-id="af884-157">입력 어셈블리에 강력한 이름이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-157">The input assembly does not have a strong name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="af884-158">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-158">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="af884-159">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-159">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <span data-ttu-id="af884-160">제거할 어셈블리를 식별하는 <see cref="T:System.EnterpriseServices.RegistrationConfig" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-160">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifying the assembly to uninstall.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af884-161">지정된 응용 프로그램에서 어셈블리를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af884-161">Uninstalls the assembly from the given application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>