<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81b5a3e89e9b3612a1c3455764f65be3243d8145" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48600205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2de31-101">
        <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 및 <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" />로 식별되는 코드 세그먼트가 자체의 컨텍스트에서 실행되고 해당 컨텍스트 내에서 만들어진 개체에 대해 호출되는 메서드처럼 작동할 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de31-101">Allows a code segment identified by <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> and <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> to run in its own context and behave as if it were a method that is called on an object created within the context.</span>
      </span>
      <span data-ttu-id="2de31-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de31-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de31-103">합니다 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 고 <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> 메서드가 COM + 서비스 사용할 수 있는 코드 감싸기 쌍에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-103">The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services.</span></span> <span data-ttu-id="2de31-104">에 대 한 호출 사이 있는 코드 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 고 <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> 자체 컨텍스트에서 실행 되며 컨텍스트 내에서 만든 개체에서 호출 되는 메서드인 것 처럼 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-104">Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context.</span></span> <span data-ttu-id="2de31-105">합니다 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 고 <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> 쌍 중첩 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-105">The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested.</span></span> <span data-ttu-id="2de31-106">호출 쌍은 균형이 조정 되도록 사용자 있도록를 호출할 때마다 <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> 일치에 대 한 이전 호출 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-106">It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <span data-ttu-id="2de31-107">포함된 코드 내에서 사용될 서비스의 구성 정보를 포함하는 <see cref="T:System.EnterpriseServices.ServiceConfig" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-107">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used within the enclosed code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de31-108">
            <see cref="T:System.EnterpriseServices.ServiceConfig" /> 개체에서 지정한 컨텍스트를 만든 다음 현재 컨텍스트가 되도록 컨텍스트 스택에 넣습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-108">Creates the context specified by the <see cref="T:System.EnterpriseServices.ServiceConfig" /> object and pushes it onto the context stack to become the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de31-109"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 처음에 지정 된 대로 구성 컨텍스트를 만듭니다.는 <xref:System.EnterpriseServices.ServiceConfig> 로 전달 되는 개체는 `cfg` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-109"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> first creates a context configured as specified by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed as the `cfg` parameter.</span></span> <span data-ttu-id="2de31-110">클라이언트와 서버 양쪽 정책은 다음 메서드 호출이 발생 하는 경우에 따라 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-110">Policies on both the client and server sides are then triggered as if a method call had occurred.</span></span> <span data-ttu-id="2de31-111">새 컨텍스트가 컨텍스트 스택에 밀어넣습니다 및 현재 컨텍스트가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-111">The new context is then pushed onto a context stack and becomes the current context.</span></span> <span data-ttu-id="2de31-112">효율적으로 디자인 마샬링이 없는 스레드 관련 되어 있으므로 사용 하 고 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 및 <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> 포함을 해당 하는 메서드 호출에 비해 오버 헤드가 상당히 줄어듭니다.</span><span class="sxs-lookup"><span data-stu-id="2de31-112">Because of their efficient design and because no thread marshaling is involved, using <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> involves significantly reduced overhead compared to an equivalent method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2de31-113">
            <see cref="T:System.EnterpriseServices.ServiceConfig" />이 현재 플랫폼에서 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-113">
              <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2de31-114">메서드 호출에서 값을 반환하는 것처럼 서버측 정책과 클라이언트측 정책을 순서대로 트리거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-114">Triggers the server and then the client side policies as if a method call were returning.</span>
          </span>
          <span data-ttu-id="2de31-115">그런 다음 현재 컨텍스트가 컨텍스트 스택에서 제거되고, <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />가 호출될 때 실행 중이었던 컨텍스트가 현재 컨텍스트가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-115">The current context is then popped from the context stack, and the context that was running when <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> was called becomes the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de31-116">
            <see cref="T:System.EnterpriseServices.TransactionStatus" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-116">One of the <see cref="T:System.EnterpriseServices.TransactionStatus" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2de31-117">
            <see cref="T:System.EnterpriseServices.ServiceConfig" />이 현재 플랫폼에서 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de31-117">
              <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>