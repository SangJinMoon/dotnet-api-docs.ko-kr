<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceDomain.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5b9fb677db63a2b92f36b41c91ebb70cd4c0c3f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5b9fb677db63a2b92f36b41c91ebb70cd4c0c3f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>Allows a code segment identified by <ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /&gt;</ph> to run in its own context and behave as if it were a method that is called on an object created within the context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /&gt;</ph>로 식별되는 코드 세그먼트가 자체의 컨텍스트에서 실행되고 해당 컨텍스트 내에서 만들어진 개체에 대해 호출되는 메서드처럼 작동할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>The <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> methods are used in pairs to surround code that can then use COM+ services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> 그런 다음 COM + 서비스를 사용할 수 있는 코드를 묶어 쌍 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>Code that is enclosed between calls to <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> runs in its own context and behaves as if it were a method that is called on an object created within the context.</source>
          <target state="translated">에 대 한 호출 사이 있는 코드 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> 자체 컨텍스트에서 실행 되며 컨텍스트 내에서 만든 개체에서 호출 되는 메서드인 것 처럼 동작 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>The <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> pairs can be nested.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> 쌍 중첩 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServiceDomain">
          <source>It is up to the user to make sure that pairs of calls are balanced so that every call to <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> matches a previous call to <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph>.</source>
          <target state="translated">따라서 호출 쌍이 맞는지 되도록 하려면 사용자가 있도록를 호출할 때마다 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> 일치에 대 한 이전 호출 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph> that contains the configuration information for the services to be used within the enclosed code.</source>
          <target state="translated">포함된 코드 내에서 사용될 서비스의 구성 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source>Creates the context specified by the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph> object and pushes it onto the context stack to become the current context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph> 개체에서 지정한 컨텍스트를 만든 다음 현재 컨텍스트가 되도록 컨텍스트 스택에 넣습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> first creates a context configured as specified by the <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceConfig&gt;</ph> object that is passed as the <ph id="ph3">`cfg`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> 에 지정 된 대로 구성 된 컨텍스트는 먼저 만듭니다는 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceConfig&gt;</ph> 변수로 전달 되는 개체는 <ph id="ph3">`cfg`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source>Policies on both the client and server sides are then triggered as if a method call had occurred.</source>
          <target state="translated">정책 양쪽 모두 클라이언트와 서버 모두에 다음 메서드 호출이 발생 하는 경우 트리거됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source>The new context is then pushed onto a context stack and becomes the current context.</source>
          <target state="translated">새 컨텍스트 스택에 밀어넣습니다 컨텍스트와 현재 컨텍스트가 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source>Because of their efficient design and because no thread marshaling is involved, using <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> involves significantly reduced overhead compared to an equivalent method call.</source>
          <target state="translated">효율적으로 디자인 및 사용 하 여 관련 되어 마샬링이 없는 스레드 때문에 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt;</ph> 포함 됩니다는 해당 하는 메서드 호출에 비해 오버 헤드가 크게 감소 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
          <source><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph> is not supported on the current platform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph>이 현재 플랫폼에서 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Leave">
          <source>Triggers the server and then the client side policies as if a method call were returning.</source>
          <target state="translated">메서드 호출에서 값을 반환하는 것처럼 서버측 정책과 클라이언트측 정책을 순서대로 트리거합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Leave">
          <source>The current context is then popped from the context stack, and the context that was running when <ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /&gt;</ph> was called becomes the current context.</source>
          <target state="translated">그런 다음 현재 컨텍스트가 컨텍스트 스택에서 제거되고, <ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /&gt;</ph>가 호출될 때 실행 중이었던 컨텍스트가 현재 컨텍스트가 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Leave">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.TransactionStatus" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.TransactionStatus" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServiceDomain.Leave">
          <source><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph> is not supported on the current platform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServiceConfig" /&gt;</ph>이 현재 플랫폼에서 지원되지 않는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>