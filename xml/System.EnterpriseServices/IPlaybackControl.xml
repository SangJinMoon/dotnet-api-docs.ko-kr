<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a2fa35f21d501233854b1e609716c45f5c69687" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>메시지 큐 배달 매커니즘의 서버측 재생 오류 및 클라이언트측 실패를 예외적으로 처리하는 데 사용되는 큐 사용 구성 요소의 함수입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 COM + 카탈로그에 구성 요소 둘 다 구현에 대해 정의 된 예외 클래스 <xref:System.EnterpriseServices.IPlaybackControl> 및 원본 클래스에 대 한 인터페이스입니다. 원본 클래스 인터페이스의 메서드 구현은 예외 클래스 자체의 실패 한 메서드에 대 한 처리를 수행 하는 데 사용 됩니다. 후 호출 됩니다 <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> 또는 <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> 원래 호출 된 메서드가 대 한 예외를 처리 합니다.  
  
 큐 구성 요소 플레이어의 메서드를 호출 <xref:System.EnterpriseServices.IPlaybackControl> 메시지가 최종 채로 두거나 배달 못 한 편지 큐에 배치 하는 예외 처리기 개체를 알릴 수 있습니다. 다음 구성 요소 큐 플레이어는 원래 메서드 호출에서 실패 한 예외 처리기 개체의 동일한 메서드를 호출 합니다. 예외 처리기 개체 문제 진단 정보를 수집 하거나 개체 또는 클라이언트의 문제를 알리는 메시지를 생성 하 여는 대신을 예를 들어 구현할 수 있습니다. 응용 프로그램을 구현 하지 않는 경우 <xref:System.EnterpriseServices.IPlaybackControl>, 포이즌 메시지가 큐에 대기 구성 요소 플레이어 소모 모든 다시 시도 하는 경우 마지막 채로 두거나 배달 못 한 편지 큐에 배치 됩니다.  
  
 포이즌 메시지는 처리할 수 없는 몇 가지 이유로 아마도 서버 또는 큐 시스템에 문제가 있어서 메시지입니다. 트랜잭션이 롤백되고 포이즌 메시지 큐의 맨 위로 이동 합니다. 메시지 큐에서 제거 다시, 동일한 조건을 발생 합니다. 이 메시지는 문제를 해결 하려면 이루어진다는 것 때까지 무한정 계속할 수 있습니다. 대기 중인 구성 요소 서비스는 일련의 재시도 사용 하 여 포이즌 메시지를 처리 합니다. 실패 한 여러 차례 다시 시도한 후 메시지가 최종 도착 큐로 이동 합니다. 포이즌 메시지 큐에 대기 구성 요소 메시지 Mover 도구를 사용 하 여 수동으로 이동 될 때까지 평평 큐에 남아 있습니다.  
  
 포이즌 메시지 상황 해결할 수도 있습니다를 프로그래밍 방식으로 사용 하 여는 <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> 메서드는 지연된 된 활성화를 다시 재생 하려는 모든 시도가 실패 한 서버 쪽 구성 요소 작성자에 게 알립니다.  
  
 포이즌 메시지를 발견 한 경우에 문제의 근본 원인을 신속 하 게 해결할 수 있습니다. 예를 들어 서버에서 몇 가지 이유로 오프 라인 상태를 다시 온라인으로 서버를 가져올 수 있습니다. 이 문제를 신속 하 게 해결할 수 없는 경우 트랜잭션이 발생 하지 않았던 요청자에 게 알리는 다른 트랜잭션을 자동으로 생성할 수 있습니다. 요청자는 이미 커밋된 트랜잭션 효과 취소 하는 보정 트랜잭션을 확인 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>메시지를 서버에 배달하기 위한 모든 메시지 큐의 시도가 거부되었음을 클라이언트측 예외 처리 구성 요소에 알리고 클라이언트측 Xact 배달 못 한 큐로 메시지를 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션 배달 못 한 편지 큐에 메시지가 도착, COM + 하려고이 알림을 배달 서버 클래스와 관련 클라이언트 쪽 예외 처리기를 호출 합니다. 첫 번째 호출 하 여 작업을 수행 <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, 예외 처리기 개체의 예외 처리 버전의 실패 한 메서드를 호출 합니다. 그러면이 예외 메서드 실패를 기록 하 여 메일 메시지 관리자를 보내거나 (이전 트랜잭션의 결과 반대로) 클라이언트 쪽 보정 작업을 수행 하는 같은 예외 동작을를 수행할 수 있습니다. Exception 메서드 실패할 경우 메시지는 트랜잭션 배달 못 한 편지 큐에 그대로 사용 합니다.  
  
 트랜잭션 배달 못 한 편지 큐는 Microsoft Message Queue (MSMQ) 탐색기에서 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서버에 대한 지연된 활성화를 재생하려는 모든 시도가 실패하여 메시지가 마지막 휴면 큐로 이동하려고 한다는 것을 서버측 예외 클래스 구현에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션 배달 못 한 편지 큐에 메시지가 도착, COM + 하려고 클래스와 관련 된 서버가이 알림을 배달 하는 서버 쪽 예외 처리기를 호출 합니다. 첫 번째 호출 하 여 작업을 수행 <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, 예외 처리 버전의 예외 처리기 개체에서 실패 한 메서드를 호출 합니다. 그러면이 예외 메서드 실패를 기록 하 여 메일 메시지 관리자를 보내거나 (이전 트랜잭션의 결과 반대로) 클라이언트 쪽 보정 작업을 수행 하는 같은 예외 동작을를 수행할 수 있습니다. 서버 개체는이 거래를 성공적으로 완료 하기 위한 모든 작업을 확인 해야 합니다. 그렇지 않으면 메시지를 다시 처리 하려면 수동 개입이 필요 합니다. Exception 메서드 실패할 경우 메시지가 최종 도착 큐로 이동 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>