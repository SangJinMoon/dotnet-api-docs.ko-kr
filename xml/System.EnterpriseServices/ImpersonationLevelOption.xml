<Type Name="ImpersonationLevelOption" FullName="System.EnterpriseServices.ImpersonationLevelOption">
  <TypeSignature Language="C#" Value="public enum ImpersonationLevelOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ImpersonationLevelOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ImpersonationLevelOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum ImpersonationLevelOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class ImpersonationLevelOption" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="ed254-101">서버 응용 프로그램의 대상을 호출할 때 허용되는 가장 수준을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-101">Specifies the level of impersonation allowed when calling targets of a server application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed254-102">가장에 성공 하면 클라이언트는 서버를를 어느 정도 클라이언트를 가장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-102">If impersonation succeeds, the client lets the server impersonate the client to some degree.</span></span> <span data-ttu-id="ed254-103">다양 한 수준의 가장 가장 수준 이라고 합니다. 하 고 클라이언트를 가장 하는 경우 얼마나 많은 기관 서버에 제공 되어 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-103">The varying degrees of impersonation are called impersonation levels, and they indicate how much authority is given to the server when it is impersonating the client.</span></span>  
  
 <span data-ttu-id="ed254-104">유효한 설정은 다음과 같습니다 (inproc) 라이브러리 응용 프로그램 `Default` 또는 없음.</span><span class="sxs-lookup"><span data-stu-id="ed254-104">For library (inproc) applications, the only valid settings are `Default` or none specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed254-105">다음 코드 예제와 함께에서이 열거형을 사용 하 여 <xref:System.EnterpriseServices.ApplicationAccessControlAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-105">The following code example demonstrates the use of this enumeration in conjunction with the <xref:System.EnterpriseServices.ApplicationAccessControlAttribute> attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Security#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Security/CPP/employeeinformation.cpp#2)]
 [!code-csharp[EnterpriseServices_Security#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Security/CS/employeeinformation.cs#2)]
 [!code-vb[EnterpriseServices_Security#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Security/VB/employeeinformation.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Anonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.ImpersonationLevelOption.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ed254-106">서버에 대해 클라이언트는 익명입니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-106">The client is anonymous to the server.</span></span> <span data-ttu-id="ed254-107">서버 프로세스는 클라이언트를 가장할 수 있지만 클라이언트에 대한 정보가 가장 토큰에 포함되지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-107">The server process can impersonate the client, but the impersonation token does not contain any information about the client.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.ImpersonationLevelOption.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ed254-108">지정된 인증 서비스의 기본 가장 수준을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-108">Uses the default impersonation level for the specified authentication service.</span></span> <span data-ttu-id="ed254-109">COM+의 경우 <see langword="DefaultImpersonationLevel" /> 컬렉션의 <see langword="LocalComputer" /> 속성에서 이 설정을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-109">In COM+, this setting is provided by the <see langword="DefaultImpersonationLevel" /> property in the <see langword="LocalComputer" /> collection.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="Delegate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Delegate = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.ImpersonationLevelOption.Delegate" />
      <MemberSignature Language="VB.NET" Value="Delegate" />
      <MemberSignature Language="C++ CLI" Value="Delegate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ed254-110">가장 강력한 가장 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-110">The most powerful impersonation level.</span></span> <span data-ttu-id="ed254-111">이 수준을 선택하면 로컬인지 원격인지 여부에 관계 없이 서버는 클라이언트의 보안 컨텍스트를 가장하여 클라이언트 역할을 대신 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-111">When this level is selected, the server (whether local or remote) can impersonate the client's security context while acting on behalf of the client</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Identify">
      <MemberSignature Language="C#" Value="Identify" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Identify = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.ImpersonationLevelOption.Identify" />
      <MemberSignature Language="VB.NET" Value="Identify" />
      <MemberSignature Language="C++ CLI" Value="Identify" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ed254-112">시스템 기본 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-112">The system default level.</span></span> <span data-ttu-id="ed254-113">서버가 클라이언트의 ID를 가져오고 클라이언트를 가장하여 ACL 검사를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-113">The server can obtain the client's identity, and the server can impersonate the client to do ACL checks.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="Impersonate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Impersonate = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.ImpersonationLevelOption.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Impersonate" />
      <MemberSignature Language="C++ CLI" Value="Impersonate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ed254-114">서버가 클라이언트의 보안 컨텍스트를 가장하여 클라이언트 역할을 대신 수행할 수 있으며,</span><span class="sxs-lookup"><span data-stu-id="ed254-114">The server can impersonate the client's security context while acting on behalf of the client.</span></span> <span data-ttu-id="ed254-115">클라이언트로 로컬 리소스에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed254-115">The server can access local resources as the client.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>