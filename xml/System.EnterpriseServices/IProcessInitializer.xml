<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65909f2ec439d52a6e219ae1ac7909475679abd1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="18ff2-101">COM 구성 요소를 시작하거나 종료할 때 호출할 수 있는 메서드를 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18ff2-101">Supports methods that can be called when a COM component starts up or shuts down.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ff2-102">구현 된 <xref:System.EnterpriseServices.IProcessInitializer> 인터페이스 메서드를 서비스 구성 요소 초기화를 실행 하려면 또는 때 서버 프로세스 (Dllhost.exe) 종료 코드 시작 또는 종료, 각각.</span><span class="sxs-lookup"><span data-stu-id="18ff2-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="18ff2-103">COM + 제공 `Startup` 및 `Shutdown` Dllhost.exe 시작 되 고 끝날 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="18ff2-104">이 기능을 사용 하면 (라고도 함 서버 구성 요소 이후) 사용자 지정 초기화를 실행 하 고 코드를 정리 하려면 COM + 서버 응용 프로그램에 설치 되어 있는 모든 COM + 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="18ff2-105">구현 하는 각 구성 요소의 인스턴스는 <xref:System.EnterpriseServices.IProcessInitializer> 인터페이스 생성 및 프로세스의 기간 동안만 저장 되며 시작 및 종료 하는 동안 인터페이스 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="18ff2-106">구현 되는 경우는 <xref:System.EnterpriseServices.ServicedComponent>, 구성 요소를 등록 하는 동안는 `InitializesServerApplication` 에서 매개 변수는 `COMAdminCatalogObject` 컬렉션으로 설정 되는 구성 요소 내에서 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="18ff2-107">사용 하는 `Startup` 및 `Shutdown` 이벤트, 리소스를 초기화할 연결을 만들 수 있습니다, 초기화 데이터를 공유 및 정리 코드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="18ff2-108">그러나 서버 구성 요소 인스턴스가 아직 만들지 않은 때문에 COM +에 적용 되는 상태를 액세스 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="18ff2-109">또한 코드에는 `Startup` 및 `Shutdown` 90 초만 시스템 프로세스를 시작 합니다. 활성화를 허용 하도록 준비 하는 Dllhost.exe에 대 한 대기 하기 때문에 이벤트를 최대한 빨리 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="18ff2-110">Dllhost.exe 신호를 보내지 않는 준비가 되었음을 90 초 이내, 시스템 프로세스를 종료 따라서 모든 초기화를 처리 하는이 기간 내에 완료 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="18ff2-111">초기화에 참여 하는 각 서버 구성 요소를 지원 해야 합니다는 <xref:System.EnterpriseServices.IProcessInitializer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="18ff2-112">DllHost.exe 시작할 때 COM + 만듭니다 요청한이 서비스를 호출 하는 모든 서버 구성 요소 `QueryInterface` 에 대 한는 <xref:System.EnterpriseServices.IProcessInitializer> 인터페이스 및 호출 된 <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="18ff2-113">마찬가지로, 경우 DllHost.exe 프로세스를 종료 하 고, 호출 하는 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> 함수 항목에 이전에 인터페이스 포인터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18ff2-114">종료 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-114">Performs shutdown actions.</span>
          </span>
          <span data-ttu-id="18ff2-115">Dllhost.exe가 종료될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-115">Called when Dllhost.exe is shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ff2-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> failfast 또는 기타 심각한 종료 이벤트가 발생 하는 동안 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">
          <span data-ttu-id="18ff2-117">Microsoft Windows XP에서는 COM 구성 요소 시작의 <see langword="IUnknown" /> 인터페이스에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span>
          </span>
          <span data-ttu-id="18ff2-118">Microsoft Windows 2000에서는 이 인수가 항상 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18ff2-119">시작할 때 초기화를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-119">Performs initialization at startup.</span>
          </span>
          <span data-ttu-id="18ff2-120">Dllhost.exe가 시작될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18ff2-120">Called when Dllhost.exe is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ff2-121">참조 하는 개체 `punkProcessControl` 구현 하는 <xref:System.EnterpriseServices.IProcessInitControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="18ff2-122"><xref:System.EnterpriseServices.IProcessInitControl> 단일 메서드를 지원 <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="18ff2-123">초기화 코드가 <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> 호출할 수는 <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, 구성 요소의 제한 시간을 시작 하기 전까지 남은 시간 (초)의 수는 동일 하 게 설정 시간 제한을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="18ff2-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>