<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e496996eda2dd312d714b923bf5f0be33f4643be" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422681" /></Metadata><TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InterfaceQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cac8b-101">표시된 인터페이스에 대해 큐 지원을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-101">Enables queuing support for the marked interface.</span></span> <span data-ttu-id="cac8b-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac8b-103">메시지 큐를 사용 하 여이 인터페이스에 대 한 호출이 대기 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-103">Calls on this interface will be queued using Message Queuing.</span></span>  
  
 <span data-ttu-id="cac8b-104">을 큐에 대기 된 인터페이스를 표시 하려면 다음 구문을 사용 하 여 인터페이스에이 특성을 적용 합니다. `[InterfaceQueuing]`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-104">To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.</span></span>  
  
 <span data-ttu-id="cac8b-105">큐에 대기 중인된 인터페이스의 멤버 메서드 없음 등의 큐에 대기 중인된 메서드 호출에 대 한 요구 사항을 충족 해야 합니다 `out` 또는 `ref` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-105">The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.</span></span>  
  
 <span data-ttu-id="cac8b-106">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac8b-107">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 `InterfaceQueuingAttribute` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-107">The following code example shows how to use the `InterfaceQueuingAttribute` attribute.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 <span data-ttu-id="cac8b-108">다음 코드 예제를 사용 하 여 컴파일 시간에 큐에 대기 된 COM + 애플리케이션을 표시 하는 방법을 보여 줍니다 합니다 `ApplicationQueuing` 특성을 설정 하 여 COM + 수신기를 사용 하도록 설정 및는 `QueueListenerEnabled` true로</span><span class="sxs-lookup"><span data-stu-id="cac8b-108">The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 <span data-ttu-id="cac8b-109">다음 코드 예제를 사용 하는 방법을 보여 줍니다 `BindToMoniker` 레코더에서의 인스턴스를 가져올 큐에 대기 중인된 된 모니커를 실행 하려면 기록 될 및 강제 큐에 메시지를 보내려고 레코더 개체를 해제 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-109">The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cac8b-110">큐 지원을 활성화하여 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-110">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, enabling queuing support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cac8b-111"><see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 및 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> 속성을 기본값으로 설정하여 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class setting the <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac8b-112">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.EnterpriseServices.InterfaceQueuingAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-112">The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
|<span data-ttu-id="cac8b-113">속성</span><span class="sxs-lookup"><span data-stu-id="cac8b-113">Property</span></span>|<span data-ttu-id="cac8b-114">값</span><span class="sxs-lookup"><span data-stu-id="cac8b-114">Value</span></span>|  
|--------------|-----------|  
|<span data-ttu-id="cac8b-115">사용</span><span class="sxs-lookup"><span data-stu-id="cac8b-115">Enabled</span></span>|`true`|  
|<span data-ttu-id="cac8b-116">인터페이스</span><span class="sxs-lookup"><span data-stu-id="cac8b-116">Interface</span></span>|`null`|  
  
   
  
## Examples  
 <span data-ttu-id="cac8b-117">다음 코드 예제에서는 새 <xref:System.EnterpriseServices.InterfaceQueuingAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-117">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.InterfaceQueuingAttribute : bool -&gt; System.EnterpriseServices.InterfaceQueuingAttribute" Usage="new System.EnterpriseServices.InterfaceQueuingAttribute enabled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="cac8b-118">큐 지원을 활성화하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-118"><see langword="true" /> to enable queuing support; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cac8b-119">선택적으로 큐 지원을 비활성화하여 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-119">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, optionally disabling queuing support.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac8b-120">다음 코드 예제에서는 새 <xref:System.EnterpriseServices.InterfaceQueuingAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-120">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac8b-121">큐 지원의 사용 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-121">Gets or sets a value indicating whether queuing support is enabled.</span></span></summary>
        <value><span data-ttu-id="cac8b-122">큐 지원이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-122"><see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cac8b-123">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-123">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac8b-124">이 속성은 해당는 `Queuing-Enabled` COM +의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-124">This property corresponds to the `Queuing-Enabled` property in COM+.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Interface : string with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac8b-125">큐가 활성화되는 인터페이스의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-125">Gets or sets the name of the interface on which queuing is enabled.</span></span></summary>
        <value><span data-ttu-id="cac8b-126">큐가 활성화되는 인터페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cac8b-126">The name of the interface on which queuing is enabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>