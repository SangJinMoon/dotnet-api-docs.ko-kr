<Type Name="Activity" FullName="System.EnterpriseServices.Activity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d68a73c7507151eb4a7c0db39a53444cb7eed868" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Activity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a1b42-101">COM+ 구성 요소를 만들지 않고 COM+ 서비스를 사용할 수 있는 동기 또는 비동기 일괄 작업을 수행하기 위한 작업을 만듭니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1b42-101">Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component.</span>
      </span>
      <span data-ttu-id="a1b42-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1b42-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b42-103">작업과 연결 된 컨텍스트 완전히 따라 사용자가 <xref:System.EnterpriseServices.ServiceConfig> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-103">The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1b42-104">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.EnterpriseServices.Activity> 클래스 및 동기화 서비스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-104">The following code example demonstrates how to use the <xref:System.EnterpriseServices.Activity> class and use the synchronization service.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <span data-ttu-id="a1b42-105">사용할 서비스의 구성 정보를 포함하는 <see cref="T:System.EnterpriseServices.ServiceConfig" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-105">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1b42-106">
            <see cref="T:System.EnterpriseServices.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Activity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b42-107">만듭니다는 <xref:System.EnterpriseServices.Activity> COM + 서비스에 일괄 처리 작업을 제출 하는 데 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-107">Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services.</span></span> <span data-ttu-id="a1b42-108">작업과 연결 된 컨텍스트 완전히 따라 사용자가 <xref:System.EnterpriseServices.ServiceConfig> 를 통해 전달 되는 개체는 `cfg` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-108">The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1b42-109">다음 코드 예제에서는 <xref:System.EnterpriseServices.Activity> 클래스의 새 인스턴스를 초기화하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-109">The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a1b42-110">
            <see cref="T:System.EnterpriseServices.Activity" />이 현재 플랫폼에서 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-110">
              <see cref="T:System.EnterpriseServices.Activity" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousCall">
      <MemberSignature Language="C#" Value="public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AsynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AsynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AsynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="a1b42-111">일괄 작업을 구현하는 데 사용되는 <see cref="T:System.EnterpriseServices.IServiceCall" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-111">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1b42-112">지정된 사용자 정의 일괄 작업을 비동기적으로 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-112">Runs the specified user-defined batch work asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1b42-113">다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-113">The following code example demonstrates how to use this method.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToCurrentThread">
      <MemberSignature Language="C#" Value="public void BindToCurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToCurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.BindToCurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToCurrentThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToCurrentThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1b42-114">사용자 정의 작업을 현재 스레드에 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-114">Binds the user-defined work to the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b42-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> 에 의해 전송 되는 일괄 처리 작업을 바인딩하는 <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> 또는 <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> 현재 단일 스레드 아파트 (STA) 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="a1b42-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA).</span></span> <span data-ttu-id="a1b42-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> 현재 스레드 (MTA)는 다중 스레드 아파트에서 실행 되는 경우 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> has no effect if the current thread is being run in the multithreaded apartment (MTA).</span></span> <span data-ttu-id="a1b42-117">현재 스레드 모델의 구성에 따라 결정 됩니다는 <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> 의 속성은 <xref:System.EnterpriseServices.ServiceConfig> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-117">The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronousCall">
      <MemberSignature Language="C#" Value="public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="a1b42-118">일괄 작업을 구현하는 데 사용되는 <see cref="T:System.EnterpriseServices.IServiceCall" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-118">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1b42-119">지정된 사용자 정의 일괄 작업을 동기적으로 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-119">Runs the specified user-defined batch work synchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbindFromThread">
      <MemberSignature Language="C#" Value="public void UnbindFromThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnbindFromThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.UnbindFromThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnbindFromThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnbindFromThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1b42-120">
            <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> 또는 <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> 메서드를 통해 전송된 일괄 작업을 일괄 작업이 실행되는 스레드에서 바인딩 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b42-120">Unbinds the batch work that is submitted by the <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> or <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> methods from the thread on which the batch work is running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b42-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> 일괄 작업 스레드에 이전에 바인딩되지 않았습니다 경우 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1b42-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> has no effect if the batch work was not previously bound to a thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>