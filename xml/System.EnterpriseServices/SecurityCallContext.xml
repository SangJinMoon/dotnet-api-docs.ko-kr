<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityCallContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59fe7d18841497bfd32b4aaf0b41d2e950fe81261.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fe7d18841497bfd32b4aaf0b41d2e950fe81261</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.SecurityCallContext">
          <source>Describes the chain of callers leading up to the current method call.</source>
          <target state="translated">현재의 메서드 호출을 발생시키는 호출자 체인을 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.SecurityCallContext">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext&gt;</ph> class to interrogate the security context of calls to the methods of a <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext&gt;</ph> 클래스의 메서드를 호출의 보안 컨텍스트를 질의 하는 <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.Callers">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallers" /&gt;</ph> object that describes the caller.</source>
          <target state="translated">호출자를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallers" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.Callers">
          <source>The <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallers" /&gt;</ph> object that describes the caller.</source>
          <target state="translated">호출자를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallers" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.Callers">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.Callers%2A&gt;</ph> accesses the <ph id="ph2">`Callers`</ph> item in the <ph id="ph3">`ISecurityCallContext`</ph> collection in COM+.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.Callers%2A&gt;</ph> 액세스는 <ph id="ph2">`Callers`</ph> 항목에 <ph id="ph3">`ISecurityCallContext`</ph> COM +의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.Callers">
          <source>There is no security context.</source>
          <target state="translated">보안 컨텍스트가 없는 경우</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallContext" /&gt;</ph> object that describes the security call context.</source>
          <target state="translated">보안 호출 컨텍스트를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallContext" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
          <source>The <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallContext" /&gt;</ph> object that describes the security call context.</source>
          <target state="translated">보안 호출 컨텍스트를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityCallContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
          <source>The static <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.CurrentCall%2A&gt;</ph> property is the recommended way to access the security call context.</source>
          <target state="translated">정적 <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.CurrentCall%2A&gt;</ph> 속성은 보안 호출 컨텍스트에 액세스 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
          <source>The following code example demonstrates the use of this method to obtain a <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext&gt;</ph> object describing the security context of a method call.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 가져올의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext&gt;</ph> 메서드 호출의 보안 컨텍스트를 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> object that describes the direct caller of this method.</source>
          <target state="translated">이 메서드의 직접 호출자를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
          <source>A <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
          <source>The following code example demonstrates the use of this method to check the identity of the direct caller of a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 직접 호출자의 id를 확인 하려면이 방법의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
          <source>The specified role.</source>
          <target state="translated">지정된 역할입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
          <source>Verifies that the direct caller is a member of the specified role.</source>
          <target state="translated">직접 호출자가 지정된 역할의 멤버인지 확인합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the direct caller is a member of the specified role; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">직접 호출자가 지정된 역할의 멤버이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
          <source>The following code example demonstrates the use of this method to determine if the caller of a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> method is in a specified role.</source>
          <target state="translated">다음 코드 예제에서는 여부를 확인 하려면이 방법의 사용을 보여 줍니다.의 호출자는 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> 메서드는 지정된 된 역할에 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled">
          <source>Determines whether security checks are enabled in the current context.</source>
          <target state="translated">현재 컨텍스트에서 보안 검사가 활성화되는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if security checks are enabled in the current context; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 컨텍스트에서 보안 검사가 활성화되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
          <source>The specified user.</source>
          <target state="translated">지정된 사용자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
          <source>The specified role.</source>
          <target state="translated">지정된 역할입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
          <source>Verifies that the specified user is in the specified role.</source>
          <target state="translated">지정된 사용자가 지정된 역할에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified user is a member of the specified role; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 사용자가 지정된 역할의 멤버이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
          <source>Gets the <ph id="ph1">&lt;see langword="MinAuthenticationLevel" /&gt;</ph> value from the <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> collection in COM+.</source>
          <target state="translated">COM+의 <ph id="ph1">&lt;see langword="MinAuthenticationLevel" /&gt;</ph> 컬렉션에서 <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
          <source>The <ph id="ph1">&lt;see langword="MinAuthenticationLevel" /&gt;</ph> value from the <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> collection in COM+.</source>
          <target state="translated">COM+의 <ph id="ph1">&lt;see langword="MinAuthenticationLevel" /&gt;</ph> 컬렉션에서 가져온 <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel%2A&gt;</ph> is the least secure authentication level of all callers in the chain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel%2A&gt;</ph> 체인의 모든 호출자의 보안 수준이 가장 낮은 인증 수준이입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
          <source>Gets the <ph id="ph1">&lt;see langword="NumCallers" /&gt;</ph> value from the <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> collection in COM+.</source>
          <target state="translated">COM+의 <ph id="ph1">&lt;see langword="NumCallers" /&gt;</ph> 컬렉션에서 <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
          <source>The <ph id="ph1">&lt;see langword="NumCallers" /&gt;</ph> value from the <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> collection in COM+.</source>
          <target state="translated">COM+의 <ph id="ph1">&lt;see langword="NumCallers" /&gt;</ph> 컬렉션에서 가져온 <ph id="ph2">&lt;see langword="ISecurityCallContext" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.NumCallers%2A&gt;</ph> is the number of callers in the chain of calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.SecurityCallContext.NumCallers%2A&gt;</ph> 일련의 호출에서 호출자의 수가입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.EnterpriseServices.SecurityCallContext.OriginalCaller">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> that describes the original caller.</source>
          <target state="translated">원래 호출자를 설명하는 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.EnterpriseServices.SecurityCallContext.OriginalCaller">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnterpriseServices.SecurityIdentity" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>