<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumeratorContract`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb09bce7495e8ab23bc69a79f590f4f45e7b8152.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb09bce7495e8ab23bc69a79f590f4f45e7b8152</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>The type of objects being enumerated.</source>
          <target state="translated">열거되는 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>Enumerates the elements in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> 컬렉션의 요소를 열거합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>At this position, the return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">반환 값이이 위치에서 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated">따라서 호출 해야 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 하 여 열거자를 호출 하기 전에 컬렉션의 첫 번째 요소로 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph>가 호출될 때까지 동일한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 값이 설정 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> 를 다음 요소로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환할 수도 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>If the last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, the return value of <ph id="ph3">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>의 반환 값 <ph id="ph3">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IEnumeratorContract`1">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>Returns the object in the collection at the current position of the enumerator.</source>
          <target state="translated">컬렉션에서 열거자의 현재 위치에 있는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">컬렉션에서 열거자의 현재 위치에 있는 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>The return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated">반환 값 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> 다음 조건에서 정의 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">열거자를 만든 직후 또는 후 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 호출 하 여 열거자를 호출 하기 전에 컬렉션의 첫 번째 요소로 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>The last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">마지막으로 호출한 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph>가 호출될 때까지 동일한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 값이 설정 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> 를 다음 요소로 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">열거자를 컬렉션의 다음 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">열거자가 다음 요소로 이동한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이(가) 반환되고, 컬렉션의 끝을 지난 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이(가) 반환됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> 메서드가 호출 되 면 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>The first call to the <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.</source>
          <target state="translated">첫 번째 호출에서 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 메서드 열거자는 컬렉션의 첫 번째 요소로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 반환할 수도 <ph id="ph2">`false`</ph> 될 때까지 <ph id="ph3">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 하면 열거자가 더 유효 하지 않으며을 다음에 호출할 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throw는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IEnumeratorContract`1.Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 하면 열거자가 더 유효 하지 않으며을 다음에 호출할 <ph id="ph1">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throw는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IEnumeratorContract`1.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>