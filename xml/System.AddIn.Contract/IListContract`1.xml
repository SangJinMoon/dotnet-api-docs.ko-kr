<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b93185b7c929c6518a44c9d831307f70820de03b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251963" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a68d3-101">목록에 있는 개체의 계약 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a68d3-101">The contract type of the objects in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="a68d3-102">계약에 정의된 제네릭 형식 목록을 나타내며, 호스트와 추가 기능 사이에서 해당 계약 형식의 컬렉션을 전달하는 데 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a68d3-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-103">합니다 <xref:System.AddIn.Pipeline.CollectionAdapters> 클래스가 사용 하는 <xref:System.AddIn.Contract.IListContract%601> 호스트와 추가 기능 간에 양방향으로 컬렉션을 전달 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="a68d3-104">사용 하는 것이 좋습니다는 <xref:System.AddIn.Pipeline.CollectionAdapters> 클래스 코드에서 직접이 클래스를 사용 하는 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="a68d3-105">예를 들어 참조 [연습: 추가 기능 및 호스트 간의 컬렉션 전달](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="a68d3-106">이 클래스는 개체는 serialize 되지 때문에 응용 프로그램 도메인 간에 개체 참조로 전달 하 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a68d3-107">추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-107">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-108">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에 개체를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-109">`item` 계약으로 정의 된 형식의 매개 변수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a68d3-110">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에서 개체를 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a68d3-111">컬렉션에서 찾을 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-111">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-112">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에 특정 항목이 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-113">
            <see langword="true" />가 컬렉션에 있으면 <paramref name="item" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-113">
              <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a68d3-114">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션의 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-115">컬렉션의 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-115">The number of items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a68d3-116">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션을 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-117">컬렉션을 반복하는 <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a68d3-118">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션이 읽기 전용인지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-119">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-119">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a68d3-120">가져올 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-120">The zero-based index of the item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-121">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에서 지정된 인덱스의 항목을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-122">지정된 인덱스에 있는 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-122">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-123"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> 메서드는 지정된 된 인덱스에 항목을 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="a68d3-124">항목을 제거 하는 <xref:System.AddIn.Contract.IListContract%601> 수집, 사용 된 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a68d3-125">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-125">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a68d3-126">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-126">-or-</span>
          </span>
          <span data-ttu-id="a68d3-127">
            <paramref name="index" />가 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-127">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a68d3-128">컬렉션의 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-128">An item in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-129">
            <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 컬렉션에 있는 특정 항목의 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-130">지정된 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-130">The index of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-131">컬렉션에서 동일한 형식의 여러 개체의 경우이 메서드는 컬렉션에서 지정된 된 형식의 첫 번째로 나타나는 항목의 인덱스를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="a68d3-132"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> 메서드는 지정된 된 인덱스에 항목을 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="a68d3-133">항목을 제거 하는 <xref:System.AddIn.Contract.IListContract%601> 수집, 사용 된 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a68d3-134">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-134">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a68d3-135">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-135">-or-</span>
          </span>
          <span data-ttu-id="a68d3-136">
            <paramref name="index" />가 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 메서드의 반환 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-136">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a68d3-137">
            <paramref name="item" />를 삽입할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-137">The zero-based index at which to insert <paramref name="item" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a68d3-138">
            <see cref="T:System.AddIn.Contract.IContract" /> 컬렉션에 삽입할 <see cref="T:System.AddIn.Contract.IListContract`1" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-139">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션의 지정된 인덱스에 항목을 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-140">호출 후의 <xref:System.AddIn.Contract.IListContract%601.Insert%2A> 새 항목을 수용 하기 위해 메서드를 삽입 지점 아래에 있는 항목 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="a68d3-141">이동 된 항목의 인덱스가 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="a68d3-142">지정된 된 인덱스에 있는 항목의 이름을 바꾸려면 사용 합니다 <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="a68d3-143">결정할 여부를 <xref:System.AddIn.Contract.IListContract%601> 컬렉션은 읽기 전용, 호출 된 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a68d3-144">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-144">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a68d3-145">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-145">-or-</span>
          </span>
          <span data-ttu-id="a68d3-146">
            <paramref name="index" />가 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-146">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a68d3-147">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a68d3-148">컬렉션에서 제거할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-148">The item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-149">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에서 지정된 형식의 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a68d3-150">항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-150">
              <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-151">컬렉션에서 특정 유형의 각 개체에 대해이 메서드를 반복 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a68d3-152">제거할 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-152">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-153">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션에서 지정된 인덱스의 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-154">호출한 후 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, 제거 된 항목 아래에 있는 항목 이동 하 여 빈된 지점을 차지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="a68d3-155">이동 된 항목의 인덱스가 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="a68d3-156">결정할 여부를 <xref:System.AddIn.Contract.IListContract%601> 컬렉션은 읽기 전용, 호출 된 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a68d3-157">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-157">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a68d3-158">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-158">-or-</span>
          </span>
          <span data-ttu-id="a68d3-159">
            <paramref name="index" />가 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 메서드의 반환 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-159">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a68d3-160">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a68d3-161">항목을 설정할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-161">The zero-based index at which to set the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a68d3-162">지정된 인덱스에 설정할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-162">The item to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a68d3-163">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션의 지정된 인덱스에 항목을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a68d3-164"><xref:System.AddIn.Contract.IListContract%601.SetItem%2A> 메서드는 지정된 된 인덱스에 항목을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a68d3-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="a68d3-165">항목을 추가 하는 <xref:System.AddIn.Contract.IListContract%601> 컬렉션을 사용 하 여는 <xref:System.AddIn.Contract.IListContract%601.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="a68d3-166">결정할 여부를 <xref:System.AddIn.Contract.IListContract%601> 컬렉션은 읽기 전용, 호출 된 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a68d3-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a68d3-167">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-167">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a68d3-168">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-168">-or-</span>
          </span>
          <span data-ttu-id="a68d3-169">
            <paramref name="index" />가 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 메서드의 반환 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-169">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a68d3-170">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a68d3-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>