<Type Name="ImportManyAttribute" FullName="System.ComponentModel.Composition.ImportManyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebe052ddb059cf9118e41ae68d0d1d1f0815ab52" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36711081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportManyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportManyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportManyAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ImportManyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="84c70-101">
        <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체에서 속성, 필드 또는 매개 변수가 일치하는 모든 내보내기로 채워지도록 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84c70-101">Specifies that a property, field, or parameter should be populated with all matching exports by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-102">
            <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c70-103">기본 계약 이름을 사용하여 내보내기 집합을 가져와 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c70-104">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 속성, 필드 또는이 특성으로 표시 된 매개 변수 형식에 메서드.</span><span class="sxs-lookup"><span data-stu-id="84c70-104">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="84c70-105">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="84c70-105">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportManyAttribute : string -&gt; System.ComponentModel.Composition.ImportManyAttribute" Usage="new System.ComponentModel.Composition.ImportManyAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="84c70-106">가져올 내보내기의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-106">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c70-107">지정된 계약 이름을 사용하여 내보내기 집합을 가져와 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c70-108">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식에 메서드.</span><span class="sxs-lookup"><span data-stu-id="84c70-108">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="84c70-109">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="84c70-109">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportManyAttribute : Type -&gt; System.ComponentModel.Composition.ImportManyAttribute" Usage="new System.ComponentModel.Composition.ImportManyAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="84c70-110">가져올 내보내기의 계약 이름이 파생되는 형식이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-110">The type to derive the contract name of the exports to import, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c70-111">지정된 형식에서 파생된 계약 이름을 사용하여 내보내기 집합을 가져와 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c70-112">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `contractType`합니다.</span><span class="sxs-lookup"><span data-stu-id="84c70-112">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="84c70-113">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식에 메서드.</span><span class="sxs-lookup"><span data-stu-id="84c70-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="84c70-114">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="84c70-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportManyAttribute : string * Type -&gt; System.ComponentModel.Composition.ImportManyAttribute" Usage="new System.ComponentModel.Composition.ImportManyAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="84c70-115">가져올 내보내기의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-115">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="84c70-116">가져올 내보내기의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-116">The type of the export to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c70-117">지정된 계약 이름과 형식을 사용하여 내보내기 집합을 가져와 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name and contract type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRecomposition : bool with get, set" Usage="System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-118">일치하는 계약을 제공하는 내보내기가 변경된 경우 데코레이팅된 속성이나 필드를 재작성해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-118">Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c70-119">
            <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />에서 동일한 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />을 제공하는 내보내기가 추가되거나 제거된 경우 속성이나 필드를 재작성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-119">
              <see langword="true" /> if the property or field allows for recomposition when exports that provide the same <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="84c70-120">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-120">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-121">가져올 내보내기의 계약 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-121">Gets the contract name of the exports to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c70-122">가져올 내보내기의 계약 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-122">The contract name of the exports to import.</span>
          </span>
          <span data-ttu-id="84c70-123">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-123">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-124">가져올 내보내기의 계약 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-124">Gets the contract type of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c70-125">이 가져오기에서 예상하는 내보내기의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-125">The type of the export that this import is expecting.</span>
          </span>
          <span data-ttu-id="84c70-126">기본값은 <see langword="null" />로, 이 가져오기가 연결된 멤버에서 형식을 찾아 형식을 얻습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-126">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this import is attached to.</span>
          </span>
          <span data-ttu-id="84c70-127">형식이 <see cref="T:System.Object" />인 경우 가져오기가 모든 내보낸 형식과 일치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-127">If the type is <see cref="T:System.Object" />, the import will match any exported type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy with get, set" Usage="System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-128">이 가져오기를 충족시키는 데 사용되는 내보내기에 대한 특정 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />가 필요함을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-128">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c70-129">다음 값 중 하나: <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />가져오기 도구는 특정 필요 하지 않은 경우, <see cref="T:System.ComponentModel.Composition.CreationPolicy" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-129">One of the following values:  <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          </span>
          <span data-ttu-id="84c70-130">이 값이 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-130">This is the default.</span>
          </span>
          <span data-ttu-id="84c70-131">사용된 모든 내보내기를 컨테이너의 모든 파트에서 공유해야 한다면 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-131">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span>
          </span>
          <span data-ttu-id="84c70-132">사용된 모든 내보내기를 컨테이너에서 공유하지 않아야 한다면 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-132">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span>
          </span>
          <span data-ttu-id="84c70-133">이 경우 각 파트마다 고유한 인스턴스가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-133">In this case, each part receives their own instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.ComponentModel.Composition.ImportSource with get, set" Usage="System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c70-134">이 가져오기를 충족할 수 있는 범위를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-134">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c70-135">이 가져오기를 충족할 수 있는 범위를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c70-135">A value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>