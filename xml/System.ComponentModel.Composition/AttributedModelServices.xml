<Type Name="AttributedModelServices" FullName="System.ComponentModel.Composition.AttributedModelServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4552436d5fd229109d89ee4a52268b28297fe90" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttributedModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttributedModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.AttributedModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Module AttributedModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributedModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4b62d-101">컴퍼지션을 포함한 MEF 특성 사용 프로그래밍 모델에 대한 도우미 메서드를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b62d-101">Contains helper methods for using the MEF attributed programming model with composition.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-102">지정된 값에서 파트를 만들어 컴퍼지션 일괄 처리에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-102">Creates a part from a specified value and adds it to a composition batch.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-103">새 파트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-103">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="batch">
          <span data-ttu-id="4b62d-104">추가할 일괄 처리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-104">The batch to add to.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="4b62d-105">추가할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-105">The value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-106">지정된 값에서 파트를 만들어 지정된 일괄 처리에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-106">Creates a part from the specified value and adds it to the specified batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-107">새 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-107">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, contractName As String, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-108">새 파트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-108">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="batch">
          <span data-ttu-id="4b62d-109">추가할 일괄 처리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-109">The batch to add to.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="4b62d-110">내보내기의 계약 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-110">The contract name of the export.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="4b62d-111">추가할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-111">The value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-112">지정된 값에서 파트를 만들어 지정된 계약 이름으로 지정된 일괄 처리에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-112">Creates a part from the specified value and adds it to the specified batch with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-113">새 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-113">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddPart(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPart (batch As CompositionBatch, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddPart(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="batch">
          <span data-ttu-id="4b62d-114">추가할 일괄 처리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-114">The batch to add to.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-115">추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-115">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-116">지정된 특성 사용 개체에서 작성 가능한 파트를 만들어 지정된 컴퍼지션 일괄 처리에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-116">Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-117">새 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-117">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComposeExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-118">지정된 개체에서 파트를 만들고 지정된 컴퍼지션 컨테이너를 사용하여 해당 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-118">Creates a part from a specified object and composes it with a specified composition container.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-119">새 파트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-119">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="container">
          <span data-ttu-id="4b62d-120">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-120">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="4b62d-121">작성할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-121">The value to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-122">지정된 값에서 파트를 만들고 지정된 컴퍼지션 컨테이너에서 해당 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-122">Creates a part from the specified value and composes it in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, contractName As String, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-123">새 파트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-123">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="container">
          <span data-ttu-id="4b62d-124">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-124">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="4b62d-125">파트를 내보낼 계약 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-125">The contract name to export the part under.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="4b62d-126">작성할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-126">The value to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-127">지정된 개체에서 지정된 계약 이름으로 파트를 만들고 지정된 컴퍼지션 컨테이너에 해당 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-127">Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeParts">
      <MemberSignature Language="C#" Value="public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, params object[] attributedParts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeParts(class System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeParts (container As CompositionContainer, ParamArray attributedParts As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeParts(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, ... cli::array &lt;System::Object ^&gt; ^ attributedParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="attributedParts" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4b62d-128">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-128">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="attributedParts">
          <span data-ttu-id="4b62d-129">작성할 특성 사용 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-129">An array of attributed objects to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-130">특성 사용 개체의 배열에서 작성 가능한 파트를 만들고 지정된 컴퍼지션 컨테이너에 해당 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-130">Creates composable parts from an array of attributed objects and composes them in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-131">구성 가능 부분을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-131">Creates a composable part.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-132">특성 사용 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-132">The attributed object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-133">지정된 특성 사용 개체에서 작성 가능한 파트를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-133">Creates a composable part from the specified attributed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-134">만들어진 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-134">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partDefinition As ComposablePartDefinition, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="4b62d-135">새 파트 정의입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-135">The definition of the new part.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-136">특성 사용 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-136">The attributed object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-137">지정된 파트 정의를 사용하여 특성 사용 개체에서 작성 가능한 파트를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-137">Creates a composable part from the specified attributed object, using the specified part definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-138">만들어진 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-138">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-139">특성 사용 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-139">The attributed object.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="4b62d-140">파트의 리플렉션 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-140">The reflection context for the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-141">지정된 리플렉션 컨텍스트를 사용하여 특성이 지정된 개체에서 작성 가능한 파트를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-141">Creates a composable part from the specified attributed object, using the specified reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-142">만들어진 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-142">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b62d-143">
            <paramref name="reflectionContext" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-143">
              <paramref name="reflectionContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-144">지정된 형식 및 원본을 사용하여 파트 정의를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-144">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4b62d-145">정의의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-145">The type of the definition.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="4b62d-146">정의의 원본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-146">The origin of the definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-147">지정된 형식 및 원본을 사용하여 파트 정의를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-147">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-148">새 파트 정의입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-148">The new part definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin, bool ensureIsDiscoverable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
        <Parameter Name="ensureIsDiscoverable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4b62d-149">정의의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-149">The type of the definition.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="4b62d-150">정의의 원본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-150">The origin of the definition.</span>
          </span>
        </param>
        <param name="ensureIsDiscoverable">
          <span data-ttu-id="4b62d-151">새 정의가 검색 가능한지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-151">A value indicating whether or not the new definition should be discoverable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-152">지정된 형식 및 원본을 사용하여 파트 정의를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-152">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-153">새 파트 정의입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-153">The new part definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="4b62d-154">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-154">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="4b62d-155">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-155">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-156">지정한 부분에서 지정된 계약 형식과 일치하는 내보내기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-156">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-157">
            <paramref name="part" />에 <paramref name="contractType" />과 일치하는 내보내기 정의가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-157">
              <see langword="true" /> if <paramref name="part" /> contains an export definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-158">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-158">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="4b62d-159">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-159">The part to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-160">지정한 부분에서 지정된 계약 형식과 일치하는 내보내기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-160">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-161">
            <paramref name="part" />에 <paramref name="T" /> 형식의 내보내기 정의가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-161">
              <see langword="true" /> if <paramref name="part" /> contains an export definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractName">
      <MemberSignature Language="C#" Value="public static string GetContractName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetContractName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetContractName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4b62d-162">사용할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-162">The type to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-163">지정된 형식의 정식 계약 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-163">Gets a canonical contract name for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-164">지정된 형식에서 만들어진 계약 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-164">A contract name created from the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataView&lt;TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public static TMetadataView GetMetadataView&lt;TMetadataView&gt; (System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TMetadataView GetMetadataView&lt;TMetadataView&gt;(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataView(Of TMetadataView) (metadata As IDictionary(Of String, Object)) As TMetadataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadataView&gt;&#xA; static TMetadataView GetMetadataView(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadataView">
          <span data-ttu-id="4b62d-165">가져올 메타데이터 뷰 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-165">The type of the metadata view object to get.</span>
          </span>
        </typeparam>
        <param name="metadata">
          <span data-ttu-id="4b62d-166">느슨한 메타데이터의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-166">A collection of loose metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-167">느슨한 메타데이터 사전에서 메타데이터 뷰 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-167">Gets a metadata view object from a dictionary of loose metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-168">지정된 메타데이터가 포함된 메타데이터 뷰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-168">A metadata view containing the specified metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-169">메서드 또는 형식에 대한 고유 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-169">Gets the unique identifier for a method or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeIdentity (method As MethodInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="4b62d-170">검사할 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-170">The method to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-171">지정된 메서드에 대한 고유 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-171">Gets the unique identifier for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-172">메서드에 대한 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-172">The unique identifier for the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4b62d-173">검사할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-173">The type to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-174">지정된 형식에 대한 고유 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-174">Gets the unique identifier for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-175">형식에 대한 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-175">The unique identifier for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-176">지정한 부분에서 지정된 계약과 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-176">Returns a value that indicates whether a specified part contains an inport that matches a specified contract.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="4b62d-177">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-177">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="4b62d-178">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-178">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-179">지정한 부분에서 지정된 계약 형식과 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-179">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-180">
            <paramref name="part" />에 <paramref name="contractType" />과 일치하는 가져오기 정의가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-180">
              <see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="4b62d-181">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-181">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="4b62d-182">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-182">The contract type.</span>
          </span>
        </param>
        <param name="importCardinality">
          <span data-ttu-id="4b62d-183">가져오기 카디널리티입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-183">The import cardinality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-184">지정한 부분에서 지정된 계약 형식과 내보내기 카디널리티와 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-184">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-185">
            <paramref name="part" />에 <paramref name="contractType" /> 및 <paramref name="importCardinality" />와 일치하는 가져오기 정의가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-185">
              <see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" /> and <paramref name="importCardinality" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-186">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-186">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="4b62d-187">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-187">The part to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-188">지정한 부분에서 지정된 계약 형식과 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-188">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-189">
            <paramref name="part" />에 <paramref name="T" /> 형식의 가져오기 정의가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-189">
              <see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4b62d-190">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-190">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="4b62d-191">검색할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-191">The part to search.</span>
          </span>
        </param>
        <param name="importCardinality">
          <span data-ttu-id="4b62d-192">가져오기 카디널리티입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-192">The import cardinality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-193">지정한 부분에서 지정된 계약 형식과 내보내기 카디널리티와 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-193">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-194">
            <paramref name="part" />에 지정된 가져오기 카디널리티가 있는 <paramref name="T" /> 형식의 가져오기 정의를 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-194">
              <see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" /> that has the specified import cardinality; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SatisfyImportsOnce">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b62d-195">지정된 부품을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-195">Composes a specified part.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SatisfyImportsOnce (compositionService As ICompositionService, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compositionService">
          <span data-ttu-id="4b62d-196">사용할 컴퍼지션 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-196">The composition service to use.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-197">작성할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-197">The part to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-198">재컴퍼지션을 사용하지 않도록 설정한 상태에서 지정된 컴퍼지션 서비스를 사용하여 지정된 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-198">Composes the specified part by using the specified composition service, with recomposition disabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-199">작성된 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-199">The composed part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b62d-200">일반 컴퍼지션과 달리이 메서드로 구성 된 부분 되지 않을 유효한 상태를 유지 하는 경우 뒤에 있는 카탈로그`compositionService` 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="4b62d-200">Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="compositionService">
          <span data-ttu-id="4b62d-201">사용할 컴퍼지션 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-201">The composition service to use.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="4b62d-202">작성할 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-202">The part to compose.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="4b62d-203">파트의 리플렉션 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-203">The reflection context for the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b62d-204">재컴퍼지션을 비활성화하고 지정된 리플렉션 컨텍스트를 사용하여 지정된 컴퍼지션 서비스를 통해 지정된 파트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-204">Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b62d-205">작성된 파트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-205">The composed part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b62d-206">
            <paramref name="reflectionContext" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b62d-206">
              <paramref name="reflectionContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>