<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b374-101"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체에서 속성, 필드 또는 매개 변수 값을 제공하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b374-102">특성을 사용 하는 프로그래밍 모델에서 <xref:System.ComponentModel.Composition.ImportAttribute> 가져오기 또는 해당된 파트의 종속성을 선언 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="2b374-103">해당 속성, 필드 또는 메서드에 데코레이팅 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="2b374-104">컴퍼지션 동안 파트의 가져오기가 의해 채워짐는 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 속한 개체를 해당 부분을 하는 제공 되는 내보내기를 사용 하 여 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="2b374-105">계약 이름과 계약 형식을 비교 하 여 주로 가져오기에 지정된 된 내보내기와 일치 하는지 여부를 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="2b374-106">일반적으로 코드에서 import 특성을 사용 하는 경우 둘 중 하나를 지정할 필요가 없습니다 및 트 데코 레이 된 멤버의 형식에서 자동으로 유추 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="2b374-107">가져오기 내보내기는 다른 형식 (예를 들어 서브 클래스 데코레이팅된 멤버 또는 해당 멤버에서 구현한 인터페이스의 형식)와 일치 해야 하는 경우 계약 형식은 명시적으로 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="2b374-108">계약 이름을 지정할 수도 있습니다 명시적으로, 예: 여러 계약에는 동일한 형식으로 구분 하기 위해 있지만 메타 데이터를 통해이 작업을 수행 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="2b374-109">메타 데이터에 대 한 자세한 내용은 참조 하십시오. <xref:System.ComponentModel.Composition.PartMetadataAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b374-110">로 데코레이팅된 멤버와 다음 예제에서는 세 가지 클래스가 <xref:System.ComponentModel.Composition.ImportAttribute>, 및 일치 하는 세 가지 내보내기.</span><span class="sxs-lookup"><span data-stu-id="2b374-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b374-111"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b374-112">기본 계약 이름을 가진 내보내기를 가져와 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b374-113">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식의 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="2b374-114">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="2b374-115">가져올 내보내기의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-115">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="2b374-116">지정된 계약 이름을 가진 내보내기를 가져와 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b374-117">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식에 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b374-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="2b374-118">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-118">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="2b374-119">내보내기의 계약 이름이 파생되는 형식이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-119">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="2b374-120">지정된 형식에서 파생된 계약 이름을 가진 내보내기를 가져와 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b374-121">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `contractType`합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-121">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="2b374-122">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식에 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b374-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="2b374-123">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="2b374-124">가져올 내보내기의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-124">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="2b374-125">가져올 내보내기의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-125">The type of the export to import.</span></span></param>
        <summary><span data-ttu-id="2b374-126">지정된 계약 이름과 형식을 가진 내보내기를 가져와 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-127">컨테이너에 해당 계약 이름을 가진 내보내기가 없는 경우 속성, 필드 또는 매개 변수가 해당 형식의 기본값으로 설정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-127">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span></span></summary>
        <value>
          <span data-ttu-id="2b374-128"><see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />에 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />을 가진 내보내기가 없을 경우 속성, 필드 또는 매개 변수가 해당 형식의 기본값으로 설정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-128"><see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b374-129">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-129">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b374-130">속성, 필드 또는 매개 변수 형식의 기본값은 `null` 참조 형식 및 숫자 값 형식에는 0에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-130">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="2b374-131">다른 값 형식에 대 한 기본값 0으로 초기화 된 필드 값 형식인 경우 값 형식의 필드가 됩니다 또는 `null` 필드 참조 형식인 경우.</span><span class="sxs-lookup"><span data-stu-id="2b374-131">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-132">컨테이너에서 일치하는 계약이 있는 내보내기가 변경된 경우 속성이나 필드를 재작성해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-132">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span></span></summary>
        <value>
          <span data-ttu-id="2b374-133"><see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />에서 일치하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />을 사용하는 내보내기가 추가되거나 제거된 경우 속성이나 필드를 재작성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-133"><see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b374-134">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-134">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-135">가져올 내보내기의 계약 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-135">Gets the contract name of the export to import.</span></span></summary>
        <value><span data-ttu-id="2b374-136">가져올 내보내기의 계약 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-136">The contract name of the export to import.</span></span> <span data-ttu-id="2b374-137">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-137">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-138">가져올 내보내기의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-138">Gets the type of the export to import.</span></span></summary>
        <value><span data-ttu-id="2b374-139">가져올 내보내기의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-139">The type of the export to import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-140">이 가져오기를 충족시키는 데 사용되는 내보내기에 대한 특정 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />가 필요함을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-140">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="2b374-141">다음 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-141">One of the following values:</span></span>  
  
 <span data-ttu-id="2b374-142">가져오기에 특정 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />가 필요하지 않으면 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-142"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span> <span data-ttu-id="2b374-143">이 값이 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-143">This is the default.</span></span>  
  
 <span data-ttu-id="2b374-144">사용된 모든 내보내기를 컨테이너의 모든 파트에서 공유해야 한다면 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-144"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span></span>  
  
 <span data-ttu-id="2b374-145">사용된 모든 내보내기를 컨테이너에서 공유하지 않아야 한다면 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span></span> <span data-ttu-id="2b374-146">이 경우 각 파트마다 고유한 인스턴스가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-146">In this case, each part receives their own instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b374-147">이 가져오기를 충족할 수 있는 범위를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-147">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span></span></summary>
        <value><span data-ttu-id="2b374-148">이 가져오기를 충족할 수 있는 범위를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b374-148">A value that specifies the scopes from which this import may be satisfied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>