<Type Name="CompositionService" FullName="System.ComponentModel.Composition.Hosting.CompositionService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="123a022f8664c321a75ad2b8acdc041e5b8cafc1" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36643871" /></Metadata><TypeSignature Language="C#" Value="public class CompositionService : IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionService extends System.Object implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionService" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionService&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionService : IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type CompositionService = class&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1a4ca-101">기존 파트 인스턴스에 대한 가져오기를 만족시킬 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-101">Provides methods to satisfy imports on an existing part instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a4ca-102">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1a4ca-103">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1a4ca-104">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1a4ca-105">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="1a4ca-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1a4ca-106">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a4ca-107"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-107">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a4ca-108">`Dispose` 사용을 마치면 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-108">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="1a4ca-109">`Dispose` 메서드를 사용하면 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-109">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state.</span></span> <span data-ttu-id="1a4ca-110">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-110">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.</span></span>  
  
 <span data-ttu-id="1a4ca-111">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-111">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a4ca-112">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-112">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="1a4ca-113">이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-113">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="compositionService.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="1a4ca-114">작성할 파트입니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-114">The part to compose.</span></span></param>
        <summary><span data-ttu-id="1a4ca-115">재컴퍼지션과 유효성 검사를 사용하지 않도록 설정하여 지정된 파트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="1a4ca-115">Composes the specified part, with recomposition and validation disabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>