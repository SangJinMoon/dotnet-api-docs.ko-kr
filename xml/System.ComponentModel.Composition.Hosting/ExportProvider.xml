<Type Name="ExportProvider" FullName="System.ComponentModel.Composition.Hosting.ExportProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feaba0f39f4c97d4382696a62812176466ac5e69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643634" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExportProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d3060-101">Retrieves exports which match a specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3060-101">Retrieves exports which match a specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3060-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanged;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanged : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanged : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-103">Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-103">Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> change.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanging;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanging : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanging : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-104">Occurs when the provided exports are changing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-104">Occurs when the provided exports are changing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExport&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-105">Gets a specified export.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-105">Gets a specified export.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) () As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-106">형식 매개 변수는 <see cref="T:System.Lazy`1" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-106">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span>
          </span>
          <span data-ttu-id="d3060-107">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-107">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-108">Returns the export with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-108">Returns the export with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d3060-109">If there is not exactly one matching export, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-109">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-110">The export with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-110">The export with the contract name derived from the specified type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-111">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-111">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-112">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-112">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-113">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-113">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d3060-114">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-114">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-115">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-115">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) (contractName As String) As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-116">형식 매개 변수는 <see cref="T:System.Lazy`1" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-116">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-117">The contract name of the <see cref="T:System.Lazy`1" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-117">The contract name of the <see cref="T:System.Lazy`1" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-118">Returns the export with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-118">Returns the export with the specified contract name.</span>
          </span>
          <span data-ttu-id="d3060-119">If there is not exactly one matching export, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-119">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-120">The export with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-120">The export with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-121">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-121">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-122">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-122">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-123">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-123">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d3060-124">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-124">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-125">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-125">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) () As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-126">형식 매개 변수는 <see cref="T:System.Lazy`2" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-126">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
          <span data-ttu-id="d3060-127">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-127">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d3060-128">메타 데이터 보기의 종류는 <see cref="T:System.Lazy`2" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-128">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-129">Returns the export with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-129">Returns the export with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d3060-130">If there is not exactly one matching export, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-130">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-131">System.Lazy\`2</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-131">System.Lazy\`2</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-132">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-132">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-133">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-133">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-134">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-134">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d3060-135">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-135">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-136">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-136">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3060-137">
            <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-137">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) (contractName As String) As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-138">형식 매개 변수는 <see cref="T:System.Lazy`2" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-138">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d3060-139">메타 데이터 보기의 종류는 <see cref="T:System.Lazy`2" /> 반환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-139">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-140">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-140">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-141">Returns the export with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-141">Returns the export with the specified contract name.</span>
          </span>
          <span data-ttu-id="d3060-142">If there is not exactly one matching export, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-142">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-143">The export with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-143">The export with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-144">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-144">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-145">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-145">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-146">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-146">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d3060-147">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-147">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-148">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-148">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3060-149">
            <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-149">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-150">Gets an exported object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-150">Gets an exported object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : unit -&gt; 'T" Usage="exportProvider.GetExportedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-151">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-151">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d3060-152">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-152">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-153">Returns the exported object with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-153">Returns the exported object with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d3060-154">If there is not exactly one matching exported object, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-154">If there is not exactly one matching exported object, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-155">The exported object with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-155">The exported object with the contract name derived from the specified type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-156">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-156">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-157">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-157">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-158">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-158">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
          <span data-ttu-id="d3060-159">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-159">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-160">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-160">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-161">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-161">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-162">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-162">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-163">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-163">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : string -&gt; 'T" Usage="exportProvider.GetExportedValue contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-164">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-164">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-165">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-165">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-166">Returns the exported object with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-166">Returns the exported object with the specified contract name.</span>
          </span>
          <span data-ttu-id="d3060-167">If there is not exactly one matching exported object, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-167">If there is not exactly one matching exported object, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-168">The exported object with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-168">The exported object with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-169">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-169">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-170">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-170">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-171">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-171">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
          <span data-ttu-id="d3060-172">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-172">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-173">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-173">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-174">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-174">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-175">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-175">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-176">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-176">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-177">Gets a specified exported object or a default value if it is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-177">Gets a specified exported object or a default value if it is unavailable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : unit -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-178">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-178">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d3060-179">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-179">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-180">Gets the exported object with the contract name derived from the specified type parameter or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-180">Gets the exported object with the contract name derived from the specified type parameter or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-181">The exported object with the contract name derived from <paramref name="T" />, if found; otherwise, the default value for <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-181">The exported object with the contract name derived from <paramref name="T" />, if found; otherwise, the default value for <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-182">이 메서드가 반환에 대 한 적절 한 기본값이 내보낸된 개체가 없으면 `T`예: 정수 형식에는 0 `false` 부울 형식에 대 한 및 `null` 참조 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-182">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="d3060-183">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-183">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-184">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-184">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-185">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-185">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-186">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-186">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-187">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-187">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-188">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-188">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-189">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-189">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : string -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-190">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-190">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-191">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-191">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-192">Gets the exported object with the specified contract name or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-192">Gets the exported object with the specified contract name or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-193">The exported object with the specified contract name, if found; otherwise, the default value for <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-193">The exported object with the specified contract name, if found; otherwise, the default value for <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-194">이 메서드가 반환에 대 한 적절 한 기본값이 내보낸된 개체가 없으면 `T`예: 정수 형식에는 0 `false` 부울 형식에 대 한 및 `null` 참조 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-194">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="d3060-195">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-195">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-196">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-196">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-197">There is more than one exported object with the specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-197">There is more than one exported object with the specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-198">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-198">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-199">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-199">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-200">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-200">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-201">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-201">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValues&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-202">Gets one or more exported objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-202">Gets one or more exported objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : unit -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-203">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-203">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d3060-204">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-204">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-205">Gets all the exported objects with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-205">Gets all the exported objects with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-206">The exported objects with the contract name derived from the specified type parameter, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-206">The exported objects with the contract name derived from the specified type parameter, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-207">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-207">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-208">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-208">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-209">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-209">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-210">One or more of the underlying exported objects cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-210">One or more of the underlying exported objects cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-211">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-211">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-212">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-212">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) (contractName As String) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : string -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-213">반환할 내보낸된 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-213">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-214">The contract name of the exported objects to return; or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-214">The contract name of the exported objects to return; or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-215">Gets all the exported objects with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-215">Gets all the exported objects with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-216">The exported objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-216">The exported objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-217">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-217">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-218">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-218">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-219">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-219">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d3060-220">One or more of the underlying exported values cannot be cast to <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-220">One or more of the underlying exported values cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d3060-221">An error occurred during composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-221">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d3060-222">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-222">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3060-223">Gets all the exports matching the specified conditions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-223">Gets all the exports matching the specified conditions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d3060-224">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-224">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-225">Gets all exports that match the conditions of the specified import definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-225">Gets all exports that match the conditions of the specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-226">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-226">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-227">
            <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-227">
              <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
          <span data-ttu-id="d3060-228">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-228">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3060-229">
            <paramref name="definition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-229">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d3060-230">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-230">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d3060-231">The transactional container for the composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-231">The transactional container for the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-232">Gets all exports that match the conditions of the specified import definition and composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-232">Gets all exports that match the conditions of the specified import definition and composition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-233">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" /> and <paramref name="atomicComposition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-233">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" /> and <paramref name="atomicComposition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d3060-234">
            <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-234">
              <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
          <span data-ttu-id="d3060-235">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-235">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3060-236">
            <paramref name="definition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-236">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d3060-237">-or-  <paramref name="atomicComposition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-237">-or-  <paramref name="atomicComposition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type metadataViewType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;object, object&gt;&gt; GetExports(class System.Type type, class System.Type metadataViewType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ GetExports(Type ^ type, Type ^ metadataViewType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * Type * string -&gt; seq&lt;Lazy&lt;obj, obj&gt;&gt;" Usage="exportProvider.GetExports (type, metadataViewType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="metadataViewType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d3060-238">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-238">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </param>
        <param name="metadataViewType">
          <span data-ttu-id="d3060-239">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-239">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="d3060-240">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-240">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-241">Gets all the exports with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-241">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-242">A collection of all the <see cref="T:System.Lazy`2" /> objects for the contract matching <paramref name="contractName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-242">A collection of all the <see cref="T:System.Lazy`2" /> objects for the contract matching <paramref name="contractName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-243">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-243">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.</span></span>  
  
 <span data-ttu-id="d3060-244">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-244">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-245">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-245">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3060-246">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-246">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3060-247">
            <paramref name="metadataViewType" /> is not a valid metadata view type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-247">
              <paramref name="metadataViewType" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) () As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-248">형식 매개 변수는 <see cref="T:System.Lazy`1" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-248">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span>
          </span>
          <span data-ttu-id="d3060-249">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-249">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-250">Gets all the exports with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-250">Gets all the exports with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-251">The <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-251">The <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-252">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-252">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-253">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-253">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-254">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-254">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) (contractName As String) As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-255">형식 매개 변수는 <see cref="T:System.Lazy`1" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-255">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-256">The contract name of the <see cref="T:System.Lazy`1" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-256">The contract name of the <see cref="T:System.Lazy`1" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-257">Gets all the exports with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-257">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-258">The <see cref="T:System.Lazy`1" /> objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-258">The <see cref="T:System.Lazy`1" /> objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-259">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-259">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-260">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-260">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-261">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-261">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) () As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-262">형식 매개 변수는 <see cref="T:System.Lazy`2" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-262">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
          <span data-ttu-id="d3060-263">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-263">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d3060-264">메타 데이터 보기의 유형을 <see cref="T:System.Lazy`2" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-264">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d3060-265">Gets all the exports with the contract name derived from the specified type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-265">Gets all the exports with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-266">The <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-266">The <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-267">계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-267">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-268">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-268">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-269">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-269">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3060-270">
            <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-270">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) (contractName As String) As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d3060-271">형식 매개 변수는 <see cref="T:System.Lazy`2" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-271">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
          <span data-ttu-id="d3060-272">계약 이름이도이 형식 매개 변수에서 파생 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-272">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d3060-273">메타 데이터 보기의 유형을 <see cref="T:System.Lazy`2" /> 개체를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-273">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d3060-274">The contract name of the <see cref="T:System.Lazy`2" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-274">The contract name of the <see cref="T:System.Lazy`2" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-275">Gets all the exports with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-275">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-276">The <see cref="T:System.Lazy`2" /> objects with the specified contract name if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-276">The <see cref="T:System.Lazy`2" /> objects with the specified contract name if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-277">기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-277">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d3060-278">계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-278">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d3060-279">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-279">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3060-280">
            <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-280">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="abstract member GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d3060-281">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-281">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to return.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d3060-282">The transactional container for the composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-282">The transactional container for the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-283">Gets all the exports that match the constraint defined by the specified definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-283">Gets all the exports that match the constraint defined by the specified definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-284">A collection that contains all the exports that match the specified condition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-284">A collection that contains all the exports that match the specified condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3060-285">이 메서드의 재정의 카디널리티 관련 불일치를 오류로 취급 하지 않아야 하 고 이러한 경우 예외를 throw 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-285">Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases.</span></span> <span data-ttu-id="d3060-286">예를 들어 경우 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> 은 <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> 많고 0 <xref:System.ComponentModel.Composition.Primitives.Export> 의 지정 된 조건과 일치 하는 개체 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, 빈 <xref:System.Collections.Generic.IEnumerable%601> 컬렉션을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3060-286">For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanged(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanged (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanged(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d3060-287">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-287">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-288">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-288">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanging(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanging (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanging(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d3060-289">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-289">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-290">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-290">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExports">
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, [out] class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt;&amp; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition, [Runtime::InteropServices::Out] System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ % exports);" />
      <MemberSignature Language="F#" Value="member this.TryGetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition *  -&gt; bool" Usage="exportProvider.TryGetExports (definition, atomicComposition, exports)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d3060-291">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-291">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d3060-292">The transactional container for the composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-292">The transactional container for the composition.</span>
          </span>
        </param>
        <param name="exports">
          <span data-ttu-id="d3060-293">When this method returns, contains a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-293">When this method returns, contains a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
          <span data-ttu-id="d3060-294">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-294">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3060-295">Gets all the exports that match the conditions of the specified import.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-295">Gets all the exports that match the conditions of the specified import.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3060-296">
            <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-296">
              <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3060-297">
            <paramref name="definition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3060-297">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>