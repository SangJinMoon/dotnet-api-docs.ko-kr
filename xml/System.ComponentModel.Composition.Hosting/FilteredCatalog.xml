<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FilteredCatalog.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eec5106b169a7cb84701b49ba63d22728538aa13.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eec5106b169a7cb84701b49ba63d22728538aa13</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Represents a catalog after a filter function is applied to it.</source>
          <target state="translated">필터 함수가 적용된 후의 카탈로그를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">이 형식이 구현 하는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">직접 형식의 dispose를 호출 해당 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 <ph id="ph1">`using`</ph> (C#에서) 또는 <ph id="ph2">`Using`</ph> (Visual Basic)에서는 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스 항목입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The underlying catalog.</source>
          <target state="translated">내부 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The function to filter parts.</source>
          <target state="translated">부분을 필터링하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> class with the specified underlying catalog and filter.</source>
          <target state="translated">지정된 기본 카탈로그 및 필터를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed">
          <source>Occurs when the underlying catalog has changed.</source>
          <target state="translated">기본 카탈로그가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing">
          <source>Occurs when the underlying catalog is changing.</source>
          <target state="translated">기본 카탈로그가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement">
          <source>Gets a catalog that contains parts that are present in the underlying catalog but that were filtered out by the filter function.</source>
          <target state="translated">기본 카탈로그에 있지만 필터 함수로 필터링된 부분을 포함하는 카탈로그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement">
          <source>A catalog that contains the complement of this catalog.</source>
          <target state="translated">이 카탈로그의 보수를 포함하는 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 관리되는 리소스와 관리되지 않는 리소스를 해제하기 위해 <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>This method is called only by the public <ph id="ph1">`Dispose()`</ph> and <ph id="ph2">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id="ph3">`Dispose(Boolean)`</ph> method should be used as follows:</source>
          <target state="translated">공개적으로만이 메서드는 <ph id="ph1">`Dispose()`</ph> 및 <ph id="ph2">`Finalize()`</ph> 방식의이 메서드를 직접 호출 하지 않습니다. 부울 매개 변수 삭제 패턴을 구현 하는 경우는 <ph id="ph3">`Dispose(Boolean)`</ph> 메서드를 다음과 같이 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Dispose()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`true`</ph> to release both managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 현재 개체의 메서드를 호출 해야 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 부울 매개 변수와 함께 <ph id="ph3">`true`</ph> 와 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Finalize()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`false`</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">`Finalize()`</ph> 현재 개체의 메서드를 호출 해야 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 부울 매개 변수와 함께 <ph id="ph3">`false`</ph> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">카탈로그를 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">카탈로그를 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>The import to match.</source>
          <target state="translated">일치시킬 가져오기입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Gets the exported parts from this catalog that match the specified import.</source>
          <target state="translated">이 카탈로그에서 지정된 가져오기와 일치하는 내보내기 파트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>A collection of matching parts.</source>
          <target state="translated">일치하는 부분의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependencies.</source>
          <target state="translated">이 카탈로그의 모든 파트 및 해당 종속성을 모두 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependencies.</source>
          <target state="translated">이 카탈로그의 모든 파트 및 해당 종속성을 모두 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <source>The new catalog.</source>
          <target state="translated">새 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The filter for imports.</source>
          <target state="translated">가져오기에 대한 필터입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all dependencies that can be reached through imports that match the specified filter.</source>
          <target state="translated">이 카탈로그의 모든 부분과 지정된 필터와 일치하는 가져오기를 통해 도달할 수 있는 모든 종속 파일을 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The new catalog.</source>
          <target state="translated">새 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependents.</source>
          <target state="translated">이 카탈로그의 모든 파트 및 해당 종속 파일을 모두 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependents.</source>
          <target state="translated">이 카탈로그의 모든 파트 및 해당 종속 파일을 모두 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <source>The new catalog.</source>
          <target state="translated">새 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The filter for imports.</source>
          <target state="translated">가져오기에 대한 필터입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all dependents that can be reached through imports that match the specified filter.</source>
          <target state="translated">이 카탈로그의 모든 부분과 지정된 필터와 일치하는 가져오기를 통해 도달할 수 있는 모든 종속 파일을 포함하는 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The new catalog.</source>
          <target state="translated">새 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Provides data for the event.</source>
          <target state="translated">이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Provides data for the event.</source>
          <target state="translated">이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>