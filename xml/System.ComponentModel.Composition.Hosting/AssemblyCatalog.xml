<Type Name="AssemblyCatalog" FullName="System.ComponentModel.Composition.Hosting.AssemblyCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0ca83c848facec562749dd24349c5c7da2f3f4a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>관리 코드 어셈블리에서 특성이 지정된 부분을 검색합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 부품 지정된 된 어셈블리에 있는 모든 구문 분석 하는 데 사용 됩니다. 개체 참조 나 경로 대상 어셈블리를 나타낼 수 있습니다.  
  
> [!IMPORTANT]
>  이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다. 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다. 직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다. 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.  
  
 이 형식은 스레드로부터 안전합니다.  
  
   
  
## Examples  
 다음 코드에서는 만드는 응용 프로그램의 일반적인 시나리오는 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 자체 어셈블리를 구문 분석할 수 있습니다. 이것이에 프레임 워크 MEF (Managed Extensibility) 단일 프로젝트에 포함 된 파트를 로드 하는 간단한 방법입니다.  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</param>
        <summary>지정된 어셈블리를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeBase">
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</param>
        <summary>지정된 코드베이스를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 어셈블리 `codeBase` 로드 컨텍스트에 로드 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.  
  
 또는  
  
 버전 2.0 이전의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />가 이후 버전으로 컴파일된 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 경로 검색 권한이 없습니다.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" />를 로드할 수 없습니다.  
  
 또는  
  
 <paramref name="codeBase" />에 디렉터리가 지정되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codeBase" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" />가 없는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</param>
        <param name="definitionOrigin">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</param>
        <summary>지정된 어셈블리를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> 또는 <paramref name="definitionOrigin" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</param>
        <param name="reflectionContext">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</param>
        <summary>지정한 어셈블리 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="codeBase">
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</param>
        <param name="definitionOrigin">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</param>
        <summary>지정된 코드베이스를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.  
  
 또는  
  
 버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />가 이후 버전으로 컴파일되었습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 경로 검색 권한이 없습니다.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" />를 로드할 수 없습니다.  
  
 또는  
  
 <paramref name="codeBase" />에 디렉터리가 지정되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" /> 또는 <paramref name="definitionOrigin" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" />가 없는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="codeBase">
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</param>
        <param name="reflectionContext">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</param>
        <summary>지정된 코드베이스 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.  
  
 또는  
  
 버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />가 이후 버전으로 컴파일되었습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 경로 검색 권한이 없습니다.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" />를 로드할 수 없습니다.  
  
 또는  
  
 <paramref name="codeBase" />에 디렉터리가 지정되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" />가 없는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</param>
        <param name="reflectionContext">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</param>
        <param name="definitionOrigin">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</param>
        <summary>지정한 어셈블리 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" />, <paramref name="definitionOrigin" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />입니다.  
  
 또는  
  
 <paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="codeBase">
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</param>
        <param name="reflectionContext">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</param>
        <param name="definitionOrigin">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</param>
        <summary>지정된 코드베이스 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.  
  
 또는  
  
 버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />가 이후 버전으로 컴파일되었습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 경로 검색 권한이 없습니다.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" />를 로드할 수 없습니다.  
  
 또는  
  
 <paramref name="codeBase" />에 디렉터리가 지정되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" />, <paramref name="definitionOrigin" /> 또는 <paramref name="reflectionContext" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" />가 없는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특성 사용 형식이 어셈블리 카탈로그에 포함된 어셈블리를 가져옵니다.</summary>
        <value>특성 사용 <see cref="T:System.Type" /> 개체가 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />에 포함된 어셈블리입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>카탈로그를 반복하는 열거자를 반환합니다.</summary>
        <returns>카탈로그를 반복하는 데 사용할 수 있는 열거자입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">일치하는 내보내기를 지정하는 조건입니다.</param>
        <summary>가져오기 정의로 지정된 조건과 일치하는 내보내기의 컬렉션을 가져옵니다.</summary>
        <returns>
          <paramref name="definition" />으로 지정된 조건과 일치하는 내보내기의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체의 표시 이름을 가져옵니다.</summary>
        <value>이 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체의 형식과 어셈블리를 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 요소가 발생한 컴퍼지션 요소를 가져옵니다.</summary>
        <value>항상 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>어셈블리 카탈로그의 문자열 표현을 가져옵니다.</summary>
        <returns>어셈블리 카탈로그의 표현입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>