<Type Name="DirectoryCatalog" FullName="System.ComponentModel.Composition.Hosting.DirectoryCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58df7dbe9aa5deef6e4dbb6930fb789ee8b9e012" />
    <Meta Name="ms.sourcegitcommit" Value="22c9818dc4a11ae279d13a36bc98a3c6852e9316" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/20/2018" />
    <Meta Name="ms.locfileid" Value="39169420" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement, INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Hosting::INotifyComposablePartCatalogChanged, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type DirectoryCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface INotifyComposablePartCatalogChanged&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f9f94-101">지정된 디렉터리의 어셈블리에 있는 특성이 지정된 부분을 검색합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9f94-101">Discovers attributed parts in the assemblies in a specified directory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f94-102">사용할 수는 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 지정 된 디렉터리의 내용을 구문 분석 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-102">You can use a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object to parse the contents of a designated directory.</span></span> <span data-ttu-id="f9f94-103">동적 연결 라이브러리 (DLL) 파일에 포함 된 모든 특성된 추출 되 고 카탈로그를 통해 사용 가능 합니다. 특정 Dll로 구문 분석을 제한 하려면 검색 패턴과 동일한 구문으로 사용 하 여 지정할 수 있습니다는 <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f9f94-103">Any attributed parts contained in dynamic link library (DLL) files are extracted and made available through the catalog.To restrict parsing to specific DLLs, you can specify a search pattern by using the same syntax as the <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f9f94-104">지정된 된 디렉터리에서 관리자 이외의 사용자에 대 한 액세스를 허용 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-104">The designated directory should not allow access to non-administrators.</span></span> <span data-ttu-id="f9f94-105">예를 들어 임시 인터넷 파일을 포함 하는 폴더를 사용 하 여 응용 프로그램에서 취약점으로 인 한 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-105">For example, using a folder that contains temporary Internet files could create vulnerabilities in your application.</span></span>  
  
 <span data-ttu-id="f9f94-106">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f9f94-107">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f9f94-108">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f9f94-109">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="f9f94-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f9f94-110">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9f94-111">다음 예제에서는 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 파트에서 실행 되는 응용 프로그램 디렉터리를 검색 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-111">The following example creates a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object that searches the directory the application runs from for parts.</span></span> <span data-ttu-id="f9f94-112">카탈로그를 테스트할 간단한 가져오기를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-112">It uses a simple import to test the catalog.</span></span> <span data-ttu-id="f9f94-113">이 가져오기를 수행 하려면 디렉터리에서 DLL을 두 번째 코드 블록에 설명 된 대로 일치 하는 내보내기가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-113">To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/consoleapplication7/program.cs#1)]
 [!code-vb[Composition.DirectoryCatalog#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/consoleapplication8/module1.vb#1)]  
  
 <span data-ttu-id="f9f94-114">일치 하는 내보내기를 만들려면 다음 코드는 DLL 파일에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-114">To create the matching export, the following code must be in a DLL file.</span></span> <span data-ttu-id="f9f94-115">Visual Studio에서 DLL 파일을 만들려면 "클래스 라이브러리" 형식의 새 프로젝트를 솔루션에 추가 하 고이 코드에 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-115">To create a DLL file in Visual Studio, add a new project of the type "Class Library" to your solution, and place this code in it.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#2](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/classlibrary1/class1.cs#2)]
 [!code-vb[Composition.DirectoryCatalog#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/classlibrary1/class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-116">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-117">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-117">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-118">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-118">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-119">지정된 디렉터리 경로의 모든 DLL 파일에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-120">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-120">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-121">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-121">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-122">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-122">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-123">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-123">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-124">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-124">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-125">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-125">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-126">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-126">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="f9f94-127">진단 시 파트의 소스를 식별하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-127">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-128">해당 부분에 대해 지정된 소스와 함께 지정된 디렉터리 경로 내에서 모든 DLL 파일에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-129">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-129">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-130">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-131">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-132">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-132">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-133">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-133">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-134">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-134">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-135">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-135">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="f9f94-136">부품을 만드는 데 사용되는 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-136">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-137">지정된 리플렉션 컨텍스트에서 지정된 디렉터리 경로 내 모든 DLL 파일에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-137">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-138">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-138">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-139">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-139">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-140">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-140">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-141">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-141">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-142">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-142">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-143">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-143">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-144">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-144">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="f9f94-145">검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-145">The search string.</span>
          </span>
          <span data-ttu-id="f9f94-146">문자열 형식은 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 메서드에 대해 지정한 것과 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-146">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-147">지정된 디렉터리 경로에서 지정된 검색 패턴과 일치하는 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-147">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match a specified search pattern in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-148">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-148">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-149">
            <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-149">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-150">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-151">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="f9f94-152">-또는-  <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-152">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-153">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-153">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-154">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-154">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-155">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-155">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="f9f94-156">부품을 만드는 데 사용되는 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-156">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="f9f94-157">진단 시 파트의 소스를 식별하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-157">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-158">지정된 리플렉션 컨텍스트에서 지정된 디렉터리 경로 내 모든 DLL 파일에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-158">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by  using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-159">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-159">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-160">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-160">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-161">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-161">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-162">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-162">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-163">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-163">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-164">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-164">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-165">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-165">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="f9f94-166">검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-166">The search string.</span>
          </span>
          <span data-ttu-id="f9f94-167">문자열 형식은 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 메서드에 대해 지정한 것과 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-167">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="f9f94-168">진단 시 파트의 소스를 식별하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-168">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-169">파트의 지정된 소스와 함께 지정된 디렉터리 경로에서 지정된 검색 패턴에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-169">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-170">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-170">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-171">
            <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-171">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-172">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-172">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-173">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-173">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="f9f94-174">-또는-  <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-174">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-175">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-175">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-176">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-176">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-177">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-177">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="f9f94-178">검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-178">The search string.</span>
          </span>
          <span data-ttu-id="f9f94-179">문자열 형식은 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 메서드에 대해 지정한 것과 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-179">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="f9f94-180">부품을 만드는 데 사용되는 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-180">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-181">지정된 리플렉션 컨텍스트를 사용하여 지정된 디렉터리 경로에서 지정된 검색 패턴에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-181">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-182">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-182">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-183">
            <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-183">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-184">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-184">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-185">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-185">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="f9f94-186">-또는-  <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-186">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-187">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-187">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9f94-188">카탈로그에 추가할 어셈블리를 검색할 디렉터리의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-188">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="f9f94-189">경로는 절대 경로이거나 <see cref="P:System.AppDomain.BaseDirectory" />에 상대적인 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-189">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="f9f94-190">검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-190">The search string.</span>
          </span>
          <span data-ttu-id="f9f94-191">문자열 형식은 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 메서드에 대해 지정한 것과 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-191">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="f9f94-192">부품을 만드는 데 사용되는 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-192">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="f9f94-193">진단 시 파트의 소스를 식별하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-193">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-194">지정된 리플렉션 컨텍스트를 사용하여 지정된 디렉터리 경로에서 지정된 검색 패턴에 기반한 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체를 사용하여 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-194">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9f94-195">지정된 <paramref name="path" />가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-195">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-196">
            <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-196">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9f94-197">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-197">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9f94-198">
            <paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 구현 관련 잘못된 문자를 하나 이상 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-198">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="f9f94-199">-또는-  <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-199">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9f94-200">지정된 <paramref name="path" />나 파일 이름 또는 둘 모두가 시스템에 정의된 최대 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-200">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changed : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-201">카탈로그의 내용이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-201">Occurs when the contents of the catalog has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changing As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changing;" />
      <MemberSignature Language="F#" Value="member this.Changing : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changing : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-202">카탈로그가 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-202">Occurs when the catalog is changing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="directoryCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f9f94-203">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-203">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-204">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-204">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-205">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체에서 관찰되는 변환된 절대 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-205">Gets the translated absolute path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-206">카탈로그에서 관찰되는 변환된 절대 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-206">The translated absolute path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="directoryCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-207">카탈로그를 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-207">Returns an enumerator that iterates through the catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9f94-208">카탈로그를 반복하는 데 사용할 수 있는 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-208">An enumerator that can be used to iterate through the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="directoryCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="f9f94-209">반환할 <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> 개체의 조건입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-209">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-210">지정된 가져오기 정의로 표현되는 제약 조건과 일치하는 내보내기 정의를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-210">Gets the export definitions that match the constraint expressed by the specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9f94-211">
            <paramref name="definition" />으로 지정된 제약 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> 개체와 그와 연결된 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 개체를 포함하는 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-211">A collection of objects that contain the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects and their associated <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match the constraint specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f9f94-212">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-212">The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9f94-213">
            <paramref name="definition" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-213">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; LoadedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; LoadedFiles" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedFiles As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ LoadedFiles { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedFiles : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-214">현재 카탈로그에 로드된 파일의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-214">Gets the collection of files currently loaded in the catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-215">현재 카탈로그에 로드된 파일의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-215">A collection of files currently loaded in the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9f94-216">이벤트 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-216">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-217">
            <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-217">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanging(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanging (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanging(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9f94-218">이벤트 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-218">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9f94-219">
            <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-219">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-220">디렉터리 카탈로그에 포함된 파트 정의를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-220">Gets the part definitions that are contained in the directory catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-221">합니다 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 에 포함 된 개체는 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-221">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</span>
          </span>
        </value>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f9f94-222">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-222">The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object has been disposed of.</span>
          </span>
        </exception>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-223">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체에서 관찰되는 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-223">Gets the path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-224">카탈로그에서 관찰되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-224">The path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="directoryCatalog.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-225">검색 패턴과 일치하는 디렉터리의 최신 파일로 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 개체를 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-225">Refreshes the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects with the latest files in the directory that match the search pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f94-226">파일 디렉터리를 추가한 경우 카탈로그에도 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-226">If files were added to the directory, they are also added to the catalog.</span></span> <span data-ttu-id="f9f94-227">파일 디렉터리에서 제거 된 경우 또한 카탈로그에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-227">If files were removed from the directory, they are also removed from the catalog.</span></span> <span data-ttu-id="f9f94-228">제거 된 파일에 대 한 어셈블리 수 없는 이므로 프로세스에서 언로드할 <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition> 개체 파일과 카탈로그 에서만에서 제거 될 예정입니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-228">For files that have been removed, the assembly cannot be unloaded from the process, so <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition> objects for those files will be removed only from the catalog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchPattern">
      <MemberSignature Language="C#" Value="public string SearchPattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SearchPattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SearchPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SearchPattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SearchPattern : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-229">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 개체의 생성자에 전달된 검색 패턴을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-229">Gets the search pattern that is passed into the constructor of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-230">카탈로그에서 파일을 찾는 데 사용하는 검색 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-230">The search pattern the catalog uses to find files.</span>
          </span>
          <span data-ttu-id="f9f94-231">기본값은 모든 DLL 파일을 반환하는 \*.dll입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-231">The default is \*.dll, which returns all DLL files.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-232">디렉터리 카탈로그의 표시 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-232">Gets the display name of the directory catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-233">디렉터리 카탈로그의 사람이 읽을 수 있는 표시 이름이 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-233">A string that contains a human-readable display name of the directory catalog.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f94-234">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f9f94-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f9f94-235"><xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-235">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-236">디렉터리 카탈로그가 발생한 컴퍼지션 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-236">Gets the composition element from which the directory catalog originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9f94-237">항상 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-237">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9f94-238">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f9f94-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f9f94-239"><xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f9f94-239">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9f94-240">디렉터리 카탈로그의 문자열 표현을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-240">Gets a string representation of the directory catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9f94-241">카탈로그의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9f94-241">A string representation of the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>