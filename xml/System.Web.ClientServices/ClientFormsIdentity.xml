<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ba10aea8537e9462a1568aff18b4c55f7382282" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53525997" /></Metadata><TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1e0ef-101">폼 인증을 사용하여 클라이언트 애플리케이션 서비스에 대해 인증된 사용자의 ID를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-101">Represents a user identity authenticated for client application services by using forms authentication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-102">클라이언트 애플리케이션 서비스 기능은이 클래스를 사용 하 여 인증 된 사용자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-102">The client application services feature uses this class to represent an authenticated user.</span></span> <span data-ttu-id="1e0ef-103">클라이언트 응용 프로그램 서비스 및 폼 인증을 사용 하도록 응용 프로그램을 구성할 때 호출 하 여 사용자를 인증할 수 있습니다 합니다 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-103">When you configure your application to use client application services and forms authentication, you can authenticate a user by calling the `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1e0ef-104">인증 후 현재에 대 한 참조를 검색할 수 있습니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 통해 인스턴스를 <xref:System.Security.Principal.IPrincipal.Identity%2A> 의 속성을 <xref:System.Security.Principal.IPrincipal> 검색할를 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-104">After authentication, you can retrieve a reference to the current <xref:System.Web.ClientServices.ClientFormsIdentity> instance through the <xref:System.Security.Principal.IPrincipal.Identity%2A> property of the <xref:System.Security.Principal.IPrincipal> retrieved through the `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1e0ef-105">자세한 내용은 [클라이언트 애플리케이션 서비스](~/docs/framework/common-client-technologies/client-application-services.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-105">For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).</span></span>  
  
 <span data-ttu-id="1e0ef-106">일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-106">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="1e0ef-107">확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-107">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="1e0ef-108">그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-108">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="1e0ef-109">클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-109">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span>  
  
 <span data-ttu-id="1e0ef-110">명시적 사용 해야 합니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 호출에 대 한 참조를 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 에서 정의 되지 않은 메서드는 <xref:System.Security.Principal.IIdentity> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-110">You must use an explicit <xref:System.Web.ClientServices.ClientFormsIdentity> reference to call the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method, which is not defined by the <xref:System.Security.Principal.IIdentity> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e0ef-111">다음 예제 코드에서는이 클래스를 사용 하 여 애플리케이션을 오프 라인 상태로 유지 하는 경우 사용자를 자동으로 유효성 검사를 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-111">The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="1e0ef-112">이 예제는 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 확인란 값과 일치 하도록 오프 라인 상태를 업데이트 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-112">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="1e0ef-113">애플리케이션을 온라인 상태로 설정 하는 사용자, 이벤트 처리기를 호출 하 여 사용자 유효성 검사를 다시 시도 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-113">If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="1e0ef-114">그러나 인증 서버를 사용할 수 없는 경우 이벤트 처리기에 애플리케이션을 오프 라인 상태로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-114">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e0ef-115"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드는 편의상의 목적으로만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-115">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="1e0ef-116">반환 값이 없기 때문에 유효성 재검사가 실패했는지 여부를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-116">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="1e0ef-117">예를 들어 서버에서 사용자 자격 증명이 변경된 경우 유효성 재검사가 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-117">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="1e0ef-118">이 경우 서비스 호출이 실패한 후 명시적으로 사용자의 유효성을 검사하는 코드를 포함하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-118">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="1e0ef-119">자세한 내용은 웹 설정 액세스 섹션을 참조 하세요 [연습: 클라이언트 애플리케이션 서비스를 사용 하 여](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-119">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
    <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-120">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-120">Client Application Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bb7c8950-4517-4dae-b705-b74a14059b26"><span data-ttu-id="1e0ef-121">연습: 클라이언트 애플리케이션 서비스 사용</span><span class="sxs-lookup"><span data-stu-id="1e0ef-121">Walkthrough: Using Client Application Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e0ef-122">인증된 사용자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-122">The name of the authenticated user.</span></span></param>
        <param name="password"><span data-ttu-id="1e0ef-123">인증된 사용자의 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-123">The password of the authenticated user.</span></span></param>
        <param name="provider"><span data-ttu-id="1e0ef-124">사용자를 인증하는 데 사용되는 멤버 자격 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-124">The membership provider used to authenticate the user.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="1e0ef-125">사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-125">The type of authentication that is used.</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="1e0ef-126">사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-126"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></param>
        <param name="authenticationCookies"><span data-ttu-id="1e0ef-127">인증 서비스에서 검색된 쿠키입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-127">The cookies retrieved from the authentication service.</span></span></param>
        <summary><span data-ttu-id="1e0ef-128"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-128">Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-129">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-129">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e0ef-130">인증 서비스에서 검색된 쿠키의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-130">Gets a collection of the cookies retrieved from the authentication service.</span></span></summary>
        <value><span data-ttu-id="1e0ef-131">인증 서비스에서 검색된 쿠키입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-131">The cookies retrieved from the authentication service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-132">애플리케이션 코드에서 사용 하기 위해이 속성을 사용 하는 것이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-132">This property is not meant for use in your application code.</span></span> <span data-ttu-id="1e0ef-133">이 속성을 통해 검색 된 쿠키를 의미 있게 수정할 수 없습니다 하 고 유용한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-133">You cannot meaningfully modify the cookies retrieved through this property, and they contain no useful information.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-134">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-134">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e0ef-135">사용자를 인증하는 데 사용되는 인증 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-135">Gets the type of authentication that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="1e0ef-136">사용자를 인증하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-136">The type of authentication that is used to authenticate the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-137">일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-137">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="1e0ef-138">확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-138">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="1e0ef-139">그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-139">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="1e0ef-140">클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-140">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="1e0ef-141">자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-141">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e0ef-142">다음 예제 코드를 통해이 속성을 사용 하는 방법에 설명 된 <xref:System.Security.Principal.IIdentity> 클라이언트 애플리케이션 서비스에 대 한 현재 사용자가 인증 되었는지 여부를 확인 하기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-142">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="1e0ef-143">이 예제에서는 애플리케이션 기본 구성 사용자는 인증 쿠키가 만료 될 때 다시 로그인 할 필요가 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-143">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="1e0ef-144">그렇지 않은 경우는 <xref:System.Net.WebException> 사용자 로그인이 만료 되었음을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-144">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="1e0ef-145">자세한 내용은 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-145">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-146">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-146">Client Application Services</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8"><span data-ttu-id="1e0ef-147">방법: 클라이언트 애플리케이션 서비스 구성</span><span class="sxs-lookup"><span data-stu-id="1e0ef-147">How to: Configure Client Application Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e0ef-148"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-148">Releases the resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-149">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-149">Client Application Services</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e0ef-150"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-150">Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-151"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 사용을 마치면 <xref:System.Web.ClientServices.ClientFormsIdentity>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-151">Call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> when you are finished using the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="1e0ef-152"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 메서드를 사용하면 <xref:System.Web.ClientServices.ClientFormsIdentity>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-152">The <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> method leaves the <xref:System.Web.ClientServices.ClientFormsIdentity> in an unusable state.</span></span> <span data-ttu-id="1e0ef-153">호출한 후 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Web.ClientServices.ClientFormsIdentity> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-153">After calling <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, you must release all references to the <xref:System.Web.ClientServices.ClientFormsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Web.ClientServices.ClientFormsIdentity> was occupying.</span></span> <span data-ttu-id="1e0ef-154">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-154">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e0ef-155"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Web.ClientServices.ClientFormsIdentity>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-155">Always call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="1e0ef-156">이렇게 하지 않으면 가비지 수집기가 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-156">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Web.ClientServices.ClientFormsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-157">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-157">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1e0ef-158">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-158"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1e0ef-159"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-159">Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-160">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-160">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1e0ef-161">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-161">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1e0ef-162"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-162"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1e0ef-163">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Web.ClientServices.ClientFormsIdentity> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-163">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Web.ClientServices.ClientFormsIdentity> references.</span></span> <span data-ttu-id="1e0ef-164">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-164">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1e0ef-165">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-165">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1e0ef-166">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-166">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1e0ef-167">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-167">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="1e0ef-168">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-168">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-169">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-169">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e0ef-170">사용자가 인증되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-170">Gets a value indicating whether the user has been authenticated.</span></span></summary>
        <value><span data-ttu-id="1e0ef-171">사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-171"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-172">일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-172">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="1e0ef-173">확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-173">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="1e0ef-174">그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-174">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="1e0ef-175">클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-175">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="1e0ef-176">자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-176">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e0ef-177">다음 예제 코드를 통해이 속성을 사용 하는 방법에 설명 된 <xref:System.Security.Principal.IIdentity> 클라이언트 애플리케이션 서비스에 대 한 현재 사용자가 인증 되었는지 여부를 확인 하기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-177">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="1e0ef-178">이 예제에서는 애플리케이션 기본 구성 사용자는 인증 쿠키가 만료 될 때 다시 로그인 할 필요가 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-178">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="1e0ef-179">그렇지 않은 경우는 <xref:System.Net.WebException> 사용자 로그인이 만료 되었음을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-179">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="1e0ef-180">자세한 내용은 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-180">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-181">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-181">Client Application Services</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8"><span data-ttu-id="1e0ef-182">방법: 클라이언트 애플리케이션 서비스 구성</span><span class="sxs-lookup"><span data-stu-id="1e0ef-182">How to: Configure Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e0ef-183">사용자 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-183">Gets the name of the user.</span></span></summary>
        <value><span data-ttu-id="1e0ef-184">사용자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-184">The name of the user.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-185">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-185">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e0ef-186">사용자를 인증하는 데 사용되는 멤버 자격 공급자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-186">Gets the membership provider that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="1e0ef-187">사용자를 인증하는 데 사용되는 멤버 자격 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-187">The membership provider that is used to authenticate the user.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-188">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-188">Client Application Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e0ef-189">캐시된 자격 증명을 사용하여 자동으로 사용자를 인증합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-189">Silently authenticates the user by using cached credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e0ef-190">폼 인증을 사용 하 여 현재 사용자의 유효성을 검사 하는 경우는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스는 애플리케이션 실행 되는 사용자 자격 증명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-190">When you use forms authentication to validate the current user, the <xref:System.Web.ClientServices.ClientFormsIdentity> class stores the user credentials as long as the application is running.</span></span> <span data-ttu-id="1e0ef-191">그러나 사용자가 인증 쿠키가 만료 될 때까지만 인증 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-191">However, the user is only authenticated until the authentication cookie expires.</span></span> <span data-ttu-id="1e0ef-192">쿠키가 만료 된 후 원격 역할 또는 웹 설정 서비스에 액세스 하는 사용자 유효성을 재검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-192">After the cookie expires, the user must be revalidated to access the remote roles or Web settings services.</span></span> <span data-ttu-id="1e0ef-193">사용할 수는 **서비스에 대 한 고급 설정** 대화 상자에 설명 된 대로 사용자를 자동으로 유효성 검사를 애플리케이션을 구성할 수 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-193">You can use the **Advanced Settings for Services** dialog box to configure your application to automatically revalidate the user, as described in [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span> <span data-ttu-id="1e0ef-194">그러나 쿠키 만료를 적용 하도록 애플리케이션을 구성 하는 경우 있습니다 수 프로그래밍 방식으로 유효성을 다시 검사를 호출 하 여는 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-194">However, if you configure your application to honor the cookie expiration, you can programmatically revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="1e0ef-195">이 메서드는 또한 유용 오프 라인 모드에서 온라인 모드로 전환 하는 경우 애플리케이션 종료 때문에 동안 오프 라인입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-195">This method is also useful when switching from offline mode to online mode, because the application may have been shut down while offline.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e0ef-196"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드는 편의상의 목적으로만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-196">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="1e0ef-197">반환 값이 없기 때문에 유효성 재검사가 실패했는지 여부를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-197">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="1e0ef-198">예를 들어 서버에서 사용자 자격 증명이 변경된 경우 유효성 재검사가 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-198">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="1e0ef-199">이 경우 서비스 호출이 실패한 후 명시적으로 사용자의 유효성을 검사하는 코드를 포함하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-199">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="1e0ef-200">자세한 내용은 웹 설정 액세스 섹션을 참조 하세요 [연습: 클라이언트 애플리케이션 서비스를 사용 하 여](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-200">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e0ef-201">다음 예제 코드에서는이 메서드를 사용 하 여 애플리케이션을 오프 라인 상태로 유지 하는 경우 사용자를 자동으로 유효성 검사를 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-201">The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="1e0ef-202">이 예제는 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 확인란 값과 일치 하도록 오프 라인 상태를 업데이트 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-202">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="1e0ef-203">애플리케이션을 온라인 상태로 설정 하는 사용자, 이벤트 처리기를 다시 사용자 유효성을 검사 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-203">If the user sets the application to the online state, the event handler attempts to revalidate the user.</span></span> <span data-ttu-id="1e0ef-204">그러나 인증 서버를 사용할 수 없는 경우 이벤트 처리기에 애플리케이션을 오프 라인 상태로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e0ef-204">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e"><span data-ttu-id="1e0ef-205">클라이언트 애플리케이션 서비스</span><span class="sxs-lookup"><span data-stu-id="1e0ef-205">Client Application Services</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8"><span data-ttu-id="1e0ef-206">방법: 클라이언트 애플리케이션 서비스 구성</span><span class="sxs-lookup"><span data-stu-id="1e0ef-206">How to: Configure Client Application Services</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/6dde4a2d-85e1-4275-aa55-24b84111be91"><span data-ttu-id="1e0ef-207">서비스의 고급 설정 대화 상자</span><span class="sxs-lookup"><span data-stu-id="1e0ef-207">Advanced Settings for Services Dialog Box</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb7c8950-4517-4dae-b705-b74a14059b26"><span data-ttu-id="1e0ef-208">연습: 클라이언트 애플리케이션 서비스 사용</span><span class="sxs-lookup"><span data-stu-id="1e0ef-208">Walkthrough: Using Client Application Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>