<Type Name="ClientRolePrincipal" FullName="System.Web.ClientServices.ClientRolePrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9290b9a3de00fd668767c08eaafd8406fe72ceea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36405003" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRolePrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRolePrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientRolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRolePrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRolePrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClientRolePrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>클라이언트 응용 프로그램 서비스에 대한 역할 정보를 비롯한 보안 정보를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 응용 프로그램 서비스에서 사용자를 확인할 때는 <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 또는 <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 설정는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성을이 클래스의 인스턴스로. <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성의 새 인스턴스를는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스입니다. <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성을는 <xref:System.Security.Principal.WindowsIdentity> 에서 반환 된 개체는 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> 메서드.  
  
 있습니다 됩니다 하지 일반적으로이 클래스에 직접 액세스 합니다. 일반적으로 호출 하는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 의 메서드는 <xref:System.Security.Principal.IPrincipal> 에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성. 캐스팅할 수 있습니다는 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성 값을 한 <xref:System.Web.ClientServices.ClientRolePrincipal> 호출에 대 한 참조는 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> 메서드 "예" 섹션에서와 같이 명시적으로 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자가 "manager" 역할인 경우에 단추를 표시 하려면이 클래스를 사용 하는 방법을 보여 줍니다. 이 예제는 <xref:System.Windows.Forms.Button> 라는 `managerOnlyButton` 초기값 <xref:System.Windows.Forms.Control.Visible%2A> 속성 값이 `false`합니다.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
    <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
    <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientRolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.ClientServices.ClientRolePrincipal" Usage="new System.Web.ClientServices.ClientRolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">현재 사용자를 나타냅니다.</param>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성의 값을 초기화는 `identity` 매개 변수입니다.  
  
 클라이언트 응용 프로그램 서비스에서 사용자를 확인할 때는 <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 또는 <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 설정는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성을이 클래스의 인스턴스로. <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성의 새 인스턴스를는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스입니다. <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성을는 <xref:System.Security.Principal.WindowsIdentity> 에서 반환 된 개체는 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />과 관련된 보안 ID를 가져옵니다.</summary>
        <value>현재 사용자를 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 응용 프로그램 서비스에서 사용자를 확인할 때는 <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 또는 <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 설정는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성을이 클래스의 인스턴스로. <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성의 새 인스턴스를는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스입니다. <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> 초기화는 <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 속성을는 <xref:System.Security.Principal.WindowsIdentity> 에서 반환 된 개체는 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="clientRolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">확인할 역할입니다.</param>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />로 나타낸 사용자가 지정된 역할에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>사용자가 지정된 역할에 속하면 <see langword="true" />이고, 사용자가 지정된 역할에 속하지 않거나 인증되지 않았으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 호출 하는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 의 메서드는 <xref:System.Security.Principal.IPrincipal> 에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성. 캐스팅할 수 있습니다는 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성 값을 한 <xref:System.Web.ClientServices.ClientRolePrincipal> "예" 섹션에서와 같이 명시적으로이 메서드를 호출에 대 한 참조입니다.  
  
 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> 메서드는 사용자 로그인이 만료된 경우 항상 `false` 를 반환합니다. 응용 프로그램에서 호출 하는 경우 동기화 되지 것입니다는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드를 한 번 인증 후 즉시 합니다. 다른 시간에 응용 프로그램이 사용자 역할을 검색해야 하는 경우 해당 로그인이 만료된 사용자의 유효성을 다시 검사하는 코드를 추가하는 것이 좋습니다. 모든 유효한 사용자가 역할에 할당되면 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=nameWithType> 메서드를 호출하여 로그인이 만료되었는지 여부를 확인할 수 있습니다. 역할이 반환되지 않는 경우 로그인이 만료된 것입니다. 이 기능의 예는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 메서드를 참조하세요. 이 기능은 응용 프로그램 구성에서 **서버 쿠키가 만료될 때마다 다시 사용자 로그온** 을 선택한 경우에만 필요합니다. 자세한 내용은 [방법: 클라이언트 응용 프로그램 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자가 "manager" 역할인 경우에 단추를 표시 하려면이 메서드를 사용 하는 방법을 보여 줍니다. 이 예제는 <xref:System.Windows.Forms.Button> 라는 `managerOnlyButton` 초기값 <xref:System.Windows.Forms.Control.Visible%2A> 속성 값이 `false`합니다.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>