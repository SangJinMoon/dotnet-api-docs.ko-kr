<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Complex.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51adbe02d035bfc5cd2896e8b0e40079375718a5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1adbe02d035bfc5cd2896e8b0e40079375718a5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Represents a complex number.</source>
          <target state="translated">복소수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number is a number that comprises a real number part and an imaginary number part.</source>
          <target state="translated">복소수는 실수 부분과 허수 부분을 구성 하는입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number z is usually written in the form z = x + yi, where <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept> are real numbers, and <bpt id="p3">*</bpt>i<ept id="p3">*</ept> is the imaginary unit that has the property <bpt id="p4">*</bpt>i<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</source>
          <target state="translated">복소수 z 보통 z 형태로 작성 = x + yi, 여기서 <bpt id="p1">*</bpt>x<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>y<ept id="p2">*</ept> 는 실시간 숫자 및 <bpt id="p3">*</bpt>i<ept id="p3">*</ept> 는 속성이 있는 허수 단위 <bpt id="p4">*</bpt>i<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> =-1입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is represented by <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, and the imaginary part of the complex number is represented by <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
          <target state="translated">복소수의 실수 부분으로 표시 됩니다 <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, 고 있는 복소수의 허수 부분으로 표현 됩니다 <bpt id="p2">*</bpt>y<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 데카르트 좌표계 (real 가공)을 사용 하 여 형식 인스턴스화 및 복소수를 조작 하는 경우.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane.</source>
          <target state="translated">복소수는 복합 평면의 라고 하는 2 차원 좌표 시스템의 요소로 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).</source>
          <target state="translated">X 축 (가로 축)에 있는 복소수의 실수 부분 놓이고 허수 부분 (세로 축) y 축에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:</source>
          <target state="translated">복합 평면의 중에 표현할 수 있습니다를 사용 하 여 극좌표 형 좌표계, 극좌표에서의 절대 값에 따라, 점을 두 숫자의 특징은:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).</source>
          <target state="translated">크기에 원점 으로부터 점의 거리입니다 (즉, 0, 0, 또는 x 축과 y 축 교차 하는 지점)입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its phase, which is the angle between the real axis and the line drawn from the origin to the point.</source>
          <target state="translated">단계는 실제 축과 지점에는 원본에서 가져온 선 사이의 각도입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instantiating a Complex Number</source>
          <target state="translated">복소수 인스턴스화</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can assign a value to a complex number in one of the following ways:</source>
          <target state="translated">다음 방법 중 하나를 복소수로 값을 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By passing two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to its constructor.</source>
          <target state="translated">두 전달 하 여 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 해당 생성자에는 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The first value represents the real part of the complex number, and the second value represents its imaginary part.</source>
          <target state="translated">첫 번째 값 있는 복소수의 실수 부분을 나타내고 두 번째 값 허수 부분을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.</source>
          <target state="translated">이러한 값 2 차원 데카르트 좌표계에 복잡 한 수의 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By calling the static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> method to create a complex number from its polar coordinates.</source>
          <target state="translated">정적을 호출 하 여 (<ph id="ph1">`Shared`</ph> Visual basic에서) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> 극좌표에서 복소수를 만드는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning a <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, or <ph id="ph10">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">할당 하 여 한 <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, 또는 <ph id="ph10">&lt;xref:System.Double&gt;</ph> 값을 <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">복소수의 실수 부분은 되 고 허수 부분이 0입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By casting (in C#) or converting (in Visual Basic) a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">캐스팅 (C#) 또는 변환 (Visual Basic의 경우)으로 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> 값을 한 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">복소수의 실수 부분은 되 고 허수 부분이 0입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning the complex number that is returned by a method or operator to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">메서드 또는 연산자에서 반환 되는 복소수를 할당 하 여 한 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> is a static method that returns a complex number that is the sum of two complex numbers, and the <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> operator adds two complex numbers and returns the result.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> 복잡 한 숫자는 두 개의 복소수의 합계를 반환 하는 정적 메서드는 및 <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> 연산자는 두 개의 복소수를 추가 하 고 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example demonstrates each of these five ways of assigning a value to a complex number.</source>
          <target state="translated">다음 예제에서는 5 개의 복소수에 값을 할당 방법은 각를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operations with Complex Numbers</source>
          <target state="translated">복소수를 사용 하 여 작업</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> structure in the .NET Framework includes members that provide the following functionality:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> .NET Framework의 구조는 다음과 같은 기능을 제공 하는 멤버를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to compare two complex numbers to determine whether they are equal.</source>
          <target state="translated">두 복소수가 같은지 여부를 비교 하는 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operators to perform arithmetic operations on complex numbers.</source>
          <target state="translated">복소수에 산술 연산을 수행 하는 연산자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 연산자를 사용 하 여 더하기, 빼기, 곱하기, 나누기, 및 단항 부정 연산자 복소수를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform other numerical operations on complex numbers.</source>
          <target state="translated">복소수에서 다른 숫자 작업을 수행 하는 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.</source>
          <target state="translated">4 개의 기본 산술 연산을 복소수의 지정한 지 수, 된 복소수의 제곱근을 복소수의 절대 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform trigonometric operations on complex numbers.</source>
          <target state="translated">복소수에서 삼각 작업을 수행 하는 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, you can calculate the tangent of an angle represented by a complex number.</source>
          <target state="translated">예를 들어 복잡 한 수로 표시 된 각도의 탄젠트 값을 계산할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that, because the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> properties are read-only, you cannot modify the value of an existing <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> 속성이 읽기 전용인 지, 기존 값을 수정할 수 없습니다 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>All methods that perform an operation on a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, if their return value is of type <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, return a new <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> number.</source>
          <target state="translated">작업을 수행 하는 모든 메서드는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 숫자, 해당 반환 값 형식이 면 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, 새 반환 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 번호입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Precision and Complex Numbers</source>
          <target state="translated">전체 자릿수와 복소수</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by two double-precision floating-point values.</source>
          <target state="translated">복소수의 실수 및 허수 부분 두 개의 배정밀도 부동 소수점 값으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values, like double-precision floating-point values, can lose precision as a result of numerical operations.</source>
          <target state="translated">즉 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 배정밀도 부동 소수점 값을 같은 값을 숫자 작업 결과 정밀도 떨어질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that strict comparisons for equality of two <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values may fail, even if the difference between the two values is due to a loss of precision.</source>
          <target state="translated">즉의 같음 비교 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 값 정밀도의 손실 두 값 사이의 차이가 있는 경우에 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Double&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, performing exponentiation on the logarithm of a number should return the original number.</source>
          <target state="translated">예를 들어 숫자의 로그에 지 수 연산을 수행 하면 원래 번호가 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.</source>
          <target state="translated">그러나 경우에 따라 부동 소수점 값의 자릿수 손실이 발생할 수 두 값 간에 약간의 차이가 다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, the following example, which calculates the square root of a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.</source>
          <target state="translated">마찬가지로, 다음 예제에서는의 제곱근을 계산 하는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 숫자, 32 비트 및 IA64 버전의.NET Framework에서 조금 다른 결과 생성 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Complex Numbers, Infinity, and NaN</source>
          <target state="translated">복소수, 무한대 및 NaN</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">복소수의 실수 및 허수 부분으로 표현 됩니다 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to ranging from <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the real or imaginary part of a complex number can have a value of <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">범위의 외에도 <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, 복소수 또는 허수 부분의 값을 가질 수 <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> all propagate in any arithmetic or trigonometric operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 모두 산술 또는 삼각 하는 모든 작업에 전파 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In the following example, division by <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produces a complex number whose real and imaginary parts are both <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다음 예에서으로 나누기 <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> 둘 다 실수 및 허수 부분으로 이루어진는 복소수를 생성 <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">결과적으로,이 값으로 곱하기를 수행도 생성 복소수는 실수 및 허수 부분으로 이루어진 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, performing a multiplication that overflows the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type produces a complex number whose real part is <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">마찬가지로,의 범위를 오버플로 하는 곱하기를 수행 된 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 실수부 복소수를 생성 하는 형식 <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 허수부 이며 <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Subsequently performing division with this complex number returns a complex number whose real part is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">실수부 복소수 반환 나누기가 복소수를 수행 하면 이후에 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 허수부 이며 <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Mathematical operations with complex numbers that are invalid or that overflow the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type do not throw an exception.</source>
          <target state="translated">복소수는 유효 하지 않도록 또는 범위를 오버플로 하는 수치 연산에서 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 데이터 형식은 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instead, they return a <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> under the following conditions:</source>
          <target state="translated">대신, 반환 되는 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 다음과 같은 경우:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a positive number by zero returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">0 리턴으로으로 양의 숫자를 나누기 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the upper bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">상한은 오버플로 하는 모든 작업은 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 데이터 형식 반환 <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a negative number by zero returns <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">음수 0 리턴으로 나누기 <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the lower bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">하 한 범위를 오버플로 하는 모든 작업은 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 데이터 형식 반환 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a zero by zero returns <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">0으로 나누기 반환 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that is performed on operands whose values are <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, depending on the specific operation.</source>
          <target state="translated">해당 값은 피연산자에서 수행 하는 모든 작업 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 반환 <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>특정 작업에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that this applies to any intermediate calculations performed by a method.</source>
          <target state="translated">이 메서드가 수행 하는 모든 중간 계산에 적용 되도록 note 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, the multiplication of <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> uses the formula (ac - bd) + (ad + bc)i.</source>
          <target state="translated">예를 들어 곱셈 <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> 는 수식을 사용 하 여 (ac-bd) + (ad + bc) i.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5.</source>
          <target state="translated">곱셈의 결과로 생성 되는 실수 구성 요소에 대 한 계산 식이 9e308 평가 * 2.5-9e308 * 3.5.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Each intermediate multiplication in this expression returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and the attempt to subtract <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> from <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 식의 각 중간 곱하기 반환 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, 및를 빼는 시도 <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 반환 <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Formatting a Complex Number</source>
          <target state="translated">복소수 서식 지정</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By default, the string representation of a complex number takes the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>real<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginary<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>real<ept id="p3">*</ept> and <bpt id="p4">*</bpt>imaginary<ept id="p4">*</ept> are the string representations of the <ph id="ph4">&lt;xref:System.Double&gt;</ph> values that form the complex number's real and imaginary components.</source>
          <target state="translated">기본적으로 복잡 한 수의 문자열 표현 형식은 <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>실제<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>허수<ept id="p2">*</ept><ph id="ph3">`)`</ph>여기서 <bpt id="p3">*</bpt>실제<ept id="p3">*</ept> 및 <bpt id="p4">*</bpt>허수<ept id="p4">*</ept> 의 문자열 표현은 <ph id="ph4">&lt;xref:System.Double&gt;</ph> 복소수의 실수 및 허수 구성 요소를 구성 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Some overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> method allow customization of the string representations of these <ph id="ph2">&lt;xref:System.Double&gt;</ph> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string.</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> 메서드 이러한의 문자열 표현 사용자 지정할 수 있도록 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값을 특정 문화권의 서식 지정 규칙을 반영 하거나를 표준 또는 사용자 지정 숫자에 정의 된 특정 형식에 표시 하려면 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>(For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</source>
          <target state="translated">(자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component.</source>
          <target state="translated">복잡 한 수의 문자열 표현을 표현 하는 일반적인 방법 중 하나는 a + bi, 여기서는 복소수의 실수 구성 요소 이며 b는 복소수의 허수 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In electrical engineering, a complex number is most commonly expressed as a + bj.</source>
          <target state="translated">전기 공학 복소수 가장 일반적으로으로 표시 되는 + bj 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can return the string representation of a complex number in either of these two forms.</source>
          <target state="translated">이 두 형식 중 하나에 복잡 한 수의 문자열 표현을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>To do this, define a custom format provider by implementing the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, and then call the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 수행 하려면 사용자 지정 형식 공급자를 구현 하 여 정의 된 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스 및 호출 합니다는 <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example defines a <ph id="ph1">`ComplexFormatter`</ph> class that represents a complex number as a string in the form of either a + bi or a + bj.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`ComplexFormatter`</ph> 형식에서 문자열로 복소수를 나타내는 클래스 a + bi 또는 + bj 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example then uses this custom formatter to display the string representation of a complex number.</source>
          <target state="translated">다음 예제에서는 다음이 사용자 지정 포맷터를 사용 하 여 복잡 한 수의 문자열 표현을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The real part of the complex number.</source>
          <target state="translated">복소수의 실수 부분입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The imaginary part of the complex number.</source>
          <target state="translated">복소수의 허수 부분입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> structure using the specified real and imaginary values.</source>
          <target state="translated">지정된 실수 값과 허수 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">`real`</ph> or <ph id="ph2">`imaginary`</ph> arguments may lose precision if they are data types that require an explicit cast to <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`real`</ph> 또는 <ph id="ph2">`imaginary`</ph> 인수는 명시적 캐스트를 필요로 하는 데이터 형식인 경우 정밀도 떨어질 수 <ph id="ph3">&lt;xref:System.Double&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The following example instantiates two complex numbers, and then uses them in addition, subtraction, multiplication, and division operations.</source>
          <target state="translated">다음 예제에서는 두 개의 복소수를 인스턴스화하고 더하기, 빼기, 곱하기 및 나누기 연산에서 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>Gets the absolute value (or magnitude) of a complex number.</source>
          <target state="translated">복소수의 절대 값 또는 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 절대값입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a complex number is equivalent to its <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">복소수의 절대 값은 해당 <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a real number a + bi is calculated as follows:</source>
          <target state="translated">숫자는 실수의 절대값을 + bi 다음과 같이 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b = 0, the result is 0.</source>
          <target state="translated">경우 b = 0 이면 결과 0입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If a &gt; b, the result is a *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">경우는 &gt; b, 결과는 *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b &gt; a, the result is b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">경우 b &gt; a, 결과 b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If the calculation of the absolute value results in an overflow, the method returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">절대 값의 계산 결과 오버플로가 발생 하는 경우 메서드 반환 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If either the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and the other property is neither <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> nor <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 다른 속성이 고 <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 나 <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, 메서드가 반환 <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">다음 예에서는 복소수의 절대값을 계산 하 고이의 값에 해당 하는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>A complex number that represents a cosine.</source>
          <target state="translated">코사인을 나타내는 복소수입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>Returns the angle that is the arc cosine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 아크코사인인 각도를 반환합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The angle, measured in radians, which is the arc cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 아크코사인인 각도인, 라디안 단위로 측정됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 메서드는 다음 수식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</source>
          <target state="translated">(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to add.</source>
          <target state="translated">더할 첫 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to add.</source>
          <target state="translated">더할 두 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers and returns the result.</source>
          <target state="translated">두 개의 복소수를 더한 후 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="right" /&gt;</ph>의 합입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">복잡 한 추가 a + bi, 번호 및 두 번째 복소수입니다, c + di를 다음과 같은 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i.</source>
          <target state="translated">(a + c) + (b + d) i.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of the component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">구성 요소의 값은 메서드 호출 결과 또는 허수 구성 요소에서 오버플로가 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method to perform addition with complex numbers.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어에서 사용할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> 메서드 복소수를 사용 하 여 추가 수행 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">다음 예제 복소수가 사용 하 여 추가입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>Returns the angle that is the arc sine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 아크사인인 각도를 반환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The angle which is the arc sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 아크사인인 각도입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> 메서드는 다음 수식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> - value * value))</source>
          <target state="translated"><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * 값 + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> -값 * 값))</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>Returns the angle that is the arc tangent of the specified complex number.</source>
          <target state="translated">지정된 복소수의 아크탄젠트인 각도를 반환합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The angle that is the arc tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 아크탄젠트인 각도입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> 메서드는 다음 수식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / new Complex(2.0, 0.0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph4"> - </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value) - <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * value)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> 새 / 복합 (2.0, 0.0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph> <ph id="ph4"> - </ph> <ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * 값)- <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * 값)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>Computes the conjugate of a complex number and returns the result.</source>
          <target state="translated">복소수의 켤레 복소수를 계산한 후 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 켤레 복소수입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component.</source>
          <target state="translated">복소수의 켤레 허수 구성 요소; 부호 반전 즉, 허수 구성 요소에 단항 부정 연산자를 적용합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>If a + bi is a complex number, its conjugate is a - bi.</source>
          <target state="translated">경우는 + bi는 복소수, 켤레 복소수는 a-bi 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The following example displays the conjugate of two complex numbers.</source>
          <target state="translated">다음 예제에서는 두 복소수의 켤레 복소수를 표시합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>Returns the cosine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 코사인을 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 코사인입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method uses the following formula to calculate the cosine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> 메서드는 복소수의 코사인을 계산 하는 다음 수식을 사용 a + bi:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>Returns the hyperbolic cosine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 하이퍼볼릭 코사인을 반환합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The hyperbolic cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 쌍곡선 코사인입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> 메서드 복소수의 쌍 곡 코사인을 계산 하는 다음 수식을 사용 a + bi:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to be divided.</source>
          <target state="translated">나눌 복소수입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to divide by.</source>
          <target state="translated">값을 나눌 복소수입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides one complex number by another and returns the result.</source>
          <target state="translated">한 복소수를 다른 복소수로 나눈 후 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The quotient of the division.</source>
          <target state="translated">나누기의 몫입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:</source>
          <target state="translated">복소수를 나누기는 두 번째 복소수입니다, 숫자, c + di를 하 여 bi 형식은 +:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) i</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">몫 계산 또는 허수 구성 요소에서 오버플로가 발생 하는 경우 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method can be used by languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> 메서드를 사용자 지정 연산자를 지원 하지 않는 언어에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">해당 동작은 나누기 나누기 연산자를 사용 하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example divides a complex number by each element in an array of complex numbers.</source>
          <target state="translated">다음 예제 복소수가 배열의 각 요소에 의해 복소수를 나눕니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">두 복소수가 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The complex number to compare.</source>
          <target state="translated">비교할 복소수입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Returns a value that indicates whether the current instance and a specified complex number have the same value.</source>
          <target state="translated">현재 인스턴스와 지정된 복소수의 값이 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this complex number and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> have the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 복소수와 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 동일한 값을 가지면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method provides the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implementation for the <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> 에 대 한 구현을 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It performs slightly better than <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method because it does not have to convert its parameter to a complex number.</source>
          <target state="translated">성능이 약간 보다 더 나은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> 메서드는 매개 변수를 복소수로 변환할 필요가 없기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">두 복소수의 실수 부분 같은지 및 허수 부분이 경우 같습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 다음 식으로는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> 주의 해 서 사용 하 여 메서드 명백히 같은 두 개의 값 때문에 간주 될 수 있습니다 정밀도 실수 및 허수 구성 요소 차이 같지 않은 것입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example reports that <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> are not equal.</source>
          <target state="translated">다음 예제에서는 <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> 및 <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> 같지 않습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">권장 방법은 두 값 간의 차이 허용 가능한 오차를 정의 하는 것 (같은. 값의 실수 및 허수 구성 요소 중 하나의 01%) 값이 같은지를 비교 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision, and, therefore, the values are likely to be equal.</source>
          <target state="translated">두 값 간의 차이의 절대 값 보다 작거나 동일한 경우 차이점은 정밀도의 차이로 인해 발생 가능성이 며 따라서 값 않습니다과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example uses this technique to compare the two complex values that the previous code example found to be unequal.</source>
          <target state="translated">다음 예제에서는이 방법의 사용 하 여 이전 코드 예제에서는 동일 하지 않은 것으로 확인 하는 두 개의 복소수 값을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It finds the two complex numbers to be equal.</source>
          <target state="translated">동일한 두 개의 복소수를 찾습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">현재 인스턴스와 지정된 개체의 값이 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter is a <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object or a type capable of implicit conversion to a <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object, and its value is equal to the current <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체이거나 <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체로 암시적 변환이 가능한 형식이고 해당 값이 현재 <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체의 값과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">두 복소수의 실수 부분 같은지 및 허수 부분이 경우 같습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> 다음 식으로는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> parameter is not a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object, but it is a data type for which an implicit conversion is defined, the <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method converts <ph id="ph4">`obj`</ph> to a <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> object whose real part is equal to the value of <ph id="ph6">`obj`</ph> and whose imaginary part is equal to zero before it performs the comparison.</source>
          <target state="translated">경우는 <ph id="ph1">`obj`</ph> 매개 변수가 않습니다는 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 개체를 변환 하는 암시적 변환을 정의 된 데이터 형식이 <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> 메서드 변환 <ph id="ph4">`obj`</ph> 에 <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> 실제 부분은 의값과같은개체<ph id="ph6">`obj`</ph>고 비교를 수행 하기 전에 가상 부분은 0입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.</source>
          <target state="translated">다음 예는 복소수와 배정밀도 부동 소수점 값이 같은지를 검색 하 여이 보여줍니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> 주의 해 서 사용 하 여 메서드 명백히 같은 두 개의 값 때문에 간주 될 수 있습니다 정밀도 실수 및 허수 구성 요소 차이 같지 않은 것입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The problem can be accentuated if <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> must be converted to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> before performing the comparison.</source>
          <target state="translated">문제가 경우 더욱 두드러집니다 수 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 으로 변환 해야는 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 비교를 수행 하기 전에.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example compares a complex number whose real component appears to be equal to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value with that <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 같은 것으로 표시 되는 실수 부분이 복소수를 비교는 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 하를 사용 하 여 값 <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>As the output shows, the comparison for equality returns <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">같음에 대 한 비교를 반환 하는 출력에서 볼 수 있듯이 <ph id="ph1">&lt;see langword="False" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">권장 방법은 두 값 간의 차이 허용 가능한 오차를 정의 하는 것 (같은. 값의 실수 및 허수 구성 요소 중 하나의 01%) 값이 같은지를 비교 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">두 값 간의 차이의 절대 값 보다 작거나 동일한 경우 차이점은 정밀도의 차이로 인해 발생 가능성이 며 따라서 값 않습니다과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example uses this technique to compare the two values that the previous code example found to be unequal.</source>
          <target state="translated">다음 예제에서는이 방법의 사용 하 여 이전 코드 예제에서는 동일 하지 않은 것으로 발견 하는 두 값을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>It now finds them to be equal.</source>
          <target state="translated">이제 동일한 것으로 검색 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">거듭제곱을 지정하는 복소수입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Returns <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power specified by a complex number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="e" /&gt;</ph>를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The number <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="e" /&gt;</ph>의 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>승입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> method to calculate the powers of other bases.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> 메서드를 다른 밑의 거듭제곱을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 역함수 값은 <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">정밀도 부족 어느 정도 허용 하므로, 있다고 표시는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 에서 반환 된 값을 전달 하는 데이터 형식으로는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> 메서드를는 <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 메서드가 원래 반환 <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.</source>
          <target state="translated">원점(x축과 y축의 교차점)에서 숫자까지의 거리인 크기입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The phase, which is the angle from the line to the horizontal axis, measured in radians.</source>
          <target state="translated">선에서 가로 축까지의 각도인 위상으로서, 라디안 단위로 측정됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Creates a complex number from a point's polar coordinates.</source>
          <target state="translated">점의 극좌표를 사용하여 복소수를 만듭니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method instantiates a complex number based on its polar coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 메서드를 만드는 데 극좌표를 기반으로 복잡 한 횟수입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Because there are multiple representations of a point on a complex plane, the return value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method is normalized.</source>
          <target state="translated">반환 값 복합 평면에 있는 점의의 여러 표현 있기 때문에 <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 메서드 정규화 됩니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> to <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</source>
          <target state="translated">크기는 양수 이면로 표준화 및 단계는 값의 범위에로 표준화<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>As a result, the values of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> properties of the resulting complex number may not equal the original values of the <ph id="ph3">`magnitude`</ph> and <ph id="ph4">`phase`</ph> parameters.</source>
          <target state="translated">결과 값으로는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 결과 복잡 한 수의 속성의 원래 값과 같지 않을 수 있습니다는 <ph id="ph3">`magnitude`</ph> 및 <ph id="ph4">`phase`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>To convert a value from degrees to radians for the <ph id="ph1">`phase`</ph> parameter, multiply it by <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180.</source>
          <target state="translated">값도 라디안으로 변환 하기에 대 한는 <ph id="ph1">`phase`</ph> 곱합니다 매개 변수  <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 복소수를 인스턴스화하기 위한 메서드를 극좌표를 기반으로 하며 값을 표시 한 다음 해당 <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체에 대한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Imaginary">
          <source>Gets the imaginary component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체의 허수 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The imaginary component of a complex number.</source>
          <target state="translated">복소수의 허수 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property returns the value of b.</source>
          <target state="translated">복소수 a + bi, <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> 속성 b의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">다음 예제에서는 배열을 인스턴스화합니다 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 형태로 각 실수 및 허수 구성 요소를 표시 하 고 개체 a + bi 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to one.</source>
          <target state="translated">0과 같은 실수와 1과 같은 허수를 포함하는 새 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 를 사용 하 여 값의 <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to one.</source>
          <target state="translated">다음을 호출 하 여 인스턴스화될 다른 값이이 값을 비교는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 실수부 0 및 1과 같은 가상 부분이 생성자입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">예제의 출력에서 볼 수 있듯이 두 값이 동일 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns the logarithm of a complex number.</source>
          <target state="translated">복소수의 로그를 반환합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified complex number.</source>
          <target state="translated">지정된 복소수의 자연(밑 <ph id="ph1">&lt;see langword="e" /&gt;</ph>) 로그를 반환합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>의 자연(밑 <ph id="ph1">&lt;see langword="e" /&gt;</ph>) 로그입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">정밀도 부족 어느 정도 허용 하므로, 있다고 표시는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 에서 반환 된 값을 전달 하는 데이터 형식으로는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> 메서드를는 <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 메서드가 원래 반환 <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">로그의 밑입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>Returns the logarithm of a specified complex number in a specified base.</source>
          <target state="translated">지정된 밑을 사용하여 지정된 복소수의 로그를 반환합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</source>
          <target state="translated">밑이 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>인 <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>의 로그입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>Returns the base-10 logarithm of a specified complex number.</source>
          <target state="translated">밑이 10인 지정된 복소수의 로그를 반환합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The base-10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">밑이 10인 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 로그입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Magnitude">
          <source>Gets the magnitude (or absolute value) of a complex number.</source>
          <target state="translated">복소수의 크기 또는 절대 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The magnitude of the current instance.</source>
          <target state="translated">현재 인스턴스의 크기입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property is equivalent to the absolute value of a complex number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 속성은 복잡 한 수의 절대 값에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number.</source>
          <target state="translated">원점 (x 축과 데카르트 좌표계에 y 축의 교차점)에서 복소수를 나타내는 2 차원 점 거리를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The absolute value is calculated as follows:</source>
          <target state="translated">절대 값은 다음과 같이 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</source>
          <target state="translated">&amp;#124;a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(한 *는 + b * b)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>If the calculation of the absolute value results in an overflow, this property returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">절대 값의 계산 결과 오버플로가 발생 하는 경우이 속성 반환 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties define the position of a point that represents a complex number in the polar coordinate system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> 속성 극좌표 형 좌표계에서 복소수를 나타내는 점 위치를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 데카르트 좌표 대신 극좌표를 기반으로 복잡 한 횟수를 인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">다음 예에서는 복소수의 절대값을 계산 하 고이의 값에 해당 하는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to multiply.</source>
          <target state="translated">곱할 첫 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to multiply.</source>
          <target state="translated">곱할 두 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns the product of two complex numbers.</source>
          <target state="translated">두 복소수의 곱을 반환합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 매개 변수의 곱입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">복잡 한 곱하기 a + bi, 번호 및 두 번째 복소수입니다, c + di를 다음과 같은 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac-bd) + (ad + bc) i</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">되 면 곱셈 또는 허수 구성 요소에서 오버플로가, 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> 메서드는 사용자 지정 연산자를 지원 하지 않는 언어에 대 한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">해당 동작은 곱셈 연산자를 사용 하는 곱하기와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example multiples a complex number by each element in an array of complex numbers.</source>
          <target state="translated">다음 예제 복소수가 배열의 각 요소에 의해 복소수 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">지정된 복소수의 덧셈 역원을 반환합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph> 매개 변수의 <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> 구성 요소에 -1을 곱한 결과입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The additive inverse of a complex number is a complex number that produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> when it is added to the original complex number.</source>
          <target state="translated">복소수의 덧셈 역 원을 값을 생성 하는 복소수입니다 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 원래 복소수에 추가 된 경우.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.</source>
          <target state="translated">이 메서드는 원래 복소수의 실수 및 허수 구성 요소는-1을 곱한 복소수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> 메서드는 사용자 지정 연산자를 지원 하지 않는 언어에 대 한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Its behavior is identical to negation using the unary negation operator, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</source>
          <target state="translated">해당 동작은 동일 하는 단항 부정 연산자를 사용 하 여 부정 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The following example obtains the additive inverse of each element in an array of complex numbers.</source>
          <target state="translated">다음 예제 복소수가의 배열에 있는 각 요소의 덧셈 역함수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.One">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to one and an imaginary number equal to zero.</source>
          <target state="translated">1과 같은 실수와 0과 같은 허수를 포함하는 새 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 를 사용 하 여 값의 <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to one and an imaginary part equal to zero.</source>
          <target state="translated">다음을 호출 하 여 인스턴스화될 다른 값이이 값을 비교는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 실수부 1 및 0과 같은 가상 부분이 생성자입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">예제의 출력에서 볼 수 있듯이 두 값이 동일 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to add.</source>
          <target state="translated">더할 첫 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to add.</source>
          <target state="translated">더할 두 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers.</source>
          <target state="translated">두 복소수를 더합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="right" /&gt;</ph>의 합입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> method defines the addition operation for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> 메서드 복소수에 대 한 추가 작업을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">복잡 한 추가 a + bi, 번호 및 두 번째 복소수입니다, c + di를 다음과 같은 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i</source>
          <target state="translated">(a + c) + (b + d) i</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">메서드 호출 결과 또는 허수 구성 요소에서 오버플로가 하는 경우 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">다음 예제 복소수가 사용 하 여 추가입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to be divided.</source>
          <target state="translated">나눌 대상 값입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to divide by.</source>
          <target state="translated">나눌 값입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides a specified complex number by another specified complex number.</source>
          <target state="translated">지정된 복소수를 다른 지정된 복소수로 나눕니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>를 <ph id="ph2">&lt;paramref name="right" /&gt;</ph>로 나눈 결과입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> method defines the division operation for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> 메서드 복소수에 대 한 나누기 연산을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">복잡 한 나누기 a + bi, 번호 및 두 번째 복소수입니다, c + di를 다음과 같은 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) i</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the division results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">되 면 나누기 또는 허수 구성 요소에서 오버플로가, 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자 및 연산자 오버 로드를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to compare.</source>
          <target state="translated">비교할 첫 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to compare.</source>
          <target state="translated">비교할 두 번째 복소수입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">두 복소수가 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 매개 변수의 값이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> 같음 연산자에 대 한 작업을 정의 하는 메서드 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">두 복소수의 실수 부분 같은지 및 허수 부분이 경우 같습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> 다음 식으로는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">즉, 전체 자릿수에 사용 되는 차이가 있으므로 분명히 동일한 두 개의 복소수 간주할 수 같지 않은 note 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information and a possible workaround, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">자세한 내용 및 가능한 해결 방법에 대 한 참조는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체와 다른 형식 간의 명시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a complex number.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 복소수로 변환하는 명시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>와 일치하는 실수 구성 요소와 0과 일치하는 허수 구성 요소가 있는 복소수입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">명시적 변환 연산자 정의 형식으로 변환 될 수 있는 한 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">데이터 손실을 포함할 수 있으므로 언어 컴파일러에서는이 변환을 자동으로 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">캐스팅 연산자 (C#) 또는 변환 함수는 경우에 변환을 실행 대신 (같은 <ph id="ph1">`CType`</ph> Visual basic에서) 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">그렇지 않으면 컴파일러 오류가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">변환은 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값 복소수의 실수 부분을 하므로 정밀도 손실 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Double&gt;</ph>, 복소수의 형식인 <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 속성을 보다 적은 유효 자릿수에는 <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 명시적으로 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a complex number.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 값을 복소수로 변환하는 명시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>와 일치하는 실수 구성 요소와 0과 일치하는 허수 구성 요소가 있는 복소수입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">명시적 변환 연산자 정의 형식으로 변환 될 수 있는 한 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">데이터 손실을 포함할 수 있으므로 언어 컴파일러에서는이 변환을 자동으로 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">캐스팅 연산자 (C#) 또는 변환 함수는 경우에 변환을 실행 대신 (같은 <ph id="ph1">`CType`</ph> Visual basic에서) 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">그렇지 않으면 컴파일러 오류가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">변환은 <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 값 복소수의 실수 부분을 하므로 정밀도 손실 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Double&gt;</ph>, 복소수의 형식인 <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 속성을 보다 적은 유효 자릿수에는 <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If the conversion is unsuccessful because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is out of the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type, the operation does not throw an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">변환이 실패 한 경우 때문에 <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 값의 범위를 벗어났습니다.이 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 형식, 작업을 throw 하지 않습니다는 <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, if <ph id="ph1">`value`</ph> is less than <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">대신 경우 <ph id="ph1">`value`</ph> 는 보다 작은 <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, 결과 복잡 한 숫자와는 <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 속성 값이 같지 <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If <ph id="ph1">`value`</ph> is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 보다 크면 <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, 결과 복잡 한 숫자와는 <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 속성 값이 같지 <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 명시적으로 변환 <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체와 다른 형식 간의 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of an unsigned byte to a complex number.</source>
          <target state="translated">부호 없는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러에서 변환할 때 처리 있습니다는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 를 다음 예제와 같이 복소수로 값입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부 같으면 복소수는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값과 허수 부분은 0입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a double-precision floating-point number to a complex number.</source>
          <target state="translated">배정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러에서 변환할 때 처리 있습니다는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 를 다음 예제와 같이 복소수로 값입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부 같으면 복소수는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값과 허수 부분은 0입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit signed integer to a complex number.</source>
          <target state="translated">부호 있는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 있는 16 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 있는 16 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit signed integer to a complex number.</source>
          <target state="translated">부호 있는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 있는 32 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 있는 32 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit signed integer to a complex number.</source>
          <target state="translated">부호 있는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 있는 64 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 있는 64 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a signed byte to a complex number.</source>
          <target state="translated">부호 있는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed byte to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 있는 바이트를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed byte and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부 부호 있는 바이트 고 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a single-precision floating-point number to a complex number.</source>
          <target state="translated">단정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러에서 변환할 때 처리 있습니다는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 를 다음 예제와 같이 복소수로 값입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부 같으면 복소수는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값과 허수 부분은 0입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a complex number.</source>
          <target state="translated">부호 없는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 없는 16 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 없는 16 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a complex number.</source>
          <target state="translated">부호 없는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 없는 32 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 없는 32 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">복소수로 변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a complex number.</source>
          <target state="translated">부호 없는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> 연산자는 컴파일러가 자동으로 변환할 수 형식 정의 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 없는 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">이 오버 로드를 사용 하면 컴파일러를 변환할 때 부호 없는 64 비트 정수를 복소수로, 다음 예제와 같이 처리 있습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">변환의 결과 실수부가 부호 없는 64 비트 정수 같지 및 허수 부분이 0과 같은 복소수 note 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to compare.</source>
          <target state="translated">비교할 첫 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to compare.</source>
          <target state="translated">비교할 두 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are not equal.</source>
          <target state="translated">두 복소수가 다른지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph>과 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>가 다르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the inequality operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> 메서드 복소수를 같지 않음 연산자는 작업을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can test for inequality by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method and reversing its value.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출 하 여 같지 않음을 테스트할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 메서드 고 값을 반전 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">즉, 전체 자릿수에 사용 되는 차이가 있으므로 분명히 동일한 두 개의 복소수 간주할 수 같지 않은 note 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>One possible workaround is to implement a comparison method that returns <ph id="ph1">`true`</ph> only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers).</source>
          <target state="translated">반환 하는 비교 메서드를 구현 하는 한 가지 가능한 해결 방법은 <ph id="ph1">`true`</ph> 복소수의 두 실수 및 허수 부분 간의 차이 특정 임계값을 초과 하는 경우에 (같은.의 또는 허수 구성 요소 값의 0.1% 중 하나는 복소수)입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to multiply.</source>
          <target state="translated">곱할 첫 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to multiply.</source>
          <target state="translated">곱할 두 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Multiplies two specified complex numbers.</source>
          <target state="translated">지정된 두 복소수를 곱합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="right" /&gt;</ph>의 곱입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> 메서드 복소수에 대 한 곱하기 연산자의 작업을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">복잡 한 곱하기 a + bi, 번호 및 두 번째 복소수입니다, c + di를 다음과 같은 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac-bd) + (ad + bc) i</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">되 면 곱셈 또는 허수 구성 요소에서 오버플로가, 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">뺄 대상 값(피감수)입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">뺄 값(감수)입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts a complex number from another complex number.</source>
          <target state="translated">한 복소수에서 다른 복소수를 뺍니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph>에서 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>를 뺀 결과입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> 메서드 복소수에 대 한 빼기 연산자는 작업을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">메서드 호출 결과 또는 허수 구성 요소에서 오버플로가 하는 경우 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">복소수, c +에서 다른 복소수 di의 빼기는 bi 형식은 +:</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a-c) + (b-d) i</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The value to negate.</source>
          <target state="translated">부정할 값입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">지정된 복소수의 덧셈 역원을 반환합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph> 매개 변수의 <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> 구성 요소에 -1을 곱한 결과입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation (additive inverse) operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> 메서드 복소수에 대 한 단항 부정 (덧셈 역 원을) 연산자의 작업을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">다음과 같은 코드 수 있습니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The resulting complex number produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zero) when it is added to the original complex number.</source>
          <target state="translated">값을 생성 하는 결과 복소수 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (영)는 원래 복소수의에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Phase">
          <source>Gets the phase of a complex number.</source>
          <target state="translated">복소수의 위상을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase of a complex number, in radians.</source>
          <target state="translated">복소수의 위상(라디안 단위)입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>For a complex number a + bi, the phase is computed as <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, a).</source>
          <target state="translated">복소수는 bi, 단계에서로 계산 됩니다 + <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, 한).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates.</source>
          <target state="translated">복소수는 복합 평면의 데카르트 좌표 또는 극좌표를 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number.</source>
          <target state="translated">복소수의 위상 (인수) 복소수를 나타내는 지점으로의 원점 (x 축과 y 축의 교차점)에서 결정 실제 축으로 각도입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The magnitude (represented by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property) is the distance from the point of origin to the point that is represented by the complex number.</source>
          <target state="translated">크기 (나타내는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 속성)은 복잡 한 수로 표현 되는 지점에는 원점 거리입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 데카르트 좌표 대신 극좌표를 기반으로 복잡 한 횟수를 인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>To convert the phase from radians to degrees, multiply it by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">단계에서 라디안에서 각도로 변환, 하려면 180으로 곱하면 /<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates, and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> 복소수를 인스턴스화하기 위한 메서드를 해당 극좌표를 기반으로 하며의 값을 표시 한 다음 해당 <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a specified complex number raised to a specified power.</source>
          <target state="translated">지정된 복소수를 지정된 지수만큼 거듭제곱하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">지수만큼 거듭제곱할 복소수입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A double-precision floating-point number that specifies a power.</source>
          <target state="translated">거듭제곱을 지정하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</source>
          <target state="translated">지정된 복소수를 배정밀도 부동 소수점 숫자로 지정된 지수만큼 거듭제곱하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">복소수 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 지수 <ph id="ph2">&lt;paramref name="power" /&gt;</ph>만큼 거듭제곱한 값입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph>가 <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>이면 메서드에서 <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>For other values, if <ph id="ph1">`power`</ph> is 0, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>, and if <ph id="ph3">`power`</ph> is 1, it returns <ph id="ph4">`value`</ph>.</source>
          <target state="translated">다른 값에 대 한 경우 <ph id="ph1">`power`</ph> 은 0으로, 메서드가 반환 <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>, 경우에 한 <ph id="ph3">`power`</ph> 이 1 이면 반환 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">에 해당 하는이 메서드는 <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> 기본 숫자 형식에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The following example illustrates exponentiation using a complex number and an exponent whose value ranges from -1 to 10.</source>
          <target state="translated">다음 예제에서는 해당 값의 범위를-1에서 10 복소수와 지 수를 사용 하 여 지 수를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">지수만큼 거듭제곱할 복소수입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">거듭제곱을 지정하는 복소수입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a specified complex number raised to a power specified by a complex number.</source>
          <target state="translated">지정된 복소수를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">복소수 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 지수 <ph id="ph2">&lt;paramref name="power" /&gt;</ph>만큼 거듭제곱한 값입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Real">
          <source>Gets the real component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 개체의 실수 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The real component of a complex number.</source>
          <target state="translated">복소수의 실수 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property returns the value of a.</source>
          <target state="translated">복소수 a + bi, <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> 속성의 값을 반환 된 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">다음 예제에서는 배열을 인스턴스화합니다 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 형태로 각 실수 및 허수 구성 요소를 표시 하 고 개체 a + bi 합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Returns the multiplicative inverse of a complex number.</source>
          <target state="translated">복소수의 역수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 역수입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal, or multiplicative inverse, of a number <bpt id="p1">*</bpt>x<ept id="p1">*</ept> is a number <bpt id="p2">*</bpt>y<ept id="p2">*</ept> where <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multiplied by <bpt id="p4">*</bpt>y<ept id="p4">*</ept> yields 1.</source>
          <target state="translated">숫자의 역 수 <bpt id="p1">*</bpt>x<ept id="p1">*</ept> 숫자인 <bpt id="p2">*</bpt>y<ept id="p2">*</ept> 여기서 <bpt id="p3">*</bpt>x<ept id="p3">*</ept> 곱한 <bpt id="p4">*</bpt>y<ept id="p4">*</ept> 1을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of a complex number is the complex number that produces <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> when the two numbers are multiplied.</source>
          <target state="translated">복소수의 역 복소수를 생성 하는 <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> 두 숫자를 곱할 때.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + -b/(a<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</source>
          <target state="translated">역 a + bi 복소수는 나타내는 경우 식으로 나타납니다는 / (한<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+ b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) +-b / (한<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If value is <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, 메서드가 반환 <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Otherwise, it returns the result of the expression <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph><ph id="ph2">/</ph><ph id="ph3">`value`</ph>.</source>
          <target state="translated">그렇지 않으면 식의 결과 반환 <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> <ph id="ph2">/</ph> <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> method to calculate the reciprocal values of several complex numbers.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> 메서드를 여러 복소수의 역 수 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>It also demonstrates that the result of multiplying a complex number by its reciprocal is <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">복소수의 역 곱한 결과 방법도 보여 줍니다 <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>Returns the sine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 사인을 반환합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 사인입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method uses the following formula to calculate the sine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> 메서드는 복소수의 사인을 계산 하는 다음 수식을 사용 a + bi:</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>Returns the hyperbolic sine of the specified complex number.</source>
          <target state="translated">지정된 복소수의 하이퍼볼릭 사인을 반환합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The hyperbolic sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 쌍곡선 사인입니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> 메서드 복소수의 쌍 곡 사인을 계산 하는 다음 수식을 사용 a + bi:</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>Returns the square root of a specified complex number.</source>
          <target state="translated">지정된 복소수의 제곱근을 반환합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 제곱근입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of the complex number <ph id="ph1">`value`</ph> is calculated by using the following formula:</source>
          <target state="translated">복소수의 제곱근 <ph id="ph1">`value`</ph> 다음 수식을 사용 하 여 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">뺄 대상 값(피감수)입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">뺄 값(감수)입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts one complex number from another and returns the result.</source>
          <target state="translated">한 복소수에서 다른 복소수를 뺀 후 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph>에서 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>를 뺀 결과입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">복소수, c +에서 다른 복소수 di의 빼기는 bi 형식은 +:</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a-c) + (b-d) i</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">메서드 호출 결과 또는 허수 구성 요소에서 오버플로가 하는 경우 해당 구성 요소의 값은 <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method to perform subtraction using complex numbers.</source>
          <target state="translated">사용자 지정 연산자를 지원 하지 않는 언어에서 사용할 수는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> 복소수를 사용 하 여 빼기를 수행 하는 메서드.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example subtracts each complex number in an array from a complex number.</source>
          <target state="translated">다음 예제에서는 복소수에서 배열에 각 복소수를 뺍니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>Returns the tangent of the specified complex number.</source>
          <target state="translated">지정된 복소수의 탄젠트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접선입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method uses the following formula to calculate the tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> 메서드는 복소수의 탄젠트를 계산 하는 다음 수식을 사용 <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">반환 된 값을 전달 해당 표시는 <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> 메서드 반환 원래 <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">복소수입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>Returns the hyperbolic tangent of the specified complex number.</source>
          <target state="translated">지정된 복소수의 하이퍼볼릭 탄젠트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The hyperbolic tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 쌍곡선 접선입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> 에 해당 하는 복소수에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> 실수에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> 메서드 복소수의 쌍 곡 탄젠트를 계산 하는 다음 수식을 사용 <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Converts the value of a complex number to its equivalent string representation.</source>
          <target state="translated">복소수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</source>
          <target state="translated">현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The default string representation of a complex number displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">데카르트 좌표를 사용 하 여 폼의 수를 표시 하는 복잡 한 수의 기본 문자열 표현을 <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>는<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>여기서 <bpt id="p3">*</bpt>는<ept id="p3">*</ept> 있는 복소수의 실수 부분에는 및 <bpt id="p4">*</bpt>b<ept id="p4">*</ept> 복소수의 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the current system culture.</source>
          <target state="translated">둘 다 <bpt id="p1">*</bpt>는<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>b<ept id="p2">*</ept> 일반 서식 지정자 ("G")와 현재 시스템 문화권의 규칙을 사용 하 여 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">다음 예제에서는 여러 복잡 한 숫자의 문자열 표현을 표시합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The output uses the formatting conventions of the English - United States ("en-US") culture, which, in this case, is the current system culture.</source>
          <target state="translated">출력 영어-미국 ("EN-US") 문화권,이 경우 현재 시스템 문화권의 서식 지정 규칙을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph>에서 지정한 형식에 따른 현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">데카르트 좌표를 사용 하 여 폼의 수를 표시 하는이 메서드에서 반환 된 복잡 한 수의 문자열 표현을 <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>는<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, 여기서 <bpt id="p3">*</bpt>는<ept id="p3">*</ept> 있는 복소수의 실수 부분에는 및 <bpt id="p4">*</bpt>b<ept id="p4">*</ept> 복소수의 합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the culture defined by <ph id="ph1">`provider`</ph>.</source>
          <target state="translated">둘 다 <bpt id="p1">*</bpt>는<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>b<ept id="p2">*</ept> 일반 서식 지정자 ("G")와에 정의 된 문화권의 규칙을 사용 하 여 서식이 지정 된 <ph id="ph1">`provider`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 실수 및 허수 반환된 된 문자열에는 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, 사용 하 여 반환 된 문자열의 형식이 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권의 개체입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 서식 지정 정보를 제공 하는 문화권을 나타내는 개체입니다</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">구현 하는 사용자 지정 개체는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">다음 예제에서는 여러 복잡 한 숫자의 문자열 표현을 표시합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The result uses the formatting conventions of the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">결과 영어-미국 ("EN-US") 및 프랑스어-프랑스 ("FR-FR") 문화권의 서식 지정 규칙을 사용합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">표준 또는 사용자 지정 숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</source>
          <target state="translated">실수와 허수 부분에 대해 지정된 서식을 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">데카르트 좌표를 사용 하 여 폼의 수를 표시 하는이 메서드에서 반환 된 복잡 한 수의 문자열 표현을 <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>는<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, 여기서 <bpt id="p3">*</bpt>는<ept id="p3">*</ept> 있는 복소수의 실수 부분에는 및 <bpt id="p4">*</bpt>b<ept id="p4">*</ept> 복소수의 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">둘 다 <bpt id="p1">*</bpt>는<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>b<ept id="p2">*</ept> 로 지정 된 형식 문자열을 사용 하 여 서식이 지정 된 <ph id="ph1">`format`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 매개 변수는 모든 유효한 표준 숫자 형식 지정자, 또는 사용자 지정 숫자 서식 지정자의 조합이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 같은지를 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> 아니거나 <ph id="ph3">`null`</ph>, 복소수의 실수 및 허수 부분 일반 형식 지정자 ("G")로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 다른 값을 메서드가 throw 한 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework에서는 다음 항목에서 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 형식 문자열에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">.NET Framework에서 형식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">반환된 된 문자열의 형식은 따라 결정 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">에 따라는 <ph id="ph1">`format`</ph> 매개 변수를이 개체는 음수 기호, 그룹 구분 기호는 소수점 기호는 출력 문자열에 등의 기호를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">현재 문화권이 아닌 문화권에 대 한 서식 지정 정보를 제공 하려면 호출는 <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The following example initializes a complex number and displays it using several standard format strings.</source>
          <target state="translated">다음 예제에서는 복소수를 초기화 합니다. 여러 표준 형식 문자열을 사용 하 여 표시 합니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>은 유효한 서식 문자열이 아닙니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">표준 또는 사용자 지정 숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</source>
          <target state="translated">실수와 허수 부분에 대해 지정된 서식과 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>에서 지정한 형식에 따른 현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">데카르트 좌표를 사용 하 여 폼의 수를 표시 하는이 메서드에서 반환 된 복잡 한 수의 문자열 표현을 <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>는<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, 여기서 <bpt id="p3">*</bpt>는<ept id="p3">*</ept> 있는 복소수의 실수 부분에는 및 <bpt id="p4">*</bpt>b<ept id="p4">*</ept> 복소수의 합니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">둘 다 <bpt id="p1">*</bpt>는<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>b<ept id="p2">*</ept> 로 지정 된 형식 문자열을 사용 하 여 서식이 지정 된 <ph id="ph1">`format`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 매개 변수는 모든 유효한 표준 숫자 형식 지정자, 또는 사용자 지정 숫자 서식 지정자의 조합이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 같은지를 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> 아니거나 <ph id="ph3">`null`</ph>, 복소수의 실수 및 허수 부분 일반 형식 지정자 ("G")로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 다른 값을 메서드가 throw 한 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework에서는 다음 항목에서 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 형식 문자열에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">.NET Framework에서 형식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 실수 및 허수 반환된 된 문자열에는 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">에 따라는 <ph id="ph1">`format`</ph> 매개 변수를이 개체는 음수 기호, 그룹 구분 기호는 소수점 기호는 출력 문자열에 등의 기호를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, 사용 하 여 반환 된 문자열의 형식이 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권의 개체입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 서식 지정 정보를 제공 하는 문화권을 나타내는 개체입니다</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">구현 하는 사용자 지정 개체는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The following example creates an array of complex numbers, and displays each using several standard format strings as well as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">다음 예제에서는 복소수를 배열을 만들고 각각 여러 표준 형식 문자열을 사용 하 여 표시와 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 영어-미국 ("EN-US") 및 프랑스어-프랑스 ("FR-FR") 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>은 유효한 서식 문자열이 아닙니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.Zero">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to zero.</source>
          <target state="translated">0과 같은 실수와 0과 같은 허수를 포함하는 새 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property is most frequently used to compare a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> value to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> 비교할 속성은 가장 자주 사용 되는 <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> 값을 0입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 를 사용 하 여 값의 <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to zero.</source>
          <target state="translated">다음을 호출 하 여 인스턴스화될 다른 값이이 값을 비교는 <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 실수부 0, 0과 같은 허수 부분에 대 한 생성자입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">예제의 출력에서 볼 수 있듯이 두 값이 동일 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>