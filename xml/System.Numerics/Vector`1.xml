<Type Name="Vector&lt;T&gt;" FullName="System.Numerics.Vector&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a91c7b4d7dc9e0ebf5e33569f8e93460e86368fc" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52219957" /></Metadata><TypeSignature Language="C#" Value="public struct Vector&lt;T&gt; : IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;, IFormattable where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Vector`1&lt;!T&gt;&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Vector`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector(Of T)&#xA;Implements IEquatable(Of Vector(Of T)), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector : IEquatable&lt;System::Numerics::Vector&lt;T&gt;&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type Vector&lt;'T (requires 'T : struct)&gt; = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="fed8e-101">벡터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-101">The vector type.</span></span> <span data-ttu-id="fed8e-102"><c>T</c> 기본 숫자 형식일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-102"><c>T</c> can be any primitive numeric type.</span></span></typeparam>
    <summary><span data-ttu-id="fed8e-103">병렬 알고리즘의 낮은 수준 최적화에 적합한 지정된 숫자 형식의 단일 벡터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-103">Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-104"><xref:System.Numerics.Vector%601> 지정 된 숫자 형식의 단일 벡터를 나타내는 변경할 수 없는 구조가입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-104"><xref:System.Numerics.Vector%601> is an immutable structure that represents a single vector of a specified numeric type.</span></span> <span data-ttu-id="fed8e-105">개수를 <xref:System.Numerics.Vector%601> 인스턴스는 고정 이지만 상한값에 도달한 CPU 레지스터 종속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-105">The count of a <xref:System.Numerics.Vector%601> instance is fixed, but its upper limit is CPU-register dependent.</span></span> <span data-ttu-id="fed8e-106">벡터화 큰 알고리즘에 대 한 빌딩 블록으로 사용할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-106">It is intended to be used as a building block for vectorizing large algorithms.</span></span>  
  
 <span data-ttu-id="fed8e-107"><xref:System.Numerics.Vector%601> 구조 하드웨어 가속에 대 한 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-107">The <xref:System.Numerics.Vector%601> structure provides support for hardware acceleration.</span></span>  
 
 <span data-ttu-id="fed8e-108">다음 표에서 기본 숫자 데이터 형식 및 작업 조합 내장 지침을 사용 하 여 더 빠르게 실행에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-108">The following table shows which primitive numeric data type and operation combination uses intrinsic instructions for faster executions:</span></span>
| | `+` | `-` | `*` | `/` |
| --- | :---: | :---: | :---: | :---: |
|`sbyte` | <span data-ttu-id="fed8e-109">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-109">Yes</span></span> | <span data-ttu-id="fed8e-110">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-110">Yes</span></span> | <span data-ttu-id="fed8e-111">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-111">No</span></span> | <span data-ttu-id="fed8e-112">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-112">No</span></span> |
|`byte` | <span data-ttu-id="fed8e-113">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-113">Yes</span></span> | <span data-ttu-id="fed8e-114">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-114">Yes</span></span> | <span data-ttu-id="fed8e-115">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-115">No</span></span> | <span data-ttu-id="fed8e-116">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-116">No</span></span> |
|`short` | <span data-ttu-id="fed8e-117">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-117">Yes</span></span> | <span data-ttu-id="fed8e-118">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-118">Yes</span></span> | <span data-ttu-id="fed8e-119">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-119">Yes</span></span> | <span data-ttu-id="fed8e-120">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-120">No</span></span> |
|`ushort` | <span data-ttu-id="fed8e-121">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-121">Yes</span></span> | <span data-ttu-id="fed8e-122">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-122">Yes</span></span> | <span data-ttu-id="fed8e-123">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-123">No</span></span> | <span data-ttu-id="fed8e-124">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-124">No</span></span> |
| `int` | <span data-ttu-id="fed8e-125">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-125">Yes</span></span> | <span data-ttu-id="fed8e-126">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-126">Yes</span></span> | <span data-ttu-id="fed8e-127">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-127">Yes</span></span> | <span data-ttu-id="fed8e-128">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-128">No</span></span> |
| `uint` | <span data-ttu-id="fed8e-129">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-129">Yes</span></span> | <span data-ttu-id="fed8e-130">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-130">Yes</span></span> | <span data-ttu-id="fed8e-131">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-131">No</span></span> | <span data-ttu-id="fed8e-132">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-132">No</span></span> |
| `long` | <span data-ttu-id="fed8e-133">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-133">Yes</span></span> | <span data-ttu-id="fed8e-134">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-134">Yes</span></span> | <span data-ttu-id="fed8e-135">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-135">No</span></span> | <span data-ttu-id="fed8e-136">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-136">No</span></span> |
| `ulong` | <span data-ttu-id="fed8e-137">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-137">Yes</span></span> | <span data-ttu-id="fed8e-138">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-138">Yes</span></span> | <span data-ttu-id="fed8e-139">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-139">No</span></span> | <span data-ttu-id="fed8e-140">아니요</span><span class="sxs-lookup"><span data-stu-id="fed8e-140">No</span></span> |
| `float` | <span data-ttu-id="fed8e-141">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-141">Yes</span></span> | <span data-ttu-id="fed8e-142">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-142">Yes</span></span> | <span data-ttu-id="fed8e-143">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-143">Yes</span></span> | <span data-ttu-id="fed8e-144">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-144">Yes</span></span> |
| `double` | <span data-ttu-id="fed8e-145">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-145">Yes</span></span> | <span data-ttu-id="fed8e-146">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-146">Yes</span></span> | <span data-ttu-id="fed8e-147">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-147">Yes</span></span> | <span data-ttu-id="fed8e-148">예</span><span class="sxs-lookup"><span data-stu-id="fed8e-148">Yes</span></span> |

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (Span&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Span`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(Span&lt;T&gt; values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : Span&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(T value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-149">벡터에서 구성 요소의 형식을 정의하는 숫자 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-149">The numeric type that defines the type of the components in the vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-150">구성 요소가 지정된 형식인 벡터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-150">Creates a vector whose components are of a specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-151">`value` 기본 숫자 형식일 수 있습니다 (즉, 숫자 입력 인 <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> 속성이 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-151">`value` can be any primitive numeric type (that is, a numeric type whose <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T[] -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="fed8e-152">숫자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-152">A numeric array.</span></span></param>
        <summary><span data-ttu-id="fed8e-153">지정된 배열에서 벡터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-153">Creates a vector from a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-154">`values` 이상의 <xref:System.Numerics.Vector%601.Count%2A> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-154">`values` must contain at least <xref:System.Numerics.Vector%601.Count%2A> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed8e-155"><paramref name="values" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-155"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values, int index);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T[] * int -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; (values, index)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="fed8e-156">숫자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-156">A numeric array.</span></span></param>
        <param name="index"><span data-ttu-id="fed8e-157">벡터를 만들려는 시작 인덱스 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-157">The starting index position from which to create the vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-158">지정된 인덱스 위치에서 시작하는 지정된 배열에서 벡터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-158">Creates a vector from a specified array starting at a specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-159">배열에 적어도 <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> 지정된 된 인덱스에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-159">The array must contain at least <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements from the specified index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed8e-160"><paramref name="values" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-160"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="fed8e-161"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-161"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fed8e-162">또는</span><span class="sxs-lookup"><span data-stu-id="fed8e-162">-or-</span></span> 
<span data-ttu-id="fed8e-163"><paramref name="values" />에서 <paramref name="index" />를 뺀 길이가 <see cref="P:System.Numerics.Vector`1.Count" />보다 작은 경우.</span><span class="sxs-lookup"><span data-stu-id="fed8e-163">The length of <paramref name="values" /> minus <paramref name="index" /> is less than <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="vector.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="fed8e-164">벡터 값의 복사본을 받을 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-164">The array to receive a copy of the vector values.</span></span></param>
        <summary><span data-ttu-id="fed8e-165">지정된 대상 배열에 벡터 인스턴스를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-165">Copies the vector instance to a specified destination array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-166">복사 작업의 인덱스 0에서 시작 `destination`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-166">The copy operation begins at index 0 of `destination`.</span></span> <span data-ttu-id="fed8e-167">대상 배열의 최소 있어야 <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-167">The destination array must have at least <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed8e-168"><paramref name="destination" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-168"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed8e-169">현재 벡터에 있는 요소의 개수가 <paramref name="destination" /> 배열에서 사용할 수 있는 요소의 개수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-169">The number of elements in the current vector is greater than the number of elements available in the <paramref name="destination" /> array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="vector.CopyTo (destination, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="fed8e-170">벡터 값의 복사본을 받을 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-170">The array to receive a copy of the vector values.</span></span></param>
        <param name="startIndex"><span data-ttu-id="fed8e-171">복사 작업을 시작할 <paramref name="destination" />의 시작 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-171">The starting index in <paramref name="destination" /> at which to begin the copy operation.</span></span></param>
        <summary><span data-ttu-id="fed8e-172">지정된 인덱스 위치에서 시작하는 지정된 대상 배열에 벡터 인스턴스를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-172">Copies the vector instance to a specified destination array starting at a specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-173">복사 작업은 인덱스에서 시작 `startIndex` 의 `destination`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-173">The copy operation begins at index `startIndex` of `destination`.</span></span> <span data-ttu-id="fed8e-174">대상 배열의 최소 있어야 `startIndex`  +  <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-174">The destination array must have at least `startIndex` + <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed8e-175"><paramref name="destination" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-175"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed8e-176">현재 인스턴스에 있는 요소의 개수가 <paramref name="startIndex" />부터 <paramref name="destination" /> 배열 끝까지 사용할 수 있는 요소의 개수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-176">The number of elements in the current instance is greater than the number of elements available from <paramref name="startIndex" /> to the end of the <paramref name="destination" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fed8e-177"><paramref name="index" />가 0보다 작거나 <paramref name="destination" />의 마지막 인덱스보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-177"><paramref name="index" /> is less than zero or greater than the last index in <paramref name="destination" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed8e-178">벡터에 저장된 요소의 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-178">Returns the number of elements stored in the vector.</span></span></summary>
        <value><span data-ttu-id="fed8e-179">벡터에 저장된 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-179">The number of elements stored in the vector.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed8e-180">리플렉션을 통한 속성 getter에 대한 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-180">Access to the property getter via reflection is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Vector&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Vector`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::Vector&lt;T&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="vector.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fed8e-181">이 인스턴스와 비교할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-181">The vector to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="fed8e-182">이 인스턴스가 지정된 벡터와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-182">Returns a value that indicates whether this instance is equal to a specified vector.</span></span></summary>
        <returns><span data-ttu-id="fed8e-183">현재 인스턴스와 <paramref name="other" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-183"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-184">같으면 두 벡터는 경우 동일한 형식의 값 수가 같아야 하 고 현재 인스턴스에서 각 값에 해당 값은 `other`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-184">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="vector.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fed8e-185">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-185">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="fed8e-186">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-186">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="fed8e-187">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-187"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fed8e-188">메서드는 <paramref name="obj" />가 null이거나 <paramref name="obj" />가 현재 인스턴스와 다른 형식의 벡터이면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-188">The method returns <see langword="false" /> if <paramref name="obj" /> is null, or if <paramref name="obj" /> is a vector of a different type than the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-189">같으면 두 벡터는 경우 동일한 형식의 값 수가 같아야 하 고 현재 인스턴스에서 각 값에 해당 값은 `other`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-189">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="vector.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed8e-190">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-190">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="fed8e-191">해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-191">The hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fed8e-192">반환할 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-192">The index of the element to return.</span></span></param>
        <summary><span data-ttu-id="fed8e-193">지정된 인덱스에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-193">Gets the element at a specified index.</span></span></summary>
        <value><span data-ttu-id="fed8e-194">인덱스 <paramref name="index" />의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-194">The element at index <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="fed8e-195"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-195"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fed8e-196">또는</span><span class="sxs-lookup"><span data-stu-id="fed8e-196">-or-</span></span> 
 <span data-ttu-id="fed8e-197"><paramref name="index" />가 <see cref="P:System.Numerics.Vector`1.Count" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="fed8e-197"><paramref name="index" /> is greater than or equal to <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; One { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed8e-198">1을 모두 포함하는 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-198">Returns a vector containing all ones.</span></span></summary>
        <value><span data-ttu-id="fed8e-199">1을 모두 포함하는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-199">A vector containing all ones.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator + (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Addition(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator +(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-200">더할 첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-200">The first vector to add.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-201">더할 두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-201">The second vector to add.</span></span></param>
        <summary><span data-ttu-id="fed8e-202">두 벡터를 더합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-202">Adds two vectors together.</span></span></summary>
        <returns><span data-ttu-id="fed8e-203">합한 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-203">The summed vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-204">합니다 <xref:System.Numerics.Vector%601.op_Addition%2A> 메서드 정의 대해 더하기 연산을 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-204">The <xref:System.Numerics.Vector%601.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator &amp; (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseAnd(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator &amp;(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-205">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-205">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-206">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-206">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-207">두 벡터의 각 요소에서 비트 <see langword="And" /> 연산을 수행하여 새 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-207">Returns a new vector by performing a bitwise <see langword="And" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="fed8e-208"><paramref name="left" /> 및 <paramref name="right" />의 비트 <see langword="And" /> 결과로 생성되는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-208">The vector that results from the bitwise <see langword="And" /> of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-209">합니다 <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> 메서드 정의 비트 `And` 에 대 한 작업 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-209">The <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator | (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator |(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-210">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-210">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-211">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-211">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-212">두 벡터의 각 요소에서 비트 <see langword="Or" /> 연산을 수행하여 새 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-212">Returns a new vector by performing a bitwise <see langword="Or" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="fed8e-213"><paramref name="left" /> 및 <paramref name="right" />에 있는 요소의 비트 <see langword="Or" /> 결과로 생성되는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-213">The vector that results from the bitwise <see langword="Or" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-214">합니다 <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> 메서드 정의 비트 `Or` 에 대 한 작업 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-214">The <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator / (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Division(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator /(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-215">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-215">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-216">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-216">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-217">첫 번째 벡터를 두 번째 벡터로 나눕니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-217">Divides the first vector by the second.</span></span></summary>
        <returns><span data-ttu-id="fed8e-218"><paramref name="left" />를 <paramref name="right" />로 나눈 결과로 생성되는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-218">The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-219">합니다 <xref:System.Numerics.Vector%601.op_Division%2A> 메서드 정의 대 한 나누기 연산 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-219">The <xref:System.Numerics.Vector%601.op_Division%2A> method defines the division operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-220">비교할 첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-220">The first vector to compare.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-221">비교할 두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-221">The second vector to compare.</span></span></param>
        <summary><span data-ttu-id="fed8e-222">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-222">Returns a value that indicates whether each pair of elements in two specified vectors are equal.</span></span></summary>
        <returns><span data-ttu-id="fed8e-223"><paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-223"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-224">두 벡터는 동일한 형식의 경우 같음, 값 및 각 값의 수가 같아야 `left` 에서 해당 값과 같은 `right`합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-224">Two vectors are equal if they are of the same type, have the same number of values, and each value in `left` is equal to the corresponding value in `right`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ^ (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_ExclusiveOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ^(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-225">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-225">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-226">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-226">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-227">두 벡터의 각 요소에서 비트 <see langword="XOr" /> 연산을 수행하여 새 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-227">Returns a new vector by performing a bitwise <see langword="XOr" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="fed8e-228"><paramref name="left" /> 및 <paramref name="right" />에 있는 요소의 비트 <see langword="XOr" /> 결과로 생성되는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-228">The vector that results from the bitwise <see langword="XOr" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-229">합니다 <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> 메서드 정의 비트 `XOr` 에 대 한 작업 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-229">The <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> method defines the bitwise `XOr` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;byte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::Byte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-230">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-230">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-231">지정된 벡터의 비트를 <see cref="T:System.Byte" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-231">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-232">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-232">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-233"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-233">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;double&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;double&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-234">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-234">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-235">지정된 벡터의 비트를 <see cref="T:System.Double" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-235">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-236">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-236">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-237"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-237">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;short&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;short&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-238">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-238">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-239">지정된 벡터의 비트를 <see cref="T:System.Int16" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-239">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-240">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-240">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-241"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-241">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;int&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;int&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-242">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-242">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-243">지정된 벡터의 비트를 <see cref="T:System.Int32" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-243">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-244">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-244">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-245"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-245">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;long&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;long&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-246">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-246">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-247">지정된 벡터의 비트를 <see cref="T:System.Int64" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-247">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-248">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-248">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-249"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-249">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;sbyte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::SByte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-250">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-250">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-251">지정된 벡터의 비트를 <see cref="T:System.SByte" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-251">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.SByte" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-252">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-252">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-253"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-253">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;float&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;float&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-254">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-254">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-255">지정된 벡터의 비트를 <see cref="T:System.Single" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-255">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-256">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-256">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-257"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-257">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ushort&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt16&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-258">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-258">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-259">지정된 벡터의 비트를 <see cref="T:System.UInt16" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-259">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-260">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-260">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-261"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-261">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;uint&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt32&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-262">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-262">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-263">지정된 벡터의 비트를 <see cref="T:System.UInt32" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-263">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-264">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-264">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-265"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-265">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ulong&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt64&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-266">재해석할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-266">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="fed8e-267">지정된 벡터의 비트를 <see cref="T:System.UInt64" /> 형식의 벡터로 재해석합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-267">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="fed8e-268">재해석된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-268">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-269"><xref:System.Numerics.Vector%601.op_Explicit%2A> 연산자 정의 축소 변환을; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-269">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-270">비교할 첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-270">The first vector to compare.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-271">비교할 두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-271">The second vector to compare.</span></span></param>
        <summary><span data-ttu-id="fed8e-272">지정된 벡터의 단일 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-272">Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</span></span></summary>
        <returns><span data-ttu-id="fed8e-273">왼쪽과 오른쪽의 임의 요소 쌍이 같으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-273"><see langword="true" /> if any element pairs in left and right are equal.</span></span> <span data-ttu-id="fed8e-274">같은 요소 쌍이 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-274"><see langword="false" /> if no element pairs are equal.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-275">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-275">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-276">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-276">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-277">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-277">Returns a new vector whose values are the product of each pair of elements in two specified vectors.</span></span></summary>
        <returns><span data-ttu-id="fed8e-278">element-wise 제품 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-278">The element-wise product vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-279">합니다 <xref:System.Numerics.Vector%601.op_Multiply%2A> 메서드는 곱하기 연산을 정의 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-279">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; value, !T factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value As Vector(Of T), factor As T) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * 'T -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="value * factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="factor" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-280">원본 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-280">The source vector.</span></span></param>
        <param name="factor"><span data-ttu-id="fed8e-281">스칼라 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-281">A scalar value.</span></span></param>
        <summary><span data-ttu-id="fed8e-282">벡터와 지정된 스칼라 값을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-282">Multiplies a vector by a specified scalar value.</span></span></summary>
        <returns><span data-ttu-id="fed8e-283">크기 조정된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-283">The scaled vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-284">합니다 <xref:System.Numerics.Vector%601.op_Multiply%2A> 메서드는 곱하기 연산을 정의 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-284">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (T factor, System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(!T factor, valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (factor As T, value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(T factor, System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member ( * ) : 'T * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="factor * value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="T" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="fed8e-285">스칼라 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-285">The scalar value.</span></span></param>
        <param name="value"><span data-ttu-id="fed8e-286">원본 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-286">The source vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-287">벡터와 지정된 스칼라 값을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-287">Multiplies a vector by a specified scalar value.</span></span></summary>
        <returns><span data-ttu-id="fed8e-288">크기 조정된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-288">The scaled vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-289">합니다 <xref:System.Numerics.Vector%601.op_Multiply%2A> 메서드는 곱하기 연산을 정의 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-289">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ~ (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_OnesComplement(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ~(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-290">원본 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-290">The source vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-291">지정된 벡터 요소에서 1의 보수를 가져와서 구한 요소가 포함된 새 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-291">Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</span></span></summary>
        <returns><span data-ttu-id="fed8e-292">1의 보수 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-292">The one's complement vector.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Subtraction(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fed8e-293">첫 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-293">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="fed8e-294">두 번째 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-294">The second vector.</span></span></param>
        <summary><span data-ttu-id="fed8e-295">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-295">Subtracts the second vector from the first.</span></span></summary>
        <returns><span data-ttu-id="fed8e-296"><paramref name="left" />에서 <paramref name="right" />를 뺀 결과로 생성되는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-296">The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-297">합니다 <xref:System.Numerics.Vector%601.op_Subtraction%2A> 메서드 정의 대해 빼기 연산을 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-297">The <xref:System.Numerics.Vector%601.op_Subtraction%2A> method defines the subtraction operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_UnaryNegation(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fed8e-298">부정할 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-298">The vector to negate.</span></span></param>
        <summary><span data-ttu-id="fed8e-299">지정된 벡터를 부정합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-299">Negates a given vector.</span></span></summary>
        <returns><span data-ttu-id="fed8e-300">부정된 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-300">The negated vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-301">합니다 <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> 메서드는 단항 부정 연산을 정의 <xref:System.Numerics.Vector%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-301">The <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> method defines the unary negation operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="vector.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed8e-302">기본 형식을 사용하여 이 벡터의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-302">Returns the string representation of this vector using default formatting.</span></span></summary>
        <returns><span data-ttu-id="fed8e-303">이 벡터의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-303">The string representation of this vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-304">이 메서드는 벡터의 각 요소 형식이 "G" (일반) 형식 문자열 및 현재 스레드 문화권의 서식 규칙을 사용 하 여 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-304">This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</span></span> <span data-ttu-id="fed8e-305">현재 문화권의 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 속성 뒤에 공백을 사용 하 여 각 요소를 구분 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-305">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="vector.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fed8e-306">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-306">A  or  that defines the format of individual elements.</span></span></param>
        <summary><span data-ttu-id="fed8e-307">지정된 형식 문자열로 개별 요소의 형식을 지정하여 이 벡터의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-307">Returns the string representation of this vector using the specified format string to format individual elements.</span></span></summary>
        <returns><span data-ttu-id="fed8e-308">현재 인스턴스의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-308">The string representation of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-309">이 메서드는 벡터의 각 요소 형식이 사용 하 여 문자열을 반환 합니다. `format` 및 현재 문화권의 서식 지정 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-309">This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions.</span></span> <span data-ttu-id="fed8e-310">현재 문화권의 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 속성 뒤에 공백을 사용 하 여 각 요소를 구분 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-310">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="vector.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fed8e-311">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-311">A  or  that defines the format of individual elements.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="fed8e-312">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-312">A format provider that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="fed8e-313">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 이 벡터의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-313">Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</span></span></summary>
        <returns><span data-ttu-id="fed8e-314">현재 인스턴스의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-314">The string representation of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed8e-315">이 메서드는 벡터의 각 요소 형식이 사용 하 여 문자열을 반환 합니다. `format` 하 고 `formatProvider`, 및 형식 공급자의 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 속성 뒤에 공백을 사용 하 여 각 요소를 구분 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-315">This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; Zero { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed8e-316">0을 모두 포함하는 벡터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-316">Returns a vector containing all zeroes.</span></span></summary>
        <value><span data-ttu-id="fed8e-317">0을 모두 포함하는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="fed8e-317">A vector containing all zeroes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>