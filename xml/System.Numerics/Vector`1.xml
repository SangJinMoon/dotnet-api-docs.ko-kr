<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f010be3bdb0eb8add39f3d12d4b064a83009da87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f010be3bdb0eb8add39f3d12d4b064a83009da87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The vector type.</source>
          <target state="translated">벡터 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 기본 숫자 형식일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Numerics.Vector`1">
          <source>Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</source>
          <target state="translated">병렬 알고리즘의 낮은 수준 최적화에 적합한 지정된 숫자 형식의 단일 벡터를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> is an immutable structure that represents a single vector of a specified numeric type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> 지정 된 숫자 형식의 단일 벡터를 나타내는 변경할 수 없는 구조가입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The count of a <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> instance is fixed, but its upper limit is CPU-register dependent.</source>
          <target state="translated">개수는 <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> 인스턴스 수정 되었지만 한계는 CPU 레지스터 종속 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>It is intended to be used as a building block for vectorizing large algorithms.</source>
          <target state="translated">큰 알고리즘의 벡터화에 대 한 빌딩 블록으로 사용할 것이 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> structure provides support for hardware acceleration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> 구조 하드웨어 가속이 적용에 대 한 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>The numeric type that defines the type of the components in the vector.</source>
          <target state="translated">벡터에서 구성 요소의 형식을 정의하는 숫자 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>Creates a vector whose components are of a specified type.</source>
          <target state="translated">구성 요소가 지정된 형식인 벡터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source><ph id="ph1">`value`</ph> can be any primitive numeric type (that is, a numeric type whose <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 기본 숫자 형식일 수 있습니다 (즉, 숫자 형식이 <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> 속성에서 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>A numeric array.</source>
          <target state="translated">숫자 배열입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>Creates a vector from a specified array.</source>
          <target state="translated">지정된 배열에서 벡터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">`values`</ph> must contain at least <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph1">`values`</ph> 자 이상 이어야 합니다 <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>A numeric array.</source>
          <target state="translated">숫자 배열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The starting index position from which to create the vector.</source>
          <target state="translated">벡터를 만들려는 시작 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>Creates a vector from a specified array starting at a specified index position.</source>
          <target state="translated">지정된 인덱스 위치에서 시작하는 지정된 배열에서 벡터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The array must contain at least [Vector(T) Constructor (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt; elements from the specified index.</source>
          <target state="translated">배열의 하나 이상 포함 해야 합니다 [Vector(T) 생성자 (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType &gt; 지정된 된 인덱스에서 요소를 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph>에서 <ph id="ph2">&lt;paramref name="index" /&gt;</ph>를 뺀 길이가 <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>보다 작은 경우.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">벡터 값의 복사본을 받을 배열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>Copies the vector instance to a specified destination array.</source>
          <target state="translated">지정된 대상 배열에 벡터 인스턴스를 복사합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The copy operation begins at index 0 of <ph id="ph1">`destination`</ph>.</source>
          <target state="translated">복사 작업의 인덱스 0에서 시작 <ph id="ph1">`destination`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The destination array must have at least <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> elements.</source>
          <target state="translated">대상 배열에 적어도 있어야 <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The number of elements in the current vector is greater than the number of elements available in the <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">현재 벡터에 있는 요소의 개수가 <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 배열에서 사용할 수 있는 요소의 개수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">벡터 값의 복사본을 받을 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The starting index in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> at which to begin the copy operation.</source>
          <target state="translated">복사 작업을 시작할 <bpt id="p1">&lt;c&gt;</bpt>대상<ept id="p1">&lt;/c&gt;</ept>의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>Copies the vector instance to a specified destination array starting at a specified index position.</source>
          <target state="translated">지정된 인덱스 위치에서 시작하는 지정된 대상 배열에 벡터 인스턴스를 복사합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The copy operation begins at index <ph id="ph1">`startIndex`</ph> of <ph id="ph2">`destination`</ph>.</source>
          <target state="translated">인덱스에서 복사 작업이 시작 <ph id="ph1">`startIndex`</ph> 의 <ph id="ph2">`destination`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The destination array must have at least <ph id="ph1">`startIndex`</ph> + [CopyTo Method (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A&gt; – 1 elements.</source>
          <target state="translated">대상 배열에 적어도 있어야 <ph id="ph1">`startIndex`</ph> + [CopyTo 메서드 (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A &gt; – 1 요소입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the current instance is greater than the number of elements available from <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> to the end of the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">현재 인스턴스에 있는 요소의 개수가 <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>부터 <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 배열 끝까지 사용할 수 있는 요소의 개수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last index in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>의 마지막 인덱스보다 큽니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Returns the number of elements stored in the vector.</source>
          <target state="translated">벡터에 저장된 요소의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Count">
          <source>The number of elements stored in the vector.</source>
          <target state="translated">벡터에 저장된 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Access to the property getter via reflection is not supported.</source>
          <target state="translated">리플렉션을 통한 속성 getter에 대한 액세스는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>The vector to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether this instance is equal to a specified vector.</source>
          <target state="translated">이 인스턴스가 지정된 벡터와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스와 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">두 벡터가 같으면 동일한 형식의 동일한 경우 같은 수의 값, 있고 현재 인스턴스에 있는 각 값은 해당 값에 <ph id="ph1">`other`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스와 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is null, or if <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> is a vector of a different type than the current instance.</source>
          <target state="translated">메서드는 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>가 null이거나 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>가 현재 인스턴스와 다른 형식의 벡터이면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">두 벡터가 같으면 동일한 형식의 동일한 경우 같은 수의 값, 있고 현재 인스턴스에 있는 각 값은 해당 값에 <ph id="ph1">`other`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>The hash code.</source>
          <target state="translated">해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The index of the element to return.</source>
          <target state="translated">반환할 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>Gets the element at a specified index.</source>
          <target state="translated">지정된 인덱스에 있는 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The element at index <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">인덱스 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>의 요소입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.One">
          <source>Returns a vector containing all ones.</source>
          <target state="translated">1을 모두 포함하는 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.One">
          <source>A vector containing all ones.</source>
          <target state="translated">1을 모두 포함하는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to add.</source>
          <target state="translated">더할 첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to add.</source>
          <target state="translated">더할 두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Adds two vectors together.</source>
          <target state="translated">두 벡터를 더합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The summed vector.</source>
          <target state="translated">합한 벡터입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> 메서드 정의 대해 더하기 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">두 벡터의 각 요소에서 비트 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 연산을 수행하여 새 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> of <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>의 비트 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 결과로 생성되는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> 메서드 정의 비트 <ph id="ph2">`And`</ph> 에 대 한 작업이 <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">두 벡터의 각 요소에서 비트 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 연산을 수행하여 새 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>에 있는 요소의 비트 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 결과로 생성되는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> 메서드 정의 비트 <ph id="ph2">`Or`</ph> 에 대 한 작업이 <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Divides the first vector by the second.</source>
          <target state="translated">첫 번째 벡터를 두 번째 벡터로 나눕니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>를 <ph id="ph2">&lt;paramref name="right" /&gt;</ph>로 나눈 결과로 생성되는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> 메서드 정의 대 한 나누기 연산에서 구하는 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">비교할 첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">비교할 두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether each pair of elements in two specified vectors are equal.</source>
          <target state="translated">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph>과 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in <ph id="ph1">`left`</ph> is equal to the corresponding value in <ph id="ph2">`right`</ph>.</source>
          <target state="translated">두 벡터는 동일한 유형의 되어, 값 및 각 값의 번호가 동일한 <ph id="ph1">`left`</ph> 에 해당 값과 같으면 <ph id="ph2">`right`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">두 벡터의 각 요소에서 비트 <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> 연산을 수행하여 새 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>에 있는 요소의 비트 <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> 결과로 생성되는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`XOr`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> 메서드 정의 비트 <ph id="ph2">`XOr`</ph> 에 대 한 작업이 <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">재해석할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">지정된 벡터의 비트를 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> 형식의 벡터로 재해석합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">재해석된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> 축소 변환 연산자가 정의; (Visual Basic)에서는 변환 메서드나 캐스팅 연산자 (C#에서) 필요 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">비교할 첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">비교할 두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</source>
          <target state="translated">지정된 벡터의 단일 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element pairs in left and right are equal.</source>
          <target state="translated">왼쪽과 오른쪽의 임의 요소 쌍이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if no element pairs are equal.</source>
          <target state="translated">같은 요소 쌍이 없으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Multiplies two vectors together.</source>
          <target state="translated">두 벡터를 곱합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The product vector.</source>
          <target state="translated">벡터곱입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> 메서드 정의 대 한 곱하기 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The source vector.</source>
          <target state="translated">원본 벡터입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>A scalar value.</source>
          <target state="translated">스칼라 값입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>Multiplies a vector by a specified scalar value.</source>
          <target state="translated">벡터와 지정된 스칼라 값을 곱합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The scaled vector.</source>
          <target state="translated">크기 조정된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> 메서드 정의 대 한 곱하기 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scalar value.</source>
          <target state="translated">스칼라 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">원본 벡터입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>Multiplies a vector by the given scalar.</source>
          <target state="translated">벡터와 지정된 스칼라를 곱합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scaled vector.</source>
          <target state="translated">크기 조정된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> 메서드 정의 대 한 곱하기 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">원본 벡터입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</source>
          <target state="translated">지정된 벡터 요소에서 1의 보수를 가져와서 구한 요소가 포함된 새 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The one's complement vector.</source>
          <target state="translated">1의 보수 벡터입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">첫 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">두 번째 벡터입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Subtracts the second vector from the first.</source>
          <target state="translated">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph>에서 <ph id="ph1">&lt;paramref name="right" /&gt;</ph>를 뺀 결과로 생성되는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> 메서드 정의 대해 빼기 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The vector to negate.</source>
          <target state="translated">부정할 벡터입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>Negates a given vector.</source>
          <target state="translated">지정된 벡터를 부정합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The negated vector.</source>
          <target state="translated">부정된 벡터입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> method defines the unary negation operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> 메서드 정의 대 한 단항 부정 연산을 <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>Returns the string representation of this vector using default formatting.</source>
          <target state="translated">기본 형식을 사용하여 이 벡터의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>The string representation of this vector.</source>
          <target state="translated">이 벡터의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</source>
          <target state="translated">이 메서드는 벡터의 각 요소 형식이 "G" (일반) 형식 문자열 및 현재 스레드 문화권의 서식 설정 규칙을 사용 하 여 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">현재 문화권의 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> 속성 뒤에 공백이 각 요소를 구분 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements.</source>
          <target state="translated">지정된 형식 문자열로 개별 요소의 형식을 지정하여 이 벡터의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The string representation of the current instance.</source>
          <target state="translated">현재 인스턴스의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and the current culture's formatting conventions.</source>
          <target state="translated">이 메서드를 사용 하 여 벡터의 각 요소는 형식을 있는 문자열을 반환 <ph id="ph1">`format`</ph> 및 현재 문화권 서식 지정 규칙입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">현재 문화권의 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> 속성 뒤에 공백이 각 요소를 구분 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A format provider that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</source>
          <target state="translated">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 이 벡터의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance.</source>
          <target state="translated">현재 인스턴스의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and <ph id="ph2">`formatProvider`</ph>, and the format provider's <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">이 메서드를 사용 하 여 벡터의 각 요소는 형식을 있는 문자열을 반환 <ph id="ph1">`format`</ph> 및 <ph id="ph2">`formatProvider`</ph>, 형식 공급자 및 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> 속성 뒤에 공백이 각 요소를 구분 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Zero">
          <source>Returns a vector containing all zeroes.</source>
          <target state="translated">0을 모두 포함하는 벡터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Zero">
          <source>A vector containing all zeroes.</source>
          <target state="translated">0을 모두 포함하는 벡터입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>