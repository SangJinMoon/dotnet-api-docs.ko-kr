<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObservableCollection`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eaa22977009257753fbc64752753fc05cd2ab76d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa22977009257753fbc64752753fc05cd2ab76d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">컬렉션에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.</source>
          <target state="translated">항목이 추가 또는 제거되거나 전체 목록이 새로 고쳐진 경우 알림을 제공하는 동적 데이터 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>In many cases the data that you work with is a collection of objects.</source>
          <target state="translated">대부분의 경우 작업 하는 데이터는 개체의 모음입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For example, a common scenario in data binding is to use an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> such as a <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> to display a collection of records.</source>
          <target state="translated">예를 들어, 일반적인 시나리오에서 데이터 바인딩 사용 하는 것는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> 와 같은 한 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> 레코드의 컬렉션을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You can enumerate over any collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">구현 하는 컬렉션을 열거할 수는 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, to set up dynamic bindings so that insertions or deletions in the collection update the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automatically, the collection must implement the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated">그러나 삽입 또는 삭제 컬렉션에서 업데이트할 수 있도록 동적 바인딩을 설정 하는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 컬렉션은 자동으로 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>This interface exposes the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event, an event that should be raised whenever the underlying collection changes.</source>
          <target state="translated">이 인터페이스를 노출 된 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트, 기본 컬렉션이 변경 될 때마다 발생 해야 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which is a built-in implementation of a data collection that implements the <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 제공 된 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 클래스를 구현 하는 데이터 컬렉션을 구현 하는 기본 제공는 <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Before implementing your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> or one of the existing collection classes, such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, among many others.</source>
          <target state="translated">고유한 컬렉션을 구현 하기 전에 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 또는 같은 기존 컬렉션 중 하나가 클래스 <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, 다양 한 기타.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>If you have an advanced scenario and want to implement your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, which provides a non-generic collection of objects that can be individually accessed by index.</source>
          <target state="translated">고급 시나리오에 있고 컬렉션을 직접 구현 하는 것이 좋습니다를 사용 하 여 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>를 인덱스에서 개별적으로 액세스할 수 있는 개체의 제네릭이 아닌 컬렉션을 제공 하 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> provides the best performance with the data binding engine.</source>
          <target state="translated">구현 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 데이터 바인딩 엔진에 최상의 성능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>To fully support transferring data values from binding source objects to binding targets, each object in your collection that supports bindable properties must implement an appropriate property changed notification mechanism such as the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">바인딩 소스 개체를 바인딩 대상에서 이전 데이터 값을 완벽 하 게 지원 하려면 지 원하는 바인딩 가능한 속성 컬렉션에 있는 각 개체는 적절 한 속성 변경 알림 메커니즘와 같은 구현 해야는 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For more information, see "Binding to Collections" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 "컬렉션에 바인딩"의 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Notes on XAML Usage</source>
          <target state="translated">XAML 사용에 대 한 참고 사항</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> can be used as a XAML object element in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, in versions 3.0 and 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> XAML 개체 요소에서으로 사용할 수 있습니다 <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, 버전 3.0 및 3.5.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, the usage has substantial limitations.</source>
          <target state="translated">그러나 사용에 제한이 많습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> must be the root element, because the  that must be used to specify the constrained type of the generic <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is only supported on the object element for the root element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 제네릭의 제한 된 형식을 지정 하려면 사용할 해야 지 없기 때문에 루트 요소 여야 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 루트 요소에 대 한 개체 요소에만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must declare an  (which entails that the build action for this XAML file must be <ph id="ph1">`Page`</ph> or some other build action that compiles the XAML).</source>
          <target state="translated">선언 해야 합니다는 (이 XAML 파일에 대 한 빌드 작업 해야 하는 포함 <ph id="ph1">`Page`</ph> 다른 빌드 XAML 컴파일되지 않는 작업 또는).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is in a namespace and assembly that are not initially mapped to the default XML namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 처음에 기본 XML 네임 스페이스에 매핑되지 않은 어셈블리 및 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must map a prefix for the namespace and assembly, and then use that prefix on the object element tag for <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</source>
          <target state="translated">네임 스페이스 및 어셈블리에 대 한 접두사를 매핑한 다음에 대 한 개체 요소 태그에 해당 접두사를 사용 해야 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>A more straightforward way to use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> capabilities from XAML in an application is to declare your own non-generic custom collection class that derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, and constrains it to a specific type.</source>
          <target state="translated">사용 하는 더 간단한 방법은 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 에서 파생 되는 고유한 제네릭이 아닌 사용자 지정 컬렉션 클래스를 선언 하는 XAML에서 응용 프로그램의 기능 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, 특정 유형으로 제한 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Then map the assembly that contains this class, and reference it as an object element in your XAML.</source>
          <target state="translated">이 클래스를 포함 하는 어셈블리 매핑한 다음 XAML에서 개체 요소로 참조 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection from which the elements are copied.</source>
          <target state="translated">요소가 복사되는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">지정된 컬렉션에서 복사한 요소가 포함된 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the collection.</source>
          <target state="translated">요소에 복사 됩니다는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 컬렉션의 열거자가 읽기 순서와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The list from which the elements are copied.</source>
          <target state="translated">요소가 복사되는 목록입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified list.</source>
          <target state="translated">지정된 목록에서 복사한 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the list.</source>
          <target state="translated">요소에 복사 됩니다는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 목록 열거자에 따라 읽기 순서와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The <ph id="ph1">&lt;paramref name="list" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>Disallows reentrant attempts to change this collection.</source>
          <target state="translated">이 컬렉션을 변경하려는 재진입 시도를 허용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that can be used to dispose of the object.</source>
          <target state="translated">개체를 삭제하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>The typical usage is to wrap an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> call within a <ph id="ph2">`using`</ph> scope, as in the following example:</source>
          <target state="translated">일반적인 사용법은를 래핑하는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> 내에서 호출는 <ph id="ph2">`using`</ph> 다음 예제와 같이, 범위:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Checks for reentrant attempts to change this collection.</source>
          <target state="translated">이 컬렉션을 변경하려는 재진입 시도를 확인합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>If there was a call to <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> of which the <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> return value has not yet been disposed of.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> 반환 값이 아직 삭제되지 않은 <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>에 대한 호출이 있는 경우.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Typically, this means when there are additional attempts to change this collection during a <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> 이벤트 동안 이 컬렉션을 변경하려는 추가 시도가 있는 경우를 의미합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>However, it depends on when derived classes choose to call <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</source>
          <target state="translated">그러나 파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>를 호출하도록 선택한 시기에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>Removes all items from the collection.</source>
          <target state="translated">컬렉션에서 모든 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>The base class calls this method when the list is being cleared.</source>
          <target state="translated">기본 클래스 목록 선택을 취소 한 경우이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">이 구현 발생는 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
          <source>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</source>
          <target state="translated">항목이 추가되거나, 제거되거나, 변경되거나, 이동되거나 전체 목록이 새로 고쳐질 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>이 삽입될 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an item into the collection at the specified index.</source>
          <target state="translated">컬렉션 내의 지정한 인덱스에 항목을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The base class calls this method when an item is added to the collection.</source>
          <target state="translated">항목이 컬렉션에 추가 될 때이 메서드를 호출 하는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">이 구현 발생는 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">이동할 항목의 위치를 지정하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">항목의 새 위치를 지정하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">지정된 인덱스의 항목을 컬렉션의 새 위치로 이동합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Subclasses can override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> method to provide custom behavior for this method.</source>
          <target state="translated">서브 클래스에서 재정의할 수는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> 메서드를이 메서드에 대 한 사용자 지정 동작을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">이동할 항목의 위치를 지정하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">항목의 새 위치를 지정하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">지정된 인덱스의 항목을 컬렉션의 새 위치로 이동합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">이 구현 발생는 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Subclasses can override this protected method to provide custom behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> method.</source>
          <target state="translated">서브 클래스에 대 한 사용자 지정 동작을 제공 하려면이 보호 된 메서드를 재정의할 수는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">발생하는 이벤트의 인수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">제공된 인수를 사용하여 <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Properties and methods that modify this collection raise the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> event through this <ph id="ph2">`virtual`</ph> method.</source>
          <target state="translated">이 컬렉션 생성을 수정 하는 메서드와 속성은 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> 이 통해 이벤트 <ph id="ph2">`virtual`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>When overriding this method, either call the base implementation or use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> method to handle reentrant collection changes, as in the following example:</source>
          <target state="translated">이 메서드를 재정의할 경우 기본 구현을 호출 하거나 사용 된 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> 다음 예제와 같이 재진입 컬렉션을 처리 하는 메서드를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">발생하는 이벤트의 인수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">제공된 인수를 사용하여 <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">제거할 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>Removes the item at the specified index of the collection.</source>
          <target state="translated">컬렉션의 지정된 인덱스에서 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The base class calls this method when an item is removed from the collection.</source>
          <target state="translated">컬렉션에서 항목이 제거 될 때이 메서드를 호출 하는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">이 구현 발생는 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">바꿀 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">지정한 인덱스에 있는 요소의 새 값입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">지정한 인덱스에 있는 요소를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The base class calls this method when an item is set in the collection.</source>
          <target state="translated">컬렉션에서 항목을 설정 하는 경우이 메서드를 호출 하는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">이 구현 발생는 <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>