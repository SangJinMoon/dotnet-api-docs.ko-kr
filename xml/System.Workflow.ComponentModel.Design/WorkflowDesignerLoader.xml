<Type Name="WorkflowDesignerLoader" FullName="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
  <TypeSignature Language="C#" Value="public abstract class WorkflowDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowDesignerLoader&#xA;Inherits BasicDesignerLoader" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10c07-101">사용자 지정 워크플로 디자이너 로더를 구현하는 데 사용하는 공용 디자이너 로더 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-101">Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="10c07-102">디자이너 로더 클래스는 디자이너를 로드하고 사용자가 변경을 지시한 경우 디자이너의 상태의 변경 내용을 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-102">Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs.</span></span> <span data-ttu-id="10c07-103"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 클래스는 Workflow Designer와 Workflow Designer 구성 요소의 사용자 지정 로딩을 지원하도록 구현될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-103">The <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class can be implemented to support custom loading of a workflow designer and workflow designer components.</span></span> <span data-ttu-id="10c07-104">Workflow Designer 로더는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 메서드를 호출한 후 열린 문서에 발생한 변경 내용을 문서 로딩 시 로더가 사용한 저장소에 다시 쓰는 작업도 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-104">A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> method is called.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="10c07-105"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />에서 상속하는 경우 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> 및 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" /> 멤버를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-105">When you inherit from <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />, you must override the following members: <see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> and <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10c07-106">파생 클래스에서 구현되는 경우에는 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-106">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-107">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 개체의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-107">The following example demonstrates how to create a new instance of a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> object.</span></span> <span data-ttu-id="10c07-108">이 경우 `WorkflowLoader` 클래스는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-108">In this case, the `WorkflowLoader` class is derived from <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span> <span data-ttu-id="10c07-109"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>를 만들면 <xref:System.ComponentModel.Design.DesignSurface>가 동시에 만들어지고 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 메서드를 사용하여 `BeginLoad`에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-109">When the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> is created, a <xref:System.ComponentModel.Design.DesignSurface> is also created and associated with the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> using the `BeginLoad` method.</span></span>  
  
 [!code-csharp[WF_Samples#47](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#47)]
 [!code-vb[WF_Samples#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActivityToDesigner">
      <MemberSignature Language="C#" Value="public void AddActivityToDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivityToDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddActivityToDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="10c07-110">추가할 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-110"><see cref="T:System.Workflow.ComponentModel.Activity" /> to add.</span></span></param>
        <summary><span data-ttu-id="10c07-111">활동이 부모 활동 컬렉션에 추가되면 디자이너 호스트에 활동을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-111">Adds an activity to the designer host after it has been added to the parent activities collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-112">다음 예제에서는 <xref:System.Workflow.Activities.CodeActivity>을 디자이너에 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-112">The following example demonstrates how to add a <xref:System.Workflow.Activities.CodeActivity> to the designer.</span></span> <span data-ttu-id="10c07-113">활동은 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> 메서드를 사용하여 디자이너에 추가되기 전에 워크플로 내에서 루트 활동의 Activities 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-113">Before the activity is added to the designer using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> method, it is first added to the Activities collection of the root activity within the workflow.</span></span>  
  
 [!code-csharp[WF_Samples#55](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#55)]
 [!code-vb[WF_Samples#55](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10c07-114">
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-114">Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c07-115"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>는 디자이너 호스트가 사용하는 모든 서비스를 해제하지만 보류 중인 변경 내용을 디자이너 로더에 기록하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-115"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> releases all services used by the designer host, but it does not write pending changes to the designer loader.</span></span> <span data-ttu-id="10c07-116">모든 리소스를 해제하기 전에 보류 중인 변경 내용을 저장하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A>를 호출하기 전에 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>를 먼저 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-116">If you want to save any pending changes prior to releasing all resources, call <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> before you call <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c07-117">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> 메서드의 구현 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-117">The following example demonstrates an implementation of the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> method.</span></span> <span data-ttu-id="10c07-118">이 구현을 통해 LoaderHost 개체에 추가된 다양한 서비스가 응용 프로그램 종료 준비 시에 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-118">In this implementation, various services that have been added to the LoaderHost object are removed in preparation for closing the application.</span></span> <span data-ttu-id="10c07-119">이 예제는 Tracking Profile Designer SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-119">This example is from the Tracking Profile Designer SDK sample.</span></span> <span data-ttu-id="10c07-120">자세한 내용은 참조 [Tracking Profile Designer 샘플](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8)합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-120">For more information, see [Tracking Profile Designer Sample](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8).</span></span>  
  
 [!code-csharp[WF_Samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[WF_Samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public abstract string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10c07-121">파생 클래스에서 재정의되면 로드할 디자이너의 파일 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-121">When overridden in a derived class, gets the file name of the designer to load.</span></span></summary>
        <value><span data-ttu-id="10c07-122">로드할 디자이너의 파일 이름이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-122">A string that contains the file name of the designer to load.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-123">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A>가 사용하는 현재 로드된 워크플로 파일의 경로를 반환하기 위해 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 속성을 재정의하는 방법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-123">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A> property to return the path of the currently loaded workflow file used by the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span>  
  
 [!code-csharp[WF_Samples#32](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#32)]
 [!code-vb[WF_Samples#32](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10c07-124">보류 중인 변경 내용을 디자이너가 로드된 위치에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-124">Writes pending changes to the location that the designer was loaded from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-125">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A>를 사용하여 워크플로를 serialize하기 위해 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-125">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> method to serialize a workflow using the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>.</span></span> <span data-ttu-id="10c07-126">이 예제에서 재정의된 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A>가 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> 파생 클래스에서 정의된 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 메서드에 위임됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-126">In this example, the overridden <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> delegates to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> method defined in the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> derived class.</span></span>  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReload">
      <MemberSignature Language="C#" Value="public virtual void ForceReload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceReload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceReload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10c07-127">파생 클래스에서 재정의되는 경우에는 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />를 통해 디자이너를 다시 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-127">When overridden in a derived class, causes <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> to reload the designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileReader">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextReader GetFileReader (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetFileReader(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileReader (filePath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextReader ^ GetFileReader(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="10c07-128">읽을 파일의 경로가 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-128">A string that contains a path to the file to read from.</span></span></param>
        <summary><span data-ttu-id="10c07-129">파생 클래스에서 재정의되면 지정된 파일에서 읽기 위해 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />가 사용하는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-129">When overridden in a derived class, retrieves an object that <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to read from the specified file.</span></span></summary>
        <returns><span data-ttu-id="10c07-130">지정된 파일을 읽을 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-130">A <see cref="T:System.IO.TextReader" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-131">다음 예제에서는 재정의된 `TextReader` 메서드를 호출할 때 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> 개체를 만들고 반환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-131">The following example shows how to create and return a `TextReader` object when the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> overloaded method is called.</span></span>  
  
 [!code-csharp[WF_Samples#33](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#33)]
 [!code-vb[WF_Samples#33](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileWriter">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextWriter GetFileWriter (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextWriter GetFileWriter(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileWriter (filePath As String) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextWriter ^ GetFileWriter(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="10c07-132">쓸 파일의 경로가 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-132">A string that contains the path to the file to write to.</span></span></param>
        <summary><span data-ttu-id="10c07-133">파생 클래스에서 재정의되면 지정된 파일에 쓰기 위해 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />가 사용하는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-133">When overridden in a derived class, gets an object that the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="10c07-134">파일에 쓸 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-134">A <see cref="T:System.IO.TextWriter" /> to write to the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c07-135">다음 예제에서는 재정의된 `TextWriter` 메서드를 호출할 때 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> 개체를 만들고 반환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-135">The following example shows how to create and return a `TextWriter` object when the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> overloaded method is called.</span></span>  
  
 [!code-csharp[WF_Samples#34](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#34)]
 [!code-vb[WF_Samples#34](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDebugMode">
      <MemberSignature Language="C#" Value="public virtual bool InDebugMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDebugMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InDebugMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InDebugMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10c07-136">디버그 모드에서 워크플로를 로드할지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-136">Gets a value that indicates whether the workflow should be loaded in debug mode.</span></span></summary>
        <value>
          <span data-ttu-id="10c07-137">워크플로를 디버그 모드에서 로드하는 경우에는 <see langword="true" />이고, 그렇지 않을 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-137"><see langword="true" /> if the workflow should be loaded in debug mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="10c07-138">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-139">다음 방법을 결정 하는 경우 워크플로 디자이너 디버거에 의해 잠겨 있는지 여부를 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A> 현재 `WorkflowDesignerLoader` 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-139">The following method determines whether the workflow designer is locked by the debugger if the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A> property of the current `WorkflowDesignerLoader` returns `true`.</span></span>  
  
 [!code-csharp[WF_Samples#54](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#54)]
 [!code-vb[WF_Samples#54](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10c07-140">디자이너 로더 호스트가 필요로 하는 서비스를 통해 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-140">Initializes the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> with any services required by the designer loader host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-141">다음 예제에서는 디자이너에 필요한 서비스를 추가하기 위해 파생 클래스의 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-141">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> method in a derived class to add the services needed for the designer.</span></span> <span data-ttu-id="10c07-142">서비스는 응용 프로그램에서 필요한 서비스 지원 수준에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-142">The services can vary based on the level of service support required by your application.</span></span>  
  
 [!code-csharp[WF_Samples#31](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayout">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayout (System.Xml.XmlReader layoutReader, out System.Collections.IList layoutLoadErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayout(class System.Xml.XmlReader layoutReader, [out] class System.Collections.IList&amp; layoutLoadErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadDesignerLayout (layoutReader As XmlReader, ByRef layoutLoadErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayout(System::Xml::XmlReader ^ layoutReader, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutLoadErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutReader" Type="System.Xml.XmlReader" />
        <Parameter Name="layoutLoadErrors" Type="System.Collections.IList&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutReader"><span data-ttu-id="10c07-143">serialize된 레이아웃에 대해 생성된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-143">An <see cref="T:System.Xml.XmlReader" /> that is created for the serialized layout.</span></span></param>
        <param name="layoutLoadErrors"><span data-ttu-id="10c07-144">deserialization 도중 발생한 오류의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-144">List of errors that occurred during the deserialization.</span></span></param>
        <summary><span data-ttu-id="10c07-145">serialize된 레이아웃을 현재 디자이너 호스트의 루트 디자이너에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-145">Applies the serialized layout to the root designer in the current designer host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-146">이 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> 메서드를 사용하여 특정 워크플로 정의의 레이아웃을 로드하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-146">This example shows how to load the layout for a specific workflow definition using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> method.</span></span> <span data-ttu-id="10c07-147"><xref:System.Xml.XmlReader> 개체는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A>을 사용하여 만든 디자이너 레이아웃 파일의 파일 이름으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-147">An <xref:System.Xml.XmlReader> object is created using the file name of a designer layout file that was created using <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A>.</span></span> <span data-ttu-id="10c07-148">오류가 발생한 경우 레이아웃 로드가 완료된 후 해당 오류가 사용자에게 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-148">When the layout has finished loading, any errors that might have occurred are displayed to the user.</span></span>  
  
 [!code-csharp[WF_Samples#39](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#39)]
 [!code-vb[WF_Samples#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayoutFromResource">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayoutFromResource (Type type, string manifestResourceName, out System.Collections.IList errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayoutFromResource(class System.Type type, string manifestResourceName, [out] class System.Collections.IList&amp; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayoutFromResource(Type ^ type, System::String ^ manifestResourceName, [Runtime::InteropServices::Out] System::Collections::IList ^ % errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="manifestResourceName" Type="System.String" />
        <Parameter Name="errors" Type="System.Collections.IList&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="10c07-149">리소스가 연결된 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-149"><see cref="T:System.Type" /> that the resource is associated with.</span></span></param>
        <param name="manifestResourceName"><span data-ttu-id="10c07-150">리소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-150">Name of the resource.</span></span></param>
        <param name="errors"><span data-ttu-id="10c07-151"><see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />을 호출하는 동안 발생된 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-151">Errors encountered during the call to <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />.</span></span></param>
        <summary><span data-ttu-id="10c07-152">지정된 리소스를 검색하고 serialize된 레이아웃이 현재 디자이너 호스트의 루트 디자이너에 적용된 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-152">Retrieves the specified resource and calls the <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> method that applies the serialized layout to the root designer in the current designer host.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="10c07-153">로드 작업이 성공적으로 수행된 경우에는 <see langword="true" />이고, 그렇지 않을 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-153"><see langword="true" /> if load operation is successful; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="10c07-154">로드 오류를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-154">Contains the load errors.</span></span></param>
        <summary><span data-ttu-id="10c07-155">디자이너 로딩이 완료되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-155">Called when loading of the designer is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-156">다음 예제에서는 워크플로를 로드하는 동안 발생했을 수 있는 오류를 표시하도록 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-156">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> method to display errors that might have occurred during the loading of a workflow.</span></span>  
  
 [!code-csharp[WF_Samples#36](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#36)]
 [!code-vb[WF_Samples#36](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="10c07-157">디자인 타임 serialization을 관리하는 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 인터페이스를 구현하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-157">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</span></span></param>
        <summary><span data-ttu-id="10c07-158">캐시된 변경 내용을 디자이너가 로드된 위치에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-158">Writes cached changes to the location that the designer was loaded from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-159">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A>를 사용하여 워크플로를 serialize하기 위해 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-159">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> method to serialize the workflow using the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>.</span></span>  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="10c07-160">디자인 타임 serialization을 관리하는 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 인터페이스를 구현하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-160">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</span></span></param>
        <summary><span data-ttu-id="10c07-161">디자인 문서에서 디자이너를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-161">Loads the designer from a design document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-162">재정의 하는 방법을 보여 주는 다음 예제는 `PerformLoad` 워크플로 deserialize 하 고 사용 하 여 디자이너에 로드 하는 메서드는 `AddObjectGraphToDesignerHost` 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-162">The following example shows how to override the `PerformLoad` method to deserialize a workflow and load it in the designer using the `AddObjectGraphToDesignerHost` helper method.</span></span>  
  
 [!code-csharp[WF_Samples#37](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#37)]
 [!code-vb[WF_Samples#37](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivityFromDesigner">
      <MemberSignature Language="C#" Value="public void RemoveActivityFromDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveActivityFromDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveActivityFromDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="10c07-163">디자이너에서 제거할 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-163">Activity to be removed from the designer.</span></span></param>
        <summary><span data-ttu-id="10c07-164">활동이 부모 활동 컬렉션에 추가되면 디자이너 호스트에서 활동을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-164">Removes an activity from the designer host after it has been added to the parent activities collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-165">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>에서 활동을 제거하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-165">The following example shows how to remove an activity from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span> <span data-ttu-id="10c07-166">워크플로의 마지막 자식 활동은 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>에서 제거되기 전에 먼저 워크플로 <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-166">Before the last child activity in the workflow is removed from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>, it is first removed from the workflow <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> collection.</span></span>  
  
 [!code-csharp[WF_Samples#40](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#40)]
 [!code-vb[WF_Samples#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDesignerLayout">
      <MemberSignature Language="C#" Value="protected void SaveDesignerLayout (System.Xml.XmlWriter layoutWriter, System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, out System.Collections.IList layoutSaveErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveDesignerLayout(class System.Xml.XmlWriter layoutWriter, class System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, [out] class System.Collections.IList&amp; layoutSaveErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveDesignerLayout (layoutWriter As XmlWriter, rootDesigner As ActivityDesigner, ByRef layoutSaveErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SaveDesignerLayout(System::Xml::XmlWriter ^ layoutWriter, System::Workflow::ComponentModel::Design::ActivityDesigner ^ rootDesigner, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutSaveErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="rootDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="layoutSaveErrors" Type="System.Collections.IList&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutWriter">
          <span data-ttu-id="10c07-167">레이아웃을 serialize하는 데 사용되는 <see langword="XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-167"><see langword="XmlWriter" /> that is used to serialize the layout into.</span></span></param>
        <param name="rootDesigner"><span data-ttu-id="10c07-168">레이아웃 정보를 가져올 루트 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-168">Root activity from which you get the layout information.</span></span></param>
        <param name="layoutSaveErrors"><span data-ttu-id="10c07-169">serialize하는 동안 발생된 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-169">Errors encountered during serialization.</span></span></param>
        <summary><span data-ttu-id="10c07-170">디자이너 레이아웃을 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-170">Serializes the designer layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c07-171">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 메서드를 사용하여 워크플로의 디자인 레이아웃 정보를 저장하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-171">The following example demonstrates how to save the design layout information of a workflow using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> method.</span></span> <span data-ttu-id="10c07-172">후의 <xref:System.Xml.XmlWriter> 개체를 만들는 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> 에 대 한는 `RootComponent` 의 워크플로가 검색 되어에 전달 되는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="10c07-172">After the <xref:System.Xml.XmlWriter> object is created, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> for the `RootComponent` of the workflow is retrieved and passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> method.</span></span> <span data-ttu-id="10c07-173">이 메서드가 생성한 레이아웃 파일을 로드하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="10c07-173">To load the layout file that is generated by this method, see <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>.</span></span>  
  
 [!code-csharp[WF_Samples#38](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#38)]
 [!code-vb[WF_Samples#38](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkTypeDescriptionProvider">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TargetFrameworkTypeDescriptionProvider As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::TypeDescriptionProvider ^ TargetFrameworkTypeDescriptionProvider { System::ComponentModel::TypeDescriptionProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10c07-174">대상 <see cref="T:System.ComponentModel.TypeDescriptor" />의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 메타데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-174">Gets the <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <value><span data-ttu-id="10c07-175">대상 <see cref="T:System.ComponentModel.TypeDescriptor" />의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="10c07-175">The <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>