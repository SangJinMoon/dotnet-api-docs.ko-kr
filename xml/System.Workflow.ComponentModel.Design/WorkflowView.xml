<Type Name="WorkflowView" FullName="System.Workflow.ComponentModel.Design.WorkflowView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19e8f00ed7856ad3bd02244d5832b03aa550fdfc" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51928893" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowView : System.Windows.Forms.UserControl, IServiceProvider, System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowView extends System.Windows.Forms.UserControl implements class System.IServiceProvider, class System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowView" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowView&#xA;Inherits UserControl&#xA;Implements IMessageFilter, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowView : System::Windows::Forms::UserControl, IServiceProvider, System::Windows::Forms::IMessageFilter" />
  <TypeSignature Language="F#" Value="type WorkflowView = class&#xA;    inherit UserControl&#xA;    interface IServiceProvider&#xA;    interface IMessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IMessageFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.AmbientTheme), Xml="&lt;AmbientTheme xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" ApplyTo="System.Workflow.ComponentModel.Design.WorkflowView" ShowConfigErrors="True" DrawShadow="False" DrawGrayscale="False" DropIndicatorColor="0xFF006400" SelectionForeColor="0xFF0000FF" SelectionPatternColor="0xFF606060" ForeColor="0xFF808080" BackColor="0xFFFFFFFF" ShowGrid="False" GridColor="0xFFC0C0C0" TextQuality="Aliased" DrawRounded="True" ShowDesignerBorder="True" /&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="80758-101">프로세스 흐름의 시각적으로 렌더링하는 디자인 화면을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-101">Provides a design surface, which renders a visual representation of process flow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="80758-102"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 워크플로 마크업에 설명된 프로세스 흐름의 시각적으로 렌더링하는 디자인 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-102"><xref:System.Workflow.ComponentModel.Design.WorkflowView> is the design surface which renders a visual representation of process flow described in workflow markup.</span></span> <span data-ttu-id="80758-103"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 활동 디자이너가 Windows가 생성하는 다양한 이벤트를 렌더링하고 응답하는 데 필요한 풍부한 사용자 인터페이스 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-103"><xref:System.Workflow.ComponentModel.Design.WorkflowView> offers a rich set of user interface functionality needed by the activity designers for rendering and for responding to various Windows-generated events.</span></span> <span data-ttu-id="80758-104">또한 <xref:System.Workflow.ComponentModel.Design.WorkflowView>는 모든 디자이너가 특정 활동을 수행하는 데 사용할 수 있는 공용 함수 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-104">Also, the <xref:System.Workflow.ComponentModel.Design.WorkflowView> offers a set of common functions which can be used by all designers to perform certain activities.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-105">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> 클래스의 인스턴스를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-105">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class using the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method.</span></span> <span data-ttu-id="80758-106">그런 다음 코드는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 및 <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A>을 포함하여 여러 <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> 속성을 설정하고 <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-106">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method.</span></span>  
  
 <span data-ttu-id="80758-107">이 코드 예제는 WorkflowDesignerControl.cs 파일에서 가져온 Workflow Tracking Profile Designer SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-107">This code example is part of the Workflow Tracking Profile Designer SDK Sample from the WorkflowDesignerControl.cs file.</span></span> <span data-ttu-id="80758-108">자세한 내용은 [Workflow Tracking Profile Designer](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-108">For more information, see [Workflow Tracking Profile Designer](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#126](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#126)]
 [!code-vb[wf_samples#126](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#126)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="80758-109">워크플로 추적 프로필 디자이너</span><span class="sxs-lookup"><span data-stu-id="80758-109">Workflow Tracking Profile Designer</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80758-110"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-110">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-111"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-111">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Design.WorkflowView : IServiceProvider -&gt; System.Workflow.ComponentModel.Design.WorkflowView" Usage="new System.Workflow.ComponentModel.Design.WorkflowView serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="80758-112"><see cref="T:System.IServiceProvider" /> 인터페이스를 구현하는 개체</span><span class="sxs-lookup"><span data-stu-id="80758-112">An object that implements the <see cref="T:System.IServiceProvider" /> interface.</span></span></param>
        <summary><span data-ttu-id="80758-113">지정된 서비스 공급자를 사용하여 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-113">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80758-114">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-114">The following example shows how to create a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span> <span data-ttu-id="80758-115">이 예제에서 새로운 <xref:System.ComponentModel.Design.DesignSurface> 개체가 만들어지고 `BeginLoad` 메서드를 호출해 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 개체를 매개 변수로 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-115">In this example, a new <xref:System.ComponentModel.Design.DesignSurface> object is created and the `BeginLoad` method is called passing a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> object as the parameter.</span></span> <span data-ttu-id="80758-116">새로운 <xref:System.Workflow.Activities.SequentialWorkflowActivity>를 만든 후 전에 만든 <xref:System.Workflow.ComponentModel.Design.WorkflowView>를 생성자의 매개 변수로 사용하여 <xref:System.ComponentModel.Design.DesignSurface> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="80758-116">After creating a new <xref:System.Workflow.Activities.SequentialWorkflowActivity>, a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object is created using the <xref:System.ComponentModel.Design.DesignSurface> created earlier as a parameter to the constructor.</span></span>  
  
 <span data-ttu-id="80758-117">이 코드 예제는 WorkflowViewWrapper.cs 파일에 있는 Outlook Workflow Wizard SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-117">This code example is part of the Outlook Workflow Wizard SDK Sample from the WorkflowViewWrapper.cs file.</span></span> <span data-ttu-id="80758-118">자세한 내용은 [Outlook Workflow Wizard 샘플](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-118">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[wf_samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="80758-119">워크플로 모니터</span><span class="sxs-lookup"><span data-stu-id="80758-119">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void AddDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.AddDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.AddDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter"><span data-ttu-id="80758-120"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />에 추가할 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-120">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to add to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></param>
        <summary><span data-ttu-id="80758-121"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />에 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-121">Adds a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-122"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter>는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>로부터의 메시지를 처리하는 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-122">A <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> is a component that handles messages from the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="80758-123">`Strategy` 디자인 패턴을 사용하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter>로 처리할 메시지를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-123">Using the `Strategy` design pattern, the <xref:System.Workflow.ComponentModel.Design.WorkflowView> will pass messages to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> to be handled.</span></span>  
  
 <span data-ttu-id="80758-124">마우스 이벤트, 키보드 이벤트, paint 및 레이아웃 이벤트는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter>와 연결된 <xref:System.Workflow.ComponentModel.Design.WorkflowView>로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-124">Mouse events, keyboard events, paint and layout events are passed on to a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> associated with the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-125">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>가 만들어지고 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체가 워크플로 디자인 화면과 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-125">In the following example, a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> is created and a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object is associated with the workflow design surface.</span></span> <span data-ttu-id="80758-126">메시지 알림을 검색하기 위해 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter>가 만들어지고 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-126">In order to retrieve notifications of messages, a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> is created and added to the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span>  
  
 <span data-ttu-id="80758-127">이 코드 예제는 WorkflowViewWrapper.cs 파일에 있는 Outlook Workflow Wizard SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-127">This code example is part of the Outlook Workflow Wizard SDK Sample from the WorkflowViewWrapper.cs file.</span></span> <span data-ttu-id="80758-128">자세한 내용은 [Outlook Workflow Wizard 샘플](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-128">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_Samples#102](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#102)]
 [!code-vb[wf_Samples#102](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#102)]  
  
 <span data-ttu-id="80758-129">이전 코드에서 만든 `MessageFilter` 개체는 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> 클래스에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-129">The `MessageFilter` object created in the previous code is derived from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> class.</span></span>  <span data-ttu-id="80758-130">이 클래스의 메서드를 재정의하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체에서 사용자 인터페이스 이벤트가 발생할 때마다 메시지 필터에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="80758-130">By overriding the methods of this class, the message filter is notified whenever a user interface event occurs on the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span>  
  
 [!code-csharp[wf_samples#104](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#104)]
 [!code-vb[wf_samples#104](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientPointToLogical (System.Drawing.Point clientPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ClientPointToLogical(valuetype System.Drawing.Point clientPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientPointToLogical (clientPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ClientPointToLogical(System::Drawing::Point clientPoint);" />
      <MemberSignature Language="F#" Value="member this.ClientPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ClientPointToLogical clientPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="clientPoint"><span data-ttu-id="80758-131">클라이언트 좌표에서 논리적 좌표로 변환할 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-131">The <see cref="T:System.Drawing.Point" /> to convert from client coordinates to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-132"><see cref="T:System.Drawing.Point" />을 클라이언트 좌표에서 논리적 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-132">Converts a <see cref="T:System.Drawing.Point" /> from client coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-133">클라이언트 좌표에서 논리적 좌표로 변환된 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-133">The <see cref="T:System.Drawing.Point" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-134"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-134"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-135">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-135">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-136">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-136">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-137">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-137">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
-   <span data-ttu-id="80758-138">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-138">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-139">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-139">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientRectangleToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle ClientRectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientRectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle ClientRectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.ClientRectangleToLogical : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.ClientRectangleToLogical rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="80758-140">클라이언트 좌표에서 논리적 좌표로 변환할 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-140">The <see cref="T:System.Drawing.Rectangle" /> to convert from client to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-141"><see cref="T:System.Drawing.Rectangle" />을 클라이언트 좌표에서 논리적 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-141">Converts a <see cref="T:System.Drawing.Rectangle" /> from client coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-142">클라이언트 좌표에서 논리적 좌표로 변환된 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-142">The <see cref="T:System.Drawing.Rectangle" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-143"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-143"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-144">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-144">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-145">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-145">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-146">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-146">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-147">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-147">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-148">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-148">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSizeToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSizeToLogical (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size ClientSizeToLogical(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientSizeToLogical(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientSizeToLogical (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size ClientSizeToLogical(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="member this.ClientSizeToLogical : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.ClientSizeToLogical clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="clientSize"><span data-ttu-id="80758-149">클라이언트 좌표에서 논리적 좌표로 변환할 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-149">The <see cref="T:System.Drawing.Size" /> to convert from client to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-150"><see cref="T:System.Drawing.Size" />를 클라이언트 좌표에서 논리적 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-150">Converts a <see cref="T:System.Drawing.Size" /> from client to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-151">클라이언트 좌표에서 논리적 좌표로 변환된 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-151">The <see cref="T:System.Drawing.Size" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-152"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-152"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-153">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-153">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-154">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-154">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-155">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-155">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-156">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-156">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-157">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-157">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="workflowView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-158"><see cref="T:System.Windows.Forms.AccessibleObject" />에 대한 새 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="80758-158">Creates a new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <returns><span data-ttu-id="80758-159"><see cref="T:System.Windows.Forms.AccessibleObject" />에 대한 새 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-159">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-160"><xref:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.AccessibleObject> 속성을 참조할 때 이 메서드가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-160">If you do not explicitly call the <xref:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.AccessibleObject> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80758-161"><xref:System.Windows.Forms.AccessibleObject>를 만들려면 .NET Framework와 함께 설치된 `Accessibility` 어셈블리에 참조를 추가해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-161">To create a <xref:System.Windows.Forms.AccessibleObject>, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80758-162">파생 클래스에서 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" />를 재정의하는 경우 기본 클래스의 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> 메서드를 호출하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-162">When overriding <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> in a derived class, you should not call the base class <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="workflowView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="80758-163">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-163"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="80758-164"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-164">Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-165">disposing 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 참조하는 관리되는 개체가 보유하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-165">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Workflow.ComponentModel.Design.WorkflowView> references.</span></span> <span data-ttu-id="80758-166">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-166">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="80758-167">에 대 한 자세한 내용은 `Dispose` 및 `Finalize`를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-167">For more information about `Dispose` and `Finalize`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80758-168">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-168">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="80758-169"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="80758-169">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="80758-170">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-170">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableFitToScreen">
      <MemberSignature Language="C#" Value="public bool EnableFitToScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFitToScreen" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFitToScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFitToScreen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableFitToScreen : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-171">클릭하면 전체 워크플로가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 표시되도록 워크플로 디자인 화면의 단추를 활성화시켜 워크플로 디자인 화면의 확대/축소 수준을 변경할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-171">Enables the button on the design surface that, when clicked, changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-172">동적 단추를 사용할 수 있게 되어 있으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-172"><see langword="true" /> if the dynamic button is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80758-173">다음 예제에서는 화면에 맞추기 단추를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-173">The following example shows how to enable the fit to screen button.</span></span> <span data-ttu-id="80758-174">메서드는 <xref:System.ComponentModel.Design.IDesignerHost> 속성을 수정하기 전에 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 디자이너의 <xref:System.IServiceProvider.GetService%2A> 인터페이스를 먼저 가져온 다음 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A>를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-174">The method first obtains the <xref:System.ComponentModel.Design.IDesignerHost> interface for the designer and then retrieves the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by using the <xref:System.IServiceProvider.GetService%2A> method before modifying the <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> property.</span></span>  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (object selectableObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(object selectableObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (selectableObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(System::Object ^ selectableObject);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : obj -&gt; unit" Usage="workflowView.EnsureVisible selectableObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectableObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectableObject"><span data-ttu-id="80758-175">표시될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-175">The object to make visible.</span></span></param>
        <summary><span data-ttu-id="80758-176">전달된 <see cref="T:System.Object" />가 표시되는지 확인하고 필요에 따라 부모 개체를 확장한 다음 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 스크롤합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-176">Ensures that the <see cref="T:System.Object" /> passed is visible, expanding parent objects and scrolling the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-177">사용자 인터페이스 큐가 필요한 워크플로의 개체에서 작업하는 경우에는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A>을 사용합니다. <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A>은 필요에 따라 부모 개체를 확장하고 <xref:System.Workflow.ComponentModel.Design.WorkflowView>를 스크롤하여 디자이너에 개체가 표시되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-177">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> when you are working with an object in the workflow that requires user interface cues. <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> will expand parent objects and scroll the <xref:System.Workflow.ComponentModel.Design.WorkflowView> as necessary to make the object visible on the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-178">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> 개체의 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 <xref:System.ComponentModel.Design.ISelectionService> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-178">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="80758-179">서비스가 존재하는 경우 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> 개체의 `PrimarySelection` 속성을 사용하여 <xref:System.ComponentModel.Design.ISelectionService>을 호출해 현재 선택된 활동을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-179">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80758-180"><paramref name="selectableObject" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="80758-180"><paramref name="selectableObject" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FitToScreenSize">
      <MemberSignature Language="C#" Value="public void FitToScreenSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToScreenSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToScreenSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToScreenSize();" />
      <MemberSignature Language="F#" Value="member this.FitToScreenSize : unit -&gt; unit" Usage="workflowView.FitToScreenSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-181">전체 워크플로가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 표시되도록 워크플로 디자인 화면의 확대/축소 수준을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-181">Changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-182">실제 확대/축소 수준은 사용자의 Workflow Designer 설정에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="80758-182">The actual zoom level is dependent upon the settings of the user's workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-183">다음 예제에서는 화면에 맞추기 단추를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-183">The following example shows how to enable the fit to screen button.</span></span> <span data-ttu-id="80758-184">메서드는 <xref:System.ComponentModel.Design.IDesignerHost> 속성을 수정하기 전에 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 디자이너의 <xref:System.IServiceProvider.GetService%2A> 인터페이스를 먼저 가져온 다음 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A>를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-184">The method first obtains the <xref:System.ComponentModel.Design.IDesignerHost> interface for the designer and then retrieves the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by using the <xref:System.IServiceProvider.GetService%2A> method before modifying the <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> property.</span></span> <span data-ttu-id="80758-185">마지막으로, <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A>의 표시 영역 내에 전체 워크플로가 표시되도록 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-185">Finally, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method is called to display the entire workflow within the bounds of the displayable area of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="80758-186">워크플로 추적 프로필 디자이너</span><span class="sxs-lookup"><span data-stu-id="80758-186">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FitToWorkflowSize">
      <MemberSignature Language="C#" Value="public void FitToWorkflowSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToWorkflowSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToWorkflowSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToWorkflowSize();" />
      <MemberSignature Language="F#" Value="member this.FitToWorkflowSize : unit -&gt; unit" Usage="workflowView.FitToWorkflowSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-187">확대/축소 수준을 100%로 변경하여 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 전체 크기의 워크플로를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-187">Changes the zoom level to one hundred percent to display the full size of the workflow in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80758-188">다음 예제에서는 여러 속성을 설정할 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체의 속성을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-188">The following example initializes the properties of a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object be setting several properties.</span></span> <span data-ttu-id="80758-189"><xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A>가 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체로 하여금 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> 내에 전체 크기의 워크플로를 표시하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-189">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> causes the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to display the full size of the workflow within the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A>.</span></span>  
  
 [!code-csharp[wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowView.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="80758-190">검색할 서비스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-190">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="80758-191">가능한 경우, 지정된 형식의 서비스 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-191">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="80758-192"><paramref name="serviceType" />이 <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" />일 경우 <see langword="GetService" />가 관련 <see cref="T:System.ComponentModel.Design.CommandID" />를 반환합니다. 그렇지 않을 경우 <see langword="GetService" />는 요청된 서비스를 구현하는 <see cref="T:System.Object" />를 반환하거나 서비스를 확인할 수 없는 경우 null 참조(Visual Basic에서는 <see langword="Nothing" />)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-192">If the <paramref name="serviceType" /> is <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" /> then <see langword="GetService" /> returns a specific <see cref="T:System.ComponentModel.Design.CommandID" />; otherwise, <see langword="GetService" /> returns a <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-193">`GetService`는 요청된 서비스를 구현하는 <xref:System.Object>를 반환하거나 서비스를 확인할 수 없는 경우 null 참조(`Nothing`)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-193">`GetService` returns a <xref:System.Object> implementing the requested service, or a null reference (`Nothing`) if the service cannot be resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-194">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> 개체의 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 <xref:System.ComponentModel.Design.ISelectionService> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-194">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="80758-195">서비스가 존재하는 경우 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> 개체의 `PrimarySelection` 속성을 사용하여 <xref:System.ComponentModel.Design.ISelectionService>을 호출해 현재 선택된 활동을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-195">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HScrollBar HScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HScrollBar HScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HScrollBar As HScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HScrollBar ^ HScrollBar { System::Windows::Forms::HScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HScrollBar : System.Windows.Forms.HScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-196"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 가로 스크롤 막대를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-196">Gets the horizontal scrollbar for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-197"><see cref="T:System.Windows.Forms.ScrollBar" />를 사용하여 가로 스크롤 막대의 설정과 표시 여부를 조정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-197">A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80758-198">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 클래스의 인스턴스를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-198">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class.</span></span>  <span data-ttu-id="80758-199">그런 다음 코드는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 및 <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A>을 포함하여 여러 <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> 속성을 설정하고 <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-199">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="80758-200">워크플로 추적 프로필 디자이너</span><span class="sxs-lookup"><span data-stu-id="80758-200">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public event EventHandler Idle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Idle" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Idle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Idle;" />
      <MemberSignature Language="F#" Value="member this.Idle : EventHandler " Usage="member this.Idle : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-201"><see langword="WorkflowView" />가 처리를 끝내고 유휴 상태가 되려고 할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-201">Occurs when the <see langword="WorkflowView" /> finishes processing and is about to enter the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-202">스레드가 유휴 상태가 되기 전에 수행해야 하는 작업이 있는 경우 해당 작업을 이 이벤트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-202">If you have tasks to perform before the thread becomes idle, attach them to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateClientRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateClientRectangle (System.Drawing.Rectangle clientRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateClientRectangle(valuetype System.Drawing.Rectangle clientRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateClientRectangle (clientRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateClientRectangle(System::Drawing::Rectangle clientRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateClientRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateClientRectangle clientRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="clientRectangle"><span data-ttu-id="80758-203">클라이언트 좌표에서 무효화하고 다시 그릴 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-203">The <see cref="T:System.Drawing.Rectangle" />, in client coordinates, to invalidate and cause to be repainted.</span></span></param>
        <summary><span data-ttu-id="80758-204">지정된 <see cref="T:System.Drawing.Rectangle" />을 무효화하고 다시 그립니다.</span><span class="sxs-lookup"><span data-stu-id="80758-204">Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-205">클라이언트 좌표에서 <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle%2A>을 업데이트 영역에 추가하려면 <xref:System.Drawing.Rectangle>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-205">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle%2A> to cause a <xref:System.Drawing.Rectangle>, in client coordinates, to be added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateLogicalRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateLogicalRectangle (System.Drawing.Rectangle logicalRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateLogicalRectangle(valuetype System.Drawing.Rectangle logicalRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateLogicalRectangle (logicalRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateLogicalRectangle(System::Drawing::Rectangle logicalRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateLogicalRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateLogicalRectangle logicalRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="logicalRectangle"><span data-ttu-id="80758-206">논리적 좌표에서 무효화하고 다시 그릴 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-206">The <see cref="T:System.Drawing.Rectangle" />, in logical coordinates, to invalidate and cause to be repainted.</span></span></param>
        <summary><span data-ttu-id="80758-207">지정된 <see cref="T:System.Drawing.Rectangle" />을 무효화하고 다시 그립니다.</span><span class="sxs-lookup"><span data-stu-id="80758-207">Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-208"><xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle%2A>을 사용하여 논리적 좌표로 <xref:System.Drawing.Rectangle>을 업데이트 영역에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-208">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle%2A> to cause a <xref:System.Drawing.Rectangle>, in logical coordinates, to be added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="public void LoadViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.LoadViewState : System.IO.Stream -&gt; unit" Usage="workflowView.LoadViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState"><span data-ttu-id="80758-209">뷰 상태를 복원하는 데 사용되는 <see cref="T:System.IO.BinaryReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-209">A <see cref="T:System.IO.BinaryReader" /> used to restore the view state.</span></span></param>
        <summary><span data-ttu-id="80758-210">이진 스트림에서 뷰 상태 정보를 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-210">Restores view-state information from a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-211"><xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A>는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> 메서드를 호출하여 이전에 저장된 뷰 상태 정보를 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-211"><xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> restores view-state information previously saved by calling the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span>  
  
 <span data-ttu-id="80758-212">사용자 지정 디자이너에서 뷰 상태를 복원하는 방법을 사용자 지정해야 하는 경우 이 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-212">Override this method when you need to customize how a custom designer restores its view-state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-213">다음 예제에 대 한 뷰 상태를 로드 하는 방법에 설명를 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체를 만들어를 <xref:System.IO.FileStream> 개체를 `FileMode.Open` 플래그를 전달 하는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="80758-213">The following example demonstrates how to load the view state for a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by creating a <xref:System.IO.FileStream> object with the `FileMode.Open` flag and passing it to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> method.</span></span> <span data-ttu-id="80758-214">뷰 상태 파일은 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> 메서드를 사용하여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-214">The view state file was created using the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#60](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#60)]
 [!code-vb[wf_samples#60](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#60)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToClient (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToClient(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToClient (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToClient(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToClient logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint"><span data-ttu-id="80758-215">클라이언트 좌표로 변환할 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-215">The <see cref="T:System.Drawing.Point" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-216"><see cref="T:System.Drawing.Point" />를 논리적 좌표에서 클라이언트 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-216">Converts a <see cref="T:System.Drawing.Point" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-217">논리적 좌표에서 클라이언트 좌표로 변환된 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-217">The <see cref="T:System.Drawing.Point" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-218"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-218"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-219">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-219">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-220">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-220">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-221">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-221">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-222">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-222">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-223">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-223">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToScreen (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToScreen(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToScreen (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToScreen(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToScreen logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint"><span data-ttu-id="80758-224">화면 좌표로 변환할 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-224">The <see cref="T:System.Drawing.Point" /> to convert to screen coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-225"><see cref="T:System.Drawing.Point" />를 논리적 좌표에서 화면 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-225">Converts a <see cref="T:System.Drawing.Point" /> from logical to screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-226">논리적 좌표에서 화면 좌표로 변환된 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-226">A <see cref="T:System.Drawing.Point" /> converted from logical to screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-227"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-227"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-228">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-228">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-229">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-229">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-230">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-230">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-231">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-231">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-232">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-232">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalRectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle LogicalRectangleToClient (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle LogicalRectangleToClient(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalRectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle LogicalRectangleToClient(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.LogicalRectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.LogicalRectangleToClient rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="80758-233">클라이언트 좌표로 변환할 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-233">The <see cref="T:System.Drawing.Rectangle" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-234"><see cref="T:System.Drawing.Rectangle" />를 논리적 좌표에서 클라이언트 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-234">Converts a <see cref="T:System.Drawing.Rectangle" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-235">논리적 좌표에서 클라이언트 좌표로 변환된 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-235">A <see cref="T:System.Drawing.Rectangle" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-236"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-236"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-237">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-237">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-238">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-238">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-239">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-239">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-240">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-240">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-241">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-241">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalSizeToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalSizeToClient (System.Drawing.Size logicalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalSizeToClient(valuetype System.Drawing.Size logicalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalSizeToClient(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalSizeToClient (logicalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalSizeToClient(System::Drawing::Size logicalSize);" />
      <MemberSignature Language="F#" Value="member this.LogicalSizeToClient : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.LogicalSizeToClient logicalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="logicalSize"><span data-ttu-id="80758-242">클라이언트 좌표로 변환할 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-242">The <see cref="T:System.Drawing.Size" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-243"><see cref="T:System.Drawing.Size" />를 논리적 좌표에서 클라이언트 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-243">Converts a <see cref="T:System.Drawing.Size" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-244">논리적 좌표에서 클라이언트 좌표로 변환된 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-244">A <see cref="T:System.Drawing.Size" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-245"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-245"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="80758-246">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-246">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-247">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-247">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-248">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-248">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-249">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-249">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-250">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-250">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected override void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="workflowView.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-251">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.ControlEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-251">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="80758-252"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 컨트롤이 추가되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-252">Occurs when a control is added to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-253">자식 컨트롤이 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded%2A>에 추가될 때 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-253"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded%2A> is called when a child control is added to the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-254">자식 컨트롤은 <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A>와 <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>컨트롤만이 허용됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-254">The only child controls allowed are <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="80758-255">추가된 컨트롤이 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />나 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="80758-255">If the control added is not a <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> or <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected override void OnDragDrop (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragDrop dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="80758-256">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-256">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-257"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 항목을 끌어다 놓는 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-257">Occurs when a dragged item is dropped onto the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-258">끌기 작업을 수행하는 동안 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop%2A> 위에서 마우스 단추를 놓으면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-258"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop%2A> occurs when the user releases the mouse button over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragEnter dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="80758-259">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-259">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-260">항목을 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 범위 안으로 끌어오면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-260">Occurs when an item is dragged into the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-261">끌기 작업을 수행하는 동안 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> 위로 마우스 커서를 처음으로 가져왔을 때 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-261"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> occurs when the user first drags the mouse cursor over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : EventArgs -&gt; unit" Usage="workflowView.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-262">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-262">A <see cref="T:System.EventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-263">끌기 작업을 수행하는 동안 커서가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 벗어나면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-263">Occurs when the cursor leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-264">끌기 작업을 수행하는 동안 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A>의 범위 밖으로 마우스 커서를 끌어갈 때 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-264"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> occurs when the user drags the mouse cursor out of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragOver dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="80758-265">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-265">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-266">끌어서 놓기 작업을 진행 중이고 포인터가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 범위 내에 있을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-266">Occurs when a drag-drop operation is in progress and the pointer is within the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-267">마우스 커서가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A>의 범위 내로 들어올 때 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-267"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> occurs when the mouse cursor moves within bounds of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="workflowView.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent"><span data-ttu-id="80758-268">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-268">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-269">끌기 작업을 수행하는 동안 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-269">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-270"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A>은 끌기 작업을 시작할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-270"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> occurs when a drag operation is started.</span></span> <span data-ttu-id="80758-271"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A>을 사용하면 끌기 작업의 소스에서 마우스 포인터의 모양을 수정하여 끌기 작업을 수행하는 동안 사용자의 시각적 피드백을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-271"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> allows the source of a drag operation to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-272">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-272">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-273"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 포커스가 있을 때 키를 누르면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-273">Occurs when a key is pressed while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-274"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown%2A>에 포커스가 있을 때 키를 누르면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-274"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown%2A> occurs when a key is pressed while the <xref:System.Workflow.ComponentModel.Design.WorkflowView> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-275">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-275">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data about the event.</span></span></param>
        <summary><span data-ttu-id="80758-276"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 포커스가 있을 때 키를 놓으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-276">Occurs when a key is released while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-277"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp%2A>에 포커스가 있을 때 키를 놓으면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-277"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp%2A> occurs when a key is released while the <xref:System.Workflow.ComponentModel.Design.WorkflowView> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="workflowView.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="80758-278">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-278">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="80758-279"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />가 자식 컨트롤의 위치를 변경하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-279">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> should reposition child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-280"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout%2A>은 자식 컨트롤을 추가하거나 제거할 때, <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 범위를 변경할 때, <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 레이아웃에 영향을 줄 수 있는 기타 변경 사항이 있을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-280"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout%2A> occurs when child controls are added or removed, when the bounds of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> changes, and when other changes occur that can affect the layout of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected override void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="workflowView.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-281">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-281">A <see cref="T:System.EventArgs" /> that provides data about the event.</span></span></param>
        <summary><span data-ttu-id="80758-282">마우스를 끌어 선택한 항목이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-282">Occurs when the items selected by dragging the mouse changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-283">기존 선택과 다른 항목을 마우스로 선택하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged%2A>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-283"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged%2A> occurs when the user makes a selection with the mouse that differs from any existing selection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-284">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-284">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-285"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 두 번 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-285">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-286">두 번 클릭은 운영 체제의 마우스 설정에서 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-286">The double-click is determined by the mouse settings of the operating system.</span></span> <span data-ttu-id="80758-287">천천히 두 번 클릭하는 것이 아닌 두 번 클릭(double-click)으로 간주될 수 있도록 마우스 단추 클릭 간격을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-287">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-288">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-288">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-289">마우스 포인터가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 위에 있을 때 마우스 단추를 누르면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-289">Occurs when the mouse pointer is over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-290">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-290">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-291">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-291">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-292">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-292">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-293">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> /  <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-293">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>/ <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-294">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-294">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-295">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-295">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-296">마우스 포인터가 `OnMouseEnter`에 들어가면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-296">`OnMouseEnter` occurs when the mouse pointer enters the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="80758-297">마우스 포인터가 `OnMouseDown` 위에 있을 때 마우스 단추를 누르면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-297">`OnMouseDown` occurs when the mouse pointer is over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and a mouse button is pressed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="workflowView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-298">이벤트에 대한 정보를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-298">An <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-299">마우스 포인터가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 들어가면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-299">Occurs when the mouse pointer enters the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-300">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-300">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-301">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-301">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-302">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-302">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-303">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-303">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-304">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-304">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-305">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-305">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-306">마우스 포인터가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>에 들어가면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-306"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A> occurs when the mouse pointer enters the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="workflowView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-307">이벤트에 대한 정보가 포함된 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-307">A <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-308">마우스가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 가리키면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-308">Occurs when the mouse hovers over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-309">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-309">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-310">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-310">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-311">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-311">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-312">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-312">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-313">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-313">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-314">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-314">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-315">마우스 포인터로 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>를 가리키면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-315"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> occurs when the mouse pointer hovers over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="workflowView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-316">이벤트에 대한 정보가 포함된 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-316">A <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-317">마우스 포인터가 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 벗어나면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-317">Occurs when the mouse pointer leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-318">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-318">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-319">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-319">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-320">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-320">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-321">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-321">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-322">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-322">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-323">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-323">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-324">마우스 포인터가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>를 벗어나면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-324"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A> occurs when the mouse pointer leaves the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-325">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-325">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-326">마우스를 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 위로 이동하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-326">Occurs when the mouse moves over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-327">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-327">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-328">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-328">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-329">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-329">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-330">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-330">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-331">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-331">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-332">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-332">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-333">마우스 포인터가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A> 위로 이동하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-333"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A> occurs when the mouse pointer moves over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-334">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-334">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-335"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 위에 있을 때 마우스 단추를 놓으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-335">Occurs when a mouse button is released over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-336">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-336">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-337">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-337">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-338">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-338">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-339">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-339">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-340">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-340">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-341">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-341">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-342">마우스 포인터가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A> 위에 있을 때 단추를 놓으면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-342"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A> occurs when the mouse pointer is over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and a button is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-343">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-343">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-344"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 포커스가 있을 때 마우스 휠을 움직이면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-344">Occurs when the mouse wheel moves when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-345">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-345">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="80758-346">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="80758-346">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="80758-347">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="80758-347">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="80758-348">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> 또는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="80758-348">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="80758-349">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="80758-349">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="80758-350">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="80758-350">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="80758-351"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A> 위에 있을 때 마우스 휠을 움직이면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-351"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A> occurs when the mouse wheel is moved over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="workflowView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80758-352">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-352">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-353"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />가 다시 그려질 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-353">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-354"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint%2A>가 다시 그려질 때 <xref:System.Workflow.ComponentModel.Design.WorkflowView>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-354"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint%2A> occurs when the <xref:System.Workflow.ComponentModel.Design.WorkflowView> is redrawn.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="workflowView.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent"><span data-ttu-id="80758-355">이벤트에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-355">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="80758-356">끌기 작업을 수행하는 동안 발생하며 끌기 소스가 끌기 작업을 취소할지 여부를 결정하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-356">Occurs during a drag operation and allows the drag source to determine whether the drag option should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-357">끌기 작업을 수행하는 동안 키보드 또는 마우스 단추 상태가 변경되면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-357">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event is raised when there is a change in the keyboard or mouse button state during a drag operation.</span></span> <span data-ttu-id="80758-358"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> 이벤트를 사용하면 끌기 소스에서 끌기 작업을 취소해야 할지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-358">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event allows the drag source to determine whether the drag operation should be canceled.</span></span>  
  
 <span data-ttu-id="80758-359">끌기 작업 관련 이벤트는 컨트롤이 유효한 놓기 대상일 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-359">Events related to drag operations are raised when the control is a valid drop target.</span></span> <span data-ttu-id="80758-360"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> 이벤트는 끌기 효과를 지정한 상태에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-360">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> event is raised with the drag effect specified.</span></span> <span data-ttu-id="80758-361">끌기 효과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="80758-361">For a list of drag effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="80758-362">마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용을 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-362">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="80758-363">사용자가 창의 외부로 이동하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-363">If the user moves out of a window, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="80758-364">마우스를 다른 컨트롤로 가져가면 해당 컨트롤에 대한 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A>가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-364">If the mouse enters another control, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> for that control is raised.</span></span>  
  
-   <span data-ttu-id="80758-365">마우스를 동일한 컨트롤 내에서 이동하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-365">If the mouse moves but stays within the same control, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> event is raised.</span></span>  
  
 <span data-ttu-id="80758-366">키보드 또는 마우스 단추 상태를 변경하면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> 이벤트가 발생하여 해당 이벤트의 `Action`에 대한 <xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성 값을 기반으로 끌기를 계속하거나, 데이터를 놓거나, 작업을 취소할지를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-366">If there is a change in the keyboard or mouse button state, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the `Action` property of the event <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
 <span data-ttu-id="80758-367">값이 `DragAction.Continue`이면 작업이 계속되도록 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> 이벤트가 발생하고 적절한 시각적 피드백이 설정될 수 있도록 새로운 효과와 함께 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-367">If the value is `DragAction.Continue`, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> event is raised to continue the operation and the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="80758-368">유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="80758-368">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80758-369"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> 및 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> 이벤트는 쌍을 이루기 때문에 마우스가 놓기 대상을 통과할 때 사용자에게 마우스 위치에 대한 최신 피드백이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-369">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse position.</span></span>  
  
 <span data-ttu-id="80758-370">값이 `DragAction.Drop`이면 놓기 결과 값이 소스로 반환되므로 소스 응용 프로그램은 소스 데이터에 대해 적절한 작업(예: 이동 작업의 경우 데이터 잘라내기)을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-370">If the value is `DragAction.Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
 <span data-ttu-id="80758-371">값이 `DragAction.Cancel`이면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-371">If the value is `DragAction.Cancel`, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> event is raised.</span></span>  
  
 <span data-ttu-id="80758-372">기본적으로 Esc 키를 누른 경우 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> 이벤트는 `Action`을 `DragAction.Cancel`로 설정하고 마우스 왼쪽, 가운데 또는 오른쪽 단추를 누른 경우 `Action`을 `DragAction.Drop`으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-372">By default, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event sets `Action` to `DragAction.Cancel` if the ESC key was pressed and sets `Action` to `DragAction.Drop` if the left, middle, or right mouse button is pressed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRootDesignerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRootDesignerChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRootDesignerChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnRootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRootDesignerChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRootDesignerChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnRootDesignerChanged : unit -&gt; unit&#xA;override this.OnRootDesignerChanged : unit -&gt; unit" Usage="workflowView.OnRootDesignerChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-373">다른 디자이너가 디자인 화면의 새 루트 디자이너로 설정된 경우 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-373">Called when a different designer is set as the new root designer of the design surface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnZoomChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnZoomChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnZoomChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnZoomChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnZoomChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnZoomChanged : unit -&gt; unit&#xA;override this.OnZoomChanged : unit -&gt; unit" Usage="workflowView.OnZoomChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-374">확대/축소 수준을 변경하면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-374">Called when the zoom level is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (bool immediateUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(bool immediateUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (immediateUpdate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(bool immediateUpdate);" />
      <MemberSignature Language="F#" Value="override this.PerformLayout : bool -&gt; unit" Usage="workflowView.PerformLayout immediateUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="immediateUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="immediateUpdate"><span data-ttu-id="80758-375"><see langword="true" />인 경우 레이아웃을 즉시 업데이트합니다. 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-375"><see langword="true" /> to cause the layout to update immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="80758-376"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />가 모든 자식 컨트롤에 레이아웃 논리를 강제로 적용하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-376">Forces the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-377"><xref:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout%2A>은 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 모든 자식 컨트롤을 업데이트하며 필요한 경우 크기를 조정하고 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-377"><xref:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout%2A> updates all child controls in the <xref:System.Workflow.ComponentModel.Design.WorkflowView>, resizing and moving them as necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintDocument PrintDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintDocument PrintDocument" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintDocument As PrintDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintDocument ^ PrintDocument { System::Drawing::Printing::PrintDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintDocument : System.Drawing.Printing.PrintDocument" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-378"><see cref="T:System.Drawing.Printing.PrintDocument" />와 연결된 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-378">Gets the <see cref="T:System.Drawing.Printing.PrintDocument" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-379">프린터로 출력을 보내는 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-379">A <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> object that sends output to a printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-380">인쇄 방법을 설명하는 속성을 설정하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument%2A> 개체를 사용하고, 인쇄를 시작하려면 `Print` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-380">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument%2A> object to set the properties that describe how to print, and call the `Print` method to start the printing process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-381">다음 예제에서는 <xref:System.Drawing.Printing.PrintDocument> 개체를 검색하고 <xref:System.Windows.Forms.PrintDialog>의 표시한 다음 문서를 인쇄하기 전에 사용자가 선택한 <xref:System.Drawing.Printing.PrinterSettings>을 연결하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-381">The following example demonstrates how to retrieve the <xref:System.Drawing.Printing.PrintDocument> object, display a <xref:System.Windows.Forms.PrintDialog> and associate the <xref:System.Drawing.Printing.PrinterSettings> that were selected by a user before printing the document.</span></span>  
  
 [!code-csharp[Wf_samples#56](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#56)]
 [!code-vb[Wf_samples#56](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#56)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreviewMode">
      <MemberSignature Language="C#" Value="public bool PrintPreviewMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintPreviewMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintPreviewMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintPreviewMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreviewMode : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-382"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 인쇄 미리 보기 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-382">Gets or sets the print preview mode of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-383">인쇄 미리 보기 모드가 활성화된 경우 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-383"><see langword="true" /> if print preview mode is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80758-384">다음 예제에서는 인쇄 미리 보기 모드에서 현재 워크플로가 표시되도록 WorkflowView 개체를 변경하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-384">The following example shows how to change the WorkflowView object so that it displays the current workflow in print preview mode.</span></span>  
  
 [!code-csharp[wf_samples#57](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#57)]
 [!code-vb[wf_samples#57](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#57)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void RemoveDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.RemoveDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.RemoveDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.RemoveDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter"><span data-ttu-id="80758-385"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />에서 제거할 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-385">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to remove from the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></param>
        <summary><span data-ttu-id="80758-386">연결된 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-386">Removes an associated <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-387">끌기 이벤트와 같은 디자이너 이벤트에 응답하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-387">Use a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> to respond to designer events, such as drag events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property RootDesigner As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesigner ^ RootDesigner { System::Workflow::ComponentModel::Design::ActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::ActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-388"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 루트 디자이너를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-388">Gets or sets the root designer for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-389"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />와 연결된 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-389">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-390">워크플로의 루트 디자이너는 워크플로의 디자인 화면에 연결된 디자이너입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-390">The root designer of the workflow is the designer associated with the design surface of the workflow.</span></span> <span data-ttu-id="80758-391">모든 자식 디자이너와 그에 따른 워크플로의 모든 활동이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-391">It contains all child designers, and subsequently all activities in the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-392">다음 예제에서는 WorkflowView 개체의 RootDesigner를 검색하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-392">The following example shows how to retrieve the RootDesigner of a WorkflowView object.</span></span> <span data-ttu-id="80758-393">workflowPanel 필드에 포함된 GetWorkflowView 메서드는 활성 WorkflowView 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-393">The workflowPanel field contains a method named GetWorkflowView that returns the active WorkflowView instance.</span></span> <span data-ttu-id="80758-394">그 다음 RootDesigner가 다른 모든 작업에 앞서 SequentialWorkflowRootDesigner로 캐스팅됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-394">The RootDesigner is then cast to a SequentialWorkflowRootDesigner before any action is taken on it.</span></span>  
  
 <span data-ttu-id="80758-395">이 코드 예제는 DesignerShell.cs 파일에 있는 Basic DesignerHosting SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-395">This code example is part of the Basic DesignerHosting SDK Sample from the DesignerShell.cs file.</span></span> <span data-ttu-id="80758-396">자세한 내용은 [Basic Designer Hosting 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741708(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-396">For more information, see [Basic Designer Hosting Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741708(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#236](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#236)]
 [!code-vb[wf_samples#236](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#236)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesignerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootDesignerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootDesignerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.RootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event RootDesignerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RootDesignerChanged;" />
      <MemberSignature Language="F#" Value="member this.RootDesignerChanged : EventHandler " Usage="member this.RootDesignerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-397">루트 디자이너를 변경하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-397">Raised when the root designer is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="public void SaveViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.SaveViewState : System.IO.Stream -&gt; unit" Usage="workflowView.SaveViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState"><span data-ttu-id="80758-398">뷰 상태를 저장하는 데 사용되는 <see cref="T:System.IO.BinaryReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-398">A <see cref="T:System.IO.BinaryReader" /> used to store the view state.</span></span></param>
        <summary><span data-ttu-id="80758-399">뷰 상태를 이진 스트림으로 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-399">Saves the view-state to a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-400">뷰 상태는 뷰의 속성 및 자식 컨트롤의 값이 누적된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-400">View state is the accumulation of the values of the properties and child controls of a view.</span></span> <span data-ttu-id="80758-401">속성 값은 저장 후 스트림으로 저장되며 <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> 메서드를 사용하여 복원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-401">Property values are persisted to the stream after saving and can be restored using the <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-402">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 플래그를 사용하여 <xref:System.IO.FileStream> 개체를 만들고 `FileMode.Create` 메서드에 전달하여 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> 개체의 뷰 상태를 저장하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-402">The following example demonstrates saving the view state for a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by creating a <xref:System.IO.FileStream> object using the `FileMode.Create` flag and passing it to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span> <span data-ttu-id="80758-403">나중에 이 뷰 상태를 로드하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="80758-403">To load this view state at a later time, see <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A>.</span></span>  
  
 [!code-csharp[wf_samples#59](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#59)]
 [!code-vb[wf_samples#59](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveWorkflowImage">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80758-404">지정된 이미지 형식을 기준으로 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 이미지를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-404">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> based on the specified image format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (stream, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="80758-405">워크플로 뷰 이미지를 저장할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-405">The <see cref="T:System.IO.Stream" /> to save the workflow view image to.</span></span></param>
        <param name="imageFormat"><span data-ttu-id="80758-406">워크플로 뷰 이미지를 저장하는 데 사용할 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-406">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</span></span></param>
        <summary><span data-ttu-id="80758-407"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 이미지를 지정된 이미지 형식으로 지정된 스트림에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-407">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified stream using the specified image format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-408">워크플로 뷰 이미지는 비트맵으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="80758-408">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-409">다음 예제에서는 <xref:System.IO.Stream>을 사용하여 현재 로드된 워크플로 이미지를 저장하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-409">The following example shows how to save the currently loaded workflow image using a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="80758-410">이 예제에서 <xref:System.Windows.Forms.SaveFileDialog>는 사용자에게 저장할 이미지의 파일 이름을 묻는 메시지가 표시되도록 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-410">In this example, a <xref:System.Windows.Forms.SaveFileDialog> is created to prompt the user for the filename of the image to save.</span></span> <span data-ttu-id="80758-411">파일 이름을 사용하여 <xref:System.IO.FileStream> 개체가 만들어지고 이어서 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> 메서드로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-411">A <xref:System.IO.FileStream> object is then created using the filename and then passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#63](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#63)]
 [!code-vb[wf_samples#63](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80758-412"><paramref name="stream" /> 또는 <paramref name="imageFormat" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="80758-412"><paramref name="stream" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (string imageFile, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(string imageFile, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::String ^ imageFile, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (imageFile, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFile"><span data-ttu-id="80758-413">워크플로 뷰 이미지를 저장할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-413">The path to the file in which to store the workflow view image.</span></span></param>
        <param name="imageFormat"><span data-ttu-id="80758-414">워크플로 뷰 이미지를 저장하는 데 사용할 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-414">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</span></span></param>
        <summary><span data-ttu-id="80758-415"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 이미지를 지정된 이미지 형식으로 지정된 파일에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-415">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified file using the specified image format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-416">워크플로 뷰 이미지는 비트맵으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="80758-416">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-417">다음 예제에서는 <xref:System.String>을 사용하여 현재 로드된 워크플로 이미지를 저장하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-417">The following example shows how to save the currently loaded workflow image using a <xref:System.String>.</span></span> <span data-ttu-id="80758-418">이 예제에서 <xref:System.Windows.Forms.SaveFileDialog>는 사용자에게 저장할 이미지의 파일 이름을 묻는 메시지가 표시되도록 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-418">In this example, a <xref:System.Windows.Forms.SaveFileDialog> is created to prompt the user for the filename of the image to save.</span></span> <span data-ttu-id="80758-419">그런 다음 파일 이름과 `ImageFormat.Bmp` 플래그가 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> 메서드로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-419">The filename and the `ImageFormat.Bmp` flag are then passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#62](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#62)]
 [!code-vb[wf_samples#62](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80758-420"><paramref name="imageFile" /> 또는 <paramref name="imageFormat" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="80758-420"><paramref name="imageFile" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImageToClipboard">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImageToClipboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImageToClipboard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImageToClipboard" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkflowImageToClipboard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImageToClipboard();" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImageToClipboard : unit -&gt; unit" Usage="workflowView.SaveWorkflowImageToClipboard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80758-421">워크플로 뷰의 이미지를 클립보드에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-421">Saves an image of the WorkflowView to the clipboard.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScreenPointToLogical (System.Drawing.Point screenPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ScreenPointToLogical(valuetype System.Drawing.Point screenPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ScreenPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScreenPointToLogical (screenPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ScreenPointToLogical(System::Drawing::Point screenPoint);" />
      <MemberSignature Language="F#" Value="member this.ScreenPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ScreenPointToLogical screenPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="screenPoint"><span data-ttu-id="80758-422">화면 좌표에서 논리적 좌표로 변환할 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-422">The <see cref="T:System.Drawing.Point" /> to convert from screen coordinates to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="80758-423"><see cref="T:System.Drawing.Point" />를 화면 좌표에서 논리적 좌표로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-423">Converts a <see cref="T:System.Drawing.Point" /> from screen coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="80758-424">화면 좌표에서 논리적 좌표로 변환된 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-424">The <see cref="T:System.Drawing.Point" /> converted from screen coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-425"><xref:System.Workflow.ComponentModel.Design.WorkflowView>는 논리적 좌표 공간과 클라이언트 좌표 공간이라는 두 가지 좌표 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-425"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
 <span data-ttu-id="80758-426">클라이언트 좌표는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 왼쪽 위 모퉁이를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-426">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-427">왼쪽 위 모퉁이가 0,0입니다. 표시 가능 영역의 가로와 세로 방향으로 x 좌표와 y 좌표가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-427">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="80758-428">클라이언트 좌표계는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 확대/축소 수준과 스크롤 막대의 위치에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-428">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="80758-429">논리적 좌표계에서 모든 개체는 항상 0,0에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-429">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="80758-430">세로 및 가로 위치는 확대/축소나 스크롤 막대의 위치에 영향을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-430">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScrollPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ScrollPosition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollPosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ScrollPosition { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPosition : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-431"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 스크롤 막대의 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-431">Gets or sets the position of the scrollbar on the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-432">화면 좌표에서 스크롤 막대의 위치를 설명하는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-432">A point describing the location of the scrollbar in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-433">디자인 화면에서의 스크롤 막대의 위치를 가져오거나 조정하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition%2A>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-433">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition%2A> to get or adjust the location of the scrollbar in the design surface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-434">다음 예제에서는 ScrollPosition 속성을 설정하는 방법을 <xref:System.Windows.Forms.Panel> 컨트롤의 OnMouseMove 메서드의 구현을 통해 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-434">The following example demonstrates setting the ScrollPosition property inside an implementation of a <xref:System.Windows.Forms.Panel> control's OnMouseMove method.</span></span>  <span data-ttu-id="80758-435">이 예제는 Outlook Workflow Wizard SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-435">This example is from the Outlook Workflow Wizard SDK sample.</span></span>  <span data-ttu-id="80758-436">자세한 내용은 [Outlook Workflow Wizard 샘플](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-436">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_samples#105](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#105)]
 [!code-vb[wf_samples#105](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowDepth">
      <MemberSignature Language="C#" Value="public int ShadowDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowDepth" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowDepth : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-437"><see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />의 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-437">Gets or sets the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-438">픽셀 단위로 나타낸 그림자 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-438">The shadow depth in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-439">워크플로 디자인 화면에 표시된 텍스트의 그림자 수준을 가져오거나 조정하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-439">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> to get or adjust the shadow depth of text shown on the workflow design surface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-440">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> 클래스의 인스턴스를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-440">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class using the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method.</span></span> <span data-ttu-id="80758-441">그런 다음 코드에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> 및 <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>를 포함한 여러 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> 속성을 설정하고 <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-441">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#48](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#48)]
 [!code-vb[Wf_samples#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#48)]  
  
 <span data-ttu-id="80758-442">위의 코드에서 호출된 `UnloadWorkflow` 메서드는 새 워크플로를 준비하기 위해 현재 로드된 워크플로를 제거하며 다음과 같이 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-442">The `UnloadWorkflow` method that is called in the code above removes a currently loaded workflow in order to prepare for the loading of a new workflow and is implemented as follows:</span></span>  
  
 [!code-csharp[Wf_samples#49](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#49)]
 [!code-vb[Wf_samples#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80758-443"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 대한 **InfoTip**을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-443">Displays the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-444"><xref:System.Workflow.ComponentModel.Design.WorkflowView>에 대한 **InfoTip**을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-444">Displays the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string -&gt; unit" Usage="workflowView.ShowInfoTip text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="80758-445">**InfoTip**에 표시되는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-445">The text to display on the **InfoTip**.</span></span></param>
        <summary><span data-ttu-id="80758-446"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 대한 **InfoTip**을 지정된 텍스트와 함께 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-446">Shows the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-447"><xref:System.Workflow.ComponentModel.Design.WorkflowView>에 대한 **InfoTip**을 지정된 텍스트와 함께 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-447">Shows the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView> with the specified text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80758-448"><paramref name="infoTipText" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="80758-448"><paramref name="infoTipText" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string title, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string title, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (title As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string * string -&gt; unit" Usage="workflowView.ShowInfoTip (title, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="80758-449">표시할 **InfoTip**의 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-449">The title of the **InfoTip** to display.</span></span></param>
        <param name="text"><span data-ttu-id="80758-450">표시할 **InfoTip**의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-450">The text of the **InfoTip** to display.</span></span></param>
        <summary><span data-ttu-id="80758-451"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 대한 **InfoTip**을 지정된 제목과 텍스트와 함께 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-451">Shows the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified title and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-452"><xref:System.Workflow.ComponentModel.Design.WorkflowView>에 대한 **InfoTip**을 지정된 제목과 텍스트와 함께 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-452">Shows the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView> with the specified title and text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80758-453"><paramref name="title" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="80758-453"><paramref name="title" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="80758-454">또는</span><span class="sxs-lookup"><span data-stu-id="80758-454">-or-</span></span> 
 <span data-ttu-id="80758-455"><paramref name="infoTipText" />가 null 참조(<see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="80758-455"><paramref name="infoTipText" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceToolTip">
      <MemberSignature Language="C#" Value="public void ShowInPlaceToolTip (string toolTipText, System.Drawing.Rectangle toolTipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInPlaceToolTip(string toolTipText, valuetype System.Drawing.Rectangle toolTipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInPlaceToolTip (toolTipText As String, toolTipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInPlaceToolTip(System::String ^ toolTipText, System::Drawing::Rectangle toolTipRectangle);" />
      <MemberSignature Language="F#" Value="member this.ShowInPlaceToolTip : string * System.Drawing.Rectangle -&gt; unit" Usage="workflowView.ShowInPlaceToolTip (toolTipText, toolTipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolTipText" Type="System.String" />
        <Parameter Name="toolTipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="toolTipText"><span data-ttu-id="80758-456">표시할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-456">The text to display.</span></span></param>
        <param name="toolTipRectangle"><span data-ttu-id="80758-457"><see cref="T:System.Drawing.Rectangle" />을 배치할 화면 위치를 지정하는 <see langword="ToolTip" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-457">The <see cref="T:System.Drawing.Rectangle" /> specifying the location on the screen to place the <see langword="ToolTip" />.</span></span></param>
        <summary><span data-ttu-id="80758-458">지정된 위치에 <see langword="ToolTip" />을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-458">Shows a <see langword="ToolTip" /> at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-459">`ToolTips`은 마우스 포인터 아래에 있는 개체에 대한 유용한 정보를 사용자에게 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-459">`ToolTips` are helpful notes to the user that display useful information about an object underneath the pointer.</span></span>  
  
 <span data-ttu-id="80758-460"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip%2A>을 지정된 텍스트와 함께 원하는 위치에 표시하려면 `ToolTip`을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-460">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip%2A> to display a `ToolTip` with the specified text and a desired location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="80758-461">검색할 서비스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-461">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="80758-462">가능한 경우 지정된 형식의 서비스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-462">Gets the service of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="80758-463">요청된 서비스를 구현하는 <see cref="T:System.Object" /> 또는 서비스를 확인할 수 없는 경우 null 참조(Visual Basic의 <see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="80758-463">An <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-464">`serviceType`이 `CommandID`일 경우 이 메서드는 지정된 `CommandID`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-464">If the `serviceType` is `CommandID` this method will return a specific `CommandID`.</span></span> <span data-ttu-id="80758-465">다른 `Type`의 경우 `GetService`는 요청된 서비스를 구현하는 개체를 반환하거나 서비스를 확인할 수 없는 경우 null 참조(`Nothing`)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-465">For any other `Type`, `GetService` will return an Object that implements the requested service, or a null reference (`Nothing`) if the service cannot be resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-466">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> 개체의 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 메서드를 사용하여 <xref:System.ComponentModel.Design.ISelectionService> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-466">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="80758-467">서비스가 존재하는 경우 <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> 개체의 `PrimarySelection` 속성을 사용하여 <xref:System.ComponentModel.Design.ISelectionService>을 호출해 현재 선택된 활동을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-467">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IMessageFilter.PreFilterMessage">
      <MemberSignature Language="C#" Value="bool IMessageFilter.PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Forms.IMessageFilter.PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Function PreFilterMessage (ByRef m As Message) As Boolean Implements IMessageFilter.PreFilterMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Forms.IMessageFilter.PreFilterMessage(System::Windows::Forms::Message % m) = System::Windows::Forms::IMessageFilter::PreFilterMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="80758-468">디스패치될 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-468">The message to be dispatched.</span></span> <span data-ttu-id="80758-469">이 메시지는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-469">You cannot modify this message.</span></span></param>
        <summary><span data-ttu-id="80758-470">메시지가 디스패치되기 전에 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-470">Filters out a message before it is dispatched.</span></span></summary>
        <returns><span data-ttu-id="80758-471">메시지를 필터링하고 디스패치되지 않게 하려면 <see langword="true" />이고 다음 필터 또는 컨트롤에 계속 사용하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-471"><see langword="true" /> to filter the message and stop it from being dispatched; <see langword="false" /> to allow the message to continue to the next filter or control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ViewPortRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ViewPortRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ViewPortRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-472"><see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />에 대한 현재 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-472">Gets the current <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-473">화면에 표시되는 영역을 설명하는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-473">A <see cref="T:System.Drawing.Rectangle" /> that describes the area on the screen that is visible.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-474"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A>에는 표시되는 워크플로의 영역이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-474">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> contains the visible area of the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-475">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>에 직접 이미지를 그리기 위해 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 개체의 Paint 이벤트를 처리하는 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-475">The following example shows a method of handling the Paint event of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to draw an image directly on the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-476"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> 속성은 그려지는 이미지를 적절하게 제한하기 위하여 디자인 화면의 표시 가능 영역을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-476">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> property returns the viewable area on the design surface to correctly constrain the image being drawn.</span></span>  
  
 [!code-csharp[wf_samples#58](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#58)]
 [!code-vb[wf_samples#58](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ViewPortSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ViewPortSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ViewPortSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-477"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 표시 가능 영역의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-477">Gets the size of the visible area for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-478"><see langword="Size" />의 표시 가능 영역을 설명하는 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-478">A <see langword="Size" /> that describes the visible area of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-479"><xref:System.Workflow.ComponentModel.Design.WorkflowView>의 표시 가능 영역의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-479">Gets the size of the visible area of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VScrollBar VScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.VScrollBar VScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VScrollBar As VScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::VScrollBar ^ VScrollBar { System::Windows::Forms::VScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VScrollBar : System.Windows.Forms.VScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-480"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />에 연결된 세로 스크롤 막대를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80758-480">Gets the vertical scrollbar associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-481"><see cref="T:System.Windows.Forms.ScrollBar" />를 사용하여 가로 스크롤 막대의 설정과 표시 여부를 조정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-481">A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-482"><xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>로 세로 스크롤 막대를 가져와 사용자 인터페이스를 조정하려면 <xref:System.Workflow.ComponentModel.Design.WorkflowView>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-482">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> to get the vertical scrollbar on the <xref:System.Workflow.ComponentModel.Design.WorkflowView>, which you can use to make user interface adjustments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-483">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 클래스의 인스턴스를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-483">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class.</span></span>  <span data-ttu-id="80758-484">그런 다음 코드는 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 및 <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A>을 포함하여 여러 <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> 속성을 설정하고 <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-484">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="80758-485">워크플로 추적 프로필 디자이너</span><span class="sxs-lookup"><span data-stu-id="80758-485">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="workflowView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="80758-486">처리할 Windows 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-486">The Windows Message to process.</span></span></param>
        <summary><span data-ttu-id="80758-487">Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-487">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-488">모든 메시지는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> 메서드로 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="80758-488">All messages are sent to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> method.</span></span>  
  
 <span data-ttu-id="80758-489"><xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> 메서드는 Windows `WindowProc` 함수와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="80758-489">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="80758-490">Windows 메시지 처리에 대한 자세한 내용은 MSDN Library에 있는 Windows Platform SDK 참조에서 `WindowProc` 함수 설명을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="80758-490">For more information about processing Windows messages, see the `WindowProc` function documentation in the Windows Platform SDK reference located in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80758-491">파생된 클래스는 기본 클래스의 <see langword="WndProc" /> 메서드를 호출하여 처리되지 않은 메시지를 처리해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-491">Derived classes should call the base class <see langword="WndProc" /> method to process any messages not handled.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public int Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Zoom { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Zoom : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-492"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 확대/축소 수준을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-492">Gets or sets the zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="80758-493"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 확대/축소 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-493">The zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-494"><xref:System.Workflow.ComponentModel.Design.WorkflowView> 안에 있는 구성 요소의 크기를 확대하거나 축소하려면 확대/축소 기능을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-494">Use the zoom feature to enlarge or reduce the size of the components inside the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="80758-495"><xref:System.Workflow.ComponentModel.Design.AmbientTheme>는 <xref:System.Workflow.ComponentModel.Design.WorkflowView>의 최소 및 최대 확대/축소 수준을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-495">The <xref:System.Workflow.ComponentModel.Design.AmbientTheme> sets the minimum and maximum zoom levels for the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-496">다음 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.Zoom%2A>의 <xref:System.Workflow.ComponentModel.Design.WorkflowView> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-496">The following example shows how to set the <xref:System.Workflow.ComponentModel.Design.WorkflowView.Zoom%2A> property of a <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="80758-497">이 코드 예제는 MainForm.cs 파일에 있는 Workflow Monitor SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-497">This code example is part of the Workflow Monitor SDK Sample from the MainForm.cs file.</span></span> <span data-ttu-id="80758-498">자세한 내용은 [Workflow Monitor 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-498">For more information, see [Workflow Monitor Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#138](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#138)]
 [!code-vb[wf_samples#138](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80758-499">확대/축소 수준이 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />의 최소 확대/축소 수준보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="80758-499">If the zoom level is less than the minimum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /></span></span>  
  
<span data-ttu-id="80758-500">또는</span><span class="sxs-lookup"><span data-stu-id="80758-500">-or-</span></span> 
<span data-ttu-id="80758-501">확대/축소 수준이 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />의 최대 확대/축소 수준보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="80758-501">if the zoom level exceeds the maximum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ZoomChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ZoomChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ZoomChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ZoomChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ZoomChanged;" />
      <MemberSignature Language="F#" Value="member this.ZoomChanged : EventHandler " Usage="member this.ZoomChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80758-502"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />의 확대/축소 설정을 변경하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-502">Occurs when the zoom setting for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80758-503">워크플로 뷰 이미지는 비트맵으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="80758-503">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80758-504">다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged> 이벤트에 처리기를 할당하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80758-504">The following code example demonstrates how you can assign a handler to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged> event.</span></span>  
  
 <span data-ttu-id="80758-505">이 코드 예제는 ViewHost.cs 파일에 있는 Workflow Monitor SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="80758-505">This code example is part of the Workflow Monitor SDK Sample from the ViewHost.cs file.</span></span> <span data-ttu-id="80758-506">자세한 내용은 [워크플로 모니터](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="80758-506">For more information, see [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#136](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#136)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="80758-507">워크플로 모니터</span><span class="sxs-lookup"><span data-stu-id="80758-507">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>