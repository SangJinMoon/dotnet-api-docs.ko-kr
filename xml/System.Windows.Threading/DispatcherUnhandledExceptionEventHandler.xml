<Type Name="DispatcherUnhandledExceptionEventHandler" FullName="System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51a78701a96f205f85c5edfc3f005b07f8e4490f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36463575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DispatcherUnhandledExceptionEventHandler(object sender, DispatcherUnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherUnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DispatcherUnhandledExceptionEventHandler(sender As Object, e As DispatcherUnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DispatcherUnhandledExceptionEventHandler(System::Object ^ sender, DispatcherUnhandledExceptionEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionEventHandler = delegate of obj * DispatcherUnhandledExceptionEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">이벤트 소스입니다.</param>
    <param name="e">이벤트 데이터입니다.</param>
    <summary>
      <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트가 발생할 때 통해 실행 되는 코드는 <xref:System.Windows.Threading.Dispatcher> 처리할 수 없는 예외를 throw 합니다.  
  
 <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 이벤트 발생 시 키 지를 통해는 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트입니다.  <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 이벤트는 먼저 쓰고 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> 에 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> 로 설정 되어 `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트 발생 하지 것입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
</Type>