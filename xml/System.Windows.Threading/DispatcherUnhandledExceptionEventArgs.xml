<Type Name="DispatcherUnhandledExceptionEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
  <TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="87c53-101"><see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 이벤트에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-101">Provides data for the <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87c53-102"><xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트가 발생할 때 통해 실행 되는 코드는 <xref:System.Windows.Threading.Dispatcher> 처리할 수 없는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-102">The <xref:System.Windows.Threading.Dispatcher.UnhandledException> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception which is not handled.</span></span>  
  
 <span data-ttu-id="87c53-103"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 이벤트 발생 시 키 지를 통해는 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-103">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="87c53-104"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 이벤트는 먼저 쓰고 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> 에 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> 로 설정 되어 `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> 이벤트 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87c53-105">디스패처로 코드를 실행할 때 발생한 예외를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-105">Gets the exception that was raised when executing code by way of the dispatcher.</span></span></summary>
        <value><span data-ttu-id="87c53-106">예외입니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-106">The exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87c53-107">예외 이벤트가 처리되었는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-107">Gets or sets whether the exception event has been handled.</span></span></summary>
        <value>
          <span data-ttu-id="87c53-108">예외가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="87c53-108"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>