<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bc5bd6e538ac42e034d4b00fcacb3cd0db5d822" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="38c36-101">지정된 시간 간격과 우선 순위로 처리되는 <see cref="T:System.Windows.Threading.Dispatcher" /> 큐로 통합되는 타이머입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="38c36-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-102"><xref:System.Windows.Threading.DispatcherTimer> 맨 위에 있는 재실행 모든 <xref:System.Windows.Threading.Dispatcher> 루프입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="38c36-103">시간 간격이 발생 하지만가 시간 간격에서 발생 하기 전에 실행 되지 않도록 보장 하는 경우에 정확 하 게 실행 하는 타이머 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="38c36-104">때문에 이것이 <xref:System.Windows.Threading.DispatcherTimer> 작업은 적용 되는 <xref:System.Windows.Threading.Dispatcher> 다른 작업 처럼 큐.</span><span class="sxs-lookup"><span data-stu-id="38c36-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="38c36-105">경우는 <xref:System.Windows.Threading.DispatcherTimer> 작업 실행 우선 순위는 큐에 있는 다른 작업에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="38c36-106">경우는 <xref:System.Timers.Timer?displayProperty=nameWithType> 에 사용 되는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 에 주목할은 응용 프로그램을는 <xref:System.Timers.Timer?displayProperty=nameWithType> 다른 스레드에서 실행 되 면 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="38c36-107">개체에 액세스 하려면는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 은로 작업을 게시 하는 데 필요한 스레드는 <xref:System.Windows.Threading.Dispatcher> 의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 스레드를 사용 하 여 <xref:System.Windows.Threading.Dispatcher.Invoke%2A> 또는 <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="38c36-108">사용 하는 <xref:System.Windows.Threading.DispatcherTimer> 와 반대는 <xref:System.Timers.Timer?displayProperty=nameWithType> 입니다는 <xref:System.Windows.Threading.DispatcherTimer> 와 동일한 스레드에서 실행 되는 <xref:System.Windows.Threading.Dispatcher> 및 <xref:System.Windows.Threading.DispatcherPriority> 에 설정 될 수는 <xref:System.Windows.Threading.DispatcherTimer>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="38c36-109">A <xref:System.Windows.Threading.DispatcherTimer> 상태로 유지 합니다 개체 때마다 개체의 메서드는 타이머에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="38c36-110">다음 예제에서는 한 <xref:System.Windows.Threading.DispatcherTimer> 의 콘텐츠를 업데이트 하는 한 <xref:System.Windows.Controls.Label> 호출는 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> 메서드를는 <xref:System.Windows.Input.CommandManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="38c36-111">A <xref:System.Windows.Threading.DispatcherTimer> 라는 개체 `dispatcherTimer` 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="38c36-112">이벤트 처리기 `dispatcherTimer_Tick` 에 추가 되 고 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트의 `dispatcherTimer`합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="38c36-113"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 을 사용 하 여 1 초로 설정는 <xref:System.Windows.Duration.TimeSpan%2A> 개체 및 사용 되는 타이머를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="38c36-114"><xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트 처리기 업데이트는 <xref:System.Windows.Controls.Label> 둘째, 현재를 표시 하 고 호출 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> 에 <xref:System.Windows.Input.CommandManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-115">
            <see cref="T:System.Windows.Threading.DispatcherTimer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38c36-116">
            <see cref="T:System.Windows.Threading.DispatcherTimer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-117"><xref:System.Windows.Threading.DispatcherTimer> 실행 되는 <xref:System.Windows.Threading.Dispatcher> 에서 현재 스레드의 <xref:System.Windows.Threading.DispatcherPriority.Background> 우선 순위입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="38c36-118">다른 지정 하려면 <xref:System.Windows.Threading.Dispatcher>, 다음 생성자를 사용 하 여: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="38c36-119">타이머를 호출할 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-119">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c36-120">지정된 우선 순위로 타이머 이벤트를 처리하는 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-121"><xref:System.Windows.Threading.DispatcherTimer> 실행 되는 <xref:System.Windows.Threading.Dispatcher> 현재 스레드의 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="38c36-122">다른 지정 하려면 <xref:System.Windows.Threading.Dispatcher>, 다음 생성자를 사용 하 여: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="38c36-123">타이머를 호출할 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-123">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="38c36-124">타이머가 연결된 디스패처입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-124">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c36-125">지정된 <see cref="T:System.Windows.Threading.DispatcherTimer" />에서 지정된 우선 순위로 실행되는 <see cref="T:System.Windows.Threading.Dispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="38c36-126">
            <paramref name="dispatcher" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-126">
              <paramref name="dispatcher" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="38c36-127">틱 사이의 시간 간격입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-127">The period of time between ticks.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="38c36-128">타이머를 호출할 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-128">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="38c36-129">
            <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> 이벤트가 발생할 때 호출할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="38c36-130">타이머가 연결된 디스패처입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-130">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38c36-131">지정된 시간 간격, 우선 순위, 이벤트 처리기 및 <see cref="T:System.Windows.Threading.DispatcherTimer" />를 사용하는 <see cref="T:System.Windows.Threading.Dispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="38c36-132">
            <paramref name="callback" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-132">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="38c36-133">
            <paramref name="interval" />가 0보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-133">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-134">이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 <see cref="T:System.Windows.Threading.DispatcherTimer" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-134">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c36-135">디스패처입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-135">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-136"><xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> 만들 때 속성의 결정은 <xref:System.Windows.Threading.DispatcherTimer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-136">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="38c36-137"><xref:System.Windows.Threading.Dispatcher> 속성은 현재 <xref:System.Windows.Threading.Dispatcher> 생성 시 하지 않는 한 다른 <xref:System.Windows.Threading.Dispatcher> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-137">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-138">타이머 틱 사이의 시간 간격을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-138">Gets or sets the period of time between timer ticks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c36-139">틱 사이의 시간 간격입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-139">The period of time between ticks.</span>
          </span>
          <span data-ttu-id="38c36-140">기본값은 00:00:00입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-140">The default is 00:00:00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-141">시간 간격이 발생 하지만가 시간 간격에서 발생 하기 전에 실행 되지 않도록 보장 하는 경우에 정확 하 게 실행 하는 타이머 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-141">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="38c36-142">때문에 이것이 <xref:System.Windows.Threading.DispatcherTimer> 작업은 적용 되는 <xref:System.Windows.Threading.Dispatcher> 다른 작업 처럼 큐.</span><span class="sxs-lookup"><span data-stu-id="38c36-142">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="38c36-143">경우는 <xref:System.Windows.Threading.DispatcherTimer> 작업 실행 우선 순위는 큐에 있는 다른 작업에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-143">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="38c36-144">다음 예제에서는 <xref:System.Windows.Threading.DispatcherTimer>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-144">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="38c36-145">새 <xref:System.Windows.Threading.DispatcherTimer> 라는 개체 `dispatcherTimer` 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-145">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="38c36-146">이벤트 처리기 `dispatcherTimer_Tick` 에 추가 되는 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-146">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="38c36-147"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 을 사용 하 여 1 초로 설정 되는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-147">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="38c36-148">
            <paramref name="interval" />이 0보다 작거나 <see cref="F:System.Int32.MaxValue" />밀리초보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-148">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-149">타이머가 실행 중인지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-149">Gets or sets a value that indicates whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c36-150">타이머가 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-150">
              <see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="38c36-151">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 로 설정 해야 `true` 에 대 한는 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="38c36-153">호출 <xref:System.Windows.Threading.DispatcherTimer.Start%2A> 설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-153">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="38c36-154">호출 <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> 설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-154">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="38c36-155">다음 예제에서는 <xref:System.Windows.Threading.DispatcherTimer>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-155">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="38c36-156">새 <xref:System.Windows.Threading.DispatcherTimer> 라는 개체 `dispatcherTimer` 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-156">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="38c36-157">이벤트 처리기 `dispatcherTimer_Tick` 에 추가 되는 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-157">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="38c36-158"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 을 사용 하 여 1 초로 설정 되는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-158">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38c36-159">
            <see cref="T:System.Windows.Threading.DispatcherTimer" />를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-159">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-160">설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `false` 타이머가 시작 되 면 타이머를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-160">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="38c36-161">설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `true` 타이머가 중지 될 때 타이머를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-161">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="38c36-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="38c36-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 타이머를 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38c36-164">다음 예제에서는 <xref:System.Windows.Threading.DispatcherTimer>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-164">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="38c36-165">새 <xref:System.Windows.Threading.DispatcherTimer> 라는 개체 `dispatcherTimer` 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-165">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="38c36-166">이벤트 처리기 `dispatcherTimer_Tick` 에 추가 되는 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-166">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="38c36-167"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 을 사용 하 여 1 초로 설정 되는 <xref:System.Windows.Duration.TimeSpan%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-167">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38c36-168">
            <see cref="T:System.Windows.Threading.DispatcherTimer" />를 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-168">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38c36-169">설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `false` 타이머가 시작 되 면 타이머를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-169">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="38c36-170">설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `true` 타이머가 중지 될 때 타이머를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-170">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="38c36-171">호출 <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> 설정 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-171">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-172">사용자 정의 데이터를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-172">Gets or sets a user-defined data object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38c36-173">사용자 정의 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-173">The user-defined data.</span>
          </span>
          <span data-ttu-id="38c36-174">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-174">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38c36-175">타이머 간격이 경과되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38c36-175">Occurs when the timer interval has elapsed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="38c36-176">다음 예제에서는 한 <xref:System.Windows.Threading.DispatcherTimer.Tick> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-176">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="38c36-177">이벤트 처리기 업데이트는 <xref:System.Windows.Controls.Label> 둘째, 현재를 표시 하 고 호출 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> 에 <xref:System.Windows.Input.CommandManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="38c36-177">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>