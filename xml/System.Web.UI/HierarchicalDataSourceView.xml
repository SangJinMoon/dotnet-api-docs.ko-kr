<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HierarchicalDataSourceView.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56198043756253bdff184ffb3753a3ff9780d1910.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6198043756253bdff184ffb3753a3ff9780d1910</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Represents a data view on a node or collection of nodes in a hierarchical data structure for a <ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceControl" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceControl" /&gt;</ph> 컨트롤에 대한 계층적 데이터 구조의 노드 또는 노드 컬렉션에 데이터 뷰를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion.</source>
          <target state="translated">ASP.NET은 데이터에 바인딩하고 일관성 있게에서 제공 하는 웹 서버 컨트롤 수 있도록 하는 데이터 바인딩 아키텍처를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls.</source>
          <target state="translated">데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤을 이라고 하 고 해당 바인딩을 지는 클래스 데이터 소스 컨트롤 이라고 합니다. 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on.</source>
          <target state="translated">데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.</source>
          <target state="translated">데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Data source controls that represent hierarchical data derive from the abstract <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">Abstract에서 파생 되는 계층적 데이터를 나타내는 데이터 소스 컨트롤 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects.</source>
          <target state="translated">데이터 소스 컨트롤의 데이터 소스 제어 개체와 연결된 된 뷰의 데이터 원본 뷰 개체도 표시 되는 기본 데이터의 조합으로 생각할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent.</source>
          <target state="translated">계층적 데이터 소스 컨트롤 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층적 데이터 원본 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>The data source views are not named, like the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> objects associated with a <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> control, but are identified by their unique hierarchical path.</source>
          <target state="translated">데이터 원본 뷰 이름이 지정 되지 않은, like는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> 와 연결 된 개체는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> 컨트롤과 같지만 고유한 계층 경로으로 식별 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Data source views define the capabilities of a data source control.</source>
          <target state="translated">데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>All data source view objects, including <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>, support data retrieval from the underlying data source using the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> method, which retrieves a hierarchical list of data as an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> object.</source>
          <target state="translated">모든 데이터 원본 뷰 개체를 포함 하 여 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>를 사용 하 여 기본 데이터 원본에서 데이터 검색을 지원는 <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> 으로 데이터의 계층적 목록을 검색 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>All data source view objects optionally support a basic set of capabilities, including operations such as <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph>, and sorting.</source>
          <target state="translated">모든 데이터 원본 뷰 개체는 기본 기능 집합을,와 같은 작업을 포함 하는 필요에 따라 지원 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph>, 및 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> method and querying the view at design time or at run time.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 볼를 검색할 수는 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> 메서드 및 디자인 타임 또는 런타임 시 뷰를 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source><ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> does not currently support <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph> operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> 현재 지원 하지 않는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>The following code example demonstrates how to derive a class from the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> class to retrieve data from hierarchical data storage, in this case a file system.</source>
          <target state="translated">클래스를 파생 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> 이 계층적 데이터 저장소에서 데이터를 검색 하는 클래스의 경우 파일 시스템입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>The <ph id="ph1">`FileSystemDataSourceView`</ph> class is a strongly typed <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> instance that enables hierarchical Web server controls such as the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to bind to a <ph id="ph4">`FileSystemDataSource`</ph> control and display file system information.</source>
          <target state="translated"><ph id="ph1">`FileSystemDataSourceView`</ph> 클래스는 강력한 형식의 <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> 와 같은 웹 서버 컨트롤 계층 구조를 사용 하면 인스턴스는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤을 바인딩할는 <ph id="ph4">`FileSystemDataSource`</ph> 제어 하 고 파일 시스템 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in.</source>
          <target state="translated">보안상의 이유로 파일 시스템 정보는 localhost에 데이터 소스 제어를 사용 하는 경우에 표시 됩니다, 인증 된 시나리오 및 데이터 소스 제어를 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>Otherwise, the <ph id="ph1">`viewPath`</ph> parameter passed to the constructor might be used to create a view based on the current file system path.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">`viewPath`</ph> 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로에 따라 보기를 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HierarchicalDataSourceView">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceView" /&gt;</ph>, you must override the following member: <ph id="ph2">&lt;see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceView" /&gt;</ph>에서 상속하는 경우 <ph id="ph2">&lt;see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" /&gt;</ph> 멤버를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HierarchicalDataSourceView.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceView" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HierarchicalDataSourceView" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>Gets a list of all the data items in the view.</source>
          <target state="translated">뷰의 모든 데이터 항목에 대한 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collection of data items.</source>
          <target state="translated">데이터 항목의 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection of data items in the current view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> 현재 보기의 데이터 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>You can call the <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method to get an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> object and iterate through the collection of data items.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> 가져올 메서드를 한 <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> 개체 및 데이터 항목의 컬렉션을 반복 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> class to retrieve hierarchical <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> data from a file system.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> 에서 파생 되는 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> 계층적 검색할 클래스 <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파일 시스템에서 데이터입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in.</source>
          <target state="translated">보안상의 이유로 파일 시스템 정보는 localhost에 데이터 소스 제어를 사용 하는 경우에 표시 됩니다, 인증 된 시나리오 및 데이터 소스 제어를 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>Otherwise, the <ph id="ph1">`viewPath`</ph> parameter passed to the constructor of the view object might be used to create a view based on the current file system path.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">`viewPath`</ph> view 개체의 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로에 따라 보기를 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HierarchicalDataSourceView.Select">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>