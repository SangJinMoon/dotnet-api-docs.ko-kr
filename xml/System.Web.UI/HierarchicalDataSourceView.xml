<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="956a9-101"><see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 컨트롤에 대한 계층적 데이터 구조의 노드 또는 노드 컬렉션에 데이터 뷰를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-101">Represents a data view on a node or collection of nodes in a hierarchical data structure for a <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956a9-102">ASP.NET은 데이터에 바인딩하고 일관성 있게에서 제공 하는 웹 서버 컨트롤 수 있도록 하는 데이터 바인딩 아키텍처를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-102">ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion.</span></span> <span data-ttu-id="956a9-103">데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤을 이라고 하 고 해당 바인딩을 지는 클래스 데이터 소스 컨트롤 이라고 합니다. 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-103">Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls.</span></span> <span data-ttu-id="956a9-104">데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-104">Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on.</span></span> <span data-ttu-id="956a9-105">데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-105">Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.</span></span>  
  
 <span data-ttu-id="956a9-106">Abstract에서 파생 되는 계층적 데이터를 나타내는 데이터 소스 컨트롤 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-106">Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span> <span data-ttu-id="956a9-107">데이터 소스 컨트롤의 데이터 소스 제어 개체와 연결된 된 뷰의 데이터 원본 뷰 개체도 표시 되는 기본 데이터의 조합으로 생각할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-107">You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects.</span></span> <span data-ttu-id="956a9-108">계층적 데이터 소스 컨트롤 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층적 데이터 원본 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-108">Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent.</span></span> <span data-ttu-id="956a9-109">데이터 원본 뷰 이름이 지정 되지 않은, like는 <xref:System.Web.UI.DataSourceView> 와 연결 된 개체는 <xref:System.Web.UI.DataSourceControl> 컨트롤과 같지만 고유한 계층 경로으로 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-109">The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path.</span></span>  
  
 <span data-ttu-id="956a9-110">데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-110">Data source views define the capabilities of a data source control.</span></span> <span data-ttu-id="956a9-111">모든 데이터 원본 뷰 개체를 포함 하 여 <xref:System.Web.UI.HierarchicalDataSourceView>를 사용 하 여 기본 데이터 원본에서 데이터 검색을 지원는 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 으로 데이터의 계층적 목록을 검색 하는 메서드는 <xref:System.Web.UI.IHierarchicalEnumerable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-111">All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object.</span></span> <span data-ttu-id="956a9-112">모든 데이터 원본 뷰 개체는 기본 기능 집합을,와 같은 작업을 포함 하는 필요에 따라 지원 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, 및 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-112">All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting.</span></span> <span data-ttu-id="956a9-113">데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 볼를 검색할 수는 <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> 메서드 및 디자인 타임 또는 런타임 시 뷰를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-113">A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time.</span></span> <span data-ttu-id="956a9-114"><xref:System.Web.UI.HierarchicalDataSourceView> 현재 지원 하지 않는 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> 또는 <xref:System.Web.UI.DataSourceView.Delete%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-114"><xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956a9-115">클래스를 파생 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.HierarchicalDataSourceView> 이 계층적 데이터 저장소에서 데이터를 검색 하는 클래스의 경우 파일 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-115">The following code example demonstrates how to derive a class from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve data from hierarchical data storage, in this case a file system.</span></span> <span data-ttu-id="956a9-116">`FileSystemDataSourceView` 클래스는 강력한 형식의 <xref:System.Web.UI.HierarchicalDataSourceView> 와 같은 웹 서버 컨트롤 계층 구조를 사용 하면 인스턴스는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 바인딩할는 `FileSystemDataSource` 제어 하 고 파일 시스템 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-116">The `FileSystemDataSourceView` class is a strongly typed <xref:System.Web.UI.HierarchicalDataSourceView> instance that enables hierarchical Web server controls such as the <xref:System.Web.UI.WebControls.TreeView> control to bind to a `FileSystemDataSource` control and display file system information.</span></span> <span data-ttu-id="956a9-117">보안상의 이유로 파일 시스템 정보는 localhost에 데이터 소스 제어를 사용 하는 경우에 표시 됩니다, 인증 된 시나리오 및 데이터 소스 제어를 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-117">For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in.</span></span> <span data-ttu-id="956a9-118">그렇지 않은 경우는 `viewPath` 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로에 따라 보기를 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-118">Otherwise, the `viewPath` parameter passed to the constructor might be used to create a view based on the current file system path.</span></span> <span data-ttu-id="956a9-119">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-119">This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span>  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="956a9-120"><see cref="T:System.Web.UI.HierarchicalDataSourceView" />에서 상속하는 경우 <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" /> 멤버를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-120">When you inherit from <see cref="T:System.Web.UI.HierarchicalDataSourceView" />, you must override the following member: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</span></span></para>
    </block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="956a9-121"><see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-121">Initializes a new instance of the <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="956a9-122">뷰의 모든 데이터 항목에 대한 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-122">Gets a list of all the data items in the view.</span></span></summary>
        <returns><span data-ttu-id="956a9-123">데이터 항목의 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-123">An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of data items.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956a9-124"><xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Web.UI.IHierarchicalEnumerable> 현재 보기의 데이터 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-124">The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view.</span></span> <span data-ttu-id="956a9-125">호출할 수 있습니다는 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 가져올 메서드를 한 <xref:System.Collections.IEnumerator> 개체 및 데이터 항목의 컬렉션을 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-125">You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956a9-126">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 에서 파생 되는 클래스의 메서드는 <xref:System.Web.UI.HierarchicalDataSourceView> 계층적 검색할 클래스 <xref:System.IO.FileSystemInfo> 파일 시스템에서 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-126">The following code example demonstrates how to override the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method in a class that derives from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve hierarchical <xref:System.IO.FileSystemInfo> data from a file system.</span></span> <span data-ttu-id="956a9-127">보안상의 이유로 파일 시스템 정보는 localhost에 데이터 소스 제어를 사용 하는 경우에 표시 됩니다, 인증 된 시나리오 및 데이터 소스 제어를 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-127">For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in.</span></span> <span data-ttu-id="956a9-128">그렇지 않은 경우는 `viewPath` view 개체의 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로에 따라 보기를 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-128">Otherwise, the `viewPath` parameter passed to the constructor of the view object might be used to create a view based on the current file system path.</span></span> <span data-ttu-id="956a9-129">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="956a9-129">This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span>  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>