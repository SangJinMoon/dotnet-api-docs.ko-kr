<Type Name="UpdatePanelUpdateMode" FullName="System.Web.UI.UpdatePanelUpdateMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb3115d37344719eac3ae8a14683f7049d6bb7a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UpdatePanelUpdateMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdatePanelUpdateMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanelUpdateMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UpdatePanelUpdateMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UpdatePanelUpdateMode" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤의 내용에 적용할 수 있는 업데이트 모드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanelUpdateMode> 열거형의 콘텐츠에 대 한 사용 가능한 업데이트 모드를 정의 <xref:System.Web.UI.UpdatePanel> 제어 합니다. <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 속성의 값 중 하나를 설정 해야 합니다는 <xref:System.Web.UI.UpdatePanelUpdateMode> 열거형입니다. <xref:System.Web.UI.UpdatePanel> 컨트롤을 사용 하려면는 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 의 속성은 <xref:System.Web.UI.ScriptManager> 컨트롤은 `true` 되려면 부분 페이지 렌더링에 대 한 합니다.  
  
 기본값은 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 속성은 항상 있습니다.  
  
 경우는 <xref:System.Web.UI.UpdatePanelUpdateMode.Always> 다른 내부 <xref:System.Web.UI.UpdatePanel> 컨트롤과 부모 패널 업데이트 되, 중첩된 된 패널에 관계 없이 업데이트 됩니다는 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 속성 값입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 선언 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 컨트롤입니다. 첫 번째 패널 세트는 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 속성은 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 조건부를 제어 합니다. 두 번째 패널에 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 기본적으로 항상으로 설정 합니다. 두 패널 외부에 있는 단추를 사용 하 여 비동기 포스트백 컨트롤로 등록는 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 의 메서드는 <xref:System.Web.UI.ScriptManager> 제어 합니다. 단추의 click 이벤트 처리기는 <xref:System.Web.UI.UpdatePanel.Update%2A> 마지막 업데이트 이후 5 초 넘게 경과한 경우 첫 번째 패널의 메서드가 호출 됩니다. 이 시나리오에서는 패널의 콘텐츠는 패널을 마지막으로 업데이트 된 5 초 넘게 있는 경우에 업데이트 됩니다. 두 번째 패널의 콘텐츠는 항상 업데이트 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Always = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>페이지에서 발생한 모든 포스트백에 대해 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤의 내용이 업데이트됩니다. 여기에는 비동기 포스트백이 포함됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Conditional">
      <MemberSignature Language="C#" Value="Conditional" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Conditional = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberSignature Language="VB.NET" Value="Conditional" />
      <MemberSignature Language="C++ CLI" Value="Conditional" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>다음 조건에 해당하는 경우 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤의 내용이 업데이트됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   경우는 <xref:System.Web.UI.UpdatePanel.Update%2A> 의 메서드는 <xref:System.Web.UI.UpdatePanel> 제어가으로 명시적으로 호출 합니다.  
  
-   트리거 속성을 사용 하 여 컨트롤 트리거로 정의 하는 경우는 <xref:System.Web.UI.UpdatePanel> 포스트백이 발생 합니다. 이 시나리오에서는 컨트롤이 패널 콘텐츠 업데이트에 대 한 명시적 트리거입니다. 내부나 외부 트리거 컨트롤이 될 수는 <xref:System.Web.UI.UpdatePanel> 트리거를 정의 하는 컨트롤입니다.  
  
-   경우는 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 속성이 `true` 의 자식 컨트롤의 <xref:System.Web.UI.UpdatePanel> 컨트롤이 포스트백을 발생 합니다. 이 시나리오에서는 컨트롤의 자식 컨트롤이 <xref:System.Web.UI.UpdatePanel> 제어 하는 패널을 업데이트 하는 것에 대 한 암시적 트리거입니다. 중첩 된 자식 컨트롤의 <xref:System.Web.UI.UpdatePanel> 컨트롤 외부 하지 않게 <xref:System.Web.UI.UpdatePanel> 트리거로 명시적으로 정의 하지 않는 한 업데이트를 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>