<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPostBackDataHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ba7b1c9a6c9f8a1f39b65306446296b76259839a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7b1c9a6c9f8a1f39b65306446296b76259839a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>Defines methods that ASP.NET server controls must implement to automatically load postback data.</source>
          <target state="translated">ASP.NET 서버 컨트롤에서 포스트백된 데이터를 자동으로 로드하기 위해 구현해야 하는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>You must implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> interface when creating a server control that needs to examine form data that is posted back to the server by the client.</source>
          <target state="translated">구현 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> 클라이언트 서버에 다시 게시 하는 양식 데이터를 검사 해야 하는 서버 컨트롤을 만들 때 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>The contract that this interface defines allows a server control to determine whether its state should be altered as a result of the postback, and to raise the appropriate events.</source>
          <target state="translated">이 인터페이스를 정의 하는 계약에는 서버 컨트롤을 상태는 포스트백의 결과로 변경될지 여부를 확인 하 고 적절 한 이벤트를 발생 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Server Event Handling in ASP.NET Web Forms Pages<ept id="p1">](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET Web Forms 페이지에서 서버 이벤트 처리<ept id="p1">](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>The following code example demonstrates a custom text box server control that implements the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> interface.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 사용자 지정 텍스트 상자 서버 컨트롤의 <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IPostBackDataHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.Text%2A&gt;</ph> property is changed as a result of the postback, and the server control raises a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextChanged&gt;</ph> event after postback data has been loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.Text%2A&gt;</ph> 속성이 포스트백의 결과로 변경 되 고 서버 컨트롤에서 발생 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextChanged&gt;</ph> 포스트백 데이터를 로드 한 후 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The key identifier for the control.</source>
          <target state="translated">컨트롤의 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The collection of all incoming name values.</source>
          <target state="translated">들어오는 모든 이름 값의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>When implemented by a class, processes postback data for an ASP.NET server control.</source>
          <target state="translated">클래스에서 구현될 경우 ASP.NET 서버 컨트롤의 포스트백된 데이터를 처리합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the server control's state changes as a result of the postback; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서버 컨트롤의 상태가 포스트백의 결과로 변경되면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The ASP.NET page framework tracks all the server controls that return <ph id="ph1">`true`</ph> to this method call, and then invokes the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> method on those controls.</source>
          <target state="translated">반환 하는 모든 서버 컨트롤을 추적 하는 ASP.NET 페이지 프레임 워크 <ph id="ph1">`true`</ph> 이 메서드 호출에 대 한 다음 호출는 <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> 해당 컨트롤에 대해 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The following code example demonstrates a server control that implements a version of the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 버전을 구현 하는 서버 컨트롤은 <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
          <source>When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.</source>
          <target state="translated">클래스에서 구현될 경우 컨트롤의 상태가 변경되었음을 ASP.NET 응용 프로그램에 알리도록 서버 컨트롤에 신호를 보냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> method raises any change events for the server control that implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> 메서드를 구현 하는 서버 컨트롤에 대 한 변경 이벤트를 발생 시킵니다는 <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
          <source>The following code example demonstrates how a server control can implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 서버 컨트롤 구현 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>