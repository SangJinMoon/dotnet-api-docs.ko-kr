<Type Name="PageHandlerFactory" FullName="System.Web.UI.PageHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05a7ec83e34eda43bdad32bc7ecc034aed1ebd6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageHandlerFactory extends System.Object implements class System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class PageHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageHandlerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.Page" /> 클래스에서 상속되고 <see cref="T:System.Web.IHttpHandler" /> 인터페이스를 구현하는 클래스의 인스턴스를 만듭니다. ASP.NET 파일에 대한 요청을 처리하기 위해 인스턴스가 동적으로 만들어집니다. <see cref="T:System.Web.UI.PageHandlerFactory" /> 클래스는 ASP.NET 페이지의 기본 처리기 팩터리 구현입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageHandlerFactory> 클래스가 구현 하는 <xref:System.Web.IHttpHandlerFactory> ASP.NET 파일에 대 한 기본 HTTP 처리기를 제공 하는 인터페이스입니다. <xref:System.Web.UI.PageHandlerFactory> 컴파일, 필요한 경우에 해당 하는 URL을 정확 하 게 형식을 반환 하는 데 ASP.NET 컴파일 시스템을 호출 하 고 다음 해당 형식의 인스턴스를 만듭니다. 페이지에서 상속 된 <xref:System.Web.UI.Page> 클래스 및 구현 하는 <xref:System.Web.IHttpHandler> 인터페이스입니다.  
  
 사용자 지정 페이지 처리기 팩터리를 작성 하려면 구현는 <xref:System.Web.IHttpHandlerFactory> 및 사용자 지정 등록 <xref:System.Web.UI.PageHandlerFactory> 에서 응용 프로그램에 대 한 Web.config 파일의 클래스는 [httpHandlers 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/24ca01f3-7141-4fdc-acac-71c0733cf6c2) 구성 단원을 참조 하십시오입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PageHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; PageHandlerFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.PageHandlerFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageHandlerFactory.%23ctor%2A> 생성자는 기본 생성자를 호출 하 고 모든 필드를 기본값으로 초기화 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string virtualPath, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandler (context As HttpContext, requestType As String, virtualPath As String, path As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ virtualPath, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">내장 서버 개체(예: Request, Response, Session 및 Server)에 대한 참조를 제공하는 <see cref="T:System.Web.HttpContext" /> 클래스의 인스턴스는 HTTP 요청을 지원하는 데 사용됩니다.</param>
        <param name="requestType">클라이언트에서 사용하는 HTTP 데이터 전송 메서드(GET 또는 POST)입니다.</param>
        <param name="virtualPath">요청한 리소스의 가상 경로입니다.</param>
        <param name="path">요청한 리소스에 대한 <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> 속성입니다.</param>
        <summary>
          <see cref="T:System.Web.IHttpHandler" /> 인터페이스의 인스턴스를 반환하여 요청된 리소스를 처리합니다.</summary>
        <returns>요청을 처리하는 새 <see cref="T:System.Web.IHttpHandler" />이거나, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageHandlerFactory.GetHandler%2A> 메서드는 실행 시간 ASP.NET에서 호출 되며의 올바른 인스턴스를 반환 된 <xref:System.Web.IHttpHandler> 인터페이스 또는 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">다시 사용할 <see cref="T:System.Web.IHttpHandler" />입니다.</param>
        <summary>팩터리에서 기존 처리기 인스턴스를 다시 사용할 수 있도록 합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      </Docs>
    </Member>
  </Members>
</Type>