<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConflictOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab3cd7d259dad0e74ecfbc9e7ed7d3f48beb26c7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab3cd7d259dad0e74ecfbc9e7ed7d3f48beb26c7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ConflictOptions">
          <source>Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</source>
          <target state="translated">데이터를 업데이트하거나 삭제할 때 ASP.NET 데이터 소스 컨트롤에서 데이터 충돌을 처리하는 방법을 결정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
          <target state="translated">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</source>
          <target state="translated">예를 들어 하나의 클라이언트 데이터 읽고는 사용자에 게 제공 하는 동안 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</source>
          <target state="translated">두 사용자가 데이터를 업데이트 하는 데이터 저장소에 제출 하는 경우 클라이언트는 동일한 데이터에 대해 서로 다른 값을 업데이트할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>This is considered a conflict.</source>
          <target state="translated">충돌로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>The <ph id="ph1">`ConflictDetection`</ph> property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</source>
          <target state="translated"><ph id="ph1">`ConflictDetection`</ph> ASP.NET 데이터 소스 컨트롤에 대해 정의 된 속성은 내부 데이터 저장소에는 낙관적 동시성와 삭제를 사용 하는 경우 업데이트 작업은 컨트롤이 내부 데이터 저장소의 데이터 충돌을 처리 하는 방법을 결정 하는 데 사용 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>By default, the <ph id="ph1">`ConflictDetection`</ph> property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</source>
          <target state="translated">기본적으로는 <ph id="ph1">`ConflictDetection`</ph> 속성이 overwritechanges 즉, 데이터 소스 제어에는 데이터 소스 컨트롤은 행에서 먼저 데이터를 읽을 때와 시간을 행을 업데이트 하면 데이터 행에 대해 변경 내용을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</source>
          <target state="translated">기본 키가 업데이트 되거나 삭제 될 데이터 행을 찾는 데 사용 하지만 데이터의 없는 다른 비교를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the <ph id="ph1">`oldValues`</ph> collections of the <ph id="ph2">`Update`</ph> and <ph id="ph3">`Delete`</ph> methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</source>
          <target state="translated">그러나 데이터 소스 제어 CompareAllValues 옵션을 사용 하도록 구성 된, 두면에 원래 데이터는 <ph id="ph1">`oldValues`</ph> 의 컬렉션은 <ph id="ph2">`Update`</ph> 및 <ph id="ph3">`Delete`</ph> 메서드를 업데이트 하거나 경우에 데이터를 삭제 하는 논리를 작성할 수 있도록 이러한 값에는 데이터 저장소의 현재 값과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ConflictOptions">
          <source>The matching values indicate that the data has not changed since the time it was read.</source>
          <target state="translated">일치 하는 값은 데이터를 읽은 이후로 변경 되지 않은 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Web.UI.ConflictOptions.CompareAllValues">
          <source>A data source control uses the <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> collection of the <ph id="ph2">&lt;see langword="Update" /&gt;</ph> and <ph id="ph3">&lt;see langword="Delete" /&gt;</ph> methods to determine whether the data has been changed by another process.</source>
          <target state="translated">데이터 소스 컨트롤에서 <ph id="ph2">&lt;see langword="Update" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="Delete" /&gt;</ph> 메서드의 <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> 컬렉션을 사용하여 데이터가 다른 프로세스를 통해 변경되었는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Web.UI.ConflictOptions.OverwriteChanges">
          <source>A data source control overwrites all values in a data row with its own values for the row.</source>
          <target state="translated">데이터 소스 컨트롤에서 행에 대한 자체 값을 사용하여 데이터 행의 모든 값을 덮어씁니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>