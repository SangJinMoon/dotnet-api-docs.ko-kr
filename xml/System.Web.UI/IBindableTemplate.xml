<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IBindableTemplate.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b4f1138bb1eff9cf9e7995a28c8cc960df5d3ac6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4f1138bb1eff9cf9e7995a28c8cc960df5d3ac6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IBindableTemplate">
          <source>Provides a way for ASP.NET data-bound controls, such as <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.DetailsView" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FormView" /&gt;</ph>, to automatically bind to an ASP.NET data source control within templated content sections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.DetailsView" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FormView" /&gt;</ph>와 같은 데이터 바인딩된 ASP.NET 컨트롤이 템플릿 내용 섹션에서 ASP.NET 데이터 소스 컨트롤에 자동으로 바인딩할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> interface provides a way for ASP.NET data-bound controls, such as <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph>, to bind to data supplied by an ASP.NET data source control, such as <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> or <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>, when the data-bound control includes templated content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 인터페이스 사용 하면 ASP.NET 데이터 바인딩된 컨트롤 같은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph>와 같은 ASP.NET 데이터 소스 컨트롤에서 제공 하는 데이터에 바인딩할 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 또는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>때는 데이터 바인딩된 컨트롤에는 템플릿 기반 콘텐츠가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Page developers do not implement the <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> interface.</source>
          <target state="translated">페이지 개발자가 구현 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Developers creating custom data-bound controls might manipulate <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> objects in implementations of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt;</ph> methods, but do not implement their own <ph id="ph4">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> objects.</source>
          <target state="translated">사용자 지정 데이터 바인딩된 컨트롤을 만드는 개발자 조작할 수 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 의 구현에서 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt;</ph> 메서드를 구현 하지는 않습니다 자신의 <ph id="ph4">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Data-bound controls such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> typically are aware of their child control trees, and can therefore bind values to them, extract values from them, and pass these values between the data-bound control and a data source control whenever data binding occurs.</source>
          <target state="translated">와 같은 데이터 바인딩된 컨트롤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 일반적으로 자식 제어 트리를 인식 하므로 값을 바인딩하고,에서 값을 추출 하 고 수 데이터 바인딩이 발생할 때마다 데이터 바인딩된 컨트롤 및 데이터 소스 컨트롤 간의 이러한 값을 전달 .</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>However, when a page developer defines templated content for a data-bound control, the child controls within the template are not visible to the parent data-bound control: the parent can render the child content (because controls effectively render themselves), but it cannot extract the values of these child controls to pass to an associated data source control's update, insert, or delete operation.</source>
          <target state="translated">그러나 페이지 개발자는 데이터 바인딩된 컨트롤에 대 한 템플릿 내용을 정의할 때 템플릿 내에서 자식 컨트롤에 표시 되지 않습니다는 부모 데이터 바인딩된 컨트롤: 자식 컨트롤 (효과적으로 컨트롤을 렌더링 자체) 이므로 콘텐츠, 하지만 연결 된 데이터 소스 컨트롤의 업데이트, 삽입 또는 삭제 작업에 전달할 이러한 자식 컨트롤의 값을 추출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>In data-binding scenarios, templated content is opaque to a parent data-bound control.</source>
          <target state="translated">데이터 바인딩 시나리오의 템플릿 기반 콘텐츠는 부모 데이터 바인딩된 컨트롤에 불투명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">`Bind`</ph> syntax makes it possible for the data-bound control to extract the values from a control data-bound inside an <ph id="ph2">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">`Bind`</ph> 구문을 사용 하면 값을 추출 하는 데이터 바인딩된 컨트롤이 컨트롤에서 데이터 바인딩된 컨트롤에 대 한 프로그램 <ph id="ph2">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The data binding can be one-way or two-way.</source>
          <target state="translated">단방향 또는 양방향 데이터 바인딩을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>(These binding directions are defined by the <ph id="ph1">&lt;xref:System.ComponentModel.BindingDirection&gt;</ph> enumeration.) One-way data binding is any data binding performed in an outbound direction, from data source control to data-bound control; for example, any data-reading scenario involves one-way data binding.</source>
          <target state="translated">(이러한 바인딩 방향은 정의한는 <ph id="ph1">&lt;xref:System.ComponentModel.BindingDirection&gt;</ph> 열거 합니다.) 단방향 데이터 바인딩에 데이터 바인딩된 컨트롤을 데이터 소스 제어에서의 아웃 바운드 방향으로 수행 하는 데이터 바인딩 예를 들어 모든 데이터 읽기 시나리오 단방향 데이터 바인딩을 포함합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>For one-way data binding, you can use one-way data binding syntax (<ph id="ph1">`&lt;%# Eval("fieldname") %&gt;`</ph>) inside templated content, and do not need to use two-way ASP.NET data-binding syntax.</source>
          <target state="translated">단방향 데이터 바인딩에 대 한 단방향 데이터 바인딩 구문을 사용할 수 있습니다 (<ph id="ph1">`&lt;%# Eval("fieldname") %&gt;`</ph>) 템플릿 내용 안에 양방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Two-way data-binding describes data-binding in the inbound direction, from the data-bound control to the data source control.</source>
          <target state="translated">데이터 소스 컨트롤에 데이터 바인딩된 컨트롤에서 인바운드 방향의 데이터 바인딩을 설명 하는 양방향 데이터 바인딩을 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Automatic edit, insert, and delete scenarios using ASP.NET data-bound and data source controls are two-way data-binding scenarios.</source>
          <target state="translated">자동 편집, 삽입 및 삭제 시나리오 ASP.NET을 사용 하 여 데이터 바인딩 및 데이터 소스 제어는 양방향 데이터 바인딩 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>These scenarios use two-way data-binding expressions (<ph id="ph1">`&lt;%# Bind("fieldname") %&gt;`</ph>).</source>
          <target state="translated">이러한 시나리오에서는 양방향 데이터 바인딩 식 (<ph id="ph1">`&lt;%# Bind("fieldname") %&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> interface and the ASP.NET infrastructure support automatic, declarative, two-way data binding between ASP.NET data source controls and templated content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 인터페이스와 ASP.NET 인프라 ASP.NET 데이터 소스 컨트롤 템플릿 내용 사이의 자동 선언적 이며 양방향 데이터 바인딩을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>For more information about ASP.NET data-binding expressions and syntax, see <bpt id="p1">[</bpt>Binding to Databases<ept id="p1">](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)</ept> and <bpt id="p2">[</bpt>Data-Binding Expressions Overview<ept id="p2">](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)</ept>.</source>
          <target state="translated">ASP.NET 데이터 바인딩 식 및 구문에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터베이스에 바인딩<ept id="p1">](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)</ept> 및 <bpt id="p2">[</bpt>데이터 바인딩 식 개요<ept id="p2">](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Templated content for data-bound controls is most often defined declaratively.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 대 한 템플릿 기반 콘텐츠는 대부분 선언적으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The following table describes the processes most commonly used to bind templated data to data-bound controls.</source>
          <target state="translated">다음 표에서 가장 일반적으로 사용 되는 템플릿 기반 데이터를 데이터 바인딩된 컨트롤에 바인딩하는 프로세스를 설명 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Data-bound control</source>
          <target state="translated">데이터 바인딩 컨트롤</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Process</source>
          <target state="translated">프로세스</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt;</ph> property.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph1">`DataSourceID`</ph> 템플릿 내용 및 데이터 소스 컨트롤의 속성에 정의 된 프로그램 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;</ph> property.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph1">`DataSourceID`</ph> 템플릿 내용 및 데이터 소스 컨트롤의 속성에 정의 된 프로그램 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control does not support an insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 삽입 작업을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property, and the templated content is defined in an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt;</ph> property, or in a <ph id="ph5">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph1">`DataSourceID`</ph> 속성과 템플릿 내용에 정의 된는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt;</ph> 속성 또는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> controls do not support automatic two-way data-binding scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤 자동 양방향 데이터 바인딩 시나리오를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>ASP.NET implicitly creates an <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> object when templated content that binds to an ASP.NET data source control within the template is parsed.</source>
          <target state="translated">ASP.NET이 암시적으로 생성 한 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 템플릿 내에서 ASP.NET 데이터 소스 컨트롤에 바인딩되는 템플릿 기반 콘텐츠 구문 분석 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Specifically, the ASP.NET parser creates an instance of the <ph id="ph1">&lt;xref:System.Web.UI.CompiledBindableTemplateBuilder&gt;</ph> class when it parses templated content that uses ASP.NET data-binding syntax and contains ASP.NET Web server controls that support data binding.</source>
          <target state="translated">특히, ASP.NET 파서의 인스턴스를 만듭니다는 <ph id="ph1">&lt;xref:System.Web.UI.CompiledBindableTemplateBuilder&gt;</ph> ASP.NET 데이터 바인딩 구문을 사용 하 고 데이터 바인딩을 지 원하는 ASP.NET 웹 서버 컨트롤을 포함 하는 템플릿 기반 콘텐츠를 구문 분석할 때 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>These ASP.NET sever controls are marked by the <ph id="ph1">&lt;xref:System.ComponentModel.BindableAttribute&gt;</ph> attribute.</source>
          <target state="translated">이러한 ASP.NET 서버 컨트롤 회색으로 표시 되는 <ph id="ph1">&lt;xref:System.ComponentModel.BindableAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> interface defines one method, <ph id="ph2">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 인터페이스 메서드를 정의 <ph id="ph2">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>This method is defined for two-way data binding, so that a data-bound control can automatically extract name/value pairs from templated content and pass the pairs to a data source control at run time.</source>
          <target state="translated">이 메서드는 자동으로 템플릿 내용에서 이름/값 쌍을 추출 하 고 런타임 시 데이터 소스 컨트롤에 전달할 수는 데이터 바인딩된 컨트롤에 대 한 양방향 데이터 바인딩을 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>For automatic data binding to succeed, the field names extracted from the templated content by the <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph> method must match parameter names in an associated data source control.</source>
          <target state="translated">자동 데이터 바인딩에 성공 하려면에 대 한 필드 이름 템플릿 내용에서 추출 된 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph> 메서드는 연결 된 데이터 소스 제어에 매개 변수 이름은 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>Control developers call the <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph> method explicitly only within their implementations of <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt;</ph> or some other similar method of a custom data-bound control.</source>
          <target state="translated">개발자가 호출 제어는 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</ph> 메서드 명시적으로의 구현이 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt;</ph> 또는 사용자 지정 데이터 바인딩된 컨트롤의 다른 유사한 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The following code example demonstrates how a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control can declaratively define templated content, bind to data provided by a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, and display and edit existing records.</source>
          <target state="translated">다음 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> 컨트롤 수 선언적으로 템플릿 기반 콘텐츠를 정의에서 제공 하는 데이터에 바인딩하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤을 표시 한 기존 레코드를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>The ASP.NET parser parses the templated content and creates an <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> object at run time that is able to bind values from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to the data-binding areas defined in the template by both one-way ASP.NET data-binding syntax (<ph id="ph3">`&lt;%# Eval("fieldname") %&gt;`</ph>) and two-way data-binding syntax (<ph id="ph4">`&lt;%# Bind("fieldname") %&gt;`</ph>).</source>
          <target state="translated">ASP.NET 파서 템플릿 기반 콘텐츠를 구문 분석 하 고 만듭니다는 <ph id="ph1">&lt;xref:System.Web.UI.IBindableTemplate&gt;</ph> 개체의 값을 바인딩할 수 있는 런타임 시는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 두 단방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 서식 파일에 정의 된 데이터 바인딩 영역에 대 한 컨트롤 (<ph id="ph3">`&lt;%# Eval("fieldname") %&gt;`</ph>) 및 양방향 데이터 바인딩을 구문 (<ph id="ph4">`&lt;%# Bind("fieldname") %&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>This control has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 컨트롤에는 텍스트 상자가 있으므로 보안상 위험할은 사용자 입력을 허용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IBindableTemplate">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</source>
          <target state="translated">데이터 바인딩된 컨트롤이 양방향 데이터 바인딩 시나리오에서 연결된 데이터 소스 컨트롤에 전달하는 이름/값 쌍을 추출할 <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>When implemented by a class, retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</source>
          <target state="translated">클래스에 의해 구현될 때 템플릿 내용에서 양방향 ASP.NET 데이터 바인딩 구문을 사용하여 바인딩된 값의 이름/값 쌍 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> of name/value pairs.</source>
          <target state="translated">이름/값 쌍의 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>The name represents the name of a control within templated content, and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</source>
          <target state="translated">이름은 템플릿 내용에 있는 컨트롤의 이름을 나타내고 값은 양방향 ASP.NET 데이터 바인딩 구문을 사용하여 바인딩된 속성 값의 현재 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>An <ph id="ph1">&lt;see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /&gt;</ph> method must conform to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /&gt;</ph> 메서드는 다음 규칙을 준수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>If more than one binding exists for a given field, the last binding encountered is used.</source>
          <target state="translated">지정된 된 필드에 대 한 바인딩이 여러 개 있는 경우에 마지막으로 발견 된 바인딩이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>In order to reference a control's identifier in the <ph id="ph1">&lt;see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /&gt;</ph> method, the control must also have a user-defined ID property at parse time.</source>
          <target state="translated">컨트롤의 식별자를 참조 하기 위해는 <ph id="ph1">&lt;see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /&gt;</ph> 메서드를 구문 분석 시 컨트롤 사용자 지정 ID 속성이 있어야도 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>If no ID exists, this results in a parse error.</source>
          <target state="translated">ID가 없으면이 구문 분석 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
          <source>Two-way ASP.NET data-binding syntax is only valid in an <ph id="ph1">&lt;see cref="T:System.Web.UI.ITemplate" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Web.UI.IBindableTemplate" /&gt;</ph> property of a data-bound control.</source>
          <target state="translated">양방향 ASP.NET 데이터 바인딩 구문이 유효는 <ph id="ph1">&lt;see cref="T:System.Web.UI.ITemplate" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Web.UI.IBindableTemplate" /&gt;</ph> 데이터 바인딩된 컨트롤의 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>