<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICallbackEventHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c825a3f80dfb1fd33e27c2eb4f80d07877ee835.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c825a3f80dfb1fd33e27c2eb4f80d07877ee835</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Used to indicate that a control can be the target of a callback event on the server.</source>
          <target state="translated">컨트롤이 서버에 대한 콜백 이벤트 대상이 될 수 있음을 나타내는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Implement the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> interface for any custom control that needs to receive callback events.</source>
          <target state="translated">구현 된 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> 콜백 이벤트를 수신 하는 모든 사용자 지정 컨트롤에 대 한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>포스트백 없이 클라이언트 콜백 구현<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Examples of controls that implement the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> interface include the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> controls.</source>
          <target state="translated">구현 하는 컨트롤의 예로 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> 인터페이스 포함는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>When a callback event targets a control that implements the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method is called to handle the event, passing the event argument as a parameter and the <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> method returns the result of the callback.</source>
          <target state="translated">구현 하는 컨트롤 콜백 이벤트를 대상으로 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> 메서드는 이벤트 인수를 매개 변수로 전달 하 고 이벤트를 처리 및 <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> 메서드 콜백 하 여 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</source>
          <target state="translated">데이터 소스 컨트롤에서 콜백 하는 동안 데이터를 검색 하는 컨트롤 대기가 동기적인 또는 비동기적인지를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>ASP.NET controls like <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> are implemented synchronously.</source>
          <target state="translated">같은 ASP.NET 컨트롤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 동기적으로 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Synchronous callbacks do not prevent the user from working in the browser.</source>
          <target state="translated">동기 콜백을 사용 해도 사용자 브라우저에서 작동 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</source>
          <target state="translated">동기 모드에서 한 번에 하나만 콜백 마지막 콜백이 선행으로 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</source>
          <target state="translated">비동기 동작을 지원 하도록 웹 컨트롤 구현 된 경우 여러 개의 콜백을 동시에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>For details on asynchronous programming, see <bpt id="p1">[</bpt>Event-based Asynchronous Pattern (EAP)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>이벤트 기반 비동기 패턴 (EAP)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>You can specify whether callback events originating from the user interface rendered by a control implementing the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> interface are validated.</source>
          <target state="translated">사용자 인터페이스에서 발생 된 콜백 이벤트는 컨트롤을 구현 하 여 렌더링 되는지 여부를 지정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler&gt;</ph> 인터페이스의 유효성이 검사 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>Validation of events is a good security practice.</source>
          <target state="translated">이벤트의 유효성 검사는 좋은 보안 방법입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>However, for performance reasons you can disable it.</source>
          <target state="translated">그러나 성능상의 이유로 것 비활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>To control whether event validation is performed on callback events, set the <ph id="ph1">`enableEventValidation`</ph> attribute of the <bpt id="p1">[</bpt>@ Page<ept id="p1">](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)</ept> directive or the <ph id="ph2">`enableEventValidation`</ph> attribute of the <bpt id="p2">[</bpt>pages Element (ASP.NET Settings Schema)<ept id="p2">](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)</ept> of the Web.config file.</source>
          <target state="translated">제어 하려면 여부 이벤트 유효성 검사는 콜백 이벤트에 대해, 설정는 <ph id="ph1">`enableEventValidation`</ph> 특성에는 <bpt id="p1">[</bpt>@ Page<ept id="p1">](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)</ept> 지시문 또는 <ph id="ph2">`enableEventValidation`</ph> 특성의는 <bpt id="p2">[</bpt>요소 (ASP.NET 설정 스키마)페이지<ept id="p2">](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)</ept> Web.config 파일의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.Page.EnableEventValidation%2A&gt;</ph> property in code, set it in the <ph id="ph2">`Page_Init`</ph> phase of page processing.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.Page.EnableEventValidation%2A&gt;</ph> 코드에서 속성에 설정 된 <ph id="ph2">`Page_Init`</ph> 페이지 처리의 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ICallbackEventHandler">
          <source>For more information on balancing the security benefit of event validation with its performance cost, see <bpt id="p1">[</bpt>ASP.NET Performance Overview<ept id="p1">](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)</ept>.</source>
          <target state="translated">성능 저하 이벤트 유효성 검사의 보안 이점을 균형 조정에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>ASP.NET 성능 개요<ept id="p1">](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult">
          <source>Returns the results of a callback event that targets a control.</source>
          <target state="translated">컨트롤을 대상으로 하는 콜백 이벤트의 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult">
          <source>The result of the callback.</source>
          <target state="translated">콜백의 결과입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult">
          <source>Exceptions thrown in <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> will not prevent <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> from being called and returning a result.</source>
          <target state="translated">throw 된 예외 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> 되더라도 <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> 호출 되 고 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult">
          <source>To prevent <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> from returning a result, set a flag when an exception is thrown in <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> and return an empty string from <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph>.</source>
          <target state="translated">방지 하기 위해 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> 에서 예외가 throw 될 경우 결과 반환 하는, 플래그를 설정 <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> 에서 빈 문자열을 반환 하 고 <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>A string that represents an event argument to pass to the event handler.</source>
          <target state="translated">이벤트 처리기에 전달할 이벤트 인수를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>Processes a callback event that targets a control.</source>
          <target state="translated">컨트롤을 대상으로 하는 콜백 이벤트를 처리합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>When <ph id="ph1">`null`</ph> is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</source>
          <target state="translated">때 <ph id="ph1">`null`</ph> 사용 되는 이벤트 인수 매개 변수로 문자열 "null"과 보낸 뒤로 서버에 serialize 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>Because there is no way to distinguish between <ph id="ph1">`null`</ph> and "null", you should avoid using <ph id="ph2">`null`</ph> argument parameters with callbacks.</source>
          <target state="translated">구별할 수 없기 때문에 <ph id="ph1">`null`</ph> 및 "null"을 사용 하면 안 <ph id="ph2">`null`</ph> 콜백과 함께 인수 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>Exceptions thrown in <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> will not prevent <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> from being called and returning a result.</source>
          <target state="translated">throw 된 예외 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> 되더라도 <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> 호출 되 고 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
          <source>To prevent <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> from returning a result, set a flag when an exception is thrown in <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> and return an empty string from <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph>.</source>
          <target state="translated">방지 하기 위해 <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> 에서 예외가 throw 될 경우 결과 반환 하는, 플래그를 설정 <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> 에서 빈 문자열을 반환 하 고 <ph id="ph3">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>