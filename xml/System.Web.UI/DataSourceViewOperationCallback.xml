<Type Name="DataSourceViewOperationCallback" FullName="System.Web.UI.DataSourceViewOperationCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c49f2ca68c77ae503f198e01976ef7068e19bfb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool DataSourceViewOperationCallback(int affectedRecords, Exception ex);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataSourceViewOperationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceViewOperationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function DataSourceViewOperationCallback(affectedRecords As Integer, ex As Exception) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool DataSourceViewOperationCallback(int affectedRecords, Exception ^ ex);" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="affectedRecords" Type="System.Int32" />
    <Parameter Name="ex" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="affectedRecords">
      <span data-ttu-id="bac83-101">데이터 작업의 영향을 받은 레코드 수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bac83-101">The number of records that the data operation affected.</span>
      </span>
    </param>
    <param name="ex">
      <span data-ttu-id="bac83-102">데이터 작업을 처리하는 동안 throw되는 <see cref="T:System.Exception" />입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bac83-102">An <see cref="T:System.Exception" />, if one is thrown by the data operation during processing.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="bac83-103">데이터의 비동기 삽입, 업데이트 또는 삭제 작업을 위해 데이터 바인딩된 컨트롤이 데이터 소스 뷰에 제공하는 비동기 콜백 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bac83-103">Represents the asynchronous callback method that a data-bound control supplies to a data source view for asynchronous insert, update, or delete data operations.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="bac83-104">데이터 작업 도중 throw된 모든 예외가 처리되었는지 여부를 나타내는 값입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bac83-104">A value indicating whether any exceptions thrown during the data operation were handled.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bac83-105">기본적으로 ASP.NET 웹 페이지, 실행 제어는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="bac83-105">By default, ASP.NET Web page and control execution is synchronous.</span></span> <span data-ttu-id="bac83-106">그러나 비동기 데이터 검색 및 데이터 작업을 지원 하기 위해 데이터 소스 컨트롤을 확장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bac83-106">However, data source controls can be extended to support asynchronous data retrieval and data operations.</span></span> <span data-ttu-id="bac83-107"><xref:System.Web.UI.DataSourceView> 지원 개체는 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, 및 <xref:System.Web.UI.DataSourceView.Delete%2A> 비동기 데이터 처리를 위한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bac83-107">The <xref:System.Web.UI.DataSourceView> object supports the <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, and <xref:System.Web.UI.DataSourceView.Delete%2A> methods for asynchronous data processing.</span></span> <span data-ttu-id="bac83-108"><xref:System.Web.UI.DataSourceViewOperationCallback> 대리자는 데이터 원본 뷰를 통해 전달 데이터 바인딩된 컨트롤을 보기 비동기 처리가 완료 될 때이 대리자를 호출 하 고 작업의 결과의 데이터 바인딩된 컨트롤에 알릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="bac83-108">The <xref:System.Web.UI.DataSourceViewOperationCallback> delegate is passed to the data source view by a data-bound control, so that the view can call this delegate when asynchronous processing is complete and notify the data-bound control of the operation's outcome.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
    <altmember cref="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
    <altmember cref="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
    <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
  </Docs>
</Type>