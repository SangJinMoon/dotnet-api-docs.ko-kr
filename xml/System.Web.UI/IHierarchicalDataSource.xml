<Type Name="IHierarchicalDataSource" FullName="System.Web.UI.IHierarchicalDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="068fe041f91a6298c206dec1b00bff288bc69ea2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHierarchicalDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchicalDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchicalDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchicalDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchicalDataSource" />
  <TypeSignature Language="F#" Value="type IHierarchicalDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.TreeView" />와 같은 계층적 데이터 바인딩된 컨트롤이 바인딩할 수 있는 계층적 데이터 소스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET은 데이터에 바인딩하고 일관성 있게에서 제공 하는 웹 서버 컨트롤 수 있도록 하는 컨트롤 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤을 이라고 하 고 해당 바인딩은 클래스 데이터 소스 컨트롤 이라고 합니다. 합니다. 데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다. 데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.  
  
 계층적 데이터를 나타내는 데이터 소스 컨트롤에서 파생 되는 <xref:System.Web.UI.HierarchicalDataSourceControl> 기본 ASP.NET 구현 클래스의는 <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스입니다. <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스는 계층적 데이터를 노출 하는 데이터 소스 컨트롤을 정의 하는 데 사용 하지 않고 테이블 형식 또는 목록 스타일 데이터를 웹 서버 컨트롤에서 파생 되는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스 같은 <xref:System.Web.UI.WebControls.TreeView> 컨트롤입니다. 단일 메서드를 정의 하는 인터페이스 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>를 검색 하는 강력한 형식의 <xref:System.Web.UI.HierarchicalDataSourceView> 개체입니다. 이 인터페이스를 구현 하는 데이터 소스 컨트롤 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층 뷰를 지원 합니다. 데이터 원본 뷰 이름이 지정 되지 않은, like <xref:System.Web.UI.DataSourceView> 개체, 하지만 자신의 고유한 계층적 경로로 식별 됩니다는 `viewPath` 에 전달 된 매개 변수는 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> 메서드.  
  
 데이터 소스 제어의 조합으로 생각할 수 있습니다는 <xref:System.Web.UI.IHierarchicalDataSource> 개체와 연결된 된 뷰의 기본 데이터입니다. 연결 된 각 <xref:System.Web.UI.HierarchicalDataSourceView> 개체 표시, 계층 구조로 된 수준에 대 한 데이터 소스 컨트롤의 기능을 정의 하 고, 모든 개체와 마찬가지로 ASP.NET 데이터 원본 뷰, insert, update, delete 및 정렬 등의 작업을 수행 합니다.  
  
 데이터 소스와 같은 계층적 데이터를 노출 하는 컨트롤 <xref:System.Web.UI.WebControls.SiteMapDataSource>에서 파생 되는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다. 다른 데이터 소스와 같은 계층적 데이터와 테이블 형식 데이터를 모두로 데이터를 노출 하는 컨트롤 <xref:System.Web.UI.WebControls.XmlDataSource>에서 파생 된 <xref:System.Web.UI.HierarchicalDataSourceControl> 하지만 구현는 <xref:System.Web.UI.IDataSource> 및 <xref:System.ComponentModel.IListSource> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상을 확장 하는 방법을 보여 줍니다 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스를 구현 하는 <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스를 파일 시스템 정보를 표시 하는 데이터 소스 컨트롤을 만듭니다. `FileSystemDataSource` 클래스의 구현을 제공는 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> 메서드를 지정 된 파일 시스템 경로 대 한 강력한 형식의 뷰 개체를 검색 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IHierarchicalDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 인터페이스가 나타내는 데이터 저장소가 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchicalDataSource.DataSourceChanged> 변경 하는 등의 데이터 소스 컨트롤의 속성이 변경 될 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성은 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 또는 XML 노드가 변경 될 때 발생 하는 기본 데이터 저장소에서 데이터 변경 수행 되는 편집 작업으로는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="public System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="abstract member GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="iHierarchicalDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">검색할 뷰의 계층 경로입니다.</param>
        <summary>지정한 경로에 대한 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 인터페이스의 뷰 도우미 개체를 가져옵니다.</summary>
        <returns>
          <paramref name="viewPath" /> 매개 변수로 식별되는 계층적 수준에서 단일 데이터 뷰를 나타내는 <see cref="T:System.Web.UI.HierarchicalDataSourceView" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스, like는 <xref:System.Web.UI.IDataSource> 인터페이스를 계층적 데이터 소스 컨트롤 사용 하 여 데이터 원본 뷰를 검색 하는 메서드를 정의 합니다. 모든 <xref:System.Web.UI.DataSourceView> 데이터 소스 컨트롤과 연결 된 도우미 개체는 <xref:System.Web.UI.HierarchicalDataSourceView> 개체 데이터 소스는 원본 데이터와 수행할 수 있는 작업을 정의 합니다. 그러나 일반적으로 테이블 형식 데이터를 나타내는 데이터 소스 컨트롤은 하나의 명명 된 뷰 비슷하더라도 계층적 데이터 소스 컨트롤 데이터 소스 컨트롤을 나타내는 계층적 데이터의 각 수준에 대 한 보기를 지원 합니다. 계층적 데이터의 수준을 변수로 전달 된 고유한 계층 경로으로 식별 되는 `viewPath` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> 확장 하는 클래스의 메서드는 <xref:System.Web.UI.HierarchicalDataSourceControl> 검색할 강력한 형식의 클래스 <xref:System.Web.UI.HierarchicalDataSourceView> 고유한 계층 경로 대 한 개체입니다. `FileSystemDataSource` 클래스의 구현 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> 검색 한 `FileSystemDataSourceView` 지정한 파일 시스템 경로 대 한 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceView" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>