<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LiteralControl.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54fd8fce88fd30589c835530914879f4c27e3e193.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fd8fce88fd30589c835530914879f4c27e3e193</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.LiteralControl">
          <source>Represents HTML elements, text, and any other strings in an ASP.NET page that do not require processing on the server.</source>
          <target state="translated">HTML 요소, 텍스트 및 서버에서 처리하지 않아도 되는 ASP.NET 페이지의 다른 모든 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>ASP.NET compiles all HTML elements and readable text that do not require server-side processing into instances of this class.</source>
          <target state="translated">ASP.NET에는 모든 HTML 요소 및이 클래스의 인스턴스를 서버 쪽 처리를 필요로 하지 않는 읽을 수 있는 텍스트 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>For example, an HTML element that does not contain a <ph id="ph1">`runat="server"`</ph> attribute/value pair in its opening tag is compiled into a <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> object.</source>
          <target state="translated">예를 들어 HTML 요소의 포함 하지 않는 <ph id="ph1">`runat="server"`</ph> 특성/값 쌍의 여는 태그에 컴파일될는 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source><ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> objects do not maintain view state, so the contents of a <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> object must be recreated on each request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 개체 상태 보기를 지금 유지 하지 않는의 콘텐츠는 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 각 요청에 개체를 다시 생성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>Literal controls behave as text holders, meaning that you can extract text from the literal control and remove the literal control from the parent server control's <ph id="ph1">&lt;xref:System.Web.UI.ControlCollection&gt;</ph> collection through the parent's <ph id="ph2">&lt;xref:System.Web.UI.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">리터럴 제어 동작, 즉 literal 컨트롤에서 텍스트를 추출 하 고 부모 서버 컨트롤에서 리터럴 컨트롤을 제거할 수 있는 <ph id="ph1">&lt;xref:System.Web.UI.ControlCollection&gt;</ph> 부모의 통해 컬렉션 <ph id="ph2">&lt;xref:System.Web.UI.Control.Controls%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>Therefore, when you develop a custom control derived from the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> class, make sure your control performs any required preprocessing steps itself, rather than using a call to the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType&gt;</ph> method to accomplish them.</source>
          <target state="translated">파생 된 사용자 지정 컨트롤을 개발할 때 따라서는 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 클래스, 컨트롤이 필요한 전처리 단계 자체에 대 한 호출을 사용 하는 대신 수행 되었는지 확인는 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType&gt;</ph> 메서드 이러한 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>Typically, you would do this to improve the response time of your Web application.</source>
          <target state="translated">일반적으로 설정 하려는 웹 응용 프로그램의 응답 시간 개선 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>You can add or remove literal controls from a page or server control programmatically using the <ph id="ph1">&lt;xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method, respectively.</source>
          <target state="translated">추가 하거나 프로그래밍 방식으로 사용 하 여 페이지 또는 서버 컨트롤에서 리터럴 컨트롤을 제거할 수는 <ph id="ph1">&lt;xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>The following code example demonstrates how to use the overloaded <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.%23ctor%2A&gt;</ph> constructor when overriding the <ph id="ph2">&lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 오버 로드 된 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.%23ctor%2A&gt;</ph> 재정의 하는 경우 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.LiteralControl">
          <source>The code adds two new <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> objects and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> Web server control to the current server control's <ph id="ph3">&lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">추가 코드 두 개의 새 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 웹 서버 컨트롤 현재 서버 컨트롤을 <ph id="ph3">&lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.LiteralControl">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> class that contains a literal string to be rendered on the requested ASP.NET page.</source>
          <target state="translated">요청된 ASP.NET 페이지에서 렌더링할 리터럴 문자열을 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.#ctor">
          <source>The following code example creates a class, <ph id="ph1">`CustLiteralControlClass`</ph>, that extends the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 클래스를 만듭니다 <ph id="ph1">`CustLiteralControlClass`</ph>, 확장 하 고 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.#ctor">
          <source>It creates an instance of the class named <ph id="ph1">`myLiteralControlClass1`</ph> by using the constructor that does not specify the text of the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> object.</source>
          <target state="translated">이름의 클래스의 인스턴스를 만들고 <ph id="ph1">`myLiteralControlClass1`</ph> 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.#ctor">
          <source>After the object is created, the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> property is used to set the text that it contains.</source>
          <target state="translated">개체를 만든 후의 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> 속성은 포함 된 텍스트를 설정 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.#ctor(System.String)">
          <source>The text to be rendered on the requested Web page.</source>
          <target state="translated">요청된 웹 페이지에서 렌더링할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> class with the specified text.</source>
          <target state="translated">지정된 텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.#ctor(System.String)">
          <source>The following code example creates two instances of the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는의 두 인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 클래스 사용의 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.#ctor(System.String)">
          <source>The two instances render opening and closing tags for an H3 HTML element, and include the text to display within the H3 tags.</source>
          <target state="translated">두 인스턴스가 H3 HTML 요소의 닫는 태그를 렌더링 하 고 H3 태그 내에 표시할 텍스트를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.CreateControlCollection">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Web.UI.EmptyControlCollection" /&gt;</ph> object for the current instance of the <ph id="ph2">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.EmptyControlCollection" /&gt;</ph> 클래스의 현재 인스턴스에 대한 <ph id="ph2">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.CreateControlCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.EmptyControlCollection" /&gt;</ph> for the current control.</source>
          <target state="translated">현재 컨트롤에 대한 <ph id="ph1">&lt;see cref="T:System.Web.UI.EmptyControlCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.CreateControlCollection">
          <source>By default, <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> objects contain only text and no child server controls.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 텍스트와 자식 서버 컨트롤이 없는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.CreateControlCollection">
          <source>If you want to change this behavior, you must override this method.</source>
          <target state="translated">이 동작을 변경 하려는 경우이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.CreateControlCollection">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.CreateControlCollection%2A&gt;</ph> method to create an instance of the <ph id="ph2">&lt;xref:System.Web.UI.ControlCollection&gt;</ph> class rather than an instance of the <ph id="ph3">&lt;xref:System.Web.UI.EmptyControlCollection&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.CreateControlCollection%2A&gt;</ph> 의 인스턴스를 만드는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.ControlCollection&gt;</ph> 클래스의 인스턴스 대신는 <ph id="ph3">&lt;xref:System.Web.UI.EmptyControlCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> that renders the content of the <ph id="ph2">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> to the requesting client.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>의 내용을 요청한 클라이언트로 렌더링하는 <ph id="ph2">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)">
          <source>Writes the content of the <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> object to the ASP.NET page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 개체의 내용을 ASP.NET 페이지에 씁니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)">
          <source>When you create a custom server control and want to render specific HTML or text to a client, you can improve the performance of the control by passing the value of the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> method rather than calling the <ph id="ph3">&lt;xref:System.Web.UI.LiteralControl.Render%2A&gt;</ph> method.</source>
          <target state="translated">제어 및 클라이언트에 특정 HTML 또는 텍스트를 렌더링 하는 사용자 지정 서버를 만들 때의 값을 전달 하 여 컨트롤의 성능을 개선할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> 호출 하지 않고 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.LiteralControl.Render%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.LiteralControl.Text">
          <source>Gets or sets the text content of the <ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.LiteralControl" /&gt;</ph> 개체의 텍스트 내용을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.LiteralControl.Text">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the text content of the literal control.</source>
          <target state="translated">리터럴 컨트롤의 텍스트 내용을 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.LiteralControl.Text">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.LiteralControl.Text">
          <source>The following code example creates a class, <ph id="ph1">`CustLiteralControlClass`</ph>, that extends the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 클래스를 만듭니다 <ph id="ph1">`CustLiteralControlClass`</ph>, 확장 하 고 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.LiteralControl.Text">
          <source>It creates an instance of the class named <ph id="ph1">`myLiteralControlClass1`</ph> by using the constructor that does not specify the text of the <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> object.</source>
          <target state="translated">이름의 클래스의 인스턴스를 만들고 <ph id="ph1">`myLiteralControlClass1`</ph> 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.LiteralControl&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.LiteralControl.Text">
          <source>After the object is created, the <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> property is used to set the text that it contains.</source>
          <target state="translated">개체를 만든 후의 <ph id="ph1">&lt;xref:System.Web.UI.LiteralControl.Text%2A&gt;</ph> 속성은 포함 된 텍스트를 설정 하는 데 사용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>