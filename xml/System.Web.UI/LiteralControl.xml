<Type Name="LiteralControl" FullName="System.Web.UI.LiteralControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7bf9ffd82c87519839ec5f6af3f44d135607cd7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralControl extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.LiteralControl" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralControl&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralControl : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <TypeSignature Language="F#" Value="type LiteralControl = class&#xA;    inherit Control&#xA;    interface ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="676dd-101">HTML 요소, 텍스트 및 서버에서 처리하지 않아도 되는 ASP.NET 페이지의 다른 모든 문자열을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="676dd-101">Represents HTML elements, text, and any other strings in an ASP.NET page that do not require processing on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676dd-102">ASP.NET에는 모든 HTML 요소 및이 클래스의 인스턴스를 서버 쪽 처리를 필요로 하지 않는 읽을 수 있는 텍스트 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-102">ASP.NET compiles all HTML elements and readable text that do not require server-side processing into instances of this class.</span></span> <span data-ttu-id="676dd-103">예를 들어 HTML 요소의 포함 하지 않는 `runat="server"` 특성/값 쌍의 여는 태그에 컴파일될는 <xref:System.Web.UI.LiteralControl> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-103">For example, an HTML element that does not contain a `runat="server"` attribute/value pair in its opening tag is compiled into a <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="676dd-104"><xref:System.Web.UI.LiteralControl> 개체 상태 보기를 지금 유지 하지 않는의 콘텐츠는 <xref:System.Web.UI.LiteralControl> 각 요청에 개체를 다시 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-104"><xref:System.Web.UI.LiteralControl> objects do not maintain view state, so the contents of a <xref:System.Web.UI.LiteralControl> object must be recreated on each request.</span></span>  
  
 <span data-ttu-id="676dd-105">리터럴 제어 동작, 즉 literal 컨트롤에서 텍스트를 추출 하 고 부모 서버 컨트롤에서 리터럴 컨트롤을 제거할 수 있는 <xref:System.Web.UI.ControlCollection> 부모의 통해 컬렉션 <xref:System.Web.UI.Control.Controls%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-105">Literal controls behave as text holders, meaning that you can extract text from the literal control and remove the literal control from the parent server control's <xref:System.Web.UI.ControlCollection> collection through the parent's <xref:System.Web.UI.Control.Controls%2A> property.</span></span> <span data-ttu-id="676dd-106">파생 된 사용자 지정 컨트롤을 개발할 때 따라서는 <xref:System.Web.UI.LiteralControl> 클래스, 컨트롤이 필요한 전처리 단계 자체에 대 한 호출을 사용 하는 대신 수행 되었는지 확인는 <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> 메서드 이러한 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-106">Therefore, when you develop a custom control derived from the <xref:System.Web.UI.LiteralControl> class, make sure your control performs any required preprocessing steps itself, rather than using a call to the <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> method to accomplish them.</span></span> <span data-ttu-id="676dd-107">일반적으로 설정 하려는 웹 응용 프로그램의 응답 시간 개선 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-107">Typically, you would do this to improve the response time of your Web application.</span></span>  
  
 <span data-ttu-id="676dd-108">추가 하거나 프로그래밍 방식으로 사용 하 여 페이지 또는 서버 컨트롤에서 리터럴 컨트롤을 제거할 수는 <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> 또는 <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="676dd-108">You can add or remove literal controls from a page or server control programmatically using the <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="676dd-109">다음 코드 예제에서는 오버 로드 된 사용 하는 방법을 보여 줍니다 <xref:System.Web.UI.LiteralControl.%23ctor%2A> 재정의 하는 경우 생성자는 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="676dd-109">The following code example demonstrates how to use the overloaded <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructor when overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="676dd-110">추가 코드 두 개의 새 <xref:System.Web.UI.LiteralControl> 개체 및 <xref:System.Web.UI.WebControls.TextBox> 웹 서버 컨트롤 현재 서버 컨트롤을 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-110">The code adds two new <xref:System.Web.UI.LiteralControl> objects and a <xref:System.Web.UI.WebControls.TextBox> Web server control to the current server control's <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="676dd-111">
            <see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-111">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="676dd-112">요청된 ASP.NET 페이지에서 렌더링할 리터럴 문자열을 포함하는 <see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-112">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class that contains a literal string to be rendered on the requested ASP.NET page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="676dd-113">다음 코드 예제에서는 클래스를 만듭니다 `CustLiteralControlClass`, 확장 하 고 <xref:System.Web.UI.LiteralControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-113">The following code example creates a class, `CustLiteralControlClass`, that extends the <xref:System.Web.UI.LiteralControl> class.</span></span> <span data-ttu-id="676dd-114">이름의 클래스의 인스턴스를 만들고 `myLiteralControlClass1` 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <xref:System.Web.UI.LiteralControl> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-114">It creates an instance of the class named `myLiteralControlClass1` by using the constructor that does not specify the text of the <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="676dd-115">개체를 만든 후의 <xref:System.Web.UI.LiteralControl.Text%2A> 속성은 포함 된 텍스트를 설정 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-115">After the object is created, the <xref:System.Web.UI.LiteralControl.Text%2A> property is used to set the text that it contains.</span></span>  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.LiteralControl : string -&gt; System.Web.UI.LiteralControl" Usage="new System.Web.UI.LiteralControl text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="676dd-116">요청된 웹 페이지에서 렌더링할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-116">The text to be rendered on the requested Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676dd-117">지정된 텍스트를 사용하여 <see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-117">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class with the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="676dd-118">다음 코드 예제에서는의 두 인스턴스를 만드는 <xref:System.Web.UI.LiteralControl> 클래스 사용의 <xref:System.Web.UI.LiteralControl.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-118">The following code example creates two instances of the <xref:System.Web.UI.LiteralControl> class using the <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructor.</span></span> <span data-ttu-id="676dd-119">두 인스턴스가 H3 HTML 요소의 닫는 태그를 렌더링 하 고 H3 태그 내에 표시할 텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-119">The two instances render opening and closing tags for an H3 HTML element, and include the text to display within the H3 tags.</span></span>  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.LiteralControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="literalControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="676dd-120">
            <see cref="T:System.Web.UI.EmptyControlCollection" /> 클래스의 현재 인스턴스에 대한 <see cref="T:System.Web.UI.LiteralControl" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-120">Creates an <see cref="T:System.Web.UI.EmptyControlCollection" /> object for the current instance of the <see cref="T:System.Web.UI.LiteralControl" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="676dd-121">현재 컨트롤에 대한 <see cref="T:System.Web.UI.EmptyControlCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-121">The <see cref="T:System.Web.UI.EmptyControlCollection" /> for the current control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676dd-122">기본적으로 <xref:System.Web.UI.LiteralControl> 텍스트와 자식 서버 컨트롤이 없는 개체를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-122">By default, <xref:System.Web.UI.LiteralControl> objects contain only text and no child server controls.</span></span> <span data-ttu-id="676dd-123">이 동작을 변경 하려는 경우이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-123">If you want to change this behavior, you must override this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="676dd-124">다음 코드 예제에서는 재정의 <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> 의 인스턴스를 만드는 메서드는 <xref:System.Web.UI.ControlCollection> 클래스의 인스턴스 대신는 <xref:System.Web.UI.EmptyControlCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-124">The following code example overrides the <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> method to create an instance of the <xref:System.Web.UI.ControlCollection> class rather than an instance of the <xref:System.Web.UI.EmptyControlCollection> class.</span></span>  
  
 [!code-csharp[LiteralControlSample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs#2)]
 [!code-vb[LiteralControlSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="literalControl.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="676dd-125">
            <see cref="T:System.Web.UI.HtmlTextWriter" />의 내용을 요청한 클라이언트로 렌더링하는 <see cref="T:System.Web.UI.LiteralControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-125">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the <see cref="T:System.Web.UI.LiteralControl" /> to the requesting client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676dd-126">
            <see cref="T:System.Web.UI.LiteralControl" /> 개체의 내용을 ASP.NET 페이지에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-126">Writes the content of the <see cref="T:System.Web.UI.LiteralControl" /> object to the ASP.NET page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676dd-127">제어 및 클라이언트에 특정 HTML 또는 텍스트를 렌더링 하는 사용자 지정 서버를 만들 때의 값을 전달 하 여 컨트롤의 성능을 개선할 수 있습니다는 <xref:System.Web.UI.LiteralControl.Text%2A> 속성을는 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 호출 하지 않고 메서드는 <xref:System.Web.UI.LiteralControl.Render%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="676dd-127">When you create a custom server control and want to render specific HTML or text to a client, you can improve the performance of the control by passing the value of the <xref:System.Web.UI.LiteralControl.Text%2A> property to the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method rather than calling the <xref:System.Web.UI.LiteralControl.Render%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.LiteralControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.LiteralControl.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="676dd-128">
            <see cref="T:System.Web.UI.LiteralControl" /> 개체의 텍스트 내용을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-128">Gets or sets the text content of the <see cref="T:System.Web.UI.LiteralControl" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="676dd-129">리터럴 컨트롤의 텍스트 내용을 나타내는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-129">A <see cref="T:System.String" /> that represents the text content of the literal control.</span>
          </span>
          <span data-ttu-id="676dd-130">기본값은 <see cref="F:System.String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676dd-130">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="676dd-131">다음 코드 예제에서는 클래스를 만듭니다 `CustLiteralControlClass`, 확장 하 고 <xref:System.Web.UI.LiteralControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-131">The following code example creates a class, `CustLiteralControlClass`, that extends the <xref:System.Web.UI.LiteralControl> class.</span></span> <span data-ttu-id="676dd-132">이름의 클래스의 인스턴스를 만들고 `myLiteralControlClass1` 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <xref:System.Web.UI.LiteralControl> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-132">It creates an instance of the class named `myLiteralControlClass1` by using the constructor that does not specify the text of the <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="676dd-133">개체를 만든 후의 <xref:System.Web.UI.LiteralControl.Text%2A> 속성은 포함 된 텍스트를 설정 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="676dd-133">After the object is created, the <xref:System.Web.UI.LiteralControl.Text%2A> property is used to set the text that it contains.</span></span>  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>