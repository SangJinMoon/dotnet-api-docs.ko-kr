<Type Name="ScriptManager" FullName="System.Web.UI.ScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95c5186420f4885f7f4fc7e3ffbffd256c17e246" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ScriptManager extends System.Web.UI.Control implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptManager&#xA;Inherits Control&#xA;Implements IPostBackDataHandler, IPostBackEventHandler, IScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptManager : System::Web::UI::Control, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptManager" />
  <TypeSignature Language="F#" Value="type ScriptManager = class&#xA;    inherit Control&#xA;    interface IPostBackDataHandler&#xA;    interface IPostBackEventHandler&#xA;    interface IScriptManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Scripts")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a7c3-101">ASP.NET AJAX 스크립트 라이브러리 및 스크립트 파일, 부분 페이지 렌더링, 웹 및 응용 프로그램 서비스에 대한 클라이언트 프록시 클래스 생성을 관리합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a7c3-101">Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="6a7c3-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="6a7c3-103">소개</span><span class="sxs-lookup"><span data-stu-id="6a7c3-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="6a7c3-104">부분 페이지 렌더링</span><span class="sxs-lookup"><span data-stu-id="6a7c3-104">Partial-Page Rendering</span></span>](#partial_page_rendering)  
  
-   [<span data-ttu-id="6a7c3-105">ScriptManager 컨트롤을 사용 하 여 마스터 페이지, 사용자 정의 컨트롤 및 기타 하위 구성 요소</span><span class="sxs-lookup"><span data-stu-id="6a7c3-105">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  
  
-   [<span data-ttu-id="6a7c3-106">스크립트 관리 및 등록</span><span class="sxs-lookup"><span data-stu-id="6a7c3-106">Script Management and Registration</span></span>](#script_management_and_registration)  
  
-   [<span data-ttu-id="6a7c3-107">웹 서비스 참조</span><span class="sxs-lookup"><span data-stu-id="6a7c3-107">Web Service References</span></span>](#web_service_references)  
  
-   [<span data-ttu-id="6a7c3-108">지역화</span><span class="sxs-lookup"><span data-stu-id="6a7c3-108">Localization</span></span>](#localization)  
  
-   [<span data-ttu-id="6a7c3-109">오류 처리</span><span class="sxs-lookup"><span data-stu-id="6a7c3-109">Error Handling</span></span>](#error_handling)  
  
-   [<span data-ttu-id="6a7c3-110">선언 구문</span><span class="sxs-lookup"><span data-stu-id="6a7c3-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="6a7c3-111">소개</span><span class="sxs-lookup"><span data-stu-id="6a7c3-111">Introduction</span></span>  
 <span data-ttu-id="6a7c3-112"><xref:System.Web.UI.ScriptManager> 컨트롤은 핵심 asp.net에서 Ajax 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-112">The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET.</span></span> <span data-ttu-id="6a7c3-113">컨트롤이는 페이지에 있는 모든 ASP.NET Ajax 리소스를 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-113">The control manages all ASP.NET Ajax resources on a page.</span></span> <span data-ttu-id="6a7c3-114">여기에 브라우저에 Microsoft Ajax Library 스크립트를 다운로드 하 고 부분 페이지 업데이트를 사용 하 여 사용할 수 있는 조정 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-114">This includes downloading Microsoft Ajax Library scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="6a7c3-115">또한는 <xref:System.Web.UI.ScriptManager> 컨트롤을 사용 하면 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-115">In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:</span></span>  
  
-   <span data-ttu-id="6a7c3-116">부분 페이지 업데이트와 호환 되는 스크립트를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-116">Register script that is compatible with partial-page updates.</span></span> <span data-ttu-id="6a7c3-117">스크립트와 핵심 라이브러리 간의 종속성을 관리 하기 위해 등록 하는 모든 스크립트는 Microsoft Ajax Library 스크립트 후 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-117">In order to manage dependencies between your script and the core library, any script that you register is loaded after the Microsoft Ajax Library script.</span></span>  
  
-   <span data-ttu-id="6a7c3-118">지정 임대 해제 여부 또는 디버그 스크립트를 브라우저에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-118">Specify whether release or debug scripts are sent to the browser.</span></span>  
  
-   <span data-ttu-id="6a7c3-119">웹 서비스 메서드를 사용 하 여 웹 서비스를 등록 하 여 스크립트에서 액세스를 제공는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-119">Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="6a7c3-120">이러한 서비스를 등록 하 여 클라이언트 스크립트에서 응용 프로그램 서비스 ASP.NET 인증, 역할 및 프로필에 대 한 액세스를 제공는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-120">Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="6a7c3-121">ECMAScript (JavaScript), 및 브라우저에서 함수의 culture 별 표시를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-121">Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.</span></span>  
  
-   <span data-ttu-id="6a7c3-122">사용 하 여 포함 된 스크립트 파일에 대 한 또는 독립 실행형 스크립트 파일에 대 한 지역화 리소스를 액세스는 <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> 의 속성은 <xref:System.Web.UI.ScriptReference> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-122">Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.</span></span>  
  
-   <span data-ttu-id="6a7c3-123">구현 하는 서버 컨트롤 등록는 <xref:System.Web.UI.IExtenderControl> 또는 <xref:System.Web.UI.IScriptControl> 와 상호 작용의 <xref:System.Web.UI.ScriptManager> 클라이언트 구성 요소 및 동작에 필요한 스크립트 렌더링 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-123">Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.</span></span>  
  
<a name="partial_page_rendering"></a>   
## <a name="partial-page-rendering"></a><span data-ttu-id="6a7c3-124">부분 페이지 렌더링</span><span class="sxs-lookup"><span data-stu-id="6a7c3-124">Partial-Page Rendering</span></span>  
 <span data-ttu-id="6a7c3-125">부분 페이지 렌더링을 지 원하는 ASP.NET 페이지의 기능은 다음과 같은 요인에 의해 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-125">The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:</span></span>  
  
-   <span data-ttu-id="6a7c3-126"><xref:System.Web.UI.ScriptManager> 컨트롤의 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 속성 이어야 `true` (기본값).</span><span class="sxs-lookup"><span data-stu-id="6a7c3-126">The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value).</span></span>  
  
-   <span data-ttu-id="6a7c3-127">하나 이상 있어야 <xref:System.Web.UI.UpdatePanel> 페이지에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-127">There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.</span></span>  
  
-   <span data-ttu-id="6a7c3-128"><xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 속성 이어야 `true` (기본값).</span><span class="sxs-lookup"><span data-stu-id="6a7c3-128">The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value).</span></span> <span data-ttu-id="6a7c3-129">경우는 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 속성이 명시적으로 설정 되지 않은 경우, 해당 값은 브라우저의 기능에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-129">If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.</span></span>  
  
 <span data-ttu-id="6a7c3-130">값을 재정의할 수는 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 도중 이나 페이지의 이전 실행 시 속성 <xref:System.Web.UI.Control.Init> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-130">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="6a7c3-131">페이지의 다음이 속성을 변경 하려고 하면 <xref:System.Web.UI.Control.Init> 이벤트가 발생 했음을 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-131">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 <span data-ttu-id="6a7c3-132">부분 페이지 렌더링에 지원 되는 경우는 <xref:System.Web.UI.ScriptManager> 컨트롤이 비동기 포스트백 및 부분 페이지 업데이트를 활성화 하는 스크립트를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-132">When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates.</span></span> <span data-ttu-id="6a7c3-133">사용 하 여 업데이트 될 페이지의 영역 지정 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-133">The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="6a7c3-134"><xref:System.Web.UI.ScriptManager> 컨트롤 비동기 포스트백을 처리 하 고 업데이트 해야 할 페이지의 영역만 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-134">The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated.</span></span> <span data-ttu-id="6a7c3-135">부분 페이지 렌더링에 대 한 자세한 내용은 참조 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-135">For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span> <span data-ttu-id="6a7c3-136">업데이트 하는 상태에 대 한 자세한 내용은 참조 [UpdatePanel 컨트롤 개요](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-136">For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).</span></span>  
  
<a name="using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components"></a>   
## <a name="using-the-scriptmanager-control-with-master-pages-user-controls-and-other-child-components"></a><span data-ttu-id="6a7c3-137">ScriptManager 컨트롤을 사용 하 여 마스터 페이지, 사용자 정의 컨트롤 및 기타 하위 구성 요소</span><span class="sxs-lookup"><span data-stu-id="6a7c3-137">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>  
 <span data-ttu-id="6a7c3-138">페이지를 한 개만 포함 될 수 <xref:System.Web.UI.ScriptManager> 는 계층 구조에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-138">A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy.</span></span> <span data-ttu-id="6a7c3-139">부모 페이지에 이미 때 서비스 및 중첩 된 페이지, 사용자 정의 컨트롤 또는 구성 요소에 대 한 스크립트를 등록 하는 <xref:System.Web.UI.ScriptManager> 컨트롤을 사용 하 여는 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-139">To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="6a7c3-140">자세한 내용은 참조 [UpdatePanel 컨트롤을 사용 하 여 마스터 페이지](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span><span class="sxs-lookup"><span data-stu-id="6a7c3-140">For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span></span>  
  
<a name="script_management_and_registration"></a>   
## <a name="script-management-and-registration"></a><span data-ttu-id="6a7c3-141">스크립트 관리 및 등록</span><span class="sxs-lookup"><span data-stu-id="6a7c3-141">Script Management and Registration</span></span>  
 <span data-ttu-id="6a7c3-142"><xref:System.Web.UI.ScriptManager> 컨트롤을 사용 하면 페이지의 일부분으로 다음 렌더링 되는 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-142">The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page.</span></span> <span data-ttu-id="6a7c3-143"><xref:System.Web.UI.ScriptManager> 컨트롤 등록 메서드는 다음 세 가지 범주도 나눌 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-143">The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:</span></span>  
  
-   <span data-ttu-id="6a7c3-144">Microsoft Ajax 라이브러리에 스크립트 종속성 유지 관리 됩니다 보장 하는 메서드를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-144">Registration methods that guarantee that script dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
-   <span data-ttu-id="6a7c3-145">Microsoft Ajax 라이브러리에 종속 되지 않은 있지만와 호환 되는 등록 메서드 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-145">Registration methods that are not dependent on the Microsoft Ajax Library, but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
-   <span data-ttu-id="6a7c3-146">등록 메서드 작업을 지 원하는 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-146">Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
 <span data-ttu-id="6a7c3-147">만들고에서 ASP.NET Ajax 스크립트를 사용 하는 방법에 대 한 자세한 내용은 참조 [Microsoft Ajax Library를 사용 하 여 사용자 지정 클라이언트 스크립트를 만드는](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-147">For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).</span></span>  
  
### <a name="registering-script-that-is-dependent-on-the-microsoft-ajax-library"></a><span data-ttu-id="6a7c3-148">Microsoft Ajax 라이브러리에 종속 되어 있는 스크립트를 등록 하는 중</span><span class="sxs-lookup"><span data-stu-id="6a7c3-148">Registering Script That Is Dependent on the Microsoft Ajax Library</span></span>  
 <span data-ttu-id="6a7c3-149">Microsoft Ajax Library에 대 한 모든 종속성을 유지 관리 됩니다 되도록 하는 방식으로 스크립트 파일을 등록 하려면 다음 방법을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-149">You can use the following methods to register script files in a way that guarantees that any dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
|<span data-ttu-id="6a7c3-150">메서드</span><span class="sxs-lookup"><span data-stu-id="6a7c3-150">Method</span></span>|<span data-ttu-id="6a7c3-151">정의</span><span class="sxs-lookup"><span data-stu-id="6a7c3-151">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|<span data-ttu-id="6a7c3-152">구현 하는 서버 컨트롤 등록는 <xref:System.Web.UI.IScriptControl> 클라이언트 개체를 정의 하는 데 사용 되는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-152">Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="6a7c3-153"><xref:System.Web.UI.ScriptManager> 컨트롤이 클라이언트 개체를 지 원하는 스크립트를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-153">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|<span data-ttu-id="6a7c3-154">구현 하는 서버 컨트롤 등록는 <xref:System.Web.UI.IExtenderControl> 클라이언트 개체를 정의 하는 데 사용 되는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-154">Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="6a7c3-155"><xref:System.Web.UI.ScriptManager> 컨트롤이 클라이언트 개체를 지 원하는 스크립트를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-155">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
  
### <a name="registering-partial-page-update-compatible-scripts"></a><span data-ttu-id="6a7c3-156">부분 페이지 업데이트 호환 스크립트를 등록 하는 중</span><span class="sxs-lookup"><span data-stu-id="6a7c3-156">Registering Partial-Page Update Compatible Scripts</span></span>  
 <span data-ttu-id="6a7c3-157">다음 메서드를 사용 하 여 Microsoft Ajax 라이브러리에 종속 되지 않은 있지만와 호환 되는 스크립트 파일을 등록 하려면 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-157">You can use the following methods to register script files that are not dependent on the Microsoft Ajax Library but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="6a7c3-158">유사한 메서드에 해당 하는 이러한 메서드는 <xref:System.Web.UI.ClientScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-158">These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control.</span></span> <span data-ttu-id="6a7c3-159">렌더링 스크립트 내에서 사용 중인 경우는 <xref:System.Web.UI.UpdatePanel> 제어의 메서드를 호출 해야 합니다는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-159">If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
|<span data-ttu-id="6a7c3-160">메서드</span><span class="sxs-lookup"><span data-stu-id="6a7c3-160">Method</span></span>|<span data-ttu-id="6a7c3-161">정의</span><span class="sxs-lookup"><span data-stu-id="6a7c3-161">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|<span data-ttu-id="6a7c3-162">JavaScript 배열에 값을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-162">Adds a value to a JavaScript array.</span></span> <span data-ttu-id="6a7c3-163">배열 존재 하지 않는 경우 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-163">If the array does not exist, it is created.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|<span data-ttu-id="6a7c3-164">렌더링 한 `script` 페이지의 여 다음 요소의 `<form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-164">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="6a7c3-165">스크립트는 문자열 매개 변수로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-165">The script is specified as a string parameter.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|<span data-ttu-id="6a7c3-166">렌더링 한 `script` 페이지의 여 다음 요소의 `<form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-166">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="6a7c3-167">스크립트 콘텐츠를 설정 하 여 지정 된 `src` 특성을 스크립트 파일을 가리키는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-167">The script content is specified by setting the `src` attribute to a URL that points to a script file.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|<span data-ttu-id="6a7c3-168">렌더링 한 `script` 페이지의 여 다음 요소의 `<form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-168">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="6a7c3-169">스크립트 콘텐츠 어셈블리에서 리소스 이름으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-169">The script content is specified with a resource name in an assembly.</span></span> <span data-ttu-id="6a7c3-170">`src` 어셈블리에서 명명된 된 스크립트를 검색 하는 HTTP 처리기를 호출 하 여 URL로 특성은 자동으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-170">The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|<span data-ttu-id="6a7c3-171">사용자 지정 이름/값 특성 쌍 (expando)에 지정 된 컨트롤에 대 한 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-171">Renders a custom name/value attribute pair (an expando) in the markup for a specified control.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|<span data-ttu-id="6a7c3-172">숨겨진된 필드를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-172">Renders a hidden field.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|<span data-ttu-id="6a7c3-173">에 대 한 응답으로 실행 되는 스크립트를 등록 된 `form` 요소의 `submit` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-173">Registers a script that is executed in response to the `form` element's `submit` event.</span></span> <span data-ttu-id="6a7c3-174">`onSubmit` 특성이 지정 된 스크립트를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-174">The `onSubmit` attribute references the specified script.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|<span data-ttu-id="6a7c3-175">시작 스크립트 블록을 페이지의 닫는 직전 렌더링 `</form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-175">Renders a startup script block just before the page's closing `</form>` tag.</span></span> <span data-ttu-id="6a7c3-176">스크립트를 렌더링 하는 문자열 매개 변수로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-176">The script to render is specified as a string parameter.</span></span>|  
  
 <span data-ttu-id="6a7c3-177">메서드를 등록 하면 해당 스크립트에 대 한 형식/키 쌍을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-177">When you register methods, you specify a type/key pair for that script.</span></span> <span data-ttu-id="6a7c3-178">이미 동일한 유형/키 쌍을 사용 하는 스크립트에 등록 하는 경우에 새 스크립트를 등록 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-178">If a script with the same type/key pair is already registered, a new script is not registered.</span></span> <span data-ttu-id="6a7c3-179">마찬가지로, 이미 있는 리소스 형식/이름 쌍과 함께 스크립트를 등록 하는 경우 존재는 `script` 리소스를 참조 하는 요소는 다시 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-179">Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again.</span></span> <span data-ttu-id="6a7c3-180">이전에 등록 된 특성의 expando 특성을 등록 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-180">When you register an expando attribute of a previously registered attribute, an exception is thrown.</span></span> <span data-ttu-id="6a7c3-181">배열 값 중복 등록 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-181">Duplicate registration of array values is allowed.</span></span>  
  
 <span data-ttu-id="6a7c3-182">호출 하는 경우는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 또는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 메서드, 인라인 함수를 실행 하는 스크립트를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-182">When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions.</span></span> <span data-ttu-id="6a7c3-183">이벤트 처리기와 같이 함수 정의 또는 응용 프로그램에 대 한 사용자 지정 클래스 정의 포함 하는 스크립트를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-183">Instead, register script that contains function definitions like event handlers or custom class definitions for your application.</span></span>  
  
### <a name="registration-methods-for-updatepanel-controls"></a><span data-ttu-id="6a7c3-184">UpdatePanel 컨트롤에 대 한 등록 메서드</span><span class="sxs-lookup"><span data-stu-id="6a7c3-184">Registration Methods for UpdatePanel Controls</span></span>  
 <span data-ttu-id="6a7c3-185">다음 메서드를 사용 하 여 사용 하는 경우 부분 페이지 업데이트를 사용자 지정 하려면 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-185">You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
|<span data-ttu-id="6a7c3-186">메서드</span><span class="sxs-lookup"><span data-stu-id="6a7c3-186">Method</span></span>|<span data-ttu-id="6a7c3-187">정의</span><span class="sxs-lookup"><span data-stu-id="6a7c3-187">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|<span data-ttu-id="6a7c3-188">컨트롤을 비동기 포스트백의 트리거로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-188">Registers a control as a trigger for asynchronous postbacks.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|<span data-ttu-id="6a7c3-189">부분 페이지 렌더링 도중 사용자 지정 데이터를 컨트롤로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-189">Sends custom data to controls during partial-page rendering.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|<span data-ttu-id="6a7c3-190">내에 있는 컨트롤에 대 한 dispose 스크립트를 등록 한 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-190">Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-191">스크립트는 <xref:System.Web.UI.UpdatePanel> 컨트롤이 업데이트되거나 삭제될 때 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-191">The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span> <span data-ttu-id="6a7c3-192">Dispose 메서드는 Microsoft Ajax Library의 일부 이며 구성 요소는 더 이상 사용 하는 경우 리소스를 해제 해야 하는 클라이언트 구성 요소에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-192">The dispose method is used for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|<span data-ttu-id="6a7c3-193">컨트롤 전체 포스트백의 트리거로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-193">Registers a control as a trigger for a full postback.</span></span> <span data-ttu-id="6a7c3-194">이 메서드 내에 있는 컨트롤에 사용 되는 <xref:System.Web.UI.UpdatePanel> 비동기 포스트백을 수행 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-194">This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.</span></span>|  
  
<a name="web_service_references"></a>   
## <a name="web-service-references"></a><span data-ttu-id="6a7c3-195">웹 서비스 참조</span><span class="sxs-lookup"><span data-stu-id="6a7c3-195">Web Service References</span></span>  
 <span data-ttu-id="6a7c3-196">만들어 클라이언트 스크립트에서 호출 되는 웹 서비스를 등록할 수 있습니다는 <xref:System.Web.UI.ServiceReference> 개체에 추가 하는 <xref:System.Web.UI.ScriptManager.Services%2A> 의 컬렉션은 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-196">You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="6a7c3-197">각각에 대 한 클라이언트 프록시 개체를 생성 하는 ASP.NET <xref:System.Web.UI.ServiceReference> 개체는 <xref:System.Web.UI.ScriptManager.Services%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-197">ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection.</span></span> <span data-ttu-id="6a7c3-198">프로그래밍 방식으로 추가할 수 있습니다 <xref:System.Web.UI.ServiceReference> 개체는 <xref:System.Web.UI.ScriptManager.Services%2A> 런타임 시 웹 서비스를 등록 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-198">You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.</span></span>  
  
 <span data-ttu-id="6a7c3-199">스크립트에 웹 서비스에 액세스 하는 방법에 대 한 자세한 내용은 참조 [웹 서비스에서 ASP.NET AJAX 클라이언트 스크립트를 노출](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) 및 [ASP.NET ajax에서 클라이언트 스크립트에서 웹 서비스 호출](http://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-199">For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0).</span></span>  
  
<a name="localization"></a>   
## <a name="localization"></a><span data-ttu-id="6a7c3-200">지역화</span><span class="sxs-lookup"><span data-stu-id="6a7c3-200">Localization</span></span>  
 <span data-ttu-id="6a7c3-201"><xref:System.Web.UI.ScriptManager> 컨트롤 어셈블리 또는 독립 실행형 스크립트 파일에 포함 되어 있는 적절 한 지역화 된 스크립트 파일을 가리키는 렌더링된 된 페이지에 대 한 참조를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-201">The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.</span></span>  
  
 <span data-ttu-id="6a7c3-202">경우는 <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> 속성이 `true`, <xref:System.Web.UI.ScriptManager> 컨트롤이 있는 경우 현재 문화권에 대 한 지역화 된 리소스 (예: 지역화 된 문자열)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-202">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist.</span></span> <span data-ttu-id="6a7c3-203"><xref:System.Web.UI.ScriptManager> 컨트롤은 지역화 된 리소스를 사용 하기 위해 다음 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-203">The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:</span></span>  
  
-   <span data-ttu-id="6a7c3-204">**어셈블리에 포함 된 스크립트 파일**합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-204">**Script files that are embedded in an assembly**.</span></span> <span data-ttu-id="6a7c3-205"><xref:System.Web.UI.ScriptManager> 컨트롤이 문화권별 또는 대체 (fallback) 문화권 스크립트 파일을 브라우저로 보낼를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-205">The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser.</span></span> <span data-ttu-id="6a7c3-206">이렇게 하기 위해 문화권별을 사용 하 여 <xref:System.Resources.NeutralResourcesLanguageAttribute> 어셈블리 특성, (있는 경우) 구성 요소의 어셈블리 및 브라우저의 UI culture와 함께 패키지 하는 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-206">It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).</span></span>  
  
-   <span data-ttu-id="6a7c3-207">**독립 실행형 스크립트 파일**합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-207">**Stand-alone script files**.</span></span> <span data-ttu-id="6a7c3-208"><xref:System.Web.UI.ScriptManager> 제어를 사용 하 여 지원 되는 UI 문화권의 목록 정의 <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> 의 속성은 <xref:System.Web.UI.ScriptReference> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-208">The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.</span></span>  
  
-   <span data-ttu-id="6a7c3-209">**디버그 모드에서**합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-209">**In debug mode**.</span></span> <span data-ttu-id="6a7c3-210"><xref:System.Web.UI.ScriptManager> 컨트롤이 디버그 정보를 포함 하는 culture 별 스크립트 파일을 렌더링 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-210">The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information.</span></span> <span data-ttu-id="6a7c3-211">예를 들어, 디버그 모드에서 페이지는 경우 현재 culture로 설정 되어 있으면 컨트롤 파일을 렌더링 스크립트와 같은 이름을 가진 `scriptname`하는데.en-us.resources MX.debug.js, 파일이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-211">For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists.</span></span> <span data-ttu-id="6a7c3-212">적절 한 대체 (fallback) 문화권에 대 한 디버그 파일은 렌더링 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="6a7c3-212">If the file does not exist, the debug file for the appropriate fallback culture is rendered</span></span>  
  
 <span data-ttu-id="6a7c3-213">리소스를 지역화 하는 방법에 대 한 자세한 내용은 참조 [구성 요소 라이브러리 개요에 대 한 지역화 리소스](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-213">For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).</span></span>  
  
<a name="error_handling"></a>   
## <a name="error-handling"></a><span data-ttu-id="6a7c3-214">오류 처리</span><span class="sxs-lookup"><span data-stu-id="6a7c3-214">Error Handling</span></span>  
 <span data-ttu-id="6a7c3-215">비동기 포스트백 도중 페이지 오류가 발생 하는 경우는 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-215">When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised.</span></span> <span data-ttu-id="6a7c3-216">서버의 오류가 클라이언트로 전송 되는 방식에 따라 달라 집니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성에는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 및 Web.config 파일의 사용자 지정 오류 섹션.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-216">The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span> <span data-ttu-id="6a7c3-217">자세한 내용은 참조 [UpdatePanel 컨트롤에 대 한 오류 처리 사용자 지정](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-217">For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="6a7c3-218">선언 구문</span><span class="sxs-lookup"><span data-stu-id="6a7c3-218">Declarative Syntax</span></span>  
  
```  
<asp:ScriptManager  
    AllowCustomErrorsRedirect="True|False"  
    AsyncPostBackErrorMessage="string"  
    AsyncPostBackTimeout="integer"  
    AuthenticationService-Path="uri"  
    EnablePageMethods="True|False"  
    EnablePartialRendering="True|False"  
    EnableScriptGlobalization="True|False"  
    EnableScriptLocalization="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    LoadScriptsBeforeUI="True|False"  
    OnAsyncPostBackError="AsyncPostBackError event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnResolveScriptReference="ResolveScriptReference event handler"  
    OnUnload="Unload event handler"  
    ProfileService-LoadProperties="string"  
    ProfileService-Path="uri"  
    RoleService-LoadRoles="True|False"  
    RoleService-Path="uri"  
    runat="server"  
    ScriptMode="Auto|Inherit|Debug|Release"  
    ScriptPath="string"  
    SkinID="string"  
    SupportsPartialRendering="True|False"  
    Visible="True|False"  
>  
        <AuthenticationService  
            Path="uri"  
        />  
        <ProfileService  
            LoadProperties="string"  
            Path="uri"  
        />  
        <RoleService  
            LoadRoles="True|False"  
            Path="uri"  
        />  
        <Scripts>  
            <asp:ScriptReference  
                Assembly="string"  
                IgnoreScriptPath="True|False"  
                Name="string"  
                NotifyScriptLoaded="True|False"  
                Path="string"  
                ResourceUICultures="string"  
                ScriptMode="Auto|Debug|Inherit|Release"  
            />  
        </Scripts>  
        <Services>  
            <asp:ServiceReference  
                InlineScript="True|False"  
                Path="string"  
            />  
        </Services>  
</asp:ScriptManager>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-219">다음 예제에서는 다양 한 시나리오를 사용 하 여 보여는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-219">The following examples show different scenarios for using the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 <span data-ttu-id="6a7c3-220">**부분 페이지 업데이트를 사용 하도록 설정**</span><span class="sxs-lookup"><span data-stu-id="6a7c3-220">**Enabling Partial-Page Updates**</span></span>  
  
 <span data-ttu-id="6a7c3-221">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ScriptManager> 부분 페이지 업데이트를 사용 하도록 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-221">The following example shows how to use the <xref:System.Web.UI.ScriptManager> control to enable partial-page updates.</span></span> <span data-ttu-id="6a7c3-222">이 예제는 <xref:System.Web.UI.WebControls.Calendar> 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 내부에 있는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-222">In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-223">기본적으로 값은 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 속성은 <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, 및의 값은 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-223">By default, the value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, and the value of the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`.</span></span> <span data-ttu-id="6a7c3-224">따라서 패널의 자식 컨트롤이 비동기 포스트백이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-224">Therefore, child controls of the panel cause an asynchronous postback.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 <span data-ttu-id="6a7c3-225">**부분 페이지 업데이트 오류 처리 및 스크립트를 등록 하는 중**</span><span class="sxs-lookup"><span data-stu-id="6a7c3-225">**Handling Partial-Page Update Errors and Registering Script**</span></span>  
  
 <span data-ttu-id="6a7c3-226">다음 예제에서는 사용자 지정 오류 처리 하는 동안 부분 페이지 업데이트를 제공 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-226">The following example shows how to provide custom error handling during partial-page updates.</span></span> <span data-ttu-id="6a7c3-227">부분 페이지 업데이트 중에 오류가 발생 하는 경우에 기본적으로 JavaScript 메시지 상자가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-227">By default, when an error occurs during partial-page updates, a JavaScript message box is displayed.</span></span> <span data-ttu-id="6a7c3-228">사용자 지정 오류에 대 한 처리기를 제공 하 여 처리를 사용 하는 방법을 보여 주는이 예제는 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트를 설정 하 여는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 이벤트 처리기에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-228">This example demonstrates how to use custom error handling by providing a handler for the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event, and by setting the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property in the event handler.</span></span> <span data-ttu-id="6a7c3-229">설정할 수도 있습니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 부분 페이지 업데이트 중에 오류가 발생 하는 경우 Web.config 파일의 사용자 지정 오류 섹션이 사용 되는 방법을 지정 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-229">You can also set the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property to specify how the custom errors section of the Web.config file is used when an error occurs during partial-page updates.</span></span> <span data-ttu-id="6a7c3-230">이 예제에서는의 기본값은 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-230">In this example, the default value of the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property is used.</span></span> <span data-ttu-id="6a7c3-231">이 Web.config 파일에 요소가 들어 있으면 해당 요소는 결정 오류가 표시 되는 방식을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-231">This means that if the Web.config file contains a  element, that element determines how errors are displayed.</span></span> <span data-ttu-id="6a7c3-232">자세한 내용은 참조 [customErrors 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-232">For more information, see [customErrors Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/VB/default.aspx#1)]  
  
 <span data-ttu-id="6a7c3-233">**브라우저에 표시 되는 시간과 날짜를 전역화**</span><span class="sxs-lookup"><span data-stu-id="6a7c3-233">**Globalizing the Date and Time That Are Displayed in the Browser**</span></span>  
  
 <span data-ttu-id="6a7c3-234">설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> 속성이 클라이언트 스크립트는 브라우저에 culture 관련 날짜 및 시간을 표시할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-234">The following example shows how to set the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property so that client script can display a culture-specific date and time in the browser.</span></span> <span data-ttu-id="6a7c3-235">예제에서는 `Culture` 지시문의 특성이로 설정 된 `auto`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-235">In the example, the `Culture` attribute of the  directive is set to `auto`.</span></span> <span data-ttu-id="6a7c3-236">결과적으로, 현재 브라우저 설정에 지정 된 첫 번째 언어 문화권 및 UI 문화권의 페이지에 대 한 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-236">As a result, the first language that is specified in the current browser settings determines the culture and UI culture for the page.</span></span> <span data-ttu-id="6a7c3-237">자세한 내용은 참조 [하는 방법: ASP.NET 웹 페이지 전역화를 위해 Culture 및 UL Culture 설정](http://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-237">For more information, see [How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization](http://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ClientScriptManager" />
    <altmember cref="T:System.Web.UI.ScriptMode" />
    <altmember cref="T:System.Web.UI.ScriptReference" />
    <altmember cref="T:System.Web.UI.ServiceReference" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-238">
            <see cref="T:System.Web.UI.ScriptManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-238">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-239">이 생성자에서 사용 되는 내부 필드는 <xref:System.Web.UI.ScriptManager> 페이지, 제어 및 배포 정보를 추적 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-239">This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHistoryPoint">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-240">기록점을 만들어 브라우저의 기록 스택에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-240">Creates a history point and adds it to the browser's history stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-241">이러한 메서드 오버 로드를 사용 하는 브라우저에서 서버 상태 및 필요에 따라 기록 항목의 제목을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-241">These method overloads enable you to define server state, and optionally the title of the history entry in the browser.</span></span> <span data-ttu-id="6a7c3-242">기록 점을 만들 때 serialize 및 암호화 된 데이터는 웹 페이지의 URL에 추가 되 고 브라우저의 기록 스택에 항목이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-242">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="6a7c3-243">상태 데이터를 사용 하 여 모든 후속 서버 탐색 이벤트가 발생할 때 페이지를 다시 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-243">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="6a7c3-244">자세한 내용은 참조 [브라우저 기록 서버를 사용 하 여 컨트롤 관리](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-244">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(class System.Collections.Specialized.NameValueCollection state, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (state As NameValueCollection, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::Collections::Specialized::NameValueCollection ^ state, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : System.Collections.Specialized.NameValueCollection * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (state, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="6a7c3-245">상태에 대한 데이터를 포함하는 키/값 쌍의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-245">A collection of key/value pairs that contain the data for the state.</span>
          </span>
        </param>
        <param name="title">
          <span data-ttu-id="6a7c3-246">브라우저의 기록 스택에 이 상태의 제목으로 추가될 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-246">The text that will be added to the browser's history stack as the title for this state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-247">지정된 상태 데이터 컬렉션 및 상태 제목을 사용하여 기록점을 만들고 브라우저의 기록 스택에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-247">Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-248">이 메서드를 사용 하 여 상태 데이터에 대해 둘 이상의 키/값 쌍을 저장 하려는 경우 기록 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-248">Use this method to create a history point when you want to save more than one key/value pair for the state data.</span></span> <span data-ttu-id="6a7c3-249">기록 점을 만들 때 serialize 및 암호화 된 데이터는 웹 페이지의 URL에 추가 되 고 브라우저의 기록 스택에 항목이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-249">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="6a7c3-250">경우는 `title` 매개 변수는 `null`, 웹 페이지의 제목 기록 스택에 상태 항목의 제목으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-250">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="6a7c3-251">상태 데이터를 사용 하 여 모든 후속 서버 탐색 이벤트가 발생할 때 페이지를 다시 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-251">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="6a7c3-252">자세한 내용은 참조 [브라우저 기록 서버를 사용 하 여 컨트롤 관리](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-252">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6a7c3-253">웹 페이지의 상태를 식별하는 키/값 쌍의 키 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-253">The key part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6a7c3-254">웹 페이지의 상태를 식별하는 키/값 쌍의 값 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-254">The value part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-255">지정된 상태 키 및 상태 값을 사용하여 기록점을 만들고 브라우저의 기록 스택에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-255">Creates a history point and adds it to the browser's history stack, using the specified state key and state value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-256">이 메서드를 사용 하 여 상태를 식별 하는 값을 저장 하려는 경우 기록 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-256">Use this method to create a history point when you only want to save a value to identify the state.</span></span> <span data-ttu-id="6a7c3-257">기록 점을 만들 때 serialize 및 암호화 된 데이터는 웹 페이지의 URL에 추가 되 고 브라우저의 기록 스택에 항목이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-257">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="6a7c3-258">웹 페이지의 제목이 기록 스택에 상태 항목의 제목으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-258">The title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="6a7c3-259">상태 데이터를 사용 하 여 모든 후속 서버 탐색 이벤트가 발생할 때 페이지를 다시 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-259">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="6a7c3-260">자세한 내용은 참조 [브라우저 기록 서버를 사용 하 여 컨트롤 관리](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-260">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6a7c3-261">웹 페이지의 상태를 식별하는 키/값 쌍의 키 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-261">The key part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6a7c3-262">웹 페이지의 상태를 식별하는 키/값 쌍의 값 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-262">The value part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="title">
          <span data-ttu-id="6a7c3-263">브라우저의 기록 스택에 이 상태의 제목으로 추가될 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-263">The text that will be added to the browser's history stack as the title for this state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-264">지정된 상태 키, 상태 값 및 상태 제목을 사용하여 기록점을 만들고 브라우저의 기록 스택에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-264">Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-265">상태 및 상태에 대 한 title 식별 하는 값을 저장 하려는 경우 기록 점을 만들려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-265">Use this method to create a history point when you want to save a value to identify the state and a title for the state.</span></span> <span data-ttu-id="6a7c3-266">기록 점을 만들 때 serialize 및 암호화 된 데이터는 웹 페이지의 URL에 추가 되 고 브라우저의 기록 스택에 항목이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-266">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="6a7c3-267">경우는 `title` 매개 변수는 `null`, 웹 페이지의 제목 기록 스택에 상태 항목의 제목으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-267">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="6a7c3-268">상태 데이터를 사용 하 여 모든 후속 서버 탐색 이벤트가 발생할 때 페이지를 다시 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-268">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="6a7c3-269">자세한 내용은 참조 [브라우저 기록 서버를 사용 하 여 컨트롤 관리](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-269">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AjaxFrameworkAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AjaxFrameworkAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ AjaxFrameworkAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkAssembly : System.Reflection.Assembly" Usage="System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-270">페이지의 구성 요소에서 사용하는 AJAX 프레임워크 어셈블리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-270">Gets the Ajax framework assembly that components on the page use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-271">AJAX 프레임워크 어셈블리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-271">The Ajax framework assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AjaxFrameworkMode As AjaxFrameworkMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AjaxFrameworkMode AjaxFrameworkMode { System::Web::UI::AjaxFrameworkMode get(); void set(System::Web::UI::AjaxFrameworkMode value); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkMode : System.Web.UI.AjaxFrameworkMode with get, set" Usage="System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AjaxFrameworkMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-272">클라이언트에 Microsoft Ajax 클라이언트 라이브러리의 클라이언트 스크립트를 포함하는 방법을 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-272">Gets or sets a value that specifies how client scripts of the Microsoft Ajax client library will be included on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-273">
            <see cref="T:System.Web.UI.AjaxFrameworkMode" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-273">An <see cref="T:System.Web.UI.AjaxFrameworkMode" /> enumeration value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-274">사용 하 여 <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> 속성을 사용 하는 모든 Microsoft Ajax 스크립트 파일을 모든 Microsoft Ajax 스크립트 파일을 사용 하지 않도록 설정 하거나 개별 스크립트 파일을 명시적으로 포함 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-274">Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all Microsoft Ajax script files, to disable all Microsoft Ajax script files, or to explicitly include individual script files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-275">설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> 속성을 `Explicit` 스크립트를 명시적으로 지정할 수 있음을 표시 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-275">The following example shows how to set the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to `Explicit` in order to indicate that scripts can be explicitly specified.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" AjaxFrameworkMode="Explicit" runat="server">   
<Scripts>   
    <asp:ScriptReference Name="MicrosoftAjaxCore.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxComponentModel.js" />    
    <asp:ScriptReference Name="MicrosoftAjaxSerialization.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxNetwork.js" />       
</Scripts>   
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AjaxFrameworkMode" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomErrorsRedirect">
      <MemberSignature Language="C#" Value="public bool AllowCustomErrorsRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomErrorsRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomErrorsRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomErrorsRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomErrorsRedirect : bool with get, set" Usage="System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-276">비동기 포스트백 도중 오류가 발생할 경우 Web.config 파일의 사용자 지정 오류 섹션이 사용되는지 여부를 결정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-276">Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-277">비동기 포스트백 도중 발생하는 오류 동작을 결정하는 데 Web.config 파일의 사용자 지정 오류 설정이 사용되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-277">
              <see langword="true" /> if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-278">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-278">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-279"><xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트는 비동기 포스트백 도중 페이지 오류가 있을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-279">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="6a7c3-280">클라이언트에 서버의 오류 전송 방법에 따라 달라 집니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성에는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 및 Web.config 파일의 사용자 지정 오류 섹션.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-280">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AsyncPostBackError As EventHandler(Of AsyncPostBackErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::AsyncPostBackErrorEventArgs ^&gt; ^ AsyncPostBackError;" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackError : EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " Usage="member this.AsyncPostBackError : System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-281">비동기 포스트백 도중 페이지 오류가 있는 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-281">Occurs when there is a page error during an asynchronous postback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-282"><xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트는 비동기 포스트백 도중 페이지 오류가 있을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-282">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="6a7c3-283">클라이언트에 서버의 오류 전송 방법에 따라 달라 집니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성에는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 및 Web.config 파일의 사용자 지정 오류 섹션.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-283">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-284">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> 설정 하는 이벤트는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 (클라이언트에 전송)이 표시 된 서버 예외 오류 메시지에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-284">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackErrorMessage">
      <MemberSignature Language="C#" Value="public string AsyncPostBackErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackErrorMessage : string with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-285">비동기 포스트백 도중 처리되지 않은 서버 예외가 발생할 경우 클라이언트에 전송되는 오류 메시지를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-285">Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-286">오류 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-286">The error message.</span>
          </span>
          <span data-ttu-id="6a7c3-287">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-287">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-288"><xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트는 비동기 포스트백 도중 페이지 오류가 있을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-288">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="6a7c3-289">클라이언트에 서버의 오류 전송 방법에 따라 달라 집니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성에는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 및 Web.config 파일의 사용자 지정 오류 섹션.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-289">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-290">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> 설정 하는 이벤트는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 (클라이언트에 전송)이 표시 된 서버 예외 오류 메시지에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-290">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackSourceElementID">
      <MemberSignature Language="C#" Value="public string AsyncPostBackSourceElementID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackSourceElementID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncPostBackSourceElementID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackSourceElementID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackSourceElementID : string" Usage="System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.AsyncPostBackSourceElementID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-291">비동기 포스트백을 발생시킨 컨트롤의 고유 ID를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-291">Gets the unique ID of the control that caused the asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-292">컨트롤에 ID가 지정되어 있으면 컨트롤의 고유 ID이고, 그러지 않으면 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-292">The unique ID of a control, if the control has an ID; otherwise, an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-293"><xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> 속성에서 다음 중 하나일 수 있는 비동기 포스트백을 발생 하는 컨트롤 ID의 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-293">The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:</span></span>  
  
-   <span data-ttu-id="6a7c3-294">내에 있는 컨트롤의 포스트백은 <xref:System.Web.UI.UpdatePanel> 컨트롤 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 속성이 `true` (기본값).</span><span class="sxs-lookup"><span data-stu-id="6a7c3-294">A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default).</span></span>  
  
-   <span data-ttu-id="6a7c3-295">에 대 한 트리거에 있는 컨트롤의 포스트백은 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-295">A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
-   <span data-ttu-id="6a7c3-296">호출 하 여 등록 된 컨트롤의 포스트백은 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 의 메서드는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-296">A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackTimeout">
      <MemberSignature Language="C#" Value="public int AsyncPostBackTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AsyncPostBackTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AsyncPostBackTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackTimeout : int with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(90)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-297">응답을 받지 못한 경우 비동기 포스트백 제한 시간이 초과되기 전까지의 시간(초)을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-297">Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-298">제한 시간(초)을 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-298">An integer that represents the time-out in seconds.</span>
          </span>
          <span data-ttu-id="6a7c3-299">기본값은 90 초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-299">The default value is 90 seconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationService">
      <MemberSignature Language="C#" Value="public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AuthenticationServiceManager AuthenticationService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationService As AuthenticationServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AuthenticationServiceManager ^ AuthenticationService { System::Web::UI::AuthenticationServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationService : System.Web.UI.AuthenticationServiceManager" Usage="System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AuthenticationServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-300">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스와 관련된 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-300">Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-301">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 대한 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-301">The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-302"><xref:System.Web.UI.AuthenticationServiceManager> 이 속성에서 반환 되는 개체의 페이지에 등록 된 인증 서비스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-302">The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page.</span></span> <span data-ttu-id="6a7c3-303">인증 서비스에 정의할 수 있습니다는 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-303">The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="6a7c3-304">ASP.NET 인증 서비스를 사용 하거나 사용자 지정 인증 서비스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-304">You can use the ASP.NET authentication service or use a custom authentication service.</span></span> <span data-ttu-id="6a7c3-305">사용자 지정 서비스를 포함 하 여 태그에 추가할 수 있습니다는 `AuthenticationService` 요소 안에 `asp:ScriptManager` 페이지에서 다음 예제와 같이 요소.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-305">You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="6a7c3-306">또한 프로그래밍 방식으로 구성할 수 있습니다는 <xref:System.Web.UI.AuthenticationServiceManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-306">You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object.</span></span> <span data-ttu-id="6a7c3-307">서비스에 등록 된는 <xref:System.Web.UI.ScriptManager> 페이지의 컨트롤 <xref:System.Web.UI.Control.PreRender> 수명 주기 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-307">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientNavigateHandler">
      <MemberSignature Language="C#" Value="public string ClientNavigateHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientNavigateHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientNavigateHandler As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientNavigateHandler { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientNavigateHandler : string with get, set" Usage="System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-308">클라이언트에서 [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) 이벤트를 처리하는 메서드의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-308">Gets or sets the name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-309">[Sys.Application.navigate]를 처리 하는 메서드 이름 (http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) 클라이언트에는 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-309">The name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompositeScriptReference CompositeScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CompositeScriptReference CompositeScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.CompositeScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeScript As CompositeScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompositeScriptReference ^ CompositeScript { System::Web::UI::CompositeScriptReference ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeScript : System.Web.UI.CompositeScriptReference" Usage="System.Web.UI.ScriptManager.CompositeScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompositeScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-310">웹 페이지를 지원하는 복합 스크립트에 대한 참조를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-310">Gets a reference to the composite script that supports the Web page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-311">복합 스크립트에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-311">A reference to the composite script.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-312">자세한 내용은 참조 [복합 스크립트에 결합 클라이언트 스크립트](http://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-312">For more information, see [Combining Client Scripts into a Composite Script](http://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPageUrl">
      <MemberSignature Language="C#" Value="public virtual string EmptyPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPageUrl : string with get, set" Usage="System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-313">빈 웹 페이지에 대한 URL을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-313">Gets or sets a URL to a blank Web page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-314">대상 웹 페이지가 비어 있는 경우 사용할 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-314">The URL to use if the target Web page is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-315"><xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> Ajax 브라우저 기록 속성을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-315">The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdn">
      <MemberSignature Language="C#" Value="public bool EnableCdn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdn" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdn : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-316">현재 페이지가 CDN(Content Delivery Network) 경로에서 클라이언트 스크립트 참조를 로드하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-316">Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-317">CDN 경로에서 클라이언트 스크립트 참조가 로드되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-317">
              <see langword="true" /> if client script references are loaded from CDN paths, otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-318">이 속성을 설정 하지 마십시오 `true` 설정 하는 경우 <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> 를 `true` 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-318">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdnFallback">
      <MemberSignature Language="C#" Value="public bool EnableCdnFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdnFallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdnFallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdnFallback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdnFallback : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-319">CDN(Content Delivery Network)을 사용할 수 없는 경우에 로드할 스크립트의 로컬 복사본을 사용하도록 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-319">Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-320">대체 CDN 값을 사용할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-320">
              <see langword="true" /> if the fallback CDN value is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHistory">
      <MemberSignature Language="C#" Value="public bool EnableHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHistory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHistory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHistory : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableHistory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-321">웹 페이지에서 기록점 관리를 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-321">Gets or sets a value that indicates whether the Web page supports history point management.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-322">웹 페이지가 기록점을 브라우저의 기록 스택에 추가하는 기능을 지원하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-322">
              <see langword="true" /> if the Web page supports adding history points to the browser's history stack; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-323">사용 하 여 <xref:System.Web.UI.ScriptManager.EnableHistory%2A> 속성을 사용 하는 웹 페이지의 기록 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-323">Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePageMethods">
      <MemberSignature Language="C#" Value="public bool EnablePageMethods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePageMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePageMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePageMethods { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePageMethods : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-324">ASP.NET 페이지의 공용 정적 페이지 메서드를 클라이언트 스크립트에서 호출할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-324">Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-325">ASP.NET 페이지의 정적 페이지 메서드를 웹 메서드 같은 클라이언트 스크립트에서 호출할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-325">
              <see langword="true" /> if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-326">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-326">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-327">ASP.NET 페이지에 정적 페이지 메서드를 추가할 수 있으며 웹 메서드로 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-327">You can add static page methods to an ASP.NET page and mark them as Web methods.</span></span> <span data-ttu-id="6a7c3-328">다음 경우 별도.asmx 파일을 만들지 않고 웹 서비스의 일부인 것 처럼 이러한 메서드 스크립트에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-328">You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file.</span></span> <span data-ttu-id="6a7c3-329">가져오기 페이지에 웹 메서드를 만들려면는 <xref:System.Web.Services> 네임 스페이스 추가 <xref:System.Web.Services.WebMethodAttribute> 특성을 노출 하려는 하는 각 정적 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-329">To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose.</span></span> <span data-ttu-id="6a7c3-330">메서드는 공용 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-330">The methods must be marked public.</span></span>  
  
 <span data-ttu-id="6a7c3-331">자세한 내용은 참조 [웹 서비스에서 ASP.NET AJAX 클라이언트 스크립트를 노출](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-331">For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePartialRendering">
      <MemberSignature Language="C#" Value="public bool EnablePartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-332">페이지의 부분 렌더링을 활성화한 다음 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤을 사용하여 페이지의 영역을 개별적으로 업데이트할 수 있도록 하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-332">Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <see cref="T:System.Web.UI.UpdatePanel" /> controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-333">부분 렌더링이 활성화되어 전체 페이지 업데이트가 발생하지 않으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-333">
              <see langword="true" /> if partial rendering is enabled and full-page updates are suppressed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-334">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-334">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-335">경우에는 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 속성은 `true`, 부분 페이지 렌더링 발생 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-335">Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur.</span></span> <span data-ttu-id="6a7c3-336">브라우저 부분 페이지 렌더링을 지원 하지 않을 수 또는 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 속성이 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-336">The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="6a7c3-337">값을 재정의할 수는 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 도중 이나 페이지의 이전 실행 시 속성 <xref:System.Web.UI.Control.Init> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-337">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="6a7c3-338">페이지의 다음이 속성을 변경 하려고 하면 <xref:System.Web.UI.Control.Init> 이벤트가 발생 했음을 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-338">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-339">페이지의 <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 이벤트가 발생한 후에 <see cref="E:System.Web.UI.Control.Init" /> 속성이 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-339">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is set after the page's <see cref="E:System.Web.UI.Control.Init" /> event occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.UpdatePanel" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="EnableScriptGlobalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptGlobalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptGlobalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptGlobalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptGlobalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptGlobalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-340">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤이 문화권별 정보의 구문 분석 및 형식 지정을 지원하는 스크립트를 렌더링하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-340">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders script that supports parsing and formatting of culture-specific information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-341">문화권별 정보를 표시할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-341">
              <see langword="true" /> if culture-specific information can be displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-342">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-342">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-343">경우는 <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> 속성이로 설정 되어 `true`, 메서드와 같은 세계화 된 ECMAScript (JavaScript) 함수 문화권 관련 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-343">When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information.</span></span> <span data-ttu-id="6a7c3-344">브라우저에서 서버 코드에서 또는 웹 사이트의 구성 파일에서 culture는 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-344">The culture can be set in the browser, in server code, or in the Web site's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableScriptLocalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptLocalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptLocalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptLocalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptLocalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptLocalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-345">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤이 지역화된 버전의 스크립트 파일을 렌더링하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-345">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders localized versions of script files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-346">지역화된 스크립트 파일이 렌더링되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-346">
              <see langword="true" /> if localized script files will be rendered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-347">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-347">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-348">경우는 <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> 속성이 `true`, <xref:System.Web.UI.ScriptManager> 개체가 있는 경우 현재 문화권에 대 한 스크립트 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-348">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist.</span></span> <span data-ttu-id="6a7c3-349">예를 들어 페이지 CustomScript.js 라는 스크립트 파일을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-349">For example, a page might specify a script file that is named CustomScript.js.</span></span> <span data-ttu-id="6a7c3-350">Fr CA에 설정 된 경우는 <xref:System.Web.UI.ScriptManager> 개체는 fr-ca 스크립트 파일을 검색 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-350">If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7c3-351">스크립트 파일을 두 번 렌더링 되지 않도록 하려면는 <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> 비동기 포스트백 도중 속성을 수정 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-351">To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSecureHistoryState">
      <MemberSignature Language="C#" Value="public bool EnableSecureHistoryState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSecureHistoryState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSecureHistoryState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSecureHistoryState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSecureHistoryState : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-352">기록 상태 문자열을 암호화할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-352">Gets or sets a value that indicates whether to encrypt the history state string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-353">기록 상태 문자열을 암호화해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-353">
              <see langword="true" /> if the history state string should be encrypted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-354">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-354">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="6a7c3-355">이 속성은 ***되지*** 로 설정 `false` 프로덕션 웹 사이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-355">This property should ***never*** be set to `false` on a production web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ScriptManager GetCurrent(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ScriptManager ^ GetCurrent(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Web.UI.Page -&gt; System.Web.UI.ScriptManager" Usage="System.Web.UI.ScriptManager.GetCurrent page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-356">
            <see cref="T:System.Web.UI.ScriptManager" />를 검색할 페이지 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-356">The page instance to retrieve the <see cref="T:System.Web.UI.ScriptManager" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-357">지정된 <see cref="T:System.Web.UI.ScriptManager" /> 개체의 <see cref="T:System.Web.UI.Page" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-357">Gets the <see cref="T:System.Web.UI.ScriptManager" /> instance for a given <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-358">선택한 <see cref="T:System.Web.UI.Page" /> 개체의 현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스이거나, 인스턴스가 정의되지 않은 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-358">The current <see cref="T:System.Web.UI.ScriptManager" /> instance for the selected <see cref="T:System.Web.UI.Page" /> object, or <see langword="null" /> if no instance is defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-359">확인 하려면이 정적 메서드를 사용 하 여 여부는 <xref:System.Web.UI.ScriptManager> 컨트롤은 페이지에서 또는의 메서드와 속성에 액세스 하는 <xref:System.Web.UI.ScriptManager> 때 알 수 없는 ID 제어</span><span class="sxs-lookup"><span data-stu-id="6a7c3-359">Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-360">
            <paramref name="page" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-360">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredArrayDeclarations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredArrayDeclarations () As ReadOnlyCollection(Of RegisteredArrayDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredArrayDeclaration ^&gt; ^ GetRegisteredArrayDeclarations();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredArrayDeclarations : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" Usage="scriptManager.GetRegisteredArrayDeclarations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-361">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 ECMAScript(JavaScript) 배열 선언의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-361">Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-362">배열 선언이 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-362">A generic collection that contains the array declarations.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterArrayDeclaration" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredClientScriptBlocks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredClientScriptBlocks () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredClientScriptBlocks();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredClientScriptBlocks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredClientScriptBlocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-363">이전에 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에 등록된 클라이언트 스크립트 블록의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-363">Retrieves a read-only collection of client script blocks that were previously registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-364">클라이언트 스크립트 블록이 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-364">A generic collection that contains client script blocks.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-365">등록 된 클라이언트 스크립트 블록의 <xref:System.Web.UI.ScriptManager> 내에 있는 컨트롤과 함께 사용 하기 위해 컨트롤은 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-365">Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDisposeScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredDisposeScripts () As ReadOnlyCollection(Of RegisteredDisposeScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredDisposeScript ^&gt; ^ GetRegisteredDisposeScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredDisposeScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" Usage="scriptManager.GetRegisteredDisposeScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-366">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 <see langword="dispose" /> 스크립트의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-366">Retrieves a read-only collection of <see langword="dispose" /> scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-367">
            <see langword="dispose" /> 스크립트가 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-367">A generic collection that contains <see langword="dispose" /> scripts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-368">A `dispose` 스크립트를 실행 하는 경우는 <xref:System.Web.UI.UpdatePanel> 컨트롤이 업데이트 되거나 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-368">A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredExpandoAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredExpandoAttributes () As ReadOnlyCollection(Of RegisteredExpandoAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredExpandoAttribute ^&gt; ^ GetRegisteredExpandoAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredExpandoAttributes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" Usage="scriptManager.GetRegisteredExpandoAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-369">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 사용자 지정(expando) 특성의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-369">Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-370">사용자 지정 특성이 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-370">A generic collection that contains custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-371">사용자 지정 특성은 읽고 클라이언트 스크립트에 의해 설정 될 수 있는 이름/값 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-371">A custom attribute is a name/value pair that can be read and set by client script.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.RegisteredExpandoAttribute>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredHiddenFields">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredHiddenFields () As ReadOnlyCollection(Of RegisteredHiddenField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredHiddenField ^&gt; ^ GetRegisteredHiddenFields();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredHiddenFields : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" Usage="scriptManager.GetRegisteredHiddenFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-372">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 숨겨진 필드의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-372">Retrieves a read-only collection of hidden fields that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-373">숨겨진 필드가 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-373">A generic collection that contains hidden fields.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.RegisteredHiddenField" />
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterHiddenField" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredOnSubmitStatements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredOnSubmitStatements () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredOnSubmitStatements();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredOnSubmitStatements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredOnSubmitStatements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-374">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 <see langword="onsubmit" /> 문의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-374">Retrieves a read-only collection of <see langword="onsubmit" /> statements that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-375">
            <see langword="onsubmit" /> 문이 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-375">A generic collection that contains <see langword="onsubmit" /> statements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-376">`onsubmit` 문의 폼이 전송 될 때 실행 되는 ECMAScript (JavaScript) 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-376">An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredStartupScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredStartupScripts () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredStartupScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredStartupScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredStartupScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-377">이전에 <see cref="T:System.Web.UI.Page" /> 개체에 등록된 시작 스크립트의 읽기 전용 컬렉션을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-377">Retrieves a read-only collection of startup scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-378">시작 스크립트가 들어 있는 제네릭 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-378">A generic collection that contains startup scripts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-379">시작 스크립트는 컨트롤을 시작할 때 실행 되는 컨트롤에 연관 된 클라이언트 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-379">A startup script is client script that is associated with a control that executes when the control is started.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ScriptManager.GetRegisteredStartupScripts%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateString">
      <MemberSignature Language="C#" Value="public string GetStateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetStateString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetStateString();" />
      <MemberSignature Language="F#" Value="member this.GetStateString : unit -&gt; string" Usage="scriptManager.GetStateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-380">웹 페이지의 상태를 나타내는 키/값 쌍을 포함하는 문자열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-380">Retrieves a string that contains key/value pairs that represent the state of the Web page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-381">웹 페이지의 상태를 나타내는 키/값 쌍을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-381">A string containing the key/value pairs that represent the state of the Web page.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-382">디버그 버전의 클라이언트 스크립트 라이브러리가 렌더링되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-382">Gets a value that indicates whether the debug versions of client script libraries will be rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-383">현재 요청이 디버그 모드에서 실행되고 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-383">
              <see langword="true" /> if the current request is executing in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-384"><xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> 속성에서 반환 `false` 다음 조건 중 하나라도 그렇습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-384">The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="6a7c3-385">구성 파일의 요소에는 `retail` 특성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-385">In the  element of the configuration file, the `retail` attribute is set to `true`.</span></span> <span data-ttu-id="6a7c3-386">이 다른 모든 설정을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-386">This overrides all other settings.</span></span>  
  
-   <span data-ttu-id="6a7c3-387"><xref:System.Web.UI.ScriptManager.ScriptMode%2A> 속성이 `Auto` 또는 `Inherit`, 디버깅에 사용 되지 않습니다는 `compilation` 응용 프로그램 루트 Web.config 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-387">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file.</span></span>  
  
-   <span data-ttu-id="6a7c3-388"><xref:System.Web.UI.ScriptManager.ScriptMode%2A> 속성은 `Release`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-388">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6a7c3-389">`debug` 지시문의 특성 Ajax 사용 ASP.NET 응용 프로그램에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-389">The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="6a7c3-390"><xref:System.Web.UI.ScriptManager> 컨트롤 Web.config 파일 및 설정에 대해서만 사용 하 여 해당 <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> 및 <xref:System.Web.UI.ScriptManager.ScriptMode%2A> 디버그 스크립트를 렌더링할지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-390">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="6a7c3-391">자세한 내용은 참조 [디버깅 및 추적 Ajax 응용 프로그램 개요](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-391">For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.IsDebuggingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInAsyncPostBack">
      <MemberSignature Language="C#" Value="public bool IsInAsyncPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInAsyncPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInAsyncPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInAsyncPostBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInAsyncPostBack : bool" Usage="System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.IsInAsyncPostBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-392">현재 포스트백이 부분 렌더링 모드에서 실행되고 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-392">Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-393">현재 포스트백이 부분 렌더링 모드에서 실행되고 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-393">
              <see langword="true" /> if the current postback is executing in partial-rendering mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-394">사용 하 여는 <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> 함께에서 속성은 <xref:System.Web.UI.Page.IsPostBack%2A> 속성에서 초기 페이지 로드, 부분 페이지 업데이트와 전체 페이지 업데이트를 구분을 <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, 또는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-394">Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsNavigating">
      <MemberSignature Language="C#" Value="public bool IsNavigating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNavigating" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsNavigating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNavigating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNavigating { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNavigating : bool" Usage="System.Web.UI.ScriptManager.IsNavigating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-395">
            <see cref="E:System.Web.UI.ScriptManager.Navigate" /> 이벤트가 현재 처리되고 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-395">Gets a value that indicates whether a <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event is currently being handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-396">
            <see cref="E:System.Web.UI.ScriptManager.Navigate" />가 처리되고 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-396">
              <see langword="true" /> if the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> is being handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-397">사용 하 여는 <xref:System.Web.UI.ScriptManager.IsNavigating%2A> 속성을 확인 여부는 <xref:System.Web.UI.ScriptManager.Navigate> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-397">Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="scriptManager.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <span data-ttu-id="6a7c3-398">컨트롤의 키 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-398">The key identifier for the control.</span>
          </span>
        </param>
        <param name="postCollection">
          <span data-ttu-id="6a7c3-399">들어오는 모든 게시 데이터의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-399">The collection of all the incoming post data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-400">브라우저에서 서버로 게시되는 폼 데이터를 읽고 비동기 포스트백의 원본을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-400">Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-401">포스트백을 실행한 후에 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-401">
              <see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-402"><xref:System.Web.UI.ScriptManager.LoadPostData%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 하 고 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-402">The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadScriptsBeforeUI">
      <MemberSignature Language="C#" Value="public bool LoadScriptsBeforeUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadScriptsBeforeUI" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadScriptsBeforeUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadScriptsBeforeUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadScriptsBeforeUI : bool with get, set" Usage="System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-403">페이지 UI 태그가 로드되기 전이나 후에 스크립트가 로드되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-403">Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-404">UI 태그가 로드되기 전에 스크립트가 로드되면 <see langword="true" />이고, UI 태그가 로드된 후 스크립트가 로드되면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-404">
              <see langword="true" /> if scripts are loaded before markup for the UI is loaded; <see langword="false" /> if scripts are loaded after markup for the UI is loaded.</span>
          </span>
          <span data-ttu-id="6a7c3-405">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-405">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-406"><xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> 속성 결정 방법에서 스크립트는 <xref:System.Web.UI.ScriptManager.Scripts%2A> 페이지 UI에 대 한 태그를 기준으로 컬렉션에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-406">The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.</span></span>  
  
 <span data-ttu-id="6a7c3-407">경우는 <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> 속성은 `true`, `script` 페이지의 UI 태그가 로드 되기 전에 요소가 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-407">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded.</span></span> <span data-ttu-id="6a7c3-408">이 시나리오에서 UI 요소는 스크립트에 정의 되어 있으면 UI는 완전 하 게 작동를 로드할 때.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-408">In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads.</span></span> <span data-ttu-id="6a7c3-409">그러나 UI 요소를 인스턴스 아직 만들지 않은 태그에 액세스 하는 스크립트, 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-409">However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur.</span></span> <span data-ttu-id="6a7c3-410">UI 요소를 액세스 하기 전에 로드 했는지 확인 하려면 클래스의 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-410">To make sure that UI elements are loaded before you access them, handle the  event of the  class.</span></span>  
  
 <span data-ttu-id="6a7c3-411">경우는 <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> 속성은 `false`, `script` 페이지의 UI 태그를 렌더링 한 다음 요소가 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-411">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered.</span></span> <span data-ttu-id="6a7c3-412">이 시나리오에서는 UI가 더 빨리 로드 하지만 수 아닐 완벽 하 게 작동 추가 UI 요소를 정의 하는 스크립트 로드가 완료 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-412">In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.</span></span>  
  
 <span data-ttu-id="6a7c3-413">이 속성을 설정 하지 마십시오 `true` 설정 하는 경우 <xref:System.Web.UI.ScriptManager.EnableCdn%2A> 를 `true` 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-413">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.Scripts" />
        <altmember cref="T:System.Web.UI.ScriptReference" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.HistoryEventArgs&gt; Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As EventHandler(Of HistoryEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::HistoryEventArgs ^&gt; ^ Navigate;" />
      <MemberSignature Language="F#" Value="member this.Navigate : EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " Usage="member this.Navigate : System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-414">사용자가 브라우저의 **뒤로** 또는 **앞으로** 단추를 클릭하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-414">Occurs when the user clicks the browser's **Back** or **Forward** button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-415">브라우저의 클릭 하면 **다시** 단추, 기록 지점 상태 데이터를 포함 하는 Url을 포함할 수 있는 이전에 본 Url이 브라우저 탐색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-415">When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data.</span></span> <span data-ttu-id="6a7c3-416">웹 페이지에서 클라이언트 코드에서 기록 상태 데이터는 URL에 포함 되어 있는지를 발견 하면 서버 페이지를 요청을 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-416">If client code in the Web page detects that the URL contains history state data, it makes a request to the server page.</span></span> <span data-ttu-id="6a7c3-417">이렇게 역할을 다시 게시 이벤트 및 <xref:System.Web.UI.ScriptManagerProxy> 서버 컨트롤에서 발생 된 `Navigate` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-417">This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event.</span></span> <span data-ttu-id="6a7c3-418">이 이벤트를 처리 하 고 이벤트와 전달 되는 상태 데이터를 사용 하 여 웹 응용 프로그램에서 필요에 따라 페이지를 다시 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-418">You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAsyncPostBackError">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAsyncPostBackError(class System.Web.UI.AsyncPostBackErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAsyncPostBackError (e As AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAsyncPostBackError(System::Web::UI::AsyncPostBackErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit&#xA;override this.OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit" Usage="scriptManager.OnAsyncPostBackError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.AsyncPostBackErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a7c3-419">오류 이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-419">The error event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-420">
            <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-420">Raises the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-421"><xref:System.Web.UI.ScriptManager.AsyncPostBackError> 이벤트는 비동기 포스트백 도중 페이지 오류가 있을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-421">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="6a7c3-422">클라이언트에 서버의 오류 전송 방법에 따라 달라 집니다는 <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 속성에는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 및 Web.config 파일의 사용자 지정 오류 섹션.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-422">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-423">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> 설정 하는 이벤트는 <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> 속성 (클라이언트에 전송)이 표시 된 서버 예외 오류 메시지에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-423">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="scriptManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a7c3-424">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-424">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-425">
            <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시키고 페이지에 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤이 하나만 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-425">Raises the <see cref="E:System.Web.UI.Control.Init" /> event and makes sure that only one <see cref="T:System.Web.UI.ScriptManager" /> control exists on the page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-426">페이지에 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스가 두 개 이상인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-426">More than one instance of <see cref="T:System.Web.UI.ScriptManager" /> exists on the page.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a7c3-427">
            <para>이 메서드를 재정의할 경우 기본 호출 <see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" /> 부분 페이지 렌더링을 위해 메서드 스크립트 파일이 올바르게 처리 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-427">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" /> method so that script files are correctly handled for partial-page rendering.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="scriptManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a7c3-428">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-428">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-429">
            <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킨 후 부분 페이지 업데이트를 위한 스크립트 파일 및 서비스를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-429">Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and registers script files and services for partial-page updates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-430">DOM에 대 한 정보를 참조 하십시오.는 [문서 개체 모델 (DOM) 수준 1 사양은](http://go.microsoft.com/fwlink/?LinkId=73305) World Wide Web Consortium (W3C) 웹 사이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-430">For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](http://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-431">부분 페이지를 요청한 브라우저에서 DOM Level 1.0 이상을 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-431">The browser that made the partial-page request does not support at least DOM Level 1.0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a7c3-432">
            <para>이 메서드를 재정의할 경우 기본 호출 <see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" /> 부분 페이지 렌더링에 대 한 메서드는 스크립트 블록 및 서비스를 올바르게 처리 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-432">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" /> method so that script blocks and services are correctly handled for partial-page rendering.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveCompositeScriptReference(class System.Web.UI.CompositeScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveCompositeScriptReference (e As CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveCompositeScriptReference(System::Web::UI::CompositeScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveCompositeScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.CompositeScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a7c3-433">복합 스크립트 참조를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-433">An object that represents the composite script reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-434">
            <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-434">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveScriptReference(class System.Web.UI.ScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveScriptReference (e As ScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveScriptReference(System::Web::UI::ScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a7c3-435">현재 스크립트를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-435">An object that represents the current script.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-436">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에서 관리하는 각 스크립트 참조에 대해 <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-436">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event for each script reference that is managed by the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-437">이 메서드는 <xref:System.Web.UI.ScriptManager.OnPreRender%2A> 이벤트 처리기를 각각에 대해 한 번씩 <xref:System.Web.UI.ScriptReference> 에 <xref:System.Web.UI.ScriptManager.Scripts%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-437">This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 <span data-ttu-id="6a7c3-438"><xref:System.Web.UI.ScriptManager.ResolveScriptReference> 이벤트는 중복 스크립트 항목이 확인 된 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-438">The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.</span></span>  
  
 <span data-ttu-id="6a7c3-439">이 메서드를 다시 게시 될 때 또는 부분 페이지 업데이트 하는 동안 개별 스크립트 블록의 동작에 영향을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-439">Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileService">
      <MemberSignature Language="C#" Value="public System.Web.UI.ProfileServiceManager ProfileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ProfileServiceManager ProfileService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ProfileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProfileService As ProfileServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ProfileServiceManager ^ ProfileService { System::Web::UI::ProfileServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProfileService : System.Web.UI.ProfileServiceManager" Usage="System.Web.UI.ScriptManager.ProfileService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ProfileServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-440">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스와 관련된 <see cref="T:System.Web.UI.ProfileServiceManager" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-440">Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-441">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 대한 <see cref="T:System.Web.UI.ProfileServiceManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-441">The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-442"><xref:System.Web.UI.ProfileServiceManager> 이 속성에서 반환 되는 개체 프로필 서비스에 등록 된 페이지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-442">The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page.</span></span> <span data-ttu-id="6a7c3-443">프로필 서비스에 정의할 수 있습니다는 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-443">The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="6a7c3-444">ASP.NET 프로필 서비스를 사용 하거나 사용자 지정 프로필 서비스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-444">You can use the ASP.NET profile service or use a custom profile service.</span></span> <span data-ttu-id="6a7c3-445">사용자 지정 서비스를 포함 하 여 태그에 추가할 수 있습니다는 `ProfileService` 요소 안에 `asp:ScriptManager` 다음 예제와 같이 페이지에서 요소.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-445">You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB"  
    Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="6a7c3-446">또한 프로그래밍 방식으로 구성할 수 있습니다는 <xref:System.Web.UI.ProfileServiceManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-446">You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object.</span></span> <span data-ttu-id="6a7c3-447">서비스에 등록 된는 <xref:System.Web.UI.ScriptManager> 페이지의 컨트롤 <xref:System.Web.UI.Control.PreRender> 수명 주기 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-447">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="scriptManager.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="6a7c3-448">웹 페이지의 기록 상태를 나타내는 키/값 쌍의 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-448">A string of key/value pairs that represent the history state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-449">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤이 발생시킨 포스트백 이벤트를 처리하고 웹 페이지의 기록 상태를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-449">Processes a postback event raised by the <see cref="T:System.Web.UI.ScriptManager" /> control and loads the history state of the Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="scriptManager.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-450">서버에 포스트백될 때 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에 대한 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-450">Raises events for the <see cref="T:System.Web.UI.ScriptManager" /> control when it posts back to the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-451"><xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 하 고 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-451">The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="6a7c3-452">기본 구현에는 <xref:System.Web.UI.ScriptManager> 컨트롤은 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-452">For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterArrayDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-453">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 ECMAScript(JavaScript) 배열 선언을 등록한 후 해당 배열을 페이지에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-453">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (control, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-454">배열을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-454">The control that is registering the array.</span>
          </span>
        </param>
        <param name="arrayName">
          <span data-ttu-id="6a7c3-455">등록할 배열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-455">The name of the array to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="6a7c3-456">등록할 배열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-456">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-457">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 ECMAScript(JavaScript) 배열 선언을 등록한 후 해당 배열을 페이지에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-457">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-458">사용 된 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> 부분 페이지 렌더링 호환 되는 클라이언트 스크립트 배열을 등록 하는 메서드는 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-458">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-459">이 메서드는 배열을 등록 때 `control` 내에 있는 컨트롤을 나타내는 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-459">This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-460">비동기 포스트백이 발생할 때마다 배열을 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-460">To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-461">부분 페이지 업데이트에 고 배열에 초기 페이지 렌더링 시 한 번만 등록 하려면 사용 되지 않는 배열을 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-461">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-462">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-462">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-463"><xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> 메서드 여부, 배열에 지정 된 이름의 `arrayName` 매개 변수가 이미 등록 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-463">The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered.</span></span> <span data-ttu-id="6a7c3-464">메서드에 지정 된 값을 추가 하는, `arrayValue`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-464">If so, the method adds the values specified in `arrayValue`.</span></span> <span data-ttu-id="6a7c3-465">등록할 배열에 기반 하므로 <xref:System.Collections.ArrayList> 클래스, 중복은 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-465">Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed.</span></span> <span data-ttu-id="6a7c3-466">경우에 이름으로 등록 된 배열이 `arrayName` 존재 하지 않는 만든 값 `arrayValue` 여기에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-466">If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.</span></span>  
  
 <span data-ttu-id="6a7c3-467">문자열 리터럴은 배열에 포함 하려면 작은따옴표 (')를 사용 하거나 큰따옴표를 이스케이프 처리 (\\")에서 `arrayValue`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-467">To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\") in `arrayValue`.</span></span>  
  
 <span data-ttu-id="6a7c3-468">Note JavaScript 배열에서 구분 기호로 쉼표 (,)를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-468">Note that JavaScript treats a comma (,) as a delimiter in an array.</span></span> <span data-ttu-id="6a7c3-469">에 쉼표로 구분 된 문자열을 전달 하 여 여러 배열 값을 지정할 수 있습니다 `arrayValue`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-469">You can specify multiple array values by passing a comma-delimited string in `arrayValue`.</span></span> <span data-ttu-id="6a7c3-470">두 항목에는 쉼표로 구분 하 `arrayValue` 하는 것은 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> 메서드를 두 번 각각에 대해 한 번씩 항목.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-470">Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-471">
            <paramref name="arrayName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-471">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Page page, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Page ^ page, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (page, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-472">배열을 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-472">The page object that is registering the array.</span>
          </span>
        </param>
        <param name="arrayName">
          <span data-ttu-id="6a7c3-473">등록할 배열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-473">The name of the array to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="6a7c3-474">등록할 배열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-474">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-475">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 ECMAScript(JavaScript) 배열 선언을 등록한 후 해당 배열을 페이지에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-475">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-476">사용 된 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> 부분 페이지 렌더링 호환 되는 클라이언트 스크립트 배열을 등록 하는 메서드는 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-476">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-477">이 메서드는 비동기 포스트백이 발생할 때마다 배열을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-477">This method registers the array every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-478">내에 있는 컨트롤에 대 한 배열을 <xref:System.Web.UI.UpdatePanel> 배열의 업데이트 될 경우에 등록 되도록 컨트롤을 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-478">To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-479">부분 페이지 업데이트에 고 배열에 초기 페이지 렌더링 시 한 번만 등록 하려면 사용 되지 않는 배열을 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-479">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-480">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-480">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-481">
            <paramref name="arrayName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-481">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterAsyncPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAsyncPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAsyncPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterAsyncPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterAsyncPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-482">비동기 포스트백을 위해 등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-482">The control to register for asynchronous postbacks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-483">컨트롤을 비동기 포스트백의 트리거로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-483">Registers a control as a trigger for asynchronous postbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-484"><xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 메서드를 사용 하면 동기 포스트백 대신 비동기 포스트백을 수행 하도록 해당 트리거로 웹 서버 컨트롤을 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-484">The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback.</span></span> <span data-ttu-id="6a7c3-485">때는 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 속성의는 <xref:System.Web.UI.UpdatePanel> 로 설정 되어 `true` (기본값) 인 내에 있는 컨트롤을 포스트백의 <xref:System.Web.UI.UpdatePanel> 컨트롤 비동기 포스트백 컨트롤로 자동으로 등록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-485">When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.</span></span>  
  
 <span data-ttu-id="6a7c3-486">사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 외부 컨트롤을 등록 하는 메서드는 <xref:System.Web.UI.UpdatePanel> 비동기 포스트백에 대 한 업데이트 패널의 내용을 업데이트 하려면 트리거로 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-486">Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel.</span></span> <span data-ttu-id="6a7c3-487">업데이트 하는 <xref:System.Web.UI.UpdatePanel> 프로그래밍 방식으로 컨트롤을 호출 하는 <xref:System.Web.UI.UpdatePanel.Update%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-487">To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.</span></span>  
  
 <span data-ttu-id="6a7c3-488">트리거를 사용 하 여 선언적으로 추가할 수 있습니다는 `Triggers` 의 요소는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-488">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-489">Visual Studio에서 디자이너를 사용 하 여 **UpdatePanelTrigger 컬렉션 편집기** 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-489">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-490">호출 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 등록 하는 메서드는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 업데이트를 수행 하는 <xref:System.Web.UI.UpdatePanel> 컨트롤의 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-490">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a <xref:System.Web.UI.WebControls.Button> control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="6a7c3-491"><xref:System.Web.UI.WebControls.Button> 내부는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-491">The <xref:System.Web.UI.WebControls.Button> control is not inside the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-492">두 개의 단추가 표시 됩니다: `Button1` 및 `Button2`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-492">Two buttons are shown: `Button1` and `Button2`.</span></span> <span data-ttu-id="6a7c3-493">`Button1` 패널의 콘텐츠를 새로 고칩니다 및 `Button2` 전체 페이지를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-493">`Button1` refreshes the content of the panel, and `Button2` refreshes the whole page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager1VB.aspx#1)]  
  
 <span data-ttu-id="6a7c3-494">호출 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 사용자 등록 컨트롤의 업데이트를 수행 하는 <xref:System.Web.UI.UpdatePanel> 컨트롤의 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-494">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a user control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="6a7c3-495">첫 번째 예에서는 사용자 정의 컨트롤을 사용 하는 페이지를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-495">The first example shows a page using the user control.</span></span> <span data-ttu-id="6a7c3-496">두 번째 예제에서는 사용자 정의 컨트롤을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-496">The second example shows the user control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager2VB.aspx#2)]  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-497">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-497">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-498">등록된 컨트롤이 <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" /> 또는 <see cref="T:System.Web.UI.IPostBackEventHandler" /> 인터페이스를 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-498">The registered control does not implement the <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" />, or <see cref="T:System.Web.UI.IPostBackEventHandler" /> interfaces.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-499">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트 블록을 등록한 후 페이지에 스크립트 블록을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-499">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-500">클라이언트 스크립트 블록을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-500">The control that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-501">클라이언트 스크립트 블록의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-501">The type of the client script block.</span>
          </span>
          <span data-ttu-id="6a7c3-502">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 <see langword="typeof" /> 연산자(C#) 또는 <see langword="GetType" /> 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-502">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-503">스크립트 블록의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-503">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-504">스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-504">The script.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="6a7c3-505">스크립트 블록을 <see langword="&lt;script&gt;" /> 및 <see langword="&lt;/script&gt;" /> 태그로 묶으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-505">
              <see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-506">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트 블록을 등록한 후 페이지에 스크립트 블록을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-506">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-507">사용 된 <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> 부분 페이지 렌더링 호환 되는 클라이언트 스크립트 블록을 등록 하는 메서드는 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-507">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-508">이 방법을 사용 하 여 등록 된 클라이언트 스크립트 블록의 페이지에 보내집니다. 경우에만 `control` 내에 있는 컨트롤을 나타냅니다는 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-508">Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-509">비동기 포스트백이 발생할 때마다 스크립트 블록을 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-509">To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-510">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-510">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-511">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-511">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-512">경우 `addScriptTags` 은 `true`, <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> 메서드 추가 `<script>` 스크립트 블록 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-512">If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block.</span></span> <span data-ttu-id="6a7c3-513">전달 `false` 만들려는 경우 `<script>` 특정 특성을 설정 하는 경우와 같이 태그를 직접 `<script>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-513">Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags.</span></span> <span data-ttu-id="6a7c3-514">경우 `addScriptTags` 은 `false` 및 `script` 매개 변수에 여러 스크립트 블록이 포함, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-514">If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.</span></span>  
  
 <span data-ttu-id="6a7c3-515"><xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> 메서드에서는 여는 페이지에 스크립트 블록을 추가 해도 `<form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-515">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag.</span></span> <span data-ttu-id="6a7c3-516">스크립트 블록은 등록 된 순서에 출력 되는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-516">The script blocks are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="6a7c3-517">스크립트 블록의 순서가 중요 한 경우 스크립트 블록을 단일 문자열로 연결 (사용 하 여 예를 들어는 <xref:System.Text.StringBuilder> 개체), 단일 클라이언트 스크립트 블록으로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-517">If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/CS/ScriptManager_RegisterClientScriptBlockCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/vb/ScriptManager_RegisterClientScriptBlockVB.aspx#1)]  
  
 [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/samples/snippets/common/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/Common/App_Data/Contacts.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-518">클라이언트 스크립트 블록 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-518">The client script block <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-519">\- 또는 -  스크립트 블록을 등록하는 컨트롤이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-519">\- or -  The control that is registering the script block is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-520">스크립트 블록을 등록하는 컨트롤이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-520">The control that is registering the script block is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-521">클라이언트 스크립트 블록을 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-521">The page object that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-522">클라이언트 스크립트 블록의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-522">The type of the client script block.</span>
          </span>
          <span data-ttu-id="6a7c3-523">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 <see langword="typeof" /> 연산자(C#) 또는 <see langword="GetType" /> 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-523">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-524">스크립트 블록의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-524">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-525">등록할 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-525">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="6a7c3-526">스크립트 블록을 <see langword="&lt;script&gt;" /> 및 <see langword="&lt;/script&gt;" /> 태그로 묶으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-526">
              <see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-527">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트 블록을 등록한 후 페이지에 스크립트 블록을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-527">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-528">이 방법을 사용 하 여 스크립트 블록을 등록 하는 경우 스크립트는 비동기 포스트백이 발생할 때마다 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-528">When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-529">내에 있는 컨트롤에 대 한 스크립트 블록을 등록 하려면는 <xref:System.Web.UI.UpdatePanel> 스크립트 등록 되도록 제어할 경우에만 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트, 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-529">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-530">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-530">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-531">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-531">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-532">스크립트 블록 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-532">The script block <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-533">\- 또는 -  스크립트 블록을 등록하는 페이지가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-533">\- or -  The page that is registering the script block is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-534">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트 파일을 등록한 후 페이지에 스크립트 파일 참조를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-534">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (control, type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-535">클라이언트 스크립트 파일을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-535">The control that is registering the client script file.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-536">클라이언트 스크립트 파일의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-536">The type of the client script file.</span>
          </span>
          <span data-ttu-id="6a7c3-537">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-537">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-538">스크립트 파일의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-538">A unique identifier for the script file.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="6a7c3-539">스크립트 파일의 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-539">The URL of the script file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-540">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트 파일을 등록한 후 페이지에 스크립트 파일 참조를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-540">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-541">사용 하면는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 부분 페이지 업데이트에는 페이지 또는 참여 하는 페이지의 일부에 대 한 클라이언트 스크립트 파일을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-541">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates.</span></span> <span data-ttu-id="6a7c3-542">이 방법을 사용 하 여 등록 된 클라이언트 스크립트 파일 페이지에 보내집니다. 경우에만 `control` 내에 있는 컨트롤을 나타냅니다는 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-542">Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-543">비동기 포스트백이 발생할 때마다 스크립트 파일을 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-543">To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-544">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-544">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-545">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-545">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-546"><xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 메서드 렌더링 하 여 페이지에서 클라이언트 스크립트 파일을 등록 한 `script` 여는 태그를 포함 하는 요소는 `src` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-546">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute.</span></span> <span data-ttu-id="6a7c3-547">`url` 매개 변수는 데 사용 되는 `src` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-547">The `url` parameter is used to set the `src` attribute.</span></span> <span data-ttu-id="6a7c3-548">Url를 해결 하려면 사용 된 <xref:System.Web.UI.Control.ResolveClientUrl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-548">To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="6a7c3-549">이 메서드는 경로 확인할 수에 대 한 호출 URL의 컨텍스트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-549">This method uses the context of the URL it is called for to resolve the path.</span></span>  
  
 <span data-ttu-id="6a7c3-550">둘 다는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 및 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 메서드 스크립트 파일을 브라우저에 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-550">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser.</span></span> <span data-ttu-id="6a7c3-551">이미 동일한 유형 및 (스크립트 파일)에 대 한 키 또는 동일한 유형 및 리소스 이름 (포함된 된 리소스)와 스크립트를 렌더링 하는 경우 스크립트가 다시 렌더링 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-551">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/ScriptManager_RegisterClientScriptIncludeCS.aspx#1)]  
  
 [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/scripts/script_alertdiv.js#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-552">클라이언트 스크립트 파일 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-552">The client script file <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-553">\- 또는 -  스크립트 파일을 등록하는 컨트롤이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-553">\- or -  The control that is registering the script file is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-554">스크립트 파일을 등록하는 컨트롤이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-554">The control that is registering the script file is not in the page's control tree.</span>
          </span>
          <span data-ttu-id="6a7c3-555">\- 또는 -  <paramref name="url" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-555">\- or -  <paramref name="url" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-556">\- 또는 -  <paramref name="url" />가 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-556">\- or -  <paramref name="url" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Page page, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (page, type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-557">클라이언트 스크립트 파일을 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-557">The page object that is registering the client script file.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-558">클라이언트 스크립트 파일의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-558">The type of the client script file.</span>
          </span>
          <span data-ttu-id="6a7c3-559">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-559">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-560">스크립트 파일의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-560">A unique identifier for the script file.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="6a7c3-561">스크립트 파일의 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-561">The URL of the script file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-562">비동기 포스트백이 발생할 때마다 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 클라이언트 스크립트를 등록한 후 페이지에 스크립트 파일 참조를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-562">Registers client script with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-563">이 방법으로 스크립트 파일을 등록 하는 경우 스크립트는 비동기 포스트백이 발생할 때마다 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-563">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-564">내에 있는 컨트롤에 대 한 스크립트 파일을 등록 하려면는 <xref:System.Web.UI.UpdatePanel> 스크립트 등록 되도록 제어할 경우에만 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트, 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-564">To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-565">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-565">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-566">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-566">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-567">클라이언트 스크립트 파일 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-567">The client script file <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-568">\- 또는 -  스크립트 파일을 등록하는 페이지가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-568">\- or -  The page that is registering the script file is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-569">
            <paramref name="url" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-569">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-570">\- 또는 -  <paramref name="url" />가 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-570">\- or -  <paramref name="url" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-571">부분 페이지 렌더링에 참여하는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-571">Registers client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Control * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (control, type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-572">스크립트를 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-572">The control that is registering the script.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-573">클라이언트 스크립트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-573">The type of the client script.</span>
          </span>
          <span data-ttu-id="6a7c3-574">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-574">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="6a7c3-575">리소스의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-575">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-576">부분 페이지 렌더링에 참여하는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-576">Registers the client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-577">사용 된 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 부분 페이지 렌더링 호환 되는 스크립트를 등록 하는 메서드는 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-577">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-578">이 방법을 사용 하 여 등록 된 스크립트 리소스 등록 된 경우에만 `control` 내에 있는 컨트롤을 나타냅니다는 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-578">Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated.</span></span> <span data-ttu-id="6a7c3-579">비동기 포스트백이 발생할 때마다 스크립트를 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-579">To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-580">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-580">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-581">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-581">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-582"><xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 메서드 어셈블리에서 리소스는 HTTP 처리기를 통해 액세스할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-582">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler.</span></span> <span data-ttu-id="6a7c3-583">에 있는 리소스 URL의 콘텐츠를 포함 하는이 메서드는 `script` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-583">This method includes the content of the resource URL in a `script` element.</span></span>  
  
 <span data-ttu-id="6a7c3-584">둘 다는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 및 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 메서드 브라우저에 스크립트 파일을 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-584">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser.</span></span> <span data-ttu-id="6a7c3-585">동일한 형식 및 키 (스크립트 파일) 또는 동일한 유형 및 리소스 이름 (포함된 된 리소스)에 있는 스크립트가 이미 로드 된 스크립트 다시 로드 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-585">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-586">클라이언트 리소스 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-586">The client resource <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-587">\- 또는 -  스크립트를 등록하는 컨트롤이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-587">\- or -  The control that is registering the script is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-588">스크립트를 등록하는 컨트롤이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-588">The control that is registering the script is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Page page, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Page ^ page, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Page * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (page, type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-589">스크립트를 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-589">The page object that is registering the script.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-590">클라이언트 스크립트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-590">The type of the client script.</span>
          </span>
          <span data-ttu-id="6a7c3-591">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-591">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="6a7c3-592">리소스의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-592">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-593">포스트백이 발생할 때마다 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트 파일을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-593">Registers a client script file that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that a postback occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-594">이 방법으로 스크립트 파일을 등록 하는 경우 스크립트는 비동기 포스트백이 발생할 때마다 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-594">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-595">내에 있는 컨트롤에 대 한 스크립트를 등록 하려면는 <xref:System.Web.UI.UpdatePanel> 스크립트가 등록 하도록 제어할 경우에만 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트, 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-595">To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-596">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트 블록을 등록 하려면 사용 되지 않는 스크립트 블록을 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-596">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-597">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-597">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-598">클라이언트 리소스 <paramref name="type" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-598">The client resource <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-599">\- 또는 -  스크립트를 등록하는 페이지가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-599">\- or -  The page that is registering the script is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-600">부분 페이지 렌더링 도중 사용자 지정 데이터를 컨트롤로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-600">Sends custom data to controls during partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-601">데이터를 받는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-601">The control that is receiving the data.</span>
          </span>
        </param>
        <param name="dataItem">
          <span data-ttu-id="6a7c3-602">컨트롤로 보내는 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-602">The data that is sent to the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-603">부분 페이지 렌더링 도중 사용자 지정 데이터를 컨트롤로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-603">Sends custom data to a control during partial-page rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-604">사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 데이터 내의 데이터를 받는 컨트롤 인지에 관계 없이 비동기 포스트백 중 클라이언트를 서버에서 보내는 메서드는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-604">Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="6a7c3-605"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 비동기 포스트백 중에 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-605">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-606">비동기 포스트백 인지를 확인 하려면 사용 하 여는 <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-606">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span> <span data-ttu-id="6a7c3-607">이 메서드는 명명 된 매개 변수를 사용 하는 오버 로드를 호출 `isJsonSerialized` 로 설정 되어 있는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-607">This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`.</span></span> <span data-ttu-id="6a7c3-608">경우는 `isJsonSerialized` 로 설정 된 `false`, 문자열은 JavaScript 개체 Notation (JSON)으로 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-608">When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON).</span></span> <span data-ttu-id="6a7c3-609">JSON 형식에 대 한 자세한 내용은 참조는 [JSON 소개](http://go.microsoft.com/fwlink/?LinkId=77297) 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-609">For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="6a7c3-610">등록 된 데이터 항목은 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 메서드 중에 클라이언트 스크립트에서 액세스할 수 있습니다. 그리고 및 개체의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-610">The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object.</span></span> <span data-ttu-id="6a7c3-611">이러한 이벤트를 처리 하는 경우 사용자 지정 데이터는 이벤트 인수 개체에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-611">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="6a7c3-612">예를 들어 이벤트에 대 한 처리기를 제공 하는 경우 사용자 지정 데이터 속성을 노출 하는 클래스에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-612">For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-613">다음 예제에서는 두 개의에 데이터를 전송 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.Label> 비동기 포스트백 도중 페이지에 있는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-613">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-614"><xref:System.Web.UI.WebControls.Label> 는 컨트롤은 내부는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-614">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7c3-615">이 예제에서 전송 되는 데이터는 설명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-615">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="6a7c3-616">실제 응용 프로그램에서 사용 된 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 서버에서 사용자 지정 데이터를 보내는 방법을 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-616">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-617">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-617">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-618">
            <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 메서드가 포스트백 도중에 호출되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-618">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-619">
            <paramref name="dataItem" />이 이미 <paramref name="control" />에 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-619">
              <paramref name="dataItem" /> is already registered for <paramref name="control" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem, bool isJsonSerialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string * bool -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem, isJsonSerialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
        <Parameter Name="isJsonSerialized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-620">데이터를 받는 페이지 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-620">The page control that is receiving the data.</span>
          </span>
        </param>
        <param name="dataItem">
          <span data-ttu-id="6a7c3-621">컨트롤로 보내는 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-621">The data that is sent to the control.</span>
          </span>
        </param>
        <param name="isJsonSerialized">
          <span data-ttu-id="6a7c3-622">
            <c>dataItem</c>이 JSON으로 serialize됨을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-622">
              <see langword="true" /> to indicate that <c>dataItem</c> is serialized as JSON; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-623">부분 페이지 렌더링 도중 사용자 지정 데이터를 컨트롤로 보내고, 데이터가 JSON(JavaScript Object Notation) 형식인지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-623">Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-624">사용 하면는 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 데이터 내의 데이터를 받는 컨트롤 인지에 관계 없이 비동기 포스트백 중 클라이언트를 서버에서 보내는 메서드는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-624">You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="6a7c3-625">경우는 `dataItem` 에 대 한 등록 하는 매개 변수 `control` JSON으로 serialize 되지 않습니다 설정는 `isJsonSerialized` 매개 변수를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-625">If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`.</span></span> <span data-ttu-id="6a7c3-626">이렇게 하면 클라이언트에 전송 된 각 문자열에 대 한 함수를 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-626">This avoids the need to use the  function for each string that is sent to the client.</span></span> <span data-ttu-id="6a7c3-627">JSON 형식에 대 한 자세한 내용은 참조는 [JSON 소개](http://go.microsoft.com/fwlink/?LinkId=77297) 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-627">For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="6a7c3-628"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 비동기 포스트백 중에 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-628">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-629">비동기 포스트백 인지를 확인 하려면 사용 하 여는 <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-629">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span>  
  
 <span data-ttu-id="6a7c3-630">데이터 항목을 사용 하 여 등록 된 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 메서드 중에 클라이언트 스크립트에서 액세스할 수 있습니다. 그리고 및 개체의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-630">The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object.</span></span> <span data-ttu-id="6a7c3-631">이러한 이벤트를 처리 하는 경우 사용자 지정 데이터는 이벤트 인수 개체에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-631">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="6a7c3-632">예를 들어 이벤트에 대 한 처리기를 제공 하는 경우 사용자 지정 데이터 속성을 노출 하는 클래스에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-632">For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-633">다음 예제에서는 두 개의에 데이터를 전송 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.Label> 비동기 포스트백 도중 페이지에 있는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-633">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-634"><xref:System.Web.UI.WebControls.Label> 는 컨트롤은 내부는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-634">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-635">이 예에서는 사용 하지 않는 오버 로드는 `isJsonSerialized` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-635">This example shows the overload that does not take the `isJsonSerialized` parameter.</span></span> <span data-ttu-id="6a7c3-636">그렇지 않은 경우 개체의 속성을 검색 하기 위한 절차는 해당 오버 로드를 사용 하지 않은 경우 처럼 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-636">Otherwise, the procedure for retrieving the  property of the  object is the same as if you did not use that overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7c3-637">이 예제에서 전송 되는 데이터는 설명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-637">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="6a7c3-638">실제 응용 프로그램에서 사용 된 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 서버에서 사용자 지정 데이터를 보내는 방법을 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-638">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span> <span data-ttu-id="6a7c3-639">예를 들어 숨기 거 나 클라이언트 요소 안에 있지 않은 표시 여부에 대 한 정보를 보내는 데이터 항목을 사용할 수 있습니다는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-639">For example, you could use the data item to send information about whether to hide or show client elements that are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-640">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-640">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-641">
            <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 메서드가 포스트백 도중에 호출되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-641">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-642">
            <paramref name="dataItem" />이 이미 <paramref name="control" />에 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-642">
              <paramref name="dataItem" /> is already registered for <paramref name="control" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDispose">
      <MemberSignature Language="C#" Value="public void RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript);" />
      <MemberSignature Language="F#" Value="member this.RegisterDispose : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDispose (control, disposeScript)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-643">
            <see langword="dispose" /> 스크립트의 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-643">The control that the <see langword="dispose" /> script is for.</span>
          </span>
        </param>
        <param name="disposeScript">
          <span data-ttu-id="6a7c3-644">
            <see langword="dispose" /> 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-644">The <see langword="dispose" /> script.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-645">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤에 대해 <see langword="dispose" /> 스크립트를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-645">Registers a <see langword="dispose" /> script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
          <span data-ttu-id="6a7c3-646">스크립트는 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤이 업데이트되거나 삭제될 때 실행됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-646">The script is executed when the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated or deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-647">사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> 등록 `dispose` 안에 있는 컨트롤에 대 한 스크립트는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-647">Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-648">비동기 포스트백 도중 <xref:System.Web.UI.UpdatePanel> 컨트롤 업데이트, 삭제 하거나 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-648">During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created.</span></span> <span data-ttu-id="6a7c3-649">패널이 업데이트 되거나 삭제 되 면 `dispose` 내에 있는 컨트롤에 대 한 등록 된 스크립트는 <xref:System.Web.UI.UpdatePanel> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-649">When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called.</span></span> <span data-ttu-id="6a7c3-650">일반적인 페이지 개발 시나리오에서 않아도 호출 하 여 <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-650">In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.</span></span>  
  
 <span data-ttu-id="6a7c3-651"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A> 메서드 사용 하기 위한 스크립트를 등록 하거나에서 상속 하는 컨트롤을 만들 컨트롤 개발자가 <xref:System.Web.UI.IScriptControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-651">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface.</span></span> <span data-ttu-id="6a7c3-652">예를 들어, 사용할 수는 `dispose` 스크립트 구성을 사용 하 여 클라이언트 컨트롤을 개발 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-652">For example, you might use a `dispose` script if you develop a client control by using composition.</span></span> <span data-ttu-id="6a7c3-653">컨트롤에 구현 <xref:System.Web.UI.IScriptControl> 개별 컨트롤을 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-653">In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls.</span></span> <span data-ttu-id="6a7c3-654">등록 된 `dispose` 메서드와 같은 정의 된 클라이언트 구성 요소에 해당 하지 않는 항목의 `Sys.TextBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-654">You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`.</span></span> <span data-ttu-id="6a7c3-655">Microsoft Ajax 라이브러리에서 클라이언트 구성 요소에 해당 하는 요소를 작성 하는 사용자 지정 컨트롤을 하는 경우 등록 필요가 없습니다는 `dispose` 때문에 스크립트 `dispose` 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-655">If your custom control composes elements that correspond to client components in the Microsoft Ajax Library, you do not have to register a `dispose` script, because `dispose` is called automatically.</span></span> <span data-ttu-id="6a7c3-656">따라서 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> 메서드는 Microsoft Ajax Library의 일부 이며 구성 요소는 더 이상 사용 하는 경우 리소스를 해제 해야 하는 클라이언트 구성 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-656">Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>  
  
 <span data-ttu-id="6a7c3-657"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A> 메서드는 컨트롤에 대 한 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-657">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control.</span></span> <span data-ttu-id="6a7c3-658">여러 스크립트 집계 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-658">Multiple scripts are aggregated.</span></span> <span data-ttu-id="6a7c3-659">스크립트를 삭제 하는 순서는 스크립트가 등록 된 순서와 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-659">The order of disposing scripts matches the order in which the scripts were registered.</span></span>  
  
 <span data-ttu-id="6a7c3-660">등록 하는 경우는 `dispose` 에 속하지 않은 컨트롤에 대 한 스크립트는 <xref:System.Web.UI.UpdatePanel> 컨트롤, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-660">If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown.</span></span> <span data-ttu-id="6a7c3-661">`dispose` 스크립트 사이 호출 되는 및 클래스의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-661">The `dispose` script is called between the  and  events of the  class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-662">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-662">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-663">\- 또는 -  <paramref name="disposeScript" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-663">\- or -  <paramref name="disposeScript" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-664">
            <paramref name="control" />이 페이지에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-664">
              <paramref name="control" /> is not found on the page.</span>
          </span>
          <span data-ttu-id="6a7c3-665">\- 또는 -  <paramref name="control" />이 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-665">\- or -  <paramref name="control" /> is not inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.IScriptControl" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="static member RegisterExpandoAttribute : System.Web.UI.Control * string * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterExpandoAttribute (control, controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-666">expando 특성을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-666">The control that is registering the expando attribute.</span>
          </span>
        </param>
        <param name="controlId">
          <span data-ttu-id="6a7c3-667">페이지에 사용자 지정 특성이 포함된 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-667">The control that contains the custom attribute on the page.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="6a7c3-668">등록할 사용자 지정 특성 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-668">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="6a7c3-669">사용자 지정 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-669">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="6a7c3-670">등록되는 사용자 지정 특성을 인코드하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-670">
              <see langword="true" /> to encode the custom attribute that is being registered; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-671">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 이름/값 쌍을 지정된 컨트롤의 사용자 지정(expando) 특성으로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-671">Registers a name/value pair with the <see cref="T:System.Web.UI.ScriptManager" /> control as a custom (expando) attribute of a specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-672">사용 된 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> 부분 페이지 렌더링 호환 되는 컨트롤에 대 한 사용자 지정 (expando) 속성을 등록 하는 방법에 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-672">You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span>  
  
 <span data-ttu-id="6a7c3-673"><xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> 메서드 이름/값 쌍을 지정된 된 컨트롤에 대 한 사용자 지정 특성으로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-673">The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control.</span></span> <span data-ttu-id="6a7c3-674">속성은 렌더링 된 컨트롤의 태그에 대 한 XHTML 호환성을 유지 하기 위해 ECMAScript (JavaScript)에서 동적으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-674">The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="6a7c3-675">설정 `encode` 를 `true` 동적 속성의 값에 임의 문자를 이스케이프 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-675">Set `encode` to `true` if you have to escape any characters in the dynamic property's value.</span></span>  
  
 <span data-ttu-id="6a7c3-676">동적 속성을 추가할 컨트롤을 찾을 수 없습니다, 스크립트 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-676">If the control to which the dynamic property will be added is not found, a script error occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-677">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-677">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-678">
            <paramref name="control" />이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-678">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
          <span data-ttu-id="6a7c3-679">\- 또는 -  <paramref name="controlId" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-679">\- or -  <paramref name="controlId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-680">\- 또는 -  <paramref name="controlId" />가 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-680">\- or -  <paramref name="controlId" /> is empty.</span>
          </span>
          <span data-ttu-id="6a7c3-681">\- 또는 -  <paramref name="attributeName" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-681">\- or -  <paramref name="attributeName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-682">\- 또는 -  <paramref name="attributeName" />가 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-682">\- or -  <paramref name="attributeName" /> is empty.</span>
          </span>
          <span data-ttu-id="6a7c3-683">\- 또는 -  <paramref name="attributeName" />이 이미 등록되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-683">\- or -  <paramref name="attributeName" /> is already registered.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExtenderControl&lt;TExtenderControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterExtenderControl&lt;TExtenderControl&gt; (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterExtenderControl&lt;(class System.Web.UI.Control, class System.Web.UI.IExtenderControl) TExtenderControl&gt;(!!TExtenderControl extenderControl, class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExtenderControl(Of TExtenderControl As {Control, IExtenderControl}) (extenderControl As TExtenderControl, targetControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtenderControl&gt;&#xA; where TExtenderControl : System::Web::UI::Control, System::Web::UI::IExtenderControl virtual void RegisterExtenderControl(TExtenderControl extenderControl, System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)&#xA;override this.RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)" Usage="scriptManager.RegisterExtenderControl (extenderControl, targetControl)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterExtenderControl``1(``0,System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtenderControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IExtenderControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extenderControl" Type="TExtenderControl" />
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <typeparam name="TExtenderControl">
          <span data-ttu-id="6a7c3-684">
            <see cref="T:System.Web.UI.IExtenderControl" /> 인터페이스를 구현하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-684">A control that implements the <see cref="T:System.Web.UI.IExtenderControl" /> interface.</span>
          </span>
        </typeparam>
        <param name="extenderControl">
          <span data-ttu-id="6a7c3-685">등록할 extender 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-685">The extender control to register.</span>
          </span>
        </param>
        <param name="targetControl">
          <span data-ttu-id="6a7c3-686">extender 컨트롤이 확장하는 스크립트 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-686">The script control that the extender control extends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-687">Extender 컨트롤을 현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-687">Registers an extender control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-688">이 메서드는 주로 컨트롤 개발자가 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-688">This method is primarily for use by control developers.</span></span> <span data-ttu-id="6a7c3-689">호출의 <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> 메서드 중 사용자 지정 ASP.NET Ajax extender 컨트롤에서 해당 `onInit` 페이지와 해당 컨트롤을 등록 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-689">Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="6a7c3-690">부분 페이지 렌더링에 참여 하는 ASP.NET Ajax extender 컨트롤을 등록 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-690">An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="6a7c3-691"><xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> 메서드 extender 컨트롤 및 대상 스크립트 컨트롤은 확장 되는 내부 목록에 지정된 된 extender 컨트롤을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-691">The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend.</span></span> <span data-ttu-id="6a7c3-692">이 목록은 하는 동안 처리 되는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-692">This list is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-693">
            <paramref name="extenderControl" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-693">
              <paramref name="extenderControl" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-694">\- 또는 -  <paramref name="targetControl" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-694">\- or -  <paramref name="targetControl" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterHiddenField">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-695">숨겨진 필드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-695">Registers a hidden field.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (control, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-696">숨겨진 필드를 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-696">The control that is registering the hidden field.</span>
          </span>
        </param>
        <param name="hiddenFieldName">
          <span data-ttu-id="6a7c3-697">등록할 숨겨진 필드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-697">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="6a7c3-698">숨겨진 필드의 초기 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-698">The initial value of the hidden field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-699">
            <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 컨트롤에 대해 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 숨겨진 필드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-699">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-700">사용 된 <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> 등록 부분 페이지 렌더링 호환 되는 숨겨진된 필드에 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-700">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-701">이 메서드는 필드를 등록 하는 컨트롤 안에 있을 경우 숨겨진된 필드를 등록 한 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-701">This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-702">비동기 포스트백이 발생할 때마다 숨겨진된 필드를 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-702">To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-703">부분 페이지 업데이트에 고 초기 페이지 렌더링 시 한 번만 숨겨진된 필드를 등록 하려면 사용 되지 않는 숨겨진된 필드를 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-703">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-704">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-704">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-705"><xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> 메서드 만듭니다 숨겨진 `input` 렌더링된 된 HTML 페이지에는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-705">The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-706">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-706">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-707">\- 또는 -  <paramref name="hiddenFieldName" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-707">\- or -  <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-708">
            <paramref name="control" />이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-708">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Page ^ page, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (page, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-709">숨겨진 필드를 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-709">The page object that is registering the hidden field.</span>
          </span>
        </param>
        <param name="hiddenFieldName">
          <span data-ttu-id="6a7c3-710">등록할 숨겨진 필드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-710">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="6a7c3-711">숨겨진 필드의 초기 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-711">The initial value of the hidden field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-712">비동기 포스트백이 발생할 때마다 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 숨겨진 필드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-712">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control during every asynchronous postback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-713">사용 된 <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> 등록 부분 페이지 렌더링 호환 되는 숨겨진된 필드에 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-713">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-714">이 메서드는 비동기 포스트백이 발생할 때마다 숨겨진된 필드를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-714">This method registers the hidden field every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-715">내에 있는 컨트롤에 대 한 숨겨진된 필드를 등록 하려면 한 <xref:System.Web.UI.UpdatePanel> 필드 업데이트 될 경우에 등록 되도록 컨트롤을 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-715">To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-716">부분 페이지 업데이트에 고 초기 페이지 렌더링 시 한 번만 숨겨진된 필드를 등록 하려면 사용 되지 않는 숨겨진된 필드를 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-716">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-717">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-717">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-718">
            <paramref name="page" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-718">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-719">\- 또는 -  <paramref name="hiddenFieldName" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-719">\- or -  <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterNamedClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-720">부분 페이지 렌더링에 참여하는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트를 리소스 이름별로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-720">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Control control, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Control ^ control, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Control * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (control, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-721">스크립트를 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-721">The control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="6a7c3-722">리소스의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-722">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-723">부분 페이지 렌더링에 참여하는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트를 리소스 이름별로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-723">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Page page, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Page ^ page, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Page * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (page, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-724">스크립트를 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-724">The page object that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="6a7c3-725">리소스의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-725">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-726">부분 페이지 렌더링에 참여하는 컨트롤과 함께 사용할 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 어셈블리에 포함된 클라이언트 스크립트를 리소스 이름별로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-726">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterOnSubmitStatement">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-727">폼이 전송될 때 실행되는 ECMAScript(JavaScript) 코드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-727">Registers ECMAScript (JavaScript) code that is executed when the form is submitted.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (control, type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-728">
            <see langword="onsubmit" /> 문을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-728">The control that is registering the <see langword="onsubmit" /> statement.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-729">클라이언트 스크립트 문의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-729">The type of the client script statement.</span>
          </span>
          <span data-ttu-id="6a7c3-730">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-730">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-731">스크립트 문의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-731">A unique identifier for the script statement.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-732">등록할 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-732">The script to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-733">폼이 전송될 때 실행되는 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤과 함께 사용되는 컨트롤에 대해 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 ECMAScript(JavaScript) 코드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-733">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-734"><xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> 폼이 전송 되기 전에 실행 되는 스크립트를 추가 전송을 수정 하거나 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-734">The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.</span></span>  
  
 <span data-ttu-id="6a7c3-735">사용 하면는 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> 렌더링 하는 메서드는 `onsubmit` 부분 페이지 렌더링과 호환 되는 문을 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-735">You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-736">문을 등록 하는 컨트롤 안에 있을 경우에이 방법을 사용 하 여 등록 된 JavaScript 코드 페이지에 보내집니다는 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-736">JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-737">비동기 포스트백이 발생할 때마다와 코드를 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-737">To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-738">부분 페이지 업데이트에 고 초기 페이지 렌더링 시 한 번만 코드를 등록 하려면 사용 되지 않는 하는 JavaScript 코드를 등록 하려는 경우는 <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-738">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-739">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-739">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-740">*스크립트* 의 매개 변수는 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> 메서드 세미콜론 (;)를 사용 하 여 구분 되는 여러 개의 스크립트 명령을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-740">The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;).</span></span>  
  
 <span data-ttu-id="6a7c3-741">HTML 폼에 대 한 자세한 내용은 및 `onsubmit` 이벤트 참조는 [World Wide Web Consortium (W3C) 웹 사이트](http://go.microsoft.com/fwlink/?linkid=37125)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-741">For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-742">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-742">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-743">\- 또는 -  <paramref name="type" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-743">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-744">
            <paramref name="control" />이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-744">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Page page, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (page, type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-745">
            <see langword="onsubmit" /> 문을 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-745">The page object that is registering the <see langword="onsubmit" /> statement.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-746">클라이언트 스크립트 문의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-746">The type of the client script statement.</span>
          </span>
          <span data-ttu-id="6a7c3-747">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-747">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-748">스크립트 문의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-748">A unique identifier for the script statement.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-749">등록할 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-749">The script to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-750">폼이 전송될 때 실행되는 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤과 함께 사용되는 컨트롤에 대해 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 ECMAScript(JavaScript) 코드를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-750">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-751">이 방법으로 JavaScript 코드를 등록 하면 다음 포함 되도록 비동기 포스트백이 발생할 때마다 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-751">Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7c3-752">이전 비동기 포스트백에서 코드는 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-752">Code from any earlier asynchronous postbacks is not removed.</span></span> <span data-ttu-id="6a7c3-753">코드에 대 한 모든 기존 코드를 추가 하는 새 비동기 포스트백의 `onsubmit` 문.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-753">New asynchronous postbacks append code to any existing code for the `onsubmit` statement.</span></span>  
  
 <span data-ttu-id="6a7c3-754">내에 있는 컨트롤에 대 한 코드를 등록 하는 <xref:System.Web.UI.UpdatePanel> 코드가 등록 하도록 제어할 경우에만 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트, 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-754">To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-755">부분 페이지 업데이트에 고 초기 페이지 렌더링 시 한 번만 코드를 등록 하려면 사용 되지 않는 하는 JavaScript 코드를 등록 하려는 경우는 <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-755">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-756">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-756">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-757">
            <paramref name="page" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-757">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-758">\- 또는 -  <paramref name="type" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-758">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-759">포스트백을 위해 등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-759">The control to register for postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-760">컨트롤을 포스트백의 트리거로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-760">Registers a control as a trigger for a postback.</span>
          </span>
          <span data-ttu-id="6a7c3-761">이 메서드는 비동기 포스트백을 수행하는 <see cref="T:System.Web.UI.UpdatePanel" /> 컨트롤 내에 있는 포스트백 컨트롤을 구성하는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-761">This method is used to configure postback controls inside an <see cref="T:System.Web.UI.UpdatePanel" /> control that would otherwise perform asynchronous postbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-762">사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> 메서드 내에 있는 포스트백 컨트롤을 등록 하는 <xref:System.Web.UI.UpdatePanel> 트리거로 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-762">Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers.</span></span> <span data-ttu-id="6a7c3-763">이 메서드를 사용 하 여 등록 되어 있는 컨트롤 전체 페이지를 업데이트 하는 대신 업데이트는 <xref:System.Web.UI.UpdatePanel> 컨트롤의 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-763">Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="6a7c3-764">이 메서드를 포스트백 컨트롤을 등록 한 <xref:System.Web.UI.UpdatePanel> 이러한 컨트롤은 기본적으로 비동기 포스트백을 수행 하지 않기 때문에 컨트롤에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-764">Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.</span></span>  
  
 <span data-ttu-id="6a7c3-765">트리거를 사용 하 여 선언적으로 추가할 수 있습니다는 `Triggers` 의 요소는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-765">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="6a7c3-766">Visual Studio에서 디자이너를 사용 하 여 **UpdatePanelTrigger 컬렉션 편집기** 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-766">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptControl&lt;TScriptControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterScriptControl&lt;TScriptControl&gt; (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptControl&lt;(class System.Web.UI.Control, class System.Web.UI.IScriptControl) TScriptControl&gt;(!!TScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptControl(Of TScriptControl As {Control, IScriptControl}) (scriptControl As TScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TScriptControl&gt;&#xA; where TScriptControl : System::Web::UI::Control, System::Web::UI::IScriptControl virtual void RegisterScriptControl(TScriptControl scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)&#xA;override this.RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)" Usage="scriptManager.RegisterScriptControl scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptControl``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TScriptControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="scriptControl" Type="TScriptControl" />
      </Parameters>
      <Docs>
        <typeparam name="TScriptControl">
          <span data-ttu-id="6a7c3-767">
            <see cref="T:System.Web.UI.IScriptControl" /> 인터페이스를 구현하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-767">A control that implements the <see cref="T:System.Web.UI.IScriptControl" /> interface.</span>
          </span>
        </typeparam>
        <param name="scriptControl">
          <span data-ttu-id="6a7c3-768">등록할 스크립트 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-768">The script control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-769">스크립트 컨트롤을 현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-769">Registers a script control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-770">이 메서드는 주로 컨트롤 개발자가 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-770">This method is primarily for use by control developers.</span></span> <span data-ttu-id="6a7c3-771">호출의 <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> 메서드 중 사용자 지정 ASP.NET Ajax 스크립트 컨트롤에서 해당 `onInit` 페이지와 해당 컨트롤을 등록 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-771">Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="6a7c3-772">부분 페이지 렌더링에 참여 하는 ASP.NET Ajax 스크립트 컨트롤을 등록 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-772">An ASP.NET Ajax script control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="6a7c3-773"><xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> 하는 동안 처리 되는 스크립트 컨트롤의 내부 목록에 지정된 된 extender 컨트롤을 추가 하는 메서드는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-773">The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-774">
            <paramref name="scriptControl" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-774">
              <paramref name="scriptControl" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterScriptDescriptors">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-775">클라이언트 컨트롤, 구성 요소 또는 동작을 나타내는 클라이언트 개체를 지원하는 스크립트를 반환하려면 <see cref="T:System.Web.UI.ScriptControl" /> 또는 <see cref="T:System.Web.UI.ExtenderControl" /> 클래스를 다시 호출하도록 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에 지시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-775">Instructs the <see cref="T:System.Web.UI.ScriptManager" /> control to  call back to the <see cref="T:System.Web.UI.ScriptControl" /> or <see cref="T:System.Web.UI.ExtenderControl" /> classes in order to return scripts that support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IExtenderControl extenderControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (extenderControl As IExtenderControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IExtenderControl ^ extenderControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors extenderControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extenderControl" Type="System.Web.UI.IExtenderControl" />
      </Parameters>
      <Docs>
        <param name="extenderControl">
          <span data-ttu-id="6a7c3-776">스크립트 설명자가 등록되는 extender 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-776">The extender control for which script descriptors will be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-777">클라이언트 컨트롤, 구성 요소 또는 동작을 나타내는 클라이언트 개체를 지원하도록 렌더링해야 하는 인스턴스 스크립트를 반환하기 위해 <see cref="T:System.Web.UI.ExtenderControl" /> 클래스를 다시 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-777">Calls back to an <see cref="T:System.Web.UI.ExtenderControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-778"><xref:System.Web.UI.ExtenderControl> 클래스는 <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> 메서드에서 해당 <xref:System.Web.UI.Control.Render%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-778">The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a7c3-779">
            <para>파생 하는 경우는 <see cref="T:System.Web.UI.ExtenderControl" /> 클래스 및 재정의 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 수 있지만 메서드를 기본 클래스 메서드를 호출 하지 않으면 호출 해야 합니다는 <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" /> 메서드. 이 통해는 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 나타내는 클라이언트 개체를 지원 하는 인스턴스 스크립트를 렌더링 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-779">
              <para>If you derive from the <see cref="T:System.Web.UI.ExtenderControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" /> method. This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (scriptControl As IScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IScriptControl ^ scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IScriptControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptControl" Type="System.Web.UI.IScriptControl" />
      </Parameters>
      <Docs>
        <param name="scriptControl">
          <span data-ttu-id="6a7c3-780">스크립트 설명자가 등록되는 스크립트 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-780">The script control for which script descriptors will be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-781">클라이언트 컨트롤, 구성 요소 또는 동작을 나타내는 클라이언트 개체를 지원하도록 렌더링해야 하는 인스턴스 스크립트를 반환하기 위해 <see cref="T:System.Web.UI.ScriptControl" /> 클래스를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-781">Calls a <see cref="T:System.Web.UI.ScriptControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-782"><xref:System.Web.UI.ScriptControl> 호출 클래스는 <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> 메서드 중 해당 <xref:System.Web.UI.Control.Render%2A> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-782">The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a7c3-783">
            <para>파생 하는 경우는 <see cref="T:System.Web.UI.ScriptControl" /> 클래스 및 재정의 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 수 있지만 메서드를 기본 클래스 메서드를 호출 하지 않으면 호출 해야 합니다는 <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" /> 메서드. 이 통해는 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 나타내는 클라이언트 개체를 지원 하는 인스턴스 스크립트를 렌더링 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-783">
              <para>If you derive from the <see cref="T:System.Web.UI.ScriptControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" /> method. This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-784">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 시작 스크립트 블록을 등록하고 해당 스크립트 블록을 페이지에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-784">Registers a startup script block with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-785">클라이언트 스크립트 블록을 등록하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-785">The control that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-786">클라이언트 스크립트 블록의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-786">The type of the client script block.</span>
          </span>
          <span data-ttu-id="6a7c3-787">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-787">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-788">스크립트 블록의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-788">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-789">등록할 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-789">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="6a7c3-790">스크립트 블록을 <see langword="&lt;script&gt;" /> 및 <see langword="&lt;/script&gt;" /> 태그로 묶으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-790">
              <see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-791">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 <see cref="T:System.Web.UI.UpdatePanel" /> 내에 있는 컨트롤에 대해 시작 스크립트 블록을 등록한 후 해당 스크립트 블록을 페이지에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-791">Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, and adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-792">사용 된 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> 부분 페이지 렌더링 호환 되는 페이지에 대 한 시작 스크립트 블록을 등록 하는 메서드는 Microsoft Ajax 라이브러리 종속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-792">You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="6a7c3-793">블록을 등록 하는 컨트롤 안에 있을 경우에이 방법을 사용 하 여 등록 된 시작 스크립트 블록 페이지로 보내집니다는 <xref:System.Web.UI.UpdatePanel> 업데이트 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-793">Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="6a7c3-794">비동기 포스트백이 발생할 때마다 시작 스크립트 블록을 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-794">To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-795">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트를 등록 하려면 사용 되지 않는 시작 스크립트를 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-795">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-796">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-796">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="6a7c3-797">스크립트 블록으로 렌더링 되는 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> 메서드 페이지 로드가 완료 되 면 하기 전에 실행 페이지의 클라이언트 `onload` 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-797">The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised.</span></span> <span data-ttu-id="6a7c3-798">시작 스크립트 블록은 렌더링된 된 ASP.NET 페이지의 맨 아래에 바로 앞의 `</form>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-798">Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.</span></span>  
  
 <span data-ttu-id="6a7c3-799">사용 하 여 등록 된 시작 스크립트 블록 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> 등록은 순서에 출력 되 보장이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-799">Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="6a7c3-800">사용 하 여 시작 스크립트 블록의 순서가 중요 한 경우는 <xref:System.Text.StringBuilder> 단일 문자열에 스크립트 블록을 수집 하기 위해 개체를 단일 시작 스크립트를 모두으로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-800">If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a7c3-801">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-801">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6a7c3-802">\- 또는 -  <paramref name="type" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-802">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a7c3-803">
            <paramref name="control" />이 페이지의 컨트롤 트리에 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-803">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="6a7c3-804">클라이언트 스크립트 블록을 등록하는 페이지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-804">The page object that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6a7c3-805">클라이언트 스크립트 블록의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-805">The type of the client script block.</span>
          </span>
          <span data-ttu-id="6a7c3-806">이 매개 변수는 일반적으로 스크립트를 등록하는 컨트롤의 형식을 검색하기 위해 typeof 연산자(C#) 또는 GetType 연산자(Visual Basic)를 사용하여 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-806">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="6a7c3-807">스크립트 블록의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-807">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="6a7c3-808">등록할 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-808">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="6a7c3-809">스크립트 블록을 <see langword="&lt;script&gt;" /> 및 <see langword="&lt;/script&gt;" /> 태그로 묶으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-809">
              <see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-810">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤을 사용하여 비동기 포스트백이 발생할 때마다 시작 스크립트 블록을 등록하고 페이지에 스크립트 블록을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-810">Registers a startup script block for every asynchronous postback with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-811">이 메서드를 사용 하 여 비동기 포스트백이 발생할 때마다 포함 된 시작 스크립트 블록을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-811">You use this method to register a startup script block that is included every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="6a7c3-812">내에 있는 컨트롤에 대 한 스크립트 블록을 등록 하려면 한 <xref:System.Web.UI.UpdatePanel> 스크립트 블록은 등록 되도록 경우에만 <xref:System.Web.UI.UpdatePanel> 컨트롤을 업데이트, 사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 이 메서드의 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-812">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="6a7c3-813">부분 페이지 업데이트에 및 초기 페이지 렌더링 시 한 번만 스크립트를 등록 하려면 사용 되지 않는 시작 스크립트를 등록 하려는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-813">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="6a7c3-814">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 개체는 <xref:System.Web.UI.Page.ClientScript%2A> 페이지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-814">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="scriptManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="6a7c3-815">페이지에 쓸 컨트롤의 내용을 받는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-815">An object that receives the content of the control to write to the page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-816">지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 사용하여 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤의 내용을 브라우저에 렌더링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-816">Renders the <see cref="T:System.Web.UI.ScriptManager" /> control's content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-817">이 메서드는 컨트롤 개발자가 확장 된 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-817">This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a7c3-818">
            <para>이 메서드를 재정의할 경우 기본 호출 <see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" /> 메서드는 클래스를 정의 하는 클라이언트 스크립트 페이지 렌더링 되도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-818">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" /> method so that the client script that defines the  class is rendered on the page.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompositeScriptReference As EventHandler(Of CompositeScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::CompositeScriptReferenceEventArgs ^&gt; ^ ResolveCompositeScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompositeScriptReference : EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " Usage="member this.ResolveCompositeScriptReference : System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-819">복합 스크립트가 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에 등록될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-819">Occurs when a composite script is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveScriptReference As EventHandler(Of ScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::ScriptReferenceEventArgs ^&gt; ^ ResolveScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveScriptReference : EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " Usage="member this.ResolveScriptReference : System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-820">
            <see cref="P:System.Web.UI.ScriptManager.Scripts" /> 컬렉션의 멤버가 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤에 등록될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-820">Occurs when a member of the <see cref="P:System.Web.UI.ScriptManager.Scripts" /> collection is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-821">이 이벤트는 한 번의 각 멤버에 대 한는 <xref:System.Web.UI.ScriptManager.Scripts%2A> 페이지의 컬렉션 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-821">This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event.</span></span> <span data-ttu-id="6a7c3-822">이 이벤트를 사용 하 여 페이지에 스크립트를 렌더링 하기 전에 업데이트를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-822">Use this event to perform any updates before the script is rendered to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleService">
      <MemberSignature Language="C#" Value="public System.Web.UI.RoleServiceManager RoleService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.RoleServiceManager RoleService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.RoleService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleService As RoleServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::RoleServiceManager ^ RoleService { System::Web::UI::RoleServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleService : System.Web.UI.RoleServiceManager" Usage="System.Web.UI.ScriptManager.RoleService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.RoleServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-823">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스와 관련된 <see cref="T:System.Web.UI.RoleServiceManager" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-823">Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-824">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 대한 <see cref="T:System.Web.UI.RoleServiceManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-824">The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-825"><xref:System.Web.UI.RoleServiceManager> 이 속성에서 반환 되는 개체 역할 서비스에 등록 된 페이지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-825">The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page.</span></span> <span data-ttu-id="6a7c3-826">역할 서비스를 정의할 수 있습니다는 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-826">The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="6a7c3-827">ASP.NET 역할 서비스를 사용 하거나 사용자 지정 역할 서비스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-827">You can use the ASP.NET role service or use a custom role service.</span></span> <span data-ttu-id="6a7c3-828">사용자 지정 서비스를 포함 하 여 태그에 추가할 수 있습니다는 `RoleService` 요소 안에 `asp:ScriptManager` 페이지에서 다음 예제 에서처럼 요소:</span><span class="sxs-lookup"><span data-stu-id="6a7c3-828">You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="True" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="6a7c3-829">또한 프로그래밍 방식으로 구성할 수 있습니다는 <xref:System.Web.UI.RoleServiceManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-829">You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object.</span></span> <span data-ttu-id="6a7c3-830">서비스에 등록 된는 <xref:System.Web.UI.ScriptManager> 페이지의 컨트롤 <xref:System.Web.UI.Control.PreRender> 수명 주기 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-830">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptMode ScriptMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ScriptMode ScriptMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptMode As ScriptMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptMode ScriptMode { System::Web::UI::ScriptMode get(); void set(System::Web::UI::ScriptMode value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptMode : System.Web.UI.ScriptMode with get, set" Usage="System.Web.UI.ScriptManager.ScriptMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-831">디버그 또는 릴리스 버전의 클라이언트 스크립트 라이브러리가 렌더링되는지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-831">Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-832">현재 모드를 나타내는 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-832">The enumeration value that indicates the current mode.</span>
          </span>
          <span data-ttu-id="6a7c3-833">기본값은 <see cref="F:System.Web.UI.ScriptMode.Auto" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-833">The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-834"><xref:System.Web.UI.ScriptManager.ScriptMode%2A> 속성 지정 여부는 <xref:System.Web.UI.ScriptManager> 컨트롤 렌더링 디버그 또는 릴리스 버전의 클라이언트 스크립트 라이브러리가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-834">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries.</span></span> <span data-ttu-id="6a7c3-835">이 값은 page 지시문 및 구성 파일에서 설정 된 값으로 대체 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-835">This value can be superseded by values that are set in the configuration file and in the page directive.</span></span>  
  
 <span data-ttu-id="6a7c3-836">다음 표에서이 속성에 대 한 유효한 값을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-836">The following table lists the valid values for this property.</span></span>  
  
|<span data-ttu-id="6a7c3-837">값</span><span class="sxs-lookup"><span data-stu-id="6a7c3-837">Value</span></span>|<span data-ttu-id="6a7c3-838">정의</span><span class="sxs-lookup"><span data-stu-id="6a7c3-838">Definition</span></span>|  
|-----------|----------------|  
|<xref:System.Web.UI.ScriptMode.Auto>|<span data-ttu-id="6a7c3-839">디버그 버전의 클라이언트 스크립트 라이브러리 웹 페이지에서 사용 되는 경우는 `retail` 구성 요소의 특성이로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-839">Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`.</span></span> <span data-ttu-id="6a7c3-840">그렇지 않은 경우 릴리스 버전의 클라이언트 스크립트 라이브러리가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-840">Otherwise, the release versions of client script libraries are used.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Inherit>|<span data-ttu-id="6a7c3-841">에 적용 될 때는 <xref:System.Web.UI.ScriptManager.ScriptMode%2A> 의 속성은 <xref:System.Web.UI.ScriptManager> 개체를이 값은 동일 <xref:System.Web.UI.ScriptMode.Auto>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-841">When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Debug>|<span data-ttu-id="6a7c3-842">디버그 버전의 클라이언트 스크립트 라이브러리는 하지 않는 한 웹 페이지에서 사용 되는 `retail` 구성 요소의 특성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-842">Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `true`.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Release>|<span data-ttu-id="6a7c3-843">경우가 아니면 릴리스 버전의 클라이언트 스크립트 라이브러리가 웹 페이지에서 사용 되는 `retail` 구성 요소의 특성이로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-843">Release versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6a7c3-844">`debug` 지시문의 특성 Ajax 사용 ASP.NET 응용 프로그램에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-844">The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="6a7c3-845"><xref:System.Web.UI.ScriptManager> 컨트롤 Web.config 파일 및 설정에 대해서만 사용 하 여 해당 <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> 및 <xref:System.Web.UI.ScriptManager.ScriptMode%2A> 디버그 스크립트를 렌더링할지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-845">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="6a7c3-846">자세한 내용은 참조 [디버깅 및 추적 Ajax 응용 프로그램 개요](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-846">For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a7c3-847">
            <see cref="P:System.Web.UI.ScriptManager.ScriptMode" />속성이 <see cref="T:System.Web.UI.ScriptMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-847">The <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> property is not one of the <see cref="T:System.Web.UI.ScriptMode" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ScriptMode" />
      </Docs>
    </Member>
    <Member MemberName="ScriptPath">
      <MemberSignature Language="C#" Value="public string ScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptPath : string with get, set" Usage="System.Web.UI.ScriptManager.ScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Set the Path property on each individual ScriptReference instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-848">ASP.NET AJAX 및 사용자 지정 스크립트 파일의 경로를 빌드하는 데 사용되는 위치의 루트 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-848">Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-849">스크립트 파일이 저장되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-849">The location where script files are stored.</span>
          </span>
          <span data-ttu-id="6a7c3-850">기본값은 빈 문자열("")이며 상대 경로로 해석됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-850">The default value is an empty string (""), which is interpreted as a relative path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-851"><xref:System.Web.UI.ScriptManager.ScriptPath%2A> 속성을 사용 하면 절대, 상대 지정할 수 있습니다 또는 페이지에서 모든 스크립트에 대 한 응용 프로그램 상대 URL을 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-851">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page.</span></span> <span data-ttu-id="6a7c3-852">현재 등록 되어 있는 사용자 지정 및 제 3 자 스크립트 블록을 포함이 <xref:System.Web.UI.ScriptManager> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-852">This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance.</span></span> <span data-ttu-id="6a7c3-853"><xref:System.Web.UI.ScriptManager.ScriptPath%2A> 속성은 일반적으로 한 특성으로 선언적으로 설정 된 `ScriptManager` 코드에도 페이지에 요소를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-853">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.</span></span>  
  
 <span data-ttu-id="6a7c3-854">경우는 `path` 특성 또는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 에 대 한 속성이 설정 되어는 <xref:System.Web.UI.ScriptReference> 개체는 <xref:System.Web.UI.ScriptManager.Scripts%2A> 컬렉션, 경로 값을 재정의 <xref:System.Web.UI.ScriptManager.ScriptPath%2A> 값 <xref:System.Web.UI.ScriptReference> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-854">If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance.</span></span>  
  
 <span data-ttu-id="6a7c3-855">되지 않은 경우 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 값을 지정는 <xref:System.Web.UI.ScriptManager> 에서 정의 된 디렉터리를 검색 하는 컨트롤의 <xref:System.Web.UI.ScriptManager.ScriptPath%2A> 으로 속성을 확인 하는 스크립트 참조의 <xref:System.Web.UI.ScriptReference.Name%2A> 또는 <xref:System.Web.UI.ScriptReference.Assembly%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-855">If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptResourceMapping">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.ScriptResourceMapping ScriptResourceMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScriptResourceMapping As ScriptResourceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::ScriptResourceMapping ^ ScriptResourceMapping { System::Web::UI::ScriptResourceMapping ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScriptResourceMapping : System.Web.UI.ScriptResourceMapping" Usage="System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptResourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-856">
            <see cref="T:System.Web.UI.ScriptResourceMapping" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-856">Gets a <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-857">
            <see cref="T:System.Web.UI.ScriptResourceMapping" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-857">A <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-858">정적 <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> 속성에서 반환 된 <xref:System.Web.UI.ScriptResourceMapping> 스크립트 리소스 (스크립트 리디렉션)의 위치를 나타내는 매핑의 컬렉션을 포함할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-858">The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection).</span></span> <span data-ttu-id="6a7c3-859">이름/어셈블리 쌍 또는 이름에 따라이 매핑 컬렉션을 매핑할 수 있으며를 가리킬 수 있습니다는 <xref:System.Web.UI.ScriptResourceDefinition> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-859">This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7c3-860">다음 예에서는 추가 하는 방법을 보여 줍니다는 <xref:System.Web.UI.ScriptResourceDefinition> 에서 참조할 수 있는 개체는 <xref:System.Web.UI.ScriptManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-860">The following examples shows how to add a <xref:System.Web.UI.ScriptResourceDefinition> object that can be referenced by a <xref:System.Web.UI.ScriptManager> object.</span></span> <span data-ttu-id="6a7c3-861">다음 코드를 Global.asax 파일에 추가 `Application_Start` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-861">Add the following code to the Global.asax file in the `Application_Start` event.</span></span>  
  
```csharp  
ScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js";  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js";  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js";  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js";  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", null, myScriptResDef);  
```  
  
```vb  
Dim myScriptResDef As New ScriptResourceDefinition()  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js"  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js"  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js"  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", Nothing, myScriptResDef)  
```  
  
 <span data-ttu-id="6a7c3-862">ASP.NET Web Forms 페이지 (.aspx 파일)에 대 한 태그에서 안에 다음 태그를 추가 `form` 요소와 모든 요소 또는 jQuery 스크립트를 사용 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-862">In the markup for an ASP.NET Web Forms page (.aspx file), add the following markup inside the `form` element and before any elements or code that uses jQuery script.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="jquery"/>  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReferenceCollection Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReferenceCollection Scripts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As ScriptReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReferenceCollection ^ Scripts { System::Web::UI::ScriptReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scripts : System.Web.UI.ScriptReferenceCollection" Usage="System.Web.UI.ScriptManager.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-863">각각 클라이언트에 렌더링되는 스크립트 파일을 나타내는 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 개체가 포함된 <see cref="T:System.Web.UI.ScriptReference" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-863">Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains the <see cref="T:System.Web.UI.ScriptReference" /> objects, each of which represents a script file rendered to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-864">
            <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 인스턴스의 <see cref="T:System.Web.UI.ScriptManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-864">The <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object of the <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-865"><xref:System.Web.UI.ScriptReferenceCollection> 이 속성에서 반환 되는 개체의 컬렉션인 <xref:System.Web.UI.ScriptReference> 각각 스크립트 파일을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-865">The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file.</span></span> <span data-ttu-id="6a7c3-866">컬렉션에는 사용자 지정 스크립트 파일 및 ASP.NET에 Ajax 기능을 위해 필요한 모든 스크립트 파일에 대 한 참조가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-866">The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files.</span></span> <span data-ttu-id="6a7c3-867">렌더링할 사용자 지정 스크립트 파일에서 정의할 수는 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-867">Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="6a7c3-868">태그의 컬렉션에 추가 하 여 스크립트 파일을 추가할 수 있습니다 `asp:ScriptReference` 요소를 사용 하는 `Scripts` 노드 내에서 `asp:ScriptManager` 다음 예제와 같이 페이지에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-868">You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="Script.js" />  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="6a7c3-869">추가할 수도 있습니다는 <xref:System.Web.UI.ScriptReference> 개체는 <xref:System.Web.UI.ScriptManager.Scripts%2A> 사용 하 여 프로그래밍 방식으로 컬렉션은 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 의 메서드는 <xref:System.Web.UI.ScriptReferenceCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-869">You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="6a7c3-870"><xref:System.Web.UI.ScriptManager> 제어 하는 동안 컨트롤의 스크립트 파일을 등록 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-870">The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 <span data-ttu-id="6a7c3-871"><xref:System.Web.UI.ScriptManager.Scripts%2A> 컬렉션 핵심 Microsoft Ajax Library 스크립트를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-871">The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core Microsoft Ajax Library scripts.</span></span> <span data-ttu-id="6a7c3-872">핵심 라이브러리의 스크립트에에서 자동으로 렌더링 되는 에 등록 하지 않아도 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-872">The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="6a7c3-873">그러나 코어 스크립트 또는 모든 제어 스크립트를 무시 하 고 스크립트의 다른 버전으로 대체 하려는 경우 버전을 추가할 수는 <xref:System.Web.UI.ScriptManager.Scripts%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-873">However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Web.UI.ServiceReferenceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ServiceReferenceCollection Services" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ServiceReferenceCollection ^ Services { System::Web::UI::ServiceReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Services : System.Web.UI.ServiceReferenceCollection" Usage="System.Web.UI.ScriptManager.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ServiceReferenceCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ServiceReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-874">ASP.NET이 클라이언트에서 AJAX 기능을 위해 노출하는 각 웹 서비스에 대해 <see cref="T:System.Web.UI.ServiceReference" /> 개체가 포함된 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-874">Gets a <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each Web service that ASP.NET exposes on the client for Ajax functionality.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-875">현재 <see cref="T:System.Web.UI.ScriptManager" /> 인스턴스에 대한 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-875">The <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-876"><xref:System.Web.UI.ServiceReferenceCollection> 이 속성에서 반환 되는 개체의 컬렉션인 <xref:System.Web.UI.ServiceReference> 등록 된 웹 서비스를 나타내는 각각의 개체는 <xref:System.Web.UI.ScriptManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-876">The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control .</span></span> <span data-ttu-id="6a7c3-877">서비스를 정의할 수는 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-877">You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="6a7c3-878">서비스를 추가 하 여 태그의 컬렉션에 추가할 수 있습니다는 `asp:ServiceReference` 요소를 한 `Services` 요소 안에 `asp:ScriptManager` 다음 예제와 같이 페이지에서 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-878">You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Services>  
    <asp:ServiceReference Path="Service.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="6a7c3-879">또한 프로그래밍 방식으로 추가할 수 있습니다는 <xref:System.Web.UI.ServiceReference> 개체를 <xref:System.Web.UI.ScriptManager.Services%2A> 사용 하 여 컬렉션의 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 의 메서드는 <xref:System.Web.UI.ServiceReferenceCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-879">You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="6a7c3-880">서비스에 등록 된는 <xref:System.Web.UI.ScriptManager> 페이지의 <xref:System.Web.UI.Control.PreRender> 수명 주기 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-880">Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-881">브라우저 포커스를 지정된 컨트롤로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-881">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : string -&gt; unit" Usage="scriptManager.SetFocus clientID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">
          <span data-ttu-id="6a7c3-882">포커스를 받는 컨트롤의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-882">The ID of the control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-883">브라우저 포커스를 ID로 지정된 컨트롤로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-883">Sets the browser focus to the control specified by ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-884"><xref:System.Web.UI.ScriptManager.SetFocus%2A> 처럼 사용할 수 있는 방법의 <xref:System.Web.UI.Page.SetFocus%2A> 에 대 한 메서드는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-884">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="6a7c3-885">두 메서드는 지정한 ID 가진 컨트롤을 웹 페이지에 있는 활성 컨트롤을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-885">Both methods make the control with the specified ID the active control on the Web page.</span></span> <span data-ttu-id="6a7c3-886"><xref:System.Web.UI.ScriptManager.SetFocus%2A> 의 메서드는 <xref:System.Web.UI.ScriptManager> 클래스는 비동기 포스트백 도중 포커스를 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-886">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-887">페이지가 처음 렌더링할 때 및 다시 게시 하는 동안는 <xref:System.Web.UI.ScriptManager.SetFocus%2A> 메서드 호출의 <xref:System.Web.UI.Page.SetFocus%2A> 의 메서드는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-887">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="6a7c3-888">여러 번 호출 하는 경우는 <xref:System.Web.UI.ScriptManager.SetFocus%2A> 메서드를 마지막 호출에서 컨트롤이 포커스를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-888">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.String)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : System.Web.UI.Control -&gt; unit" Usage="scriptManager.SetFocus control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6a7c3-889">포커스를 받을 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-889">The control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-890">브라우저 포커스를 지정된 컨트롤로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-890">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-891"><xref:System.Web.UI.ScriptManager.SetFocus%2A> 처럼 사용할 수 있는 방법의 <xref:System.Web.UI.Page.SetFocus%2A> 에 대 한 메서드는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-891">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="6a7c3-892">두 메서드는 지정된 된 컨트롤이 웹 페이지에 있는 활성 컨트롤을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-892">Both methods make the specified control the active control on the Web page.</span></span> <span data-ttu-id="6a7c3-893"><xref:System.Web.UI.ScriptManager.SetFocus%2A> 의 메서드는 <xref:System.Web.UI.ScriptManager> 클래스는 비동기 포스트백 도중 포커스를 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-893">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="6a7c3-894">페이지가 처음 렌더링할 때 및 다시 게시 하는 동안는 <xref:System.Web.UI.ScriptManager.SetFocus%2A> 메서드 호출의 <xref:System.Web.UI.Page.SetFocus%2A> 의 메서드는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-894">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="6a7c3-895">여러 번 호출 하는 경우는 <xref:System.Web.UI.ScriptManager.SetFocus%2A> 메서드에 대 한 마지막 호출에 지정 된 컨트롤이 포커스를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-895">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsPartialRendering">
      <MemberSignature Language="C#" Value="public bool SupportsPartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-896">클라이언트에서 부분 페이지 렌더링을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-896">Gets a value that indicates whether the client supports partial-page rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-897">클라이언트에서 부분 페이지 렌더링을 지원하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-897">
              <see langword="true" /> if the client supports partial-page rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a7c3-898">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-898">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-899">경우는 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 속성이 `false`, <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 속성에서 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-899">If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="6a7c3-900">부분 페이지 렌더링 지원 되는지 여부를 결정 하는 기본 검사 반환 `true` 다음 조건에 해당할 경우:</span><span class="sxs-lookup"><span data-stu-id="6a7c3-900">The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6a7c3-901"><xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> 속성 값 보다 크거나 1.0과 같지 않음 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-901">The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="6a7c3-902"><xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> 속성 값 보다 크거나 1.0과 같지 않음 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-902">The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="6a7c3-903"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> 속성 값으로 설정 되어 있어야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-903">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`.</span></span>  
  
 <span data-ttu-id="6a7c3-904">경우는 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 속성이 명시적으로, 이러한 검사는 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-904">When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.</span></span>  
  
 <span data-ttu-id="6a7c3-905">컨트롤 개발자는 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 부분 페이지 렌더링을 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-905">Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a7c3-906">
            <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 속성이 <see langword="false" />로, <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 속성이 <see langword="true" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-906">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is <see langword="false" /> and the <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="6a7c3-907">\- 또는 -  <see cref="E:System.Web.UI.Control.Init" /> 이벤트가 발생한 후 <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 속성이 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-907">\- or -  The <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set after the <see cref="E:System.Web.UI.Control.Init" /> event.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <span data-ttu-id="6a7c3-908">컨트롤의 키 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-908">The key-identifier for the control.</span>
          </span>
        </param>
        <param name="postCollection">
          <span data-ttu-id="6a7c3-909">들어오는 모든 게시 데이터의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-909">A collection of all incoming post data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-910">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-910">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a7c3-911">포스트백을 실행한 후에 <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-911">
              <see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-912">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="6a7c3-912">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6a7c3-913"><xref:System.Web.UI.ScriptManager> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-913">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-914">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-914">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-915">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="6a7c3-915">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6a7c3-916"><xref:System.Web.UI.ScriptManager> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-916">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="6a7c3-917">웹 페이지의 기록 상태를 나타내는 키/값 쌍의 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-917">A string of key/value pairs that represent the history state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a7c3-918">
            <see cref="T:System.Web.UI.ScriptManager" /> 컨트롤이 포스트백 이벤트를 처리하고 웹 페이지의 기록 상태를 로드할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-918">Enables the <see cref="T:System.Web.UI.ScriptManager" /> control to process a postback event and load the history state of the Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.IsSecureConnection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IScriptManager.IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSecureConnection As Boolean Implements IScriptManager.IsSecureConnection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IScriptManager.IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue) = System::Web::UI::IScriptManager::RegisterArrayDeclaration;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="arrayName">To be added.</param>
        <param name="arrayValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterClientScriptBlock;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url) = System::Web::UI::IScriptManager::RegisterClientScriptInclude;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName) = System::Web::UI::IScriptManager::RegisterClientScriptResource;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterDispose">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript) = System::Web::UI::IScriptManager::RegisterDispose;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="disposeScript">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode) = System::Web::UI::IScriptManager::RegisterExpandoAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="controlId">To be added.</param>
        <param name="attributeName">To be added.</param>
        <param name="attributeValue">To be added.</param>
        <param name="encode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterHiddenField">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldValue) = System::Web::UI::IScriptManager::RegisterHiddenField;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="hiddenFieldName">To be added.</param>
        <param name="hiddenFieldValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script) = System::Web::UI::IScriptManager::RegisterOnSubmitStatement;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterPostBackControl">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterPostBackControl(System::Web::UI::Control ^ control) = System::Web::UI::IScriptManager::RegisterPostBackControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterStartupScript">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterStartupScript;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.SetFocusInternal">
      <MemberSignature Language="C#" Value="void IScriptManager.SetFocusInternal (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.SetFocusInternal(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#SetFocusInternal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetFocusInternal (clientID As String) Implements IScriptManager.SetFocusInternal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.SetFocusInternal(System::String ^ clientID) = System::Web::UI::IScriptManager::SetFocusInternal;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.ScriptManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a7c3-919">이 값을 설정할 수 없도록 기본 <see cref="P:System.Web.UI.Control.Visible" /> 클래스에서 상속된 <see cref="T:System.Web.UI.Control" /> 속성을 재정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-919">Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property that is inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a7c3-920">모든 경우에 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-920">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7c3-921"><xref:System.Web.UI.Control.Visible%2A> 속성에서 재정의 되는 <xref:System.Web.UI.ScriptManager> 이 값을 설정할 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-921">The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value.</span></span> <span data-ttu-id="6a7c3-922">A <xref:System.NotImplementedException> 값이이 속성에 할당 하는 경우 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a7c3-922">A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="6a7c3-923">
            <see cref="P:System.Web.UI.ScriptManager.Visible" /> 속성에 값이 할당된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a7c3-923">A value is assigned to the <see cref="P:System.Web.UI.ScriptManager.Visible" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>