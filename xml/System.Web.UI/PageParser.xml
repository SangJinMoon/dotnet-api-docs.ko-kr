<Type Name="PageParser" FullName="System.Web.UI.PageParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99dbe559e33494be40bea51cc8be0c72e4a4d492" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageParser : System.Web.UI.TemplateControlParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageParser extends System.Web.UI.TemplateControlParser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageParser&#xA;Inherits TemplateControlParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParser sealed : System::Web::UI::TemplateControlParser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControlParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dadba-101">.aspx 파일에 대한 파서를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dadba-101">Implements a parser for .aspx files.</span>
      </span>
      <span data-ttu-id="dadba-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dadba-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-103">ASP.NET은.aspx 페이지를 구문 분석 하려면이 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-103">ASP.NET uses this class to parse .aspx pages.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dadba-104">
            <see cref="T:System.Web.UI.PageParser" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-104">Initializes a new instance of the <see cref="T:System.Web.UI.PageParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-105">이 생성자는 페이지를 구문 분석 시 사용할 기본값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-105">This constructor sets default values to be used during page parsing.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultApplicationBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultApplicationBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultApplicationBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultApplicationBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultApplicationBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultApplicationBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadba-106">
            <see cref="T:System.Web.HttpApplication" /> 인스턴스가 파생되는 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-106">Gets or sets the type from which the <see cref="T:System.Web.HttpApplication" /> instance is derived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadba-107">
            <see cref="T:System.Web.HttpApplication" /> 인스턴스가 파생되는 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-107">The type from which the <see cref="T:System.Web.HttpApplication" /> instance is derived.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-108">이 속성 전에 Global.asax 파일에 액세스 해야는 `PreApplicationStart` 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-108">This property should be accessed  in the Global.asax file before the `PreApplicationStart` event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultPageBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultPageBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultPageBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultPageBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultPageBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadba-109">모든 페이지가 파생되는 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-109">Gets or sets the type from which all pages are derived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadba-110">형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-110">The type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-111">이 속성 전에 설정할 수는 `PreApplicationStart` Global.asax 파일에서 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-111">This property can only be set before the `PreApplicationStart` event occurs in the Global.asax file.</span></span> <span data-ttu-id="dadba-112">언제 든 지가이 속성을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-112">This property can be read at any time.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageParserFilterType">
      <MemberSignature Language="C#" Value="public static Type DefaultPageParserFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultPageParserFilterType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultPageParserFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultPageParserFilterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultPageParserFilterType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadba-113">구문 분석 시 사용해야 하는 페이지 파서 필터를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-113">Gets or sets the page parser filter type that should be used at parse time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadba-114">페이지 파서 필터의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-114">The type of the page parser filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-115">하기 전에이 속성을 액세스 하는 `PreApplicationStart` Global.asax 파일에서 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-115">This property should be accessed before the `PreApplicationStart` event occurs in the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultUserControlBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultUserControlBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultUserControlBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultUserControlBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultUserControlBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultUserControlBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadba-116">모든 사용자 컨트롤이 파생되는 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-116">Gets or sets the type from which all user controls are derived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadba-117">사용자 컨트롤이 파생되는 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-117">The type from which user controls are derived.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-118">하기 전에이 속성을 액세스 하는 `PreApplicationStart` Global.asax 파일에서 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-118">This property should be accessed before the `PreApplicationStart` event occurs in the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EnableLongStringsAsResources">
      <MemberSignature Language="C#" Value="public static bool EnableLongStringsAsResources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableLongStringsAsResources" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.EnableLongStringsAsResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableLongStringsAsResources As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableLongStringsAsResources { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadba-119">ASP.NET에서 페이지 또는 컨트롤을 구문 분석할 때 발생하는 긴 문자열의 내부 처리를 최적화해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-119">Gets or sets a value that indicates whether ASP.NET should optimize its internal handling of long strings that are encountered when ASP.NET parses a page or control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadba-120">ASP.NET에서 긴 문자열의 내부 처리를 최적화해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-120">
              <see langword="true" /> if ASP.NET should optimize its internal handling of long strings; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadba-121">기본적으로 ASP.NET 페이지 파서 일시적인 리소스 문자열로 256 개 이상의 문자를 포함 하는 리터럴 문자열을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-121">By default, the ASP.NET page parser converts literal strings that contain 256 or more characters into a temporary resource string.</span></span> <span data-ttu-id="dadba-122">이 속성 설정할 수 있습니다 `false` 이 동작을 사용 하지 않도록 설정 하려면 대신 리터럴 문자열 응답 스트림에 직접 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-122">This property can be set to `false` in order to disable this behavior and instead to write the literal string directly to the response stream.</span></span> <span data-ttu-id="dadba-123">이 속성 전에 Global.asax 파일에만 설정할 수 있습니다는 `PreApplicationStart` 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-123">This property can only be set in the Global.asax file before the `PreApplicationStart` event occurs.</span></span> <span data-ttu-id="dadba-124">언제 든 지가이 속성을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dadba-124">This property can be read at any time.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledPageInstance">
      <MemberSignature Language="C#" Value="public static System.Web.IHttpHandler GetCompiledPageInstance (string virtualPath, string inputFile, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.IHttpHandler GetCompiledPageInstance(string virtualPath, string inputFile, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParser.GetCompiledPageInstance(System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledPageInstance (virtualPath As String, inputFile As String, context As HttpContext) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::IHttpHandler ^ GetCompiledPageInstance(System::String ^ virtualPath, System::String ^ inputFile, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="inputFile" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="dadba-125">요청한 파일의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-125">The virtual path of the requested file.</span>
          </span>
        </param>
        <param name="inputFile">
          <span data-ttu-id="dadba-126">페이지의 실제 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-126">The physical path of the page.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="dadba-127">현재 웹 요청에 대한 정보를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-127">An object that contains information about the current Web request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadba-128">특정 가상 경로에 대해 컴파일된 페이지의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-128">Returns an instance of a compiled page for the specific virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadba-129">요청한 페이지의 컴파일된 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadba-129">Returns the compiled instance of the requested page.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
  </Members>
</Type>