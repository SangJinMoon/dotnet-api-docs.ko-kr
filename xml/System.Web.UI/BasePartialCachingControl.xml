<Type Name="BasePartialCachingControl" FullName="System.Web.UI.BasePartialCachingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5b3cf6e7b2e40a072da1dc006210ba2a1c0b6d1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577951" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasePartialCachingControl : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasePartialCachingControl extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.BasePartialCachingControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasePartialCachingControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasePartialCachingControl abstract : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type BasePartialCachingControl = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.StaticPartialCachingControl" /> 및 <see cref="T:System.Web.UI.PartialCachingControl" /> 클래스에 대한 기본 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.BasePartialCachingControl> 클래스 출력 캐싱을 프로그래밍 시나리오에서 사용자 정의 컨트롤을 나타냅니다. ASP.NET은 컨트롤에 대 한 출력 캐시를 사용 하는 여러 방법을 제공 합니다. 다음 목록에서는 출력 캐싱을 사용 하도록 설정 하는 방법은 설명 합니다.  
  
-   사용 하 여는 `@ OutputCache` 지시문 사용할 수 있도록 출력 선언적 시나리오에서 캐시 합니다.  
  
-   사용 된 <xref:System.Web.UI.PartialCachingAttribute> 클래스를 코드 숨김 파일에서 사용자 정의 컨트롤에 대 한 캐싱을 사용 합니다.  
  
-   사용 하 여는 <xref:System.Web.UI.ControlCachePolicy> 클래스를 사용 하는 프로그래밍 시나리오에서 캐시 설정을 지정 하려면 <xref:System.Web.UI.BasePartialCachingControl> 인스턴스.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 참조를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.BasePartialCachingControl> 값을 설정 하는 클래스는 <xref:System.Web.UI.Control.Parent%2A> 속성입니다. 그런 다음는 <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> 속성을는 <xref:System.Web.Caching.CacheDependency> 컨트롤을 만드는 텍스트 파일에 따라 개체입니다.  
  
 [!code-csharp[BasePartialCachingControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BasePartialCachingControl/CS/dep1cs.ascx#1)]
 [!code-vb[BasePartialCachingControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BasePartialCachingControl/VB/dep1vb.ascx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.UserControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasePartialCachingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasePartialCachingControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.BasePartialCachingControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Web.UI.ControlCachePolicy CachePolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachePolicy As ControlCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCachePolicy ^ CachePolicy { System::Web::UI::ControlCachePolicy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Web.UI.ControlCachePolicy" Usage="System.Web.UI.BasePartialCachingControl.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>래핑된 사용자 정의 컨트롤과 연결된 <see cref="T:System.Web.UI.ControlCachePolicy" /> 개체를 가져옵니다.</summary>
        <value>래핑된 사용자 정의 컨트롤의 출력 캐싱 관련 속성을 저장하는 <see cref="T:System.Web.UI.ControlCachePolicy" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A> 속성을 프로그래밍 방식 액세스를 사용 하면는 <xref:System.Web.UI.ControlCachePolicy> 에 포함 된 사용자 정의 컨트롤과 관련 된 개체는 <xref:System.Web.UI.BasePartialCachingControl> 인스턴스. <xref:System.Web.UI.ControlCachePolicy> 에 사용자 정의 컨트롤의 캐싱 동작 및 설정에 영향을 주는 개체를 프로그래밍 방식으로 조작할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 정의 컨트롤 방법을 동적으로 로드 및 실행 시 프로그래밍 방식으로 조작할 수를 보여 줍니다. 이 예제는 세 부분으로 이루어져 있습니다.  
  
-   Partial 클래스 `LogOnControl`에서 상속 하는 <xref:System.Web.UI.UserControl> 기본 클래스를 생성 하 고 있는 <xref:System.Web.UI.PartialCachingAttribute> 특성이 적용 된 합니다.  
  
-   와 함께 사용 되는 사용자 정의 컨트롤의 `LogOnControl` partial 클래스입니다.  
  
-   사용자 정의 컨트롤을 호스트 하는 Web Forms 페이지입니다.  
  
 이 예제를 성공적으로 실행 하려면 사용자 정의 컨트롤 파일 (.ascx), (.cs 또는.vb) 해당 코드 숨김 파일 및 사용자 정의 컨트롤 (.aspx)를 호스트 하는 Web Forms 페이지는 같은 디렉터리에 있는지를 확인 합니다.  
  
 예의 첫 번째 부분에서는 방법을 <xref:System.Web.UI.PartialCachingAttribute> 이라는 사용자 정의 컨트롤에 적용 됩니다 `LogOnControl`, 즉, 사용자 정의 컨트롤에서 래핑된는 <xref:System.Web.UI.PartialCachingControl> 런타임 시 컨트롤. `LogOnControl` 개체의 캐싱 설정을 프로그래밍 방식으로 될 수 있습니다에 연결을 통해 조작 <xref:System.Web.UI.ControlCachePolicy> 개체에 대 한 참조를 통해 제공 되는 <xref:System.Web.UI.PartialCachingControl> 를 래핑하는 것입니다. 이 예제에서는 캐싱 설정 페이지를 초기화 하는 동안 검사 하 고 일부 조건이 충족 될 경우 변경 됩니다.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/LogonControl.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/logoncontrol.vb#2)]  
  
 예제의 두 번째 부분에서는 사용자 컨트롤 캐싱 보여 주기 위해 이전 예제와 함께 사용 되는 사용자 정의 컨트롤을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/Logonformcs.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/Logonformvb.ascx#3)]  
  
 이 예제에서는 세 번째 부분 사용을 보여 줍니다.는 `LogOnControl` Web Forms 페이지에서 사용자 정의 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/controlcachepolicy_loadcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/controlcachepolicy_loadcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.BasePartialCachingControl.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시된 사용자 정의 컨트롤 출력과 관련된 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 인스턴스를 가져오거나 설정합니다.</summary>
        <value>서버 컨트롤과 관련된 <see cref="T:System.Web.Caching.CacheDependency" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하는 연결된 캐시 종속성이 변경 될 때 출력 캐시에서 출력을 제어 하는 사용자를 제거할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> 속성을는 <xref:System.Web.Caching.CacheDependency> 컨트롤을 만드는 텍스트 파일에 따라 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.BasePartialCachingControl> 클래스입니다.  
  
 [!code-csharp[BasePartialCachingControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/BasePartialCachingControl/CS/dep1cs.ascx#2)]
 [!code-vb[BasePartialCachingControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BasePartialCachingControl/VB/dep1vb.ascx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="basePartialCachingControl.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.BasePartialCachingControl" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="basePartialCachingControl.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">캐시된 컨트롤을 페이지로 쓰는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>사용자 정의 컨트롤의 내용을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 출력 스트림으로 출력합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>