<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="107a9-101">웹 응용 프로그램에서 클라이언트 스크립트를 관리하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-101">Defines methods for managing client scripts in Web applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-102"><xref:System.Web.UI.ClientScriptManager> 클래스는 클라이언트 스크립트를 관리 하 고 웹 응용 프로그램에 추가 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="107a9-103">에 대 한 참조를 가져올 수 있습니다는 <xref:System.Web.UI.ClientScriptManager> 에서 클래스는 <xref:System.Web.UI.Page.ClientScript%2A> 의 속성은 <xref:System.Web.UI.Page> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="107a9-104">여 추가할 수 있습니다 클라이언트 스크립트를 웹 페이지에 선언적으로 페이지의 HTML 태그에 스크립트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="107a9-105">그러나 클라이언트 스크립트를 동적으로 추가 해야 하는 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="107a9-106">스크립트를 동적으로 추가 하려면 사용 하 여는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드를는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 메서드를는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드, 또는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 메서드는 스크립트를 추가 하려는 방법과 시기에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="107a9-107">자세한 내용은 참조 [하는 방법: 추가 클라이언트 스크립트 동적으로 ASP.NET 웹 페이지에](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="107a9-108"><xref:System.Web.UI.ClientScriptManager> 클래스 키가 스크립트를 고유 하 게 식별 <xref:System.String> 및 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="107a9-109">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-110">스크립트 유형을 사용 하 여 페이지에서 사용 하는 다른 사용자 정의 컨트롤의 유사한 스크립트를 혼동을 방지 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="107a9-111"><xref:System.Web.UI.ClientScriptManager> 클래스를 사용 하 여에서 포스트백을 수행 하지 않고 클라이언트에서 서버 코드를 실행 하는 경우 상황에 대 한 클라이언트 콜백을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="107a9-112">서버에 대 한 대역폭을 벗어난 콜백을 수행 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="107a9-113">클라이언트 콜백 클라이언트 스크립트 함수는 ASP.NET 웹 페이지에 대 한 비동기 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="107a9-114">웹 페이지 여 콜백 처리를 일반 수명 주기의 수정된 된 버전을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="107a9-115">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 클라이언트 함수에 대 한 참조를 가져오려면 호출 메서드는 서버 이벤트에 대 한 클라이언트 콜백을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="107a9-116">자세한 내용은 참조 [포스트백 없이 클라이언트 콜백 구현](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-117">스크립트 콜백을 문서 개체 모델 (DOM)를 지원 하지 않는 이전 버전의 브라우저에서 작동 하지 않습니다 하며 ECMAScript 클라이언트에서 활성화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="107a9-118">브라우저에서 콜백 하는 경우를 확인 하려면 사용 된 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> 속성을 통해 액세스할 수 있는 <xref:System.Web.HttpRequest.Browser%2A> asp.net 내장 속성 <xref:System.Web.HttpContext.Request%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="107a9-119">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드 및 <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> 클라이언트 포스트백 이벤트를 정의 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="107a9-120">이러한 메서드는 페이지에 다시 게시 하 여 서버를 호출 하면 클라이언트 스크립트 함수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="107a9-121">클라이언트 다시 게시 이벤트 간에 차이가 클라이언트 콜백 클라이언트 포스트백 이벤트를 프로세스에 일반적인 수명 주기를 완료 하는 웹 페이지에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-122">사용 하는 경우는 <xref:System.Web.UI.WebControls.Button> 제어 및 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성이로 설정 되어 `false`를 사용할 수 있습니다는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 클라이언트 반환 하는 방법에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="107a9-123"><xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 속성은 <xref:System.Web.UI.WebControls.Button> 컨트롤 <xref:System.Web.UI.WebControls.ImageButton> 컨트롤 및 <xref:System.Web.UI.WebControls.LinkButton> 클라이언트 스크립트를 실행 하려면 컨트롤을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-124">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="107a9-125">두 개의 클라이언트 스크립트가 페이지에 정의 된: `PopupScript`, 페이지가 로드 될 때 경고 메시지를 표시 하는 및 `ButtonClickScript`, 클라이언트는 HTML 단추에 대 한 처리기를 정의 하는 `onClick` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-126">호출될 경우 클라이언트에서 서버 이벤트를 콜백하도록 하는 클라이언트 함수에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-127">클라이언트 콜백을 처리하는 서버 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="107a9-128">이 컨트롤에서는 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하고 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-129">클라이언트 스크립트에서 서버</span><span class="sxs-lookup"><span data-stu-id="107a9-129">An argument passed from the client script to the server</span></span>  
  
 <span data-ttu-id="107a9-130"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 호출하여 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-130"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="107a9-131">성공한 서버 이벤트의 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-131">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="107a9-132">콜백을 시작하기 전에 클라이언트에서 계산되는 클라이언트 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-132">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="107a9-133">스크립트 결과는 클라이언트 이벤트 처리기로 다시 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-133">The result of the script is passed back to the client event handler.</span></span></param>
        <summary><span data-ttu-id="107a9-134">호출될 경우 클라이언트에서 서버 이벤트를 콜백하도록 하는 클라이언트 함수에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span> <span data-ttu-id="107a9-135">이 오버로드된 메서드의 클라이언트 함수에는 지정한 컨트롤, 인수, 클라이언트 스크립트 및 컨텍스트가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span></span></summary>
        <returns><span data-ttu-id="107a9-136">클라이언트 콜백을 호출하는 클라이언트 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-136">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-137"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> 메서드에 서버 페이지의 기본 수명 주기의 수정된 된 버전에는 대역폭을 벗어난 콜백을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="107a9-138">자세한 내용은 참조 [포스트백 없이 클라이언트 콜백 구현](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-139">브라우저는 Microsoft Internet Explorer (버전 5.0 이상) 이면 스크립트 콜백 메커니즘 Microsoft.XmlHttp COM 개체를 통해 구현 되 고 ActiveX 컨트롤을 실행 하도록 설정 해야 하도록 브라우저에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="107a9-140">다른 브라우저에 대 한 브라우저의 로컬 문서 개체 모델 (DOM)를 사용 하 여 XMLHttpRequest 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="107a9-141">브라우저에서 클라이언트 콜백을 지원 여부를 확인 하려면 사용 된 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="107a9-142">에 브라우저가 HTTP를 통해 XML을 지원 하는지 여부를 확인 하려면 사용 된 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="107a9-143">두 속성을 통해 액세스할 수는 <xref:System.Web.HttpRequest.Browser%2A> 속성의 기본 ASP.NET <xref:System.Web.HttpContext.Request%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="107a9-144"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드는 콜백을 동기적으로 XML을 사용 하 여 HTTP를 통해 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="107a9-145">데이터를 보낼 때 동기적으로 콜백 시나리오에서 동기 콜백을 즉시 반환 하 고 브라우저를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="107a9-146">두 개의 동기 콜백을 없습니다 브라우저에서 동시에 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="107a9-147">두 번째 동기 콜백 하나 현재 보류 중인 동안 발생 하는 경우 두 번째 동기 콜백 첫 번째 취소 되 고 두 번째 콜백만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="107a9-148">데이터를 비동기적으로 보낼를 사용 하는 오버 로드 중 하나를 사용는 `useAsync` 부울 매개 변수 값이이 동작을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="107a9-149">비동기 시나리오에서는 보류 중 여러 콜백이; 있을 수 있습니다. 그러나 반환 하는 순서는 하지 시작 된 순서와 일치 하도록 보장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="107a9-150">또한이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드 클라이언트 함수에 의해 생성 된 오류 상태의 경우를 처리 하는 지정 된 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="107a9-151">클라이언트 오류 콜백 처리기를 지정 하려면 사용 하는 오버 로드 중 하나를 사용는 `clientErrorCallback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="107a9-152"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> 메서드가 사용 하는 선택적 문자열 `argument` 매개 변수는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="107a9-153">전달 하거나 여러 값을 받을 입력의 값을 연결 하거나 문자열을 각각 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-154">스크립트 콜백 작업 하는 동안 업데이트 해야 하는 페이지 또는 컨트롤 속성의 구현에서 뷰 상태를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="107a9-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="107a9-155">속성 페이지 요청을 수행한 경우 세션 상태를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-156">다음 코드 예제에서는 두 오버 로드를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 정수를 증가 하는 클라이언트 콜백 시나리오에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="107a9-157">두 가지 콜백 메커니즘 표시 됩니다. 사용 하는 것의 차이 `context` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="107a9-158">A `ReceiveServerData1` 클라이언트 콜백 함수를 사용 하 여 제공 된 `context` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="107a9-159">반면,는 `ReceiveServerData2` 클라이언트 콜백 함수에 정의 된 한 `<script>` 페이지에는 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="107a9-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드는 전달 되는 값이 증가 하는 서버 처리기 및 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 메서드 증가 값을 문자열로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="107a9-161">경우는 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드는 오류를 반환 하면 `ProcessCallBackError` 클라이언트 함수가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-162">지정된 <see cref="T:System.Web.UI.Control" />는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="107a9-163">지정한 <see cref="T:System.Web.UI.Control" />에서 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-164">클라이언트 콜백을 처리하는 서버 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="107a9-165">이 컨트롤에서는 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하고 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-166">클라이언트 스크립트에서 서버</span><span class="sxs-lookup"><span data-stu-id="107a9-166">An argument passed from the client script to the server</span></span>  
  
 <span data-ttu-id="107a9-167"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 호출하여 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-167"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="107a9-168">성공한 서버 이벤트의 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-168">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="107a9-169">콜백을 시작하기 전에 클라이언트에서 계산되는 클라이언트 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-169">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="107a9-170">스크립트 결과는 클라이언트 이벤트 처리기로 다시 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-170">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="useAsync">
          <span data-ttu-id="107a9-171">콜백을 비동기적으로 수행하려면 <see langword="true" />이고, 동기적으로 수행하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-171"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="107a9-172">호출될 경우 클라이언트에서 서버 이벤트를 콜백하도록 하는 클라이언트 함수에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="107a9-173">이 오버로드된 메서드의 클라이언트 함수에는 지정한 컨트롤, 인수, 클라이언트 스크립트, 컨텍스트 및 부울 값이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="107a9-174">클라이언트 콜백을 호출하는 클라이언트 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-174">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-175">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드를 사용 하려면 한 `useAsync` 매개 변수 값 설정 하 여 클라이언트 콜백을 비동기적으로 수행할 수 있는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="107a9-176">필요 하지 않은이 메서드의 오버 로드 버전에서 `useAsync` 매개 변수 값을 설정 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="107a9-177">이 메서드에 대 한 자세한 내용은 참조는 오버 로드에 대 한 설명 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-178">지정된 <see cref="T:System.Web.UI.Control" />는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="107a9-179">지정한 <see cref="T:System.Web.UI.Control" />에서 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="107a9-180">클라이언트 콜백을 처리하는 서버 <see cref="T:System.Web.UI.Control" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="107a9-181">이 컨트롤에서는 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하고 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-182">클라이언트 스크립트에서 서버</span><span class="sxs-lookup"><span data-stu-id="107a9-182">An argument passed from the client script to the server</span></span>  
  
 <span data-ttu-id="107a9-183"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 호출하여 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-183"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="107a9-184">성공한 서버 이벤트의 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-184">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="107a9-185">콜백을 시작하기 전에 클라이언트에서 계산되는 클라이언트 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-185">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="107a9-186">스크립트 결과는 클라이언트 이벤트 처리기로 다시 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-186">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="107a9-187">서버 이벤트 처리기에서 오류가 발생할 때 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync">
          <span data-ttu-id="107a9-188">콜백을 비동기적으로 수행하려면 <see langword="true" />이고, 동기적으로 수행하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-188"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="107a9-189">호출될 경우 클라이언트에서 서버 이벤트를 콜백하도록 하는 클라이언트 함수에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="107a9-190">이 오버로드된 메서드의 클라이언트 함수에는 지정한 대상, 인수, 클라이언트 스크립트, 컨텍스트, 오류 처리기 및 부울 값이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="107a9-191">클라이언트 콜백을 호출하는 클라이언트 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-191">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-192">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드는 `target` 매개 변수 대신 문자열는 <xref:System.Web.UI.Control> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="107a9-193">콜백을 포함 하는 문자열 이외의 항목으로 이동 하려는 경우이 오버 로드를 사용 하 여는 <xref:System.Web.UI.Control.UniqueID%2A> 컨트롤의 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="107a9-194">또한이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드를 사용 하려면 한 `useAsync` 및 `clientErrorCallback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="107a9-195">`useAsync` 매개 변수 값 설정 하 여 클라이언트 콜백을 비동기적으로 수행할 수 있습니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="107a9-196">필요 하지 않은이 메서드의 오버 로드 버전에서 `useAsync` 매개 변수 값을 설정 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="107a9-197">`clientErrorCallback` 매개 변수를 사용 하는 경우 호출 하는 클라이언트 함수 이름을 정의할 수 있습니다 서버 처리기는 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드를 오류를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="107a9-198">필요 하지 않은이 메서드의 오버 로드 버전에서 `clientErrorCallback` 매개 변수 값을 null로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="107a9-199">이 메서드에 대 한 자세한 내용은 참조는 오버 로드에 대 한 설명 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-200">다음 코드 예제에서는 두 오버 로드를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 정수를 증가 하는 클라이언트 콜백 시나리오에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="107a9-201">두 가지 콜백 메커니즘 표시 됩니다. 사용 하는 것의 차이 `context` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="107a9-202">A `ReceiveServerData1` 클라이언트 콜백 함수를 사용 하 여 제공 된 `context` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="107a9-203">반면,는 `ReceiveServerData2` 클라이언트 콜백 함수에 정의 된 한 `<script>` 페이지에는 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="107a9-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드는 전달 되는 값이 증가 하는 서버 처리기 및 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 메서드 증가 값을 문자열로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="107a9-205">경우는 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드 클라이언트 함수에서 오류가 반환 `ProcessCallBackError` 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-206">클라이언트 콜백을 처리하는 서버 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="107a9-207">이 컨트롤에서는 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하고 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드를 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-208">클라이언트 스크립트에서 서버 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 메서드로 전달되는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="107a9-209">성공한 서버 이벤트의 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-209">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="107a9-210">콜백을 시작하기 전에 클라이언트에서 계산되는 클라이언트 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-210">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="107a9-211">스크립트 결과는 클라이언트 이벤트 처리기로 다시 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-211">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="107a9-212">서버 이벤트 처리기에서 오류가 발생할 때 결과를 받는 클라이언트 이벤트 처리기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync">
          <span data-ttu-id="107a9-213">콜백을 비동기적으로 수행하려면 <see langword="true" />이고, 동기적으로 수행하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-213"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="107a9-214">호출될 경우 클라이언트에서 서버 이벤트를 콜백하도록 하는 클라이언트 함수에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="107a9-215">이 오버로드된 메서드의 클라이언트 함수에는 지정한 컨트롤, 인수, 클라이언트 스크립트, 컨텍스트, 오류 처리기 및 부울 값이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="107a9-216">클라이언트 콜백을 호출하는 클라이언트 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-216">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-217">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드를 사용 하려면 한 `useAsync` 및 `clientErrorCallback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="107a9-218">`useAsync` 매개 변수 값 설정 하 여 클라이언트 콜백을 비동기적으로 수행할 수 있습니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="107a9-219">필요 하지 않은이 메서드의 오버 로드 버전에서 `useAsync` 매개 변수 값을 설정 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="107a9-220">`clientErrorCallback` 매개 변수를 사용 하는 경우 호출 하는 클라이언트 함수 이름을 정의할 수 있습니다 서버 처리기 (의 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드)에서 오류를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="107a9-221">필요 하지 않은이 메서드의 오버 로드 버전에서 `clientErrorCallback` 매개 변수 값을 null로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="107a9-222">이 메서드에 대 한 자세한 내용은 참조는 오버 로드에 대 한 설명 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-223">지정된 <see cref="T:System.Web.UI.Control" />는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="107a9-224">지정한 <see cref="T:System.Web.UI.Control" />에서 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 인터페이스를 구현하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-225">서버에 다시 게시하는 클라이언트 이벤트에 사용할 수 있는 참조를 가져옵니다. 이 참조의 시작 부분에는 <see langword="javascript:" />가 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-226">다시 게시 작업을 처리하는 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-226">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-227">서버 컨트롤에 전달된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-227">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="107a9-228">지정된 이벤트 인수를 사용하여 지정된 컨트롤을 서버에 다시 게시하는 클라이언트 이벤트에 사용할 수 있는 참조를 가져옵니다. 이 참조의 시작 부분에는 <see langword="javascript:" />라는 문자열이 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="107a9-229">대상 컨트롤의 ID 및 이벤트 인수를 포함하는 다시 게시 함수에 대한 JavaScript 호출을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-230">사용 하는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 방법을 구현에 대 한 포스트백을 처리 하는 컨트롤을 사용 하려면는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="107a9-231">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page>, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-232">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="107a9-233">사용자 지정 컨트롤 `MyControl`를 구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="107a9-234">페이지에서 HTML 앵커 요소를 클릭할 때는 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> 사용자 지정 컨트롤의 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="107a9-235">다음 코드 예제에서는 사용자 지정 컨트롤 대신 점을 제외 하 고 이전과 동일한 기능이 <xref:System.Web.UI.Page> 클래스가 구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-236">다시 게시 작업을 처리하는 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-236">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-237">서버 컨트롤에 전달된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-237">The parameter passed to the server control.</span></span></param>
        <param name="registerForEventValidation">
          <span data-ttu-id="107a9-238">유효성 검사에 대한 다시 게시 이벤트를 등록하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-238"><see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span></span></param>
        <summary><span data-ttu-id="107a9-239">지정된 이벤트 인수와 이벤트 유효성 검사에 대한 다시 게시를 등록할지 여부를 나타내는 부울 값을 사용하여 지정된 컨트롤에 대해 서버에 다시 게시하는 클라이언트 이벤트에 사용할 수 있는 참조를 가져옵니다. 이 참조의 시작 부분에는 <see langword="javascript:" />가 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span></span></summary>
        <returns><span data-ttu-id="107a9-240">대상 컨트롤의 ID 및 이벤트 인수를 포함하는 다시 게시 함수에 대한 JavaScript 호출을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-241">사용 하는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 방법을 구현에 대 한 포스트백을 처리 하는 컨트롤을 사용 하려면는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="107a9-242">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page>, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-243">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-243">Returns a string that can be used in a client event to cause postback to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="107a9-244">다시 게시를 정의하는 <see cref="T:System.Web.UI.PostBackOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <summary><span data-ttu-id="107a9-245">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-245">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="107a9-246">참조 문자열은 지정한 <see cref="T:System.Web.UI.PostBackOptions" /> 인스턴스에 의해 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span></span></summary>
        <returns><span data-ttu-id="107a9-247">클라이언트의 스크립트로 처리될 때 클라이언트 다시 게시 작업을 시작하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-247">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-248">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page>, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="107a9-249"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="107a9-250">이 시나리오는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드가 반환 되는 클라이언트에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-251"><see cref="T:System.Web.UI.PostBackOptions" /> 매개 변수가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-252">서버에서 다시 게시 작업을 처리하는 서버 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-253">다시 게시 작업을 처리하는 컨트롤에 전달할 선택적 인수의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-253">A string of optional arguments to pass to the control that processes the postback.</span></span></param>
        <summary><span data-ttu-id="107a9-254">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-254">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="107a9-255">참조 문자열은 다시 게시 작업과 추가 이벤트 정보의 문자열 인수를 처리하는 지정된 컨트롤에 의해 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span></summary>
        <returns><span data-ttu-id="107a9-256">클라이언트의 스크립트로 처리될 때 다시 게시 작업을 시작하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-256">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-257">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page>, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="107a9-258"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="107a9-259">이 시나리오는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드가 반환 되는 클라이언트에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-260">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="107a9-261">사용자 지정 컨트롤 `MyControl`를 구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="107a9-262">페이지에 있는 단추를 클릭할 때는 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> 사용자 지정 컨트롤의 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="107a9-263">다음 코드 예제에서는 사용자 지정 컨트롤 대신 점을 제외 하 고 이전과 동일한 기능이 <xref:System.Web.UI.Page> 클래스가 구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-264">지정된 <see cref="T:System.Web.UI.Control" />는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="107a9-265">다시 게시를 정의하는 <see cref="T:System.Web.UI.PostBackOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <param name="registerForEventValidation">
          <span data-ttu-id="107a9-266">유효성 검사에 대한 이벤트 참조를 등록하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-266"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="107a9-267">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-267">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="107a9-268">참조 문자열은 지정된 <see cref="T:System.Web.UI.PostBackOptions" /> 개체에 의해 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span></span> <span data-ttu-id="107a9-269">유효성 검사에 대한 이벤트 참조도 선택적으로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-269">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="107a9-270">클라이언트의 스크립트로 처리될 때 클라이언트 다시 게시 작업을 시작하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-270">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-271">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page> 개체, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="107a9-272"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="107a9-273">이 시나리오는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드가 반환 되는 클라이언트에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="107a9-274">경우 `registerForEventValidation` 은 `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> 메서드 호출의 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> 유효성 검사에 대 한 이벤트 참조 하 여 이벤트를 생성 하는 클라이언트 컨트롤을 나타내는 고유한 제어 ID로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-275"><see cref="T:System.Web.UI.PostBackOptions" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="107a9-276">서버에서 다시 게시 작업을 처리하는 서버 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-277"><c>컨트롤</c>에 전달할 선택적 인수의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-277">A string of optional arguments to pass to <c>control</c>.</span></span></param>
        <param name="registerForEventValidation">
          <span data-ttu-id="107a9-278">유효성 검사에 대한 이벤트 참조를 등록하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-278"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="107a9-279">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-279">Returns a string to use in a client event to cause postback to the server.</span></span> <span data-ttu-id="107a9-280">참조 문자열은 다시 게시 작업과 추가 이벤트 정보의 문자열 인수를 처리하는 지정된 컨트롤에 의해 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span> <span data-ttu-id="107a9-281">유효성 검사에 대한 이벤트 참조도 선택적으로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-281">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="107a9-282">클라이언트의 스크립트로 처리될 때 다시 게시 작업을 시작하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-282">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-283">구현 하는 <xref:System.Web.UI.IPostBackEventHandler> 에 대 한 인터페이스는 <xref:System.Web.UI.Page>, 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="107a9-284"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="107a9-285">이 시나리오는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드가 반환 되는 클라이언트에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="107a9-286">경우 `registerForEventValidation` 가 true 이면는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> 메서드 호출에서 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> 유효성 검사에 대 한 이벤트 참조 하 여 이벤트를 생성 하는 클라이언트 컨트롤을 나타내는 고유한 제어 ID로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-287">지정된 <see cref="T:System.Web.UI.Control" />는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-288">리소스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-288">The type of the resource.</span></span></param>
        <param name="resourceName"><span data-ttu-id="107a9-289">어셈블리에 있는 리소스의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-289">The fully qualified name of the resource in the assembly.</span></span></param>
        <summary><span data-ttu-id="107a9-290">어셈블리의 리소스에 대한 URL 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-290">Gets a URL reference to a resource in an assembly.</span></span></summary>
        <returns><span data-ttu-id="107a9-291">리소스에 대한 URL 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-291">The URL reference to the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-292"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> 메서드는 어셈블리에 포함 된 리소스에 대 한 URL 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="107a9-293">반환 된 참조 URL로 인코딩된지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="107a9-294">리소스는 스크립트 파일, 이미지 또는 모든 정적 파일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="107a9-295">사용자 리소스에 액세스 하는 개체에 따라 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="107a9-296">페이지에 등록 된 웹 리소스의 유형과 이름으로 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="107a9-297">지정 된 형식 및 이름 쌍을 사용 하 여 하나의 리소스 페이지와 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="107a9-298">이미 등록 되어 있는 리소스를 등록 하는 등록 된 리소스의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="107a9-299"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> 메서드를 함께에서 사용 되는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> 어셈블리에 포함 된 리소스에 액세스 하기 위한 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="107a9-300">응용 프로그램의 리소스 사용에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 웹 페이지 리소스 개요](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-301">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="107a9-302">*형식* 이 예제에서 매개 변수는 리소스를 포함 하는 어셈블리에서 클래스의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="107a9-303">`resourceName` 기본 네임 스페이스를 포함 하는 리소스에 정규화 된 경로와 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="107a9-304">다음 코드 예제에서는 프로그래밍 방식으로 적용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebResourceAttribute> 메타 데이터는 제공 하는 리소스에 대 한 어셈블리를 표시 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="107a9-305">로 설정 하는 기본 네임 스페이스를 사용 하 여 클래스 라이브러리에서 다음 클래스를 컴파일하고 `Samples.AspNet.CS.Controls` 또는 `Samples.AspNet.VB.Controls`사용 하는 언어에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="107a9-306">이 예제를 실행 하려면 명명 된 `Script_include.js`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="107a9-307">.Js 파일이 포함 된 어셈블리에 포함된 된 리소스는 `ClientScriptResourceLabel` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="107a9-308">사용 중인 경우 Visual Studio], 클래스 라이브러리 프로젝트의 속성 창에서 설정 **빌드 작업** 를 **포함 리소스** 스크립트 파일을 선택 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="107a9-308">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="107a9-309">명령줄에서 라이브러리를 컴파일하는 경우 리소스를 포함 하는 스위치를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-310">웹 리소스 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-310">The web resource name is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="107a9-311">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="107a9-311">\- or -</span></span>  
  
 <span data-ttu-id="107a9-312">웹 리소스 이름의 길이가 0인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-312">The web resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-313">클라이언트 스크립트 블록이 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="107a9-314">검색할 클라이언트 스크립트 블록의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-314">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-315">클라이언트 스크립트 블록이 지정한 키를 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-316">클라이언트 스크립트 블록이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-316"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-317">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 중복 스크립트가 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="107a9-318">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-319">클라이언트 스크립트를 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-320">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="107a9-321">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 둘 다 사용 하는 오버 로드를 호출 하는 메서드는 `key` 및 `type` 으로 설정 하는 형식이 매개 변수는 <xref:System.Web.UI.Page> 개체</span><span class="sxs-lookup"><span data-stu-id="107a9-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-322">검색할 클라이언트 스크립트 블록의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-322">The type of the client script block to search for.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-323">검색할 클라이언트 스크립트 블록의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-323">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-324">클라이언트 스크립트 블록이 키와 형식을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-325">클라이언트 스크립트 블록이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-325"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-326">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 중복 스크립트가 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="107a9-327">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-328">클라이언트 스크립트를 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-329">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-330">사용자 리소스에 액세스 하는 개체에 따라 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="107a9-331">예를 들어, 사용 하는 경우는 `Page` 인스턴스가 지정 된 리소스를 액세스할 수는 `Page` 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-332">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="107a9-333">, 기존 클라이언트 스크립트 블록을 확인 하는 논리 제거 된 경우는 하지 있을 두 중복 된 클라이언트 스크립트는 렌더링 된 페이지의 HTML 소스 코드에 때문에 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 중복 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="107a9-334">이러한 확인 불필요 한 계산을 줄이는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-335">클라이언트 스크립트 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-335">The client script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-336">클라이언트 스크립트 포함이 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="107a9-337">검색할 클라이언트 스크립트 포함의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-337">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-338">클라이언트 스크립트 포함이 지정한 키를 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-339">클라이언트 스크립트 포함이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-339"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-340">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 중복 스크립트가 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="107a9-341">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-342">클라이언트 스크립트 포함 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-343">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="107a9-344">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 둘 다 사용 하는 오버 로드를 호출 하는 메서드는 `key` 및 `type` 으로 설정 하는 형식이 매개 변수는 <xref:System.Web.UI.Page> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-345">검색할 클라이언트 스크립트 포함의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-345">The type of the client script include to search for.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-346">검색할 클라이언트 스크립트 포함의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-346">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-347">클라이언트 스크립트 포함이 키와 형식을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-348">클라이언트 스크립트 포함이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-348"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-349">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 중복 된 클라이언트 스크립트를 등록 하려면 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="107a9-350">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-351">클라이언트 스크립트 포함 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-352">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-353">사용자 리소스에 액세스 하는 개체에 따라 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="107a9-354">예를 들어, Page 인스턴스를 사용 하 여 리소스에 액세스를 지정 된 `Page` 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-355">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="107a9-356">기존 클라이언트 스크립트를 포함 하는 논리 제거 된 경우는 하지 있을 두 중복 된 클라이언트 스크립트는 렌더링 된 페이지의 HTML 소스 코드에 때문에 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 중복 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="107a9-357">이러한 확인 불필요 한 계산을 줄이는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="107a9-358">이 예제를 실행 하려면 명명 된 `Script_include.js`, 다음과 같은 내용으로:</span><span class="sxs-lookup"><span data-stu-id="107a9-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-359">클라이언트 스크립트 포함 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-359">The client script include type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-360">OnSubmit 문이 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="107a9-361">검색할 OnSubmit 문의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-361">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-362">OnSubmit 문이 지정한 키를 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-363">OnSubmit 문이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-363"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-364">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 중복 OnSubmit 문이 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="107a9-365">이것은 문이 필요한 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-366">문은 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-367">동일한 키 및 유형으로 문은 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="107a9-368">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> 둘 다 사용 하는 오버 로드를 호출 하는 메서드는 `key` 및 `type` 으로 설정 하는 형식이 매개 변수는 <xref:System.Web.UI.Page> 개체</span><span class="sxs-lookup"><span data-stu-id="107a9-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-369">검색할 OnSubmit 문의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-369">The type of the OnSubmit statement to search for.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-370">검색할 OnSubmit 문의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-370">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-371">OnSubmit 문이 지정한 키와 형식을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-372">OnSubmit 문이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-372"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-373">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 중복 문이 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="107a9-374">이것은 문이 필요한 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-375">문은 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-376">동일한 키 및 유형으로 문은 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-377">사용자 리소스에 액세스 하는 개체에 따라 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="107a9-378">예를 들어, 사용 하는 경우는 `Page` 인스턴스가 지정 된 리소스를 액세스할 수는 `Page` 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-379">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="107a9-380">라는 스크립트 `OnSubmitScript` 에 등록 된는 <xref:System.Web.UI.Page> 때 페이지의 폼 전송 되도록 스크립트를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-381">OnSubmit 문 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-381">The OnSubmit statement type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-382">시작 스크립트가 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="107a9-383">검색할 시작 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-383">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-384">시작 스크립트가 지정한 키를 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-385">시작 스크립트가 등록되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-385"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-386">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 중복 스크립트가 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="107a9-387">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-388">시작 스크립트는 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-389">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="107a9-390">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 두 문자열을 사용 하는 오버 로드를 호출 하는 메서드 `key` 및 `type` 으로 설정 하는 형식이 매개 변수는 <xref:System.Web.UI.Page> 개체</span><span class="sxs-lookup"><span data-stu-id="107a9-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-391">검색할 시작 스크립트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-391">The type of the startup script to search for.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-392">검색할 시작 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-392">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="107a9-393">시작 스크립트가 지정한 키와 형식을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns>
          <span data-ttu-id="107a9-394">시작 스크립트가 등록되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-394"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-395">호출 하기 전에이 메서드를 호출 하는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 중복 스크립트가 등록 되지 않게 하려면.</span><span class="sxs-lookup"><span data-stu-id="107a9-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="107a9-396">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="107a9-397">클라이언트 시작 스크립트는 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-398">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-399">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="107a9-400">기존 시작 스크립트 블록을 확인 하는 논리 제거 된 경우는 하지 있을 두 중복 된 시작 스크립트는 렌더링 된 페이지의 HTML 소스 코드에 때문에 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 중복 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="107a9-401">이러한 확인 불필요 한 계산을 줄이는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-402">시작 스크립트가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-402">The startup script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName"><span data-ttu-id="107a9-403">등록할 배열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-403">The array name to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="107a9-404">등록할 배열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-404">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="107a9-405">배열 이름과 배열 값을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체에 JavaScript 배열 선언을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-406"><xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 등록 된 배열에 지정 된 이름과 동일한 이름을 가진 있는지 여부를 검사는 `arrayName` 매개 변수 및 그렇다면에 지정 된 값을 추가 합니다.는 `arrayValue` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="107a9-407">기본 저장소 메커니즘에 기반 하므로 <xref:System.Collections.ArrayList>, 중복은 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="107a9-408">하는 경우와 같은 이름 가진 등록 된 배열이 `arrayName` 매개 변수가 없는, 만들어질에 값과는 `arrayValue` 여기에 추가 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="107a9-409">작은따옴표 (')를 포함 하거나 문자열에 결과 JavaScript 배열에 문자열 리터럴을 하려는 경우 (\\")에 `arrayValue` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="107a9-410">값은 `arrayValue` 매개 변수는 단일 요소 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="107a9-411">둘 이상의 값을 배열에 추가 하는 경우 여러 번 호출할를 사용 하 여 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-412">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 및 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="107a9-413">이 예제에서는 배열 및 숨겨진된 값을 등록 하 고 정의 된 `OnClick` 의 이벤트는 `<input>` 배열의 두 값과 숨겨진된 값의 합계를 계산 하려면 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="107a9-414"><paramref name="arrayName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-414"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-415">클라이언트 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-416">등록할 클라이언트 스크립트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-416">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-417">등록할 클라이언트 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-417">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="107a9-418">등록할 클라이언트 스크립트 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-418">The client script literal to register.</span></span></param>
        <summary><span data-ttu-id="107a9-419">형식, 키 및 스크립트 리터럴을 사용하여 클라이언트 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-420">클라이언트 스크립트를 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-421">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-422">페이지와 지정 된 형식 및 키 쌍을 포함 하는 하나의 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-423">이미 등록 되어 있는 스크립트를 등록 하는 스크립트의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="107a9-424">호출 된 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 메서드를 지정 된 키 및 유형 쌍으로 클라이언트 스크립트가 이미 등록 되어 있는지 여부를 확인 하 고 불필요 하 게 스크립트를 추가 하려는 시도 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="107a9-425">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드를 해야 하며에 제공 된 스크립트가 `script` 이 매개 변수 요소에 래핑되는 `<script>` 요소 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="107a9-426"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드는 렌더링 된 페이지의 맨 위에 스크립트 블록을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="107a9-427">스크립트 블록은 등록 된 순서에 출력 되는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="107a9-428">사용 하 여 스크립트 블록의 순서가 중요 한 경우는 <xref:System.Text.StringBuilder> 개체를 단일 문자열에는 스크립트를 함께 수집 하 고 모두 단일 클라이언트 스크립트 블록에에서 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-429">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-430">등록할 클라이언트 스크립트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-430">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-431">등록할 클라이언트 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-431">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="107a9-432">등록할 클라이언트 스크립트 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-432">The client script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="107a9-433">스크립트 태그를 추가할지 여부를 나타내는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-433">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="107a9-434">형식, 키, 스크립트 리터럴 및 스크립트 태그를 추가할지 여부를 나타내는 부울 값을 사용하여 클라이언트 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-435">클라이언트 스크립트를 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-436">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-437">페이지와 지정 된 형식 및 키 쌍을 포함 하는 하나의 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-438">이미 등록 되어 있는 스크립트를 등록 하는 스크립트의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="107a9-439">호출 된 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 메서드를 지정 된 키 및 유형 쌍으로 클라이언트 스크립트가 이미 등록 되어 있는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="107a9-440">이렇게 하면 불필요 하 게 스크립트를 추가 하려는 시도 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="107a9-441">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드를 여부를에 제공 된 스크립트가 나타낼 수 있습니다는 `script` 매개 변수를 사용 하 여 래핑는 `<script>` 를 사용 하 여 요소 블록은 `addScriptTags` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="107a9-442">설정 `addScriptTags` 를 `true` 스크립트 태그는 자동으로 추가 되어야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="107a9-443"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드는 렌더링 된 페이지의 맨 위에 스크립트 블록을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="107a9-444">스크립트 블록은 등록 된 순서에 출력 되는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="107a9-445">사용 하 여 스크립트 블록의 순서가 중요 한 경우는 <xref:System.Text.StringBuilder> 개체를 단일 문자열에는 스크립트를 함께 수집 하 고 모두 단일 클라이언트 스크립트 블록에에서 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-446">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="107a9-447">`addScriptTags` 로 설정 된 `true` 시작 태그와 닫는 태그 스크립트에 포함 되지 않은 하므로 `script` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-448">클라이언트 스크립트 블록 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-448">The client script block type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-449">클라이언트 스크립트 포함을 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="107a9-450">등록할 클라이언트 스크립트 포함의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-450">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="107a9-451">등록할 클라이언트 스크립트 포함의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-451">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="107a9-452">키와 URL을 사용하여 <see cref="T:System.Web.UI.Page" /> 개체와 함께 클라이언트 스크립트를 등록하여 클라이언트에서 스크립트를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-453">클라이언트 스크립트 포함 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-454">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-455">페이지와 지정 된 형식 및 키 쌍을 포함 하는 하나의 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-456">이미 등록 되어 있는 스크립트를 등록 하는 스크립트의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="107a9-457">호출 된 <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> 있는지 여부 지정된 된 키와 클라이언트 스크립트를 포함 및 형식 쌍 이미 등록 되어 불필요 하 게 스크립트를 추가 하려는 시도 방지 확인 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-458">클라이언트 URL를 해결 하려면 사용 된 <xref:System.Web.UI.Control.ResolveClientUrl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="107a9-459">이 메서드는 경로를 확인할 호출에 URL의 컨텍스트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="107a9-460">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 메서드 호출을 받는 오버 로드는 `key`, `URL`, 및 `type` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="107a9-461">메서드는 렌더링된 된 페이지의 위쪽에 스크립트 블록을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-462">구문, 사용법 및 예를 들어 등의 관련된 정보를 참조 하십시오. <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-463">등록할 클라이언트 스크립트 포함의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-463">The type of the client script include to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-464">등록할 클라이언트 스크립트 포함의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-464">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="107a9-465">등록할 클라이언트 스크립트 포함의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-465">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="107a9-466">형식, 키 및 URL을 사용하여 클라이언트 스크립트 포함을 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-467">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 메서드 *키* 및 *url* 매개 변수는 스크립트를 식별 및 `type` 클라이언트 스크립트의 id를 지정 하는 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="107a9-468">사용자 리소스에 액세스 하는 개체에 따라 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="107a9-469">예를 들어, 사용 하는 경우는 `Page` 인스턴스가 지정 된 리소스를 액세스할 수는 `Page` 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="107a9-470">클라이언트 URL를 해결 하려면 사용 된 <xref:System.Web.UI.Control.ResolveClientUrl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="107a9-471">이 메서드는 경로를 확인할 호출에 URL의 컨텍스트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="107a9-472">이 메서드는 렌더링된 된 페이지의 위쪽에 스크립트 블록을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-473">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="107a9-474">제거 되는 기존 클라이언트 스크립트를 포함 하는 논리는 여전히 하지 있을 중복 된 클라이언트 스크립트 렌더링된 된 페이지에서 때문에 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> 중복 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="107a9-475">이러한 확인 불필요 한 계산을 줄이는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="107a9-476">이 예제에서는 다음과 같은 내용의 같은 내용이 라는 JavaScript 파일이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-477">클라이언트 스크립트 포함 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-477">The client script include type is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="107a9-478">URL이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-478">The URL is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="107a9-479">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="107a9-479">\- or -</span></span>  
  
 <span data-ttu-id="107a9-480">URL이 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-480">The URL is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-481">등록할 클라이언트 스크립트 리소스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-481">The type of the client script resource to register.</span></span></param>
        <param name="resourceName"><span data-ttu-id="107a9-482">등록할 클라이언트 스크립트 리소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-482">The name of the client script resource to register.</span></span></param>
        <summary><span data-ttu-id="107a9-483">형식과 리소스 이름을 사용하여 클라이언트 스크립트 리소스를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-484"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> 메서드 WebResource.axd HTTP 처리기를 통해 어셈블리에서 컴파일된 리소스에 액세스할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="107a9-485"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> 메서드를 사용 하 여 스크립트 등록는 <xref:System.Web.UI.Page> 개체 중복 스크립트를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="107a9-486">이 메서드는 리소스 URL의 콘텐츠를 래핑하는 `<script>` 요소 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-487">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="107a9-488">다음 코드 예제에서는 프로그래밍 방식으로 적용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebResourceAttribute> 메타 데이터는 제공 하는 리소스에 대 한 어셈블리를 표시 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="107a9-489">이 예제를 실행 하려면 명명 된 `Script_include.js`, 다음과 같은 내용으로:</span><span class="sxs-lookup"><span data-stu-id="107a9-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="107a9-490">컴파일하는 `Script_include.js` 파일에 리소스로 `Samples.AspNet.CS.Controls` 포함 된 어셈블리는 `ClientScriptResourceLabel` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="107a9-491">클라이언트 리소스 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-491">The client resource name is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="107a9-492">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="107a9-492">\- or -</span></span>  
  
 <span data-ttu-id="107a9-493">클라이언트 리소스 이름의 길이가 0인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-493">The client resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-494">이름/값 쌍을 지정한 컨트롤의 사용자 지정(expando) 특성으로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="107a9-495">사용자 지정 특성이 포함된 페이지에 있는 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="107a9-496">등록할 사용자 지정 특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-496">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="107a9-497">사용자 지정 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-497">The value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="107a9-498">컨트롤 ID, 특성 이름 및 특성 값이 제공되면 이름/값 쌍을 지정한 컨트롤의 사용자 지정(expando) 특성으로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-499"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> 메서드 이름/값 쌍을 지정 된 사용자 지정 (expando) 특성으로 등록 <xref:System.Web.UI.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="107a9-500">Expando 특성은 렌더링 된 컨트롤의 태그에 대 한 XHTML 호환성을 유지 하기 위해 JavaScript에서 동적으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="107a9-501">따옴표와 사용자 지정 (expando) 특성 값에는 백슬래시 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="107a9-502">따옴표와 백슬래시를 이스케이프 하지 않을 경우에 호출 된 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> 메서드를 오버 로드 하 고 설정의 `encode` 매개 변수를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="107a9-503">Expando 특성을 찾을 수 없습니다. expando 특성을 추가 하려면 컨트롤을 찾을 수 없습니다, 클라이언트 스크립트는 계속 내보내지지만 컨트롤 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="107a9-504">사용자 지정 특성이 포함된 페이지에 있는 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="107a9-505">등록할 사용자 지정 특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-505">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="107a9-506">사용자 지정 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-506">The value of the custom attribute.</span></span></param>
        <param name="encode"><span data-ttu-id="107a9-507">등록할 사용자 지정 특성을 인코딩할지 여부를 나타내는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-507">A Boolean value indicating whether to encode the custom attribute to register.</span></span></param>
        <summary><span data-ttu-id="107a9-508">컨트롤 ID, 특성 이름, 특성 값 및 특성 값을 인코딩할지 여부를 나타내는 부울 값이 제공되면 이름/값 쌍을 지정한 컨트롤의 사용자 지정(expando) 특성으로 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-509"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> 메서드 이름/값 쌍을 지정 된 사용자 지정 (expando) 특성으로 등록 <xref:System.Web.UI.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="107a9-510">Expando 특성은 렌더링 된 컨트롤의 태그에 대 한 XHTML 호환성을 유지 하기 위해 JavaScript에서 동적으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="107a9-511">설정의 `encode` 매개 변수를 `true` 따옴표와 expando 특성의 값에는 백슬래시를 이스케이프 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="107a9-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="107a9-512">Expando 특성을 찾을 수 없습니다. expando 특성을 추가 하려면 컨트롤을 찾을 수 없습니다, 클라이언트 스크립트는 계속 내보내지지만 컨트롤 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-513">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> 의 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="107a9-514">렌더링 된 페이지 집합에서 클라이언트 스크립트는 `title` 특성에는 `<span>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-515">유효성 검사에 대한 이벤트 참조를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-515">Registers an event reference for validation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="107a9-516">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-516">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="107a9-517">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 컨트롤 ID를 사용하여 유효성 검사에 대한 이벤트 참조를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-518">자세한 내용 및 예제에 대 한 참조는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-519">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 메서드 및 <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> 메서드 유효성 검사 및 유효성을 검사할 콜백 페이지에서 발생 하는 방법에 대 한 콜백을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="107a9-520">클라이언트 JavaScript를 생성하여 다시 게시 이벤트를 시작하는 방법을 지정하는 <see cref="T:System.Web.UI.PostBackOptions" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span></span></param>
        <summary><span data-ttu-id="107a9-521"><see cref="T:System.Web.UI.PostBackOptions" />를 사용하여 유효성 검사에 대한 이벤트 참조를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-522">자세한 내용 및 예제에 대 한 참조는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="107a9-523">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-523">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-524">클라이언트 이벤트를 통해 전달되는 이벤트 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-524">Event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="107a9-525">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 컨트롤 ID와 이벤트 인수를 사용하여 유효성 검사에 대한 이벤트 참조를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="107a9-526">다음 코드 예제는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 메서드 및 <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> 유효성 검사에 대 한 콜백을 등록 하 고 유효성을 검사할 콜백 페이지에서 발생 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="107a9-527">을 개선 하기 위해이 예제에 표시 된 유효성 검사에는 유효성 검사를 수정할 수 있습니다 `argument` id 또는 역할과 같은 사용자 관련 정보가 포함 되도록 매개 변수</span><span class="sxs-lookup"><span data-stu-id="107a9-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="107a9-528">다음 코드 예제는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 유효성 검사에 대 한 콜백을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="107a9-529">이 메서드가 <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> 메서드보다 먼저 호출되는 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName"><span data-ttu-id="107a9-530">등록할 숨겨진 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-530">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="107a9-531">등록할 필드의 초기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-531">The initial value of the field to register.</span></span></param>
        <summary><span data-ttu-id="107a9-532">숨겨진 값을 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-533"><xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 메서드 만듭니다 숨겨진 `<input>` 렌더링된 된 HTML 페이지에는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-534">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 및 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="107a9-535">이 예제에서는 배열 및 숨겨진된 값을 등록 하 고 정의 된 `OnClick` 의 이벤트는 `<input>` 배열의 두 값과 숨겨진된 값의 합계를 계산 하려면 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="107a9-536"><paramref name="hiddenFieldName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-536"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-537">등록할 OnSubmit 문의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-537">The type of the OnSubmit statement to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-538">등록할 OnSubmit 문의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-538">The key of the OnSubmit statement to register.</span></span></param>
        <param name="script"><span data-ttu-id="107a9-539">등록할 OnSubmit 문의 스크립트 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-539">The script literal of the OnSubmit statement to register.</span></span></param>
        <summary><span data-ttu-id="107a9-540">형식, 키 및 스크립트 리터럴을 사용하여 OnSubmit 문을 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span> <span data-ttu-id="107a9-541">이 문은 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />을 전송할 때 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-542">OnSubmit 문이 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-543">동일한 키 및 유형으로 문은 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-544">페이지와 지정 된 형식 및 키 쌍으로 문은 하나만 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-545">이미 등록 되어 있는 문을 등록 하는 중복 문이 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="107a9-546">호출 된 <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> OnSubmit 문이 지정 된 키 및 유형 쌍에 이미 등록 되었는지 여부를 확인 하 고 불필요 하 게 스크립트를 추가 하려는 시도 방지 하려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="107a9-547">`script` 의 매개 변수는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 메서드 세미콜론 (;)으로 제대로 구분 되는 여러 스크립트 명령을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="107a9-548"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 페이지가 제출 되 고 제출을 취소할 수 있도록 하기 전에 실행 되는 스크립트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="107a9-549">HTML 폼에 대 한 자세한 내용은 및 `OnSubmit` 특성을 참조 하십시오.는 [World Wide Web Consortium (W3C) 웹 사이트](http://go.microsoft.com/fwlink/?linkid=37125)합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-550">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="107a9-551"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-551"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-552">시작 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-553">등록할 시작 스크립트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-553">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-554">등록할 시작 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-554">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="107a9-555">등록할 시작 스크립트 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-555">The startup script literal to register.</span></span></param>
        <summary><span data-ttu-id="107a9-556">형식, 키 및 스크립트 리터럴을 사용하여 시작 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-557">클라이언트 스크립트를 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-558">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-559">페이지와 지정 된 형식 및 키 쌍을 포함 하는 하나의 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-560">이미 등록 되어 있는 스크립트를 등록 하는 스크립트의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="107a9-561">호출 된 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 메서드를 지정 된 키 및 유형 쌍으로 시작 스크립트가 이미 등록 되어 있는지 여부를 확인 하 고 불필요 하 게 스크립트를 추가 하려는 시도 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="107a9-562">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드를 해야 하며에 제공 된 스크립트가 `script` 매개 변수를 사용 하 여 래핑는 `<script>` 요소 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="107a9-563">추가한 스크립트 블록의 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드 페이지 로드가 완료 되 면 하기 전에 실행 페이지의 <xref:System.Web.UI.Control.OnLoad%2A> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="107a9-564">스크립트 블록은 등록 된 순서에 출력 되는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="107a9-565">사용 하 여 스크립트 블록의 순서가 중요 한 경우는 <xref:System.Text.StringBuilder> 개체를 단일 문자열에는 스크립트를 함께 수집 하 고 모두 단일 클라이언트 스크립트 블록에에서 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-566">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="107a9-567">시작 태그와 닫는 스크립트 태그 내에 포함 하는 `script` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="107a9-568">태그를 추가 참조는 추가 매개 변수 설정에 따라 스크립트에는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="107a9-569">등록할 시작 스크립트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-569">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="107a9-570">등록할 시작 스크립트의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-570">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="107a9-571">등록할 시작 스크립트 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-571">The startup script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="107a9-572">스크립트 태그를 추가할지 여부를 나타내는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-572">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="107a9-573">형식, 키, 스크립트 리터럴 및 스크립트 태그를 추가할지 여부를 나타내는 부울 값을 사용하여 시작 스크립트를 <see cref="T:System.Web.UI.Page" /> 개체에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="107a9-574">시작 스크립트는 해당 키와 형식에 의해 고유 하 게 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="107a9-575">동일한 키 및 유형 사용 하 여 스크립트에는 중복으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="107a9-576">페이지와 지정 된 형식 및 키 쌍을 포함 하는 하나의 스크립트를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="107a9-577">이미 등록 되어 있는 스크립트를 등록 하는 스크립트의 복제본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="107a9-578">호출 된 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 메서드를 지정 된 키 및 유형 쌍으로 시작 스크립트가 이미 등록 되어 있는지 여부를 확인 하 고 불필요 하 게 스크립트를 추가 하려는 시도 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="107a9-579">이 오버 로드는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드를 여부를에 제공 된 스크립트가 나타낼 수 있습니다는 `script` 매개 변수를 사용 하 여 래핑는 `<script>` 를 사용 하 여 요소 블록은 `addScriptTags` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="107a9-580">설정 `addScriptTags` 를 `true` 스크립트 태그는 자동으로 추가 되어야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="107a9-581">추가한 스크립트 블록의 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드 페이지 로드가 완료 되 면 하기 전에 실행 페이지의 <xref:System.Web.UI.Control.OnLoad%2A> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="107a9-582">스크립트 블록은 등록 된 순서에 출력 되는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="107a9-583">사용 하 여 스크립트 블록의 순서가 중요 한 경우는 <xref:System.Text.StringBuilder> 개체를 단일 문자열에는 스크립트를 함께 수집 하 고 모두 단일 클라이언트 스크립트 블록에에서 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="107a9-584">다음 코드 예제에서는 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="107a9-585">`addScriptTags` 로 설정 된 `false` 시작 태그와 닫는 태그 스크립트에 포함 되어 있으므로 `script` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="107a9-586"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-586"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="107a9-587">클라이언트 이벤트의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-587">Validates a client event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="107a9-588">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-588">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="107a9-589"><see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> 메서드를 사용하여 이벤트 유효성 검사에 대해 등록된 클라이언트 이벤트의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="107a9-590">이벤트를 생성하는 클라이언트 컨트롤을 나타내는 고유 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-590">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="107a9-591">클라이언트 이벤트를 통해 전달되는 이벤트 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-591">The event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="107a9-592"><see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> 메서드를 사용하여 이벤트 유효성 검사에 대해 등록된 클라이언트 이벤트의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="107a9-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="107a9-593">다음 코드 예제는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> 메서드 및 <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> 유효성 검사에 대 한 콜백을 등록 하 고 유효성을 검사할 콜백 페이지에서 발생 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="107a9-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="107a9-594">여기에 표시 된 유효성 검사를 개선 하는 유효성 검사를 수정할 수 있습니다 `argument` id 또는 역할과 같은 사용자 관련 정보가 포함 되도록 매개 변수</span><span class="sxs-lookup"><span data-stu-id="107a9-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="107a9-595"><paramref name="uniqueId" />이 <see langword="null" /> 또는 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="107a9-595"><paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>