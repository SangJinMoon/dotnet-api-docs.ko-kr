<Type Name="Page" FullName="System.Web.UI.Page">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f721b2567579346df3fa88fb8c8539fab884192" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Web.UI.TemplateControl implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits TemplateControl&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Web::UI::TemplateControl, System::Web::IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("ASPXCodeBehind")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f078d-101">ASP.NET 웹 응용 프로그램을 호스트하는 서버에서 요청된 .aspx 파일(Web Forms 페이지라고도 함)을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f078d-101">Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-102"><xref:System.Web.UI.Page> 클래스는 확장명이.aspx 파일과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-102">The <xref:System.Web.UI.Page> class is associated with files that have an .aspx extension.</span></span> <span data-ttu-id="f078d-103">이러한 파일은 런타임에 컴파일됩니다 <xref:System.Web.UI.Page> 개체 및 서버 메모리에 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-103">These files are compiled at run time as <xref:System.Web.UI.Page> objects and cached in server memory.</span></span>  
  
 <span data-ttu-id="f078d-104">코드 숨김 기술을 사용 하 여 Web Forms 페이지를 만들려는 경우에이 클래스에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-104">If you want to create a Web Forms page using the code-behind technique, derive from this class.</span></span> <span data-ttu-id="f078d-105">신속한 응용 프로그램 RAD (개발) 디자이너, Microsoft Visual Studio와 같은 자동으로 Web Forms 페이지를 만드는이 모델을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-105">Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.</span></span>  
  
 <span data-ttu-id="f078d-106"><xref:System.Web.UI.Page> 역할 구현 하는 제외 하 고 페이지의 모든 서버 컨트롤에 대 한 명명 컨테이너는 <xref:System.Web.UI.INamingContainer> 인터페이스 또는이 인터페이스를 구현 하는 컨트롤의 자식 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-106">The <xref:System.Web.UI.Page> object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.</span></span>  
  
 <span data-ttu-id="f078d-107"><xref:System.Web.UI.Page> 클래스는 웹 응용 프로그램에 대 한 사용자 인터페이스 역할을 하 고 따라서 방법이 필요 보안 코드를 작성 하 고 응용 프로그램 보안을 위한 최선의 구현을 확인 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-107">The <xref:System.Web.UI.Page> class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</span></span> <span data-ttu-id="f078d-108">이러한 항목에 대 한 일반적인 정보를 참조 하십시오. [개요의 웹 응용 프로그램 보안 위협](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: 보안 정책에 대 한 유용한 정보](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), 및 [주요 보안 개념](~/docs/standard/security/key-security-concepts.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-108">For general information on these topics, see [Overview of Web Application Security Threats](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/docs/standard/security/key-security-concepts.md).</span></span> <span data-ttu-id="f078d-109">보다 구체적인 정보를 참조 하십시오. [보안 표준 컨트롤](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [하는 방법: 오류 메시지를 안전 하 게 보호 하는 표시](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [하는 방법: 보호에 대 한 스크립트에 의해 악용 HTML 적용 하 여 웹 응용 프로그램 문자열 인코딩](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-109">For more specific information, see [Securing Standard Controls](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [How to: Display Safe Error Messages](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), and [Introduction to the Validation Controls](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-110">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=192425)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).</span></span>  
  
 <span data-ttu-id="f078d-111">다음 코드 예제에서는 방법을 <xref:System.Web.UI.Page> 클래스는 코드 숨김 페이지 모델에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-111">The following code example demonstrates how the <xref:System.Web.UI.Page> class is used in the code-behind page model.</span></span> <span data-ttu-id="f078d-112">코드 숨김 소스 파일은 기본 페이지 클래스에서 상속 되는 partial 클래스를 선언 하는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-112">Note that the code-behind source file declares a partial class that inherits from a base page class.</span></span> <span data-ttu-id="f078d-113">기본 페이지 클래스 <xref:System.Web.UI.Page>, 다른 클래스에서 파생 되는 이름일 수도 <xref:System.Web.UI.Page>합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-113">The base page class can be <xref:System.Web.UI.Page>, or it can be another class that derives from <xref:System.Web.UI.Page>.</span></span> <span data-ttu-id="f078d-114">또한 partial 클래스가 필요 없이 페이지에 정의 된 컨트롤을 사용 하 여 필드 멤버도 정의 하는 코드 숨김 파일을 허용 하는지 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-114">Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx.cs#2)]
 [!code-vb[System.Web.UI.Page_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx.vb#2)]  
  
 <span data-ttu-id="f078d-115">다음 코드 예제에서는 앞의 코드 숨김 소스 파일에 해당 하는.aspx 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-115">The following code example shows the .aspx file that corresponds to the preceding code-behind source file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-116">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-117">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-118">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-118">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx#1)]  
  
 <span data-ttu-id="f078d-119">지시문을 사용 하 고 사용 해야 합니다는 `Inherits` 및 `CodeFile` .aspx 파일에 코드 숨김 파일을 연결 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-119">You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file.</span></span> <span data-ttu-id="f078d-120">이 예제에서는 `Inherits` 특성 나타냅니다는 `MyCodeBehind` 클래스 및 `CodeFile` 특성 클래스를 포함 하는 언어 관련 파일의 경로를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-120">In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.</span></span>  
  
 <span data-ttu-id="f078d-121">다음 코드 예제는 단일 파일 페이지 모델 및 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Page.IsPostBack%2A> 속성 및 <xref:System.Web.UI.Page.Response%2A> 의 속성은 <xref:System.Web.UI.Page>합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-121">The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the <xref:System.Web.UI.Page>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/vb/pageexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-122">
            <see cref="T:System.Web.UI.Page" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-122">Initializes a new instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-123">기본 생성자는 모든 필드를 기본값으로 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-123">The default constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">
          <span data-ttu-id="f078d-124">추가할 내용 템플릿의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-124">The name of the content template to add.</span>
          </span>
        </param>
        <param name="template">
          <span data-ttu-id="f078d-125">내용 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-125">The content template</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-126">현재 페이지 또는 마스터 페이지가 마스터 페이지를 참조하는 경우 페이지를 초기화하는 동안 Content 컨트롤에서 마스터 페이지로 전달되는 내용의 컬렉션을 만들기 위해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-126">Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-127">이름이 같은 내용 템플릿이 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-127">A content template with the same name already exists.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRenderCompleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-128">비동기 페이지에 대한 시작 및 종료 이벤트 처리기 대리자를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-128">Registers beginning and ending event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="f078d-129">
            <see cref="T:System.Web.BeginEventHandler" /> 메서드의 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-129">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="f078d-130">
            <see cref="T:System.Web.EndEventHandler" /> 메서드의 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-130">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-131">비동기 페이지에 대한 상태 정보를 필요로 하지 않는 시작 및 종료 이벤트 처리기 대리자를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-131">Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-132">사용 된 <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> 메서드를 비동기 웹 페이지에 처리기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-132">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers to an asynchronous Web page.</span></span>  
  
 <span data-ttu-id="f078d-133">여러 비동기 처리기;에 등록할 수 있습니다. 그러나 한 번에 하나만 처리기 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-133">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="f078d-134">여러 비동기 메서드를 동시에 처리 하려는 경우에 단일을 사용 해야 <xref:System.Web.BeginEventHandler> 메서드 및 해당 처리기에서 여러 개의 비동기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-134">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="f078d-135">비동기 처리기 사이 호출 된 <xref:System.Web.UI.Control.PreRender> 및 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-135">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="f078d-136">첫째, 모든 <xref:System.Web.UI.Page> 이벤트 (통해는 <xref:System.Web.UI.Control.PreRender> 이벤트)은 실행 시 다음 등록 된 각 <xref:System.Web.BeginEventHandler> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-136">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="f078d-137">처리기 완료 되 면 해당 <xref:System.Web.EndEventHandler> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-137">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="f078d-138">여러 비동기 처리기가 있는 경우 다음 처리기가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-138">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="f078d-139">등록 된 비동기 이벤트 처리기가 호출 된 후 페이지 이벤트의 나머지를를 호출 부터는 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-139">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-140">다음 코드 예제에서는 비동기 요청을 사용 하 여 로컬 웹 서버 기본 페이지의 HTML 소스 코드를 표시 하는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-140">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-141">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-141">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-142">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-142">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-143">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-143">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-144">
            <see langword="&lt;async&gt;" /> 페이지 지시문이 <see langword="true" />로 설정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-144">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f078d-145">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-145">\- or -</span>
          </span>
          <span data-ttu-id="f078d-146">
            <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> 메서드가 <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트 다음에 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-146">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-147">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> 또는 <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-147">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="f078d-148">
            <see cref="T:System.Web.BeginEventHandler" /> 메서드의 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-148">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="f078d-149">
            <see cref="T:System.Web.EndEventHandler" /> 메서드의 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-149">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f078d-150">이벤트 처리기에 대한 상태 정보가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-150">An object containing state information for the event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-151">비동기 페이지에 대한 시작 및 종료 이벤트 처리기 대리자를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-151">Registers beginning and ending  event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-152">사용 하 여는 <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> 메서드를 비동기 웹 페이지에 상태 정보를 필요로 하는 처리기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-152">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers that require state information to an asynchronous Web page.</span></span> <span data-ttu-id="f078d-153">에 전달 되는 개체는 `state` 매개 변수는 응용 프로그램에 필요한 이벤트 처리기 대리자에 지정 된 간에 정보를 전송 하는 모든 개체 일 수는 `beginHandler` 및 `endHandler` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-153">The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.</span></span>  
  
 <span data-ttu-id="f078d-154">여러 비동기 처리기;에 등록할 수 있습니다. 그러나 한 번에 하나만 처리기 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-154">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="f078d-155">여러 비동기 메서드를 동시에 처리 하려는 경우에 단일을 사용 해야 <xref:System.Web.BeginEventHandler> 메서드 및 해당 처리기에서 여러 개의 비동기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-155">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="f078d-156">비동기 처리기 사이 호출 된 <xref:System.Web.UI.Control.PreRender> 및 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-156">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="f078d-157">첫째, 모든 <xref:System.Web.UI.Page> 이벤트 (통해는 <xref:System.Web.UI.Control.PreRender> 이벤트)은 실행 시 다음 등록 된 각 <xref:System.Web.BeginEventHandler> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-157">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="f078d-158">처리기 완료 되 면 해당 <xref:System.Web.EndEventHandler> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-158">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="f078d-159">여러 비동기 처리기가 있는 경우 다음 처리기가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-159">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="f078d-160">등록 된 비동기 이벤트 처리기가 호출 된 후 페이지 이벤트의 나머지를를 호출 부터는 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-160">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-161">다음 코드 예제에서는 비동기 요청을 사용 하 여 로컬 웹 서버 기본 페이지의 HTML 소스 코드를 표시 하는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-161">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-162">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-162">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-163">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-163">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-164">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-164">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-165">
            <see langword="&lt;async&gt;" /> 페이지 지시문이 <see langword="true" />로 설정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-165">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f078d-166">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-166">\- or -</span>
          </span>
          <span data-ttu-id="f078d-167">
            <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> 메서드가 <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트 다음에 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-167">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-168">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> 또는 <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-168">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected internal void AddWrappedFileDependencies (object virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddWrappedFileDependencies(object virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddWrappedFileDependencies(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddWrappedFileDependencies (virtualFileDependencies As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddWrappedFileDependencies(System::Object ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="f078d-169">파일 이름 목록이 들어 있는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-169">An <see cref="T:System.Object" /> containing the list of file names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-170">현재 페이지를 구성하는 종속 파일 목록을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-170">Adds a list of dependent files that make up the current page.</span>
          </span>
          <span data-ttu-id="f078d-171">이 메서드는 ASP.NET 페이지 프레임워크에서 내부적으로 사용되며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-171">This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-172"><xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> 메서드는 현재 페이지를 구성 하는 사용자 제어 파일 등 파일의 목록을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-172">The <xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> method adds a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="f078d-173">이러한 페이지 중 하나를 수정 하는 경우 전체 페이지 다음에 필요할 때가 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-173">If any of these pages is modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="f078d-174">이 메서드는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-174">This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-175">현재 웹 요청에 대한 <see cref="T:System.Web.HttpApplicationState" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-175">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-176">
            <see cref="T:System.Web.HttpApplicationState" /> 클래스에 있는 현재 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-176">The current data in the <see cref="T:System.Web.HttpApplicationState" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page.Application_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Application_Sample1/CS/applicationcs.aspx#1)]
 [!code-vb[Page.Application_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Application_Sample1/VB/applicationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="AspCompatBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AspCompatBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AspCompatBeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AspCompatBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f078d-177">현재 요청에 대한 정보가 포함된 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-177">An <see cref="T:System.Web.HttpContext" /> with information about the current request.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="f078d-178">콜백 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-178">The callback method.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="f078d-179">ASP 요청과 같은 방식으로 요청을 처리하는 데 필요한 모든 추가 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-179">Any extra data needed to process the request in the same manner as an ASP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-180">ASP(Active Server Page) 리소스에 대한 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-180">Initiates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="f078d-181">이 메서드는 이전 ASP 응용 프로그램과의 호환성을 위해 제공됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-181">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-182">
            <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-182">An <see cref="T:System.IAsyncResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-183">이 메서드를 호출 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-183">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AspCompatEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AspCompatEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AspCompatEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AspCompatEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="f078d-184">요청으로 생성된 ASP 페이지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-184">The ASP page generated by the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-185">ASP 리소스에 대한 요청을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-185">Terminates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="f078d-186">이 메서드는 이전 ASP 응용 프로그램과의 호환성을 위해 제공됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-186">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-187">이 메서드를 호출 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-187">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatMode">
      <MemberSignature Language="C#" Value="protected bool AspCompatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AspCompatMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AspCompatMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AspCompatMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AspCompatMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-188">STA(단일 스레드 아파트) 스레드에서 페이지를 실행할 수 있는지 여부를 나타내는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-188">Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-189">페이지에서 ASP 코드를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-189">
              <see langword="true" /> if the page supports Active Server Pages (ASP) code; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-190">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-191">로 설정 하면 `true`,이 속성 페이지를 단일 스레드 아파트 (STA) 스레드에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-191">When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread.</span></span> <span data-ttu-id="f078d-192">이 페이지를에서 Visual Basic 6.0을 사용 하 여 개발 하는 구성 요소와 같은 STA 구성 요소를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-192">This allows the page to call STA components, such as components developed with Visual Basic 6.0.</span></span> <span data-ttu-id="f078d-193">이 속성을 설정 `true` 페이지에서 관리 되지 않는 ASP 내장 개체에 대 한 액세스를 필요로 하는 COM + 구성 요소를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-193">Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.</span></span> <span data-ttu-id="f078d-194">ASP를 통해 액세스할 수 `ObjectContext` 개체 또는 `OnStartPage` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-194">These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.</span></span>  
  
 <span data-ttu-id="f078d-195">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-195">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-196">설정의 `aspcompat` 특성을 `true` .aspx 파일에 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-196">Set the `aspcompat` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-197">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-197">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncMode">
      <MemberSignature Language="C#" Value="protected bool AsyncMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AsyncMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AsyncMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-198">페이지가 동기식으로 처리되는지 또는 비동기식으로 처리되는지 여부를 나타내는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-198">Sets a value indicating whether the page is processed synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-199">페이지가 비동기식으로 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-199">
              <see langword="true" /> if the page is processed asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-200"><xref:System.Web.UI.Page.AsyncMode%2A> 속성이 <xref:System.Web.UI.Page> 파서 페이지에 대 한 코드가 생성 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-200">The <xref:System.Web.UI.Page.AsyncMode%2A> property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated.</span></span> <span data-ttu-id="f078d-201">사용 하 여는 `Async` 지시문에서 특성을이 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-201">Use the `Async` attribute in  directive to set this value.</span></span>  
  
 <span data-ttu-id="f078d-202">비동기 페이지 작동 하지 않습니다는 `AspCompat` 특성이로 설정 된 `true` 또는 `Transaction` 이외의 값으로 설정 되어 특성 `Disabled` 지시문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-202">Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AsyncPageBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AsyncPageBeginProcessRequest (context As HttpContext, callback As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AsyncPageBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f078d-203">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-203">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f078d-204">프로세스가 완료되면 이를 알려 주는 콜백 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-204">The callback method to notify when the process is complete.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="f078d-205">비동기 메서드의 상태 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-205">State data for the asynchronous method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-206">비동기 페이지 요청 처리를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-206">Begins processing an asynchronous page request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-207">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-207">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AsyncPageEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AsyncPageEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AsyncPageEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AsyncPageEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="f078d-208">보류 중인 비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-208">An <see cref="T:System.IAsyncResult" /> referencing a pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-209">비동기 페이지 요청 처리를 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-209">Ends processing an asynchronous page request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-210">비동기 작업을 처리할 때 사용되는 시간 제한 간격을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-210">Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-211">비동기 작업을 완료하는 데 허용되는 시간 간격이 포함된 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-211">A <see cref="T:System.TimeSpan" /> that contains the allowed time interval for completion of the asynchronous task.</span>
          </span>
          <span data-ttu-id="f078d-212">기본 시간 간격은 45초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-212">The default time interval is 45 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-213">페이지의 비동기 시간 제한 비동기 작업을 수행 하는 페이지에서 대기 하는 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-213">The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.</span></span> <span data-ttu-id="f078d-214">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-214">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-215">사용 하 여 페이지 비동기 시간 제한 간격 설정는 웹 구성 파일 또는 지시문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-215">Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive.</span></span> <span data-ttu-id="f078d-216">Page 지시문 페이지 구성 섹션에 설정 된 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-216">Values set in the page configuration section are overwritten by the page directive.</span></span>  
  
 <span data-ttu-id="f078d-217">사용 하 여 비동기 작업 정의 <xref:System.Web.UI.PageAsyncTask> 클래스 및 시작 하는, 종료 및 시간 제한 처리기를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-217">Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler.</span></span> <span data-ttu-id="f078d-218">비동기 작업은 지정 된 시간 간격에 완료 되지 않으면, 제한 시간 처리기가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-218">If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-219">다음 코드 예제에서는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성으로는 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 및 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-219">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f078d-220">Note 시작, 종료 및 제한 시간 처리기를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-220">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f078d-221">예제에서는 인위적 지연을 포함 되는 비동기 작업에 지정 된 대로 작업에 대 한 할당된 된 시간 초과 상황을 보여 주기 위해는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-221">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f078d-222">실제 시나리오에서는 데이터베이스 호출 또는 이미지 생성을 수행 하는 비동기 작업을 사용할 수 예를 들어 및 제한 시간 처리기는 지정 된 시간 내에 작업을 수행 하지 않는 경우 정상적인 저하를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-222">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span> <span data-ttu-id="f078d-223"><xref:System.Web.UI.Page.AsyncTimeout%2A> page 지시문에서 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-223">Note that the <xref:System.Web.UI.Page.AsyncTimeout%2A> property is set in the page directive.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-224">속성이 음수값으로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-224">The property was set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBackControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control AutoPostBackControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control AutoPostBackControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AutoPostBackControl" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPostBackControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ AutoPostBackControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-225">다시 게시를 수행하는 데 사용되는 페이지의 컨트롤을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-225">Gets or sets the control in the page that is used to perform postbacks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-226">다시 게시를 수행하는 데 사용되는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-226">The control that is used to perform postbacks.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-227">페이지 출력이 버퍼링되는지 여부를 나타내는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-227">Sets a value indicating whether the page output is buffered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-228">페이지 출력이 버퍼링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-228">
              <see langword="true" /> if page output is buffered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-229">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-229">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-230">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-230">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-231">설정의 <xref:System.Web.UI.Page.Buffer%2A> 특성을 `true` .aspx 파일에 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-231">Set the <xref:System.Web.UI.Page.Buffer%2A> attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-232">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-232">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-233"><xref:System.Web.UI.Page.Buffer%2A> 속성 설정 하 고 가져옵니다는 <xref:System.Web.HttpResponse.BufferOutput%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-233">The <xref:System.Web.UI.Page.Buffer%2A> property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-234">페이지가 들어 있는 응용 프로그램과 관련된 <see cref="T:System.Web.Caching.Cache" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-234">Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-235">페이지가 들어 있는 응용 프로그램과 관련된 <see cref="T:System.Web.Caching.Cache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-235">The <see cref="T:System.Web.Caching.Cache" /> associated with the page's application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-236">응용 프로그램의 <xref:System.Web.Caching.Cache> 개체를 저장 하 고 이후 요청에서 임의의 데이터를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-236">An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests.</span></span> <span data-ttu-id="f078d-237">캐시 특히 페이지 또는 사용자 세션과 연결 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-237">The cache is not specifically associated with a page or user session.</span></span> <span data-ttu-id="f078d-238">응용 프로그램 성능을 향상 하는 데 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-238">It is used primarily to enhance application performance.</span></span> <span data-ttu-id="f078d-239">자세한 내용은 참조 [응용 프로그램 데이터 캐싱](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-239">For more information, see [Caching Application Data](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d).</span></span> <span data-ttu-id="f078d-240">응용 프로그램에서 캐싱 및 페이지 출력 캐싱을 간의 차이점에 자세한 내용은 참조 [ASP.NET Caching 개요](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-240">For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-241">으로 두 정수의 합을 삽입 하는 다음 코드 예제는 <xref:System.Web.Caching.Cache?displayProperty=nameWithType> 를 사용 하 여 개체는 <xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-241">The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=nameWithType> object using the <xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f078d-242">그런 다음 사용 하 여 값 검색는 <xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> 메서드를 기록 하 고는 <xref:System.Web.UI.WebControls.Label> 웹 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-242">It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.</span></span>  
  
 [!code-csharp[System.Web.Page.Cache_Replacement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/CS/pagecachecs.aspx#1)]
 [!code-vb[System.Web.Page.Cache_Replacement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/VB/pagecachevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-243">
            <see cref="T:System.Web.Caching.Cache" />의 인스턴스가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-243">An instance of <see cref="T:System.Web.Caching.Cache" /> is not created.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="ClientQueryString">
      <MemberSignature Language="C#" Value="public string ClientQueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientQueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientQueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientQueryString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-244">요청한 URL의 쿼리 문자열 부분을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-244">Gets the query string portion of the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-245">요청한 URL의 쿼리 문자열 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-245">The query string portion of the requested URL.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-246"><xref:System.Web.UI.Page.ClientQueryString%2A> 속성 브라우저에서 요청 된 URL의 쿼리 문자열 부분을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-246">The <xref:System.Web.UI.Page.ClientQueryString%2A> property contains the query string portion of the URL requested by the browser.</span></span> <span data-ttu-id="f078d-247">예를 들어, 요청 된 URL은 "http://www.contoso.com/default.aspx?id=100", <xref:System.Web.UI.Page.ClientQueryString%2A> 속성에 포함 됩니다 "id = 100"입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-247">For example, if the requested URL is "http://www.contoso.com/default.aspx?id=100", the <xref:System.Web.UI.Page.ClientQueryString%2A> property will contain "id=100".</span></span> <span data-ttu-id="f078d-248"><xref:System.Web.UI.Page.ClientQueryString%2A> 속성은 암호화 됩니다; 사용 하 여는 <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> 메서드 쿼리 문자열을 디코딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-248">The <xref:System.Web.UI.Page.ClientQueryString%2A> property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> method to decode the query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientScriptManager ClientScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ClientScriptManager ClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientScript As ClientScriptManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientScriptManager ^ ClientScript { System::Web::UI::ClientScriptManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientScriptManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-249">페이지에서 스크립트를 관리, 등록, 추가하는 데 사용되는 <see cref="T:System.Web.UI.ClientScriptManager" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-249">Gets a <see cref="T:System.Web.UI.ClientScriptManager" /> object used to manage, register, and add script to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-250">
            <see cref="T:System.Web.UI.ClientScriptManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-250">A <see cref="T:System.Web.UI.ClientScriptManager" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-251">사용 하 여는 <xref:System.Web.UI.Page.ClientScript%2A> 가져올 속성을 <xref:System.Web.UI.ClientScriptManager> 관리, 등록, 웹 페이지에 스크립트를 추가 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-251">Use the <xref:System.Web.UI.Page.ClientScript%2A> property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page.</span></span> <span data-ttu-id="f078d-252">자세한 내용은 <xref:System.Web.UI.ClientScriptManager> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-252">For more information, see the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
 <span data-ttu-id="f078d-253"><xref:System.Web.UI.ClientScriptManager> 클래스는의 새로운 [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] 하 고 대체 <xref:System.Web.UI.Page> 이제 사용 되지 않는 스크립트를 관리 하기 위한 메서드를 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-253">The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-254">예를 들어 참조는 <xref:System.Web.UI.ClientScriptManager> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-254">For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="ClientTarget">
      <MemberSignature Language="C#" Value="public string ClientTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientTarget" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTarget As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientTarget { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-255">브라우저의 자동 검색 기능을 재정의하고 페이지가 특정 브라우저 클라이언트에 렌더링되는 방법을 지정할 수 있는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-255">Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-256">재정의할 브라우저 기능을 지정하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-256">A <see cref="T:System.String" /> that specifies the browser capabilities that you want to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-257">설정 하지 않은 경우는 <xref:System.Web.UI.Page.ClientTarget%2A> 속성에는 <xref:System.Web.HttpBrowserCapabilities> 연관 된 개체는 <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> 속성은 클라이언트 브라우저의 기능을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-257">If you do not set the <xref:System.Web.UI.Page.ClientTarget%2A> property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> property reflects the capabilities of the client browser.</span></span> <span data-ttu-id="f078d-258">이 속성을 설정한 경우 클라이언트 브라우저 검색이 비활성화 되 고 브라우저 기능을 제공 하는 값 (별칭)와 관련 된 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-258">If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.</span></span>  
  
 <span data-ttu-id="f078d-259">웹 서버 컴퓨터에서 루트 Web.config 구성 파일 일반 사용자 에이전트 문자열에 대 한 약식으로 사용할 수 있는 다음과 같은 기본 별칭을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-259">The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:</span></span>  
  
-   <span data-ttu-id="f078d-260">`uplevel`를 지정 하는 Internet Explorer 6.0에 해당 하는 브라우저 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-260">`uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.</span></span>  
  
-   <span data-ttu-id="f078d-261">`downlevel`를 지정 하는 클라이언트 스크립트를 지원 하지 않는 이전 버전의 브라우저에 해당 하는 브라우저 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-261">`downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script.</span></span> <span data-ttu-id="f078d-262">클라이언트 스크립트를 사용 하지 않도록 설정 하는 브라우저에서 웹 페이지 작동 방식을 확인 하려면이 별칭을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-262">You can use this alias to determine how Web pages would work in a browser that has client script disabled.</span></span>  
  
 <span data-ttu-id="f078d-263">프로그래밍 방식으로이 속성을 사용 하 여 별칭을 설정할 수 있습니다 또는 선언적으로 사용 하 여 설정할 수 있습니다는 `ClientTarget` 지시문의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-263">You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive.</span></span>  
  
 <span data-ttu-id="f078d-264">에 추가 별칭을 정의할 수 있습니다는 `clientTarget` 응용 프로그램 수준 Web.config 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-264">You can define additional aliases in the `clientTarget` section of the application-level Web.config file.</span></span> <span data-ttu-id="f078d-265">자세한 내용은 참조 [clientTarget 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-265">For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-266">다음 코드 예제에서는 정의 `ie302` 별칭의 Web.config 파일에 응용 프로그램을 구성 하는 데 필요한 섹션이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-266">The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file.</span></span> <span data-ttu-id="f078d-267">이 별칭을 사용 하 여 설정할 수 있습니다는 <xref:System.Web.UI.Page.ClientTarget%2A> 속성을 `ie302` Internet Explorer 3.02 브라우저에 맞게 페이지 및 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-267">Using this alias, you can set the <xref:System.Web.UI.Page.ClientTarget%2A> property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.</span></span>  
  
```  
<configuration>  
  <system.web>  
   <clientTarget>  
    <add alias="ie302" useragent="Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)" />  
   </clientTarget>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-268">현재 <see cref="T:System.Web.UI.Page" />에 대한 코드 페이지 식별자를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-268">Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-269">현재 <see cref="T:System.Web.UI.Page" />에 대한 코드 페이지 식별자를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-269">An integer that represents the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-270">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-270">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-271">설정 된 `CodePage` 특성.aspx 파일에 지시문을 사용 하 여 원하는 값으로.</span><span class="sxs-lookup"><span data-stu-id="f078d-271">Set the `CodePage` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-272">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-272">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-273">페이지와 관련된 <see cref="T:System.Web.HttpResponse" /> 개체에 대한 HTTP MIME 형식을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-273">Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-274">현재 페이지와 관련된 HTTP MIME 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-274">The HTTP MIME type associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-275">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-275">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-276">설정 된 `ContentType` .aspx 파일에 지시문을 사용 하 여 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-276">Set the `ContentType` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-277">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-277">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal override System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-278">페이지와 관련된 <see cref="T:System.Web.HttpContext" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-278">Gets the <see cref="T:System.Web.HttpContext" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-279">현재 페이지와 관련된 정보를 포함하는 <see cref="T:System.Web.HttpContext" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-279">An <see cref="T:System.Web.HttpContext" /> object that contains information associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-280">이 속성 페이지가 요청, 응답, 세션 및 응용 프로그램에 대 한 정보를 포함 하 여, 실행 컨텍스트를 프로그래밍 방식으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-280">This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-281">다음 코드 예제에서는 <xref:System.Web.UI.Page.Context%2A> 속성에 액세스는 <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> 및 <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-281">The following code example uses the <xref:System.Web.UI.Page.Context%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f078d-282">이 예에서는 세 가지 사용자 지정 예외를 사용 하 여 만듭니다는 <xref:System.Web.HttpContext.AddError%2A> 사용 하 여 메서드는 <xref:System.Web.HttpContext.AllErrors%2A> 배열에 대 한 이러한 예외를 로드 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-282">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="f078d-283">그런 다음 배열을 포함 하는 페이지에 쓴 하 고 사용 하 여는 <xref:System.Web.HttpContext.ClearError%2A> 의 오류를 지우려면 메서드는 <xref:System.Web.UI.Page.Context%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-283">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Context#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Context/CS/pagecontextcs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Context#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Context/VB/pagecontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter tw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateHtmlTextWriter (tw As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ tw);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="f078d-284">
            <see cref="T:System.IO.TextWriter" />을 만드는 데 사용되는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-284">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-285">페이지의 내용을 렌더링하는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-285">Creates an <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-286">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 또는 <see cref="T:System.Web.UI.Html32TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-286">An <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-287"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> 메서드를 만듭니다는 <xref:System.IO.TextWriter> 통해는 <xref:System.Web.HttpRequest.Browser%2A> 속성은 <xref:System.Web.HttpContext.Request%2A> 페이지 요청에 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-287">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request.</span></span> <span data-ttu-id="f078d-288">에 대 한 참조를 추가할 수는 <xref:System.Web.UI.HtmlTextWriter> 에 `browserCaps` 구성 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-288">You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section.</span></span> <span data-ttu-id="f078d-289">재정의 <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> 메서드를 사용자 지정 조회를 수행 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-289">Override the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to perform custom lookup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-290">다음 코드 예제에서는 <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> 메서드는 사용자 지정의 인스턴스를 만드는 <xref:System.Web.UI.HtmlTextWriter> 라는 개체 `MyHtmlTextWriter`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-290">The following code example uses the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`.</span></span> <span data-ttu-id="f078d-291"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> 에서 메서드를 재정의 `MyPage` 클래스에서 파생 된 <xref:System.Web.UI.Page>있도록 `MyHtmlTextWriter` 페이지가 요청 될 때 ASP.NET 서버 컨트롤을 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-291">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested.</span></span> <span data-ttu-id="f078d-292">이 예제에서는 어댑터를 방지 합니다는 참고 <xref:System.IO.TextWriter> 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-292">Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.</span></span>  
  
 [!code-csharp[Page_CreateHtmlTextWriter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/CS/page_createhtmltextwriter.cs#2)]
 [!code-vb[Page_CreateHtmlTextWriter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/VB/page_createhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Html32TextWriter" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriterFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType(class System.IO.TextWriter tw, class System.Type writerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHtmlTextWriterFromType (tw As TextWriter, writerType As Type) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriterFromType(System::IO::TextWriter ^ tw, Type ^ writerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
        <Parameter Name="writerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="f078d-293">
            <see cref="T:System.IO.TextWriter" />을 만드는 데 사용되는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-293">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <param name="writerType">
          <span data-ttu-id="f078d-294">만들 텍스트 기록기의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-294">The type of text writer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-295">페이지의 내용을 렌더링하는 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-295">Creates a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-296">페이지의 내용을 렌더링하는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-296">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-297">이 메서드는 페이지 어댑터에서 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-297">This method is used internally in page adapters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-298">
            <paramref name="writerType" /> 매개 변수가 잘못된 형식으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-298">The <paramref name="writerType" /> parameter is set to an invalid type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public string Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Culture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Culture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-299">페이지와 관련된 <see cref="T:System.Threading.Thread" /> 개체의 문화권 ID를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-299">Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-300">유효한 문화권 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-300">A valid culture ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-301">설정의 `Culture` .aspx 파일의 지시어의 경우에 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-301">Set the `Culture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-302">페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-302">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="f078d-303">값을 명시적으로 설정할 수 또한는 <xref:System.Web.UI.Page.Culture%2A> 속성 Web.config의 요소에 프로그래밍 방식으로 또는 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-303">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.Culture%2A> property programmatically or in the  element of the Web.config file.</span></span>  
  
 <span data-ttu-id="f078d-304"><xref:System.Web.UI.Page.Culture%2A> 속성은 페이지 콘텐츠를 지역화 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-304">The <xref:System.Web.UI.Page.Culture%2A> property is used to help localize page content.</span></span> <span data-ttu-id="f078d-305">모든 유효한 문화권 ID에 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-305">You can set it to any valid culture ID.</span></span> <span data-ttu-id="f078d-306">예를 들어는 `en-us` 미국 영어, while에 페이지를 설정 하는 문화권 ID는 `fr` 문화권 ID를 프랑스어로 페이지를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-306">For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French.</span></span> <span data-ttu-id="f078d-307">값을 설정할 수도 `auto` 기본 설정 언어를 설정의 브라우저의 자동 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-307">You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it.</span></span> <span data-ttu-id="f078d-308">기본값은 같은 자동 언어 검색을 한정 수 `auto:en-us`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-308">The automatic language detection can be qualified with a default value such as `auto:en-us`.</span></span>  
  
 <span data-ttu-id="f078d-309">자세한 내용은 참조는 <xref:System.Globalization.CultureInfo> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-309">For more information, see the <xref:System.Globalization.CultureInfo> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
      </Docs>
    </Member>
    <Member MemberName="DesignerInitialize">
      <MemberSignature Language="C#" Value="public void DesignerInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DesignerInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DesignerInitialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub DesignerInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DesignerInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-310">RAD 디자이너에서 요청한 <see cref="T:System.Web.UI.Page" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-310">Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers.</span>
          </span>
          <span data-ttu-id="f078d-311">이 메서드는 디자인 타임에만 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-311">This method is used only at design time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.UserControl.DesignerInitialize" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-312">POST 또는 GET 명령을 사용하여 페이지에 다시 게시된 데이터의 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-312">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> of data posted back to the page using either a POST or a GET command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-313">폼 데이터가 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-313">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the form data.</span>
          </span>
          <span data-ttu-id="f078d-314">POST 명령을 사용하여 다시 게시하면 <see cref="P:System.Web.UI.Page.Context" /> 개체에서 폼 정보가 반환되고</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-314">If the postback used the POST command, the form information is returned from the <see cref="P:System.Web.UI.Page.Context" /> object.</span>
          </span>
          <span data-ttu-id="f078d-315">GET 명령을 사용하여 다시 게시하면 쿼리 문자열 정보가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-315">If the postback used the GET command, the query string information is returned.</span>
          </span>
          <span data-ttu-id="f078d-316">페이지를 처음으로 요청하면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-316">If the page is being requested for the first time, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-317"><xref:System.Web.UI.Page.DeterminePostBackMode%2A> 메서드가 반환 되는 <xref:System.Collections.Specialized.NameValueCollection> 개체 데이터를 포함 하는 페이지에 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-317">The <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page.</span></span> <span data-ttu-id="f078d-318">페이지의 현재 상태 보기 상태 및 EVENTTARGET 포스트백 이벤트가 발생 했는지 확인 하는 데 사용 되는 필드를 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-318">The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.</span></span> <span data-ttu-id="f078d-319"><xref:System.Web.UI.Page.IsPostBack%2A> 속성을 설정 하는 경우는 <xref:System.Web.UI.Page.DeterminePostBackMode%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-319">The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-320">요청에 대한 ASP.NET 요청 유효성 검사를 수행하지 않고 POST 또는 GET 명령을 사용하여 페이지에 게시되었던 데이터의 이름-값 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-320">Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-321">유효성을 검사하지 않은 양식 데이터가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-321">An object that contains the unvalidated form data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-322">자세한 내용은 <xref:System.Web.UnvalidatedRequestValues> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-322">For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-323">페이지에서 다시 게시 및 콜백 이벤트의 유효성을 검사하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-323">Gets or sets a value indicating whether the page validates postback and callback events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-324">페이지에서 포스트백 및 콜백 이벤트의 유효성을 검사하는 경우 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-324">
              <see langword="true" /> if the page validates postback and callback events; otherwise, <see langword="false" />.The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-325">경우는 <xref:System.Web.UI.Page.EnableEventValidation%2A> 속성이 `true`, ASP.NET 컨트롤 이벤트를 제어 하 여 렌더링 된 사용자 인터페이스에서 시작 되었으며 있는지 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-325">When the <xref:System.Web.UI.Page.EnableEventValidation%2A> property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control.</span></span> <span data-ttu-id="f078d-326">컨트롤을 렌더링 하는 동안 해당 이벤트를 등록 하 고 이벤트 처리를 다시 게시 또는 콜백 하는 동안 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-326">A control registers its events during rendering and then validates the events during postback or callback handling.</span></span> <span data-ttu-id="f078d-327">예를 들어 페이지가 렌더링 되 고 4 옵션 번호를 지정 하는 다시 게시 요청을 받을 경우 1, 2 또는 3 번호가 지정 옵션을 포함 하는 목록 컨트롤을 ASP.NET 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-327">For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.</span></span> <span data-ttu-id="f078d-328">기본적으로이 기능을 사용 하는 ASP.NET의 모든 이벤트 구동 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-328">All event-driven controls in ASP.NET use this feature by default.</span></span>  
  
 <span data-ttu-id="f078d-329">사용 해야 런타임 시 클라이언트에서 컨트롤을 변경 하는 클라이언트 스크립트를 작성 하는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> false 이벤트 유효성 검사 오류를 방지 하려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-329">If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-330">이 기능은 권한이 없는 사용자나 악의적인 게시 요청 및 콜백이의 위험을 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-330">This feature reduces the risk of unauthorized or malicious postback requests and callbacks.</span></span> <span data-ttu-id="f078d-331">이벤트 유효성 검사를 해제 하지 않는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-331">It is strongly recommended that you do not disable event validation.</span></span>  
  
 <span data-ttu-id="f078d-332">설정한는 <xref:System.Web.UI.Page.EnableEventValidation%2A> 속성을 설정 하 여는 `enableEventValidation` 지시문의 특성 또는 `enableEventValidation` Web.config 파일에서 요소의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-332">You set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file.</span></span> <span data-ttu-id="f078d-333">코드에서이 속성을 설정 하는 경우 페이지를 초기화 하기 전에 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-333">If you set this property in code, you must set it before the page is initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-334">페이지가 초기화된 후 <see cref="P:System.Web.UI.Page.EnableEventValidation" /> 속성이 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-334">The <see cref="P:System.Web.UI.Page.EnableEventValidation" /> property was set after the page was initialized.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
        <altmember cref="T:System.Web.UI.SupportsEventValidationAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-335">현재 페이지 요청이 끝날 때 페이지가 자신의 뷰 상태 및 자신이 포함하는 서버 컨트롤의 뷰 상태를 유지하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-335">Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-336">페이지가 자신의 뷰 상태를 유지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-336">
              <see langword="true" /> if the page maintains its view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-337">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-337">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-338">뷰 상태를 사용 하지 않도록 설정 하는 이유는 방법에 대 한 정보를 참조 하십시오. <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-338">For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f078d-339">경우에 <xref:System.Web.UI.Page.EnableViewState%2A> 은 `false`, 페이지에서 포스트백을 검색 하려면 ASP.NET에서 사용 되는 숨겨진된 보기 상태 필드가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-339">Even if <xref:System.Web.UI.Page.EnableViewState%2A> is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-340">다음 코드 예제에서는 <xref:System.Web.UI.Page.EnableViewState%2A> 속성을 `false` 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-340">The following code example sets the <xref:System.Web.UI.Page.EnableViewState%2A> property to `false` when the page is loaded.</span></span> <span data-ttu-id="f078d-341">뷰 상태를 사용할 수 없게 된 <xref:System.Web.UI.Page> 개체 페이지에 대 한 뷰 상태 정보 아니고 페이지에 포함 된 모든 컨트롤 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-341">This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-342">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-342">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-343">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-343">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-344">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-344">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/CS/page_enableviewstate.cs#1)]
 [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/VB/page_enableviewstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-345">페이지가 클라이언트에서 다시 게시될 때 ASP.NET에서 페이지의 뷰 상태에 대해 MAC(Machine Authentication Check)를 확인해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-345">Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-346">뷰 상태를 MAC로 검사하고 인코딩해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-346">
              <see langword="true" /> if the view state should be MAC checked and encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-347">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-347">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-348">뷰 상태 MAC 브라우저에 페이지를 보낼 때 페이지의 뷰 상태를 유지 되는 숨겨진 변수의 암호화 된 버전이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-348">A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</span></span> <span data-ttu-id="f078d-349">이 속성이로 설정 된 경우 `true`, 암호화 된 뷰 상태는 클라이언트에 변경 되었는지 하지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-349">When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.</span></span>  
  
 <span data-ttu-id="f078d-350">코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-350">Do not set this property in code.</span></span> <span data-ttu-id="f078d-351">설정 된 `EnableViewStateMac` .aspx 파일에 지시문을 사용 하 여 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-351">Set the `EnableViewStateMac` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-352">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-352">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-353">이 특성 설정할 수 없습니다 `false` 는 응용 프로그램 또는 페이지 뷰 상태를 사용 하지 않는 경우에 프로덕션 웹 사이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-353">This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state.</span></span> <span data-ttu-id="f078d-354">뷰 상태 MAC을 사용 하면 보안 뷰 상태 뿐만 아니라 다른 ASP.NET 기능을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-354">The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="ErrorPage">
      <MemberSignature Language="C#" Value="public string ErrorPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ErrorPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorPage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorPage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-355">처리되지 않은 예외가 발생하는 경우 요청 브라우저가 리디렉션될 오류 페이지를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-355">Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-356">브라우저가 리디렉션될 오류 페이지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-356">The error page to which the browser is redirected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page_ErrorPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_ErrorPage/CS/page_errorpage.cs.aspx#1)]
 [!code-vb[Page_ErrorPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_ErrorPage/VB/page_errorpage.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteRegisteredAsyncTasks">
      <MemberSignature Language="C#" Value="public void ExecuteRegisteredAsyncTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteRegisteredAsyncTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteRegisteredAsyncTasks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteRegisteredAsyncTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-357">비동기 작업을 실행하기 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-357">Starts the execution of an asynchronous task.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-358">사용 하 여 비동기 작업 정의 <xref:System.Web.UI.PageAsyncTask> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-358">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="f078d-359">작업이 정의 된 페이지를 사용 하 여 등록 후는 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 메서드는 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 비동기 작업을 시작 하는 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-359">After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can be invoked to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="f078d-360"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 메서드가 자동으로 등록 된 비동기 작업, 있는 경우 페이지 처리의 지점에 대해 호출 되는 동기 페이지.</span><span class="sxs-lookup"><span data-stu-id="f078d-360">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.</span></span> <span data-ttu-id="f078d-361">이 자동으로 호출 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 하기 바로 전에 발생는 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-361">This automatic call to <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f078d-362">호출 된 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 이 메서드에 대 한 자동 호출 외에 호출할 하려는 작업에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-362">Call the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method for tasks you want to be invoked at times other than the automatic call to this method.</span></span> <span data-ttu-id="f078d-363">참고, 비동기 작업이 실행 될 경우에 한 번만 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 두 번 이상 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-363">Note, asynchronous tasks will be executed only once even though <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> may be called more than once.</span></span>  
  
 <span data-ttu-id="f078d-364"><xref:System.Web.UI.Page.AsyncTimeout%2A> 속성이를 호출할 때마다 다시 설정 됩니다는 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-364">The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="f078d-365">마지막 값은 <xref:System.Web.UI.Page.AsyncTimeout%2A> 호출 하기 전에 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 메서드 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-365">The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method takes precedence.</span></span> <span data-ttu-id="f078d-366">비동기 작업을 사용 하는 경우 보다 더 큰 <xref:System.Web.UI.Page.AsyncTimeout%2A>, 하는 동안 호출 된 이후 작업 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 호출 즉시 초과 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-366">If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> call are timed out immediately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-367">다음 코드 예제에서는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성으로는 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 및 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-367">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f078d-368">Note 시작, 종료 및 제한 시간 처리기를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-368">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f078d-369">예제에서는 인위적 지연을 포함 되는 비동기 작업에 지정 된 대로 작업에 대 한 할당된 된 시간 초과 상황을 보여 주기 위해는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-369">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f078d-370">실제 시나리오에서는 데이터베이스 호출 또는 이미지 생성을 수행 하는 비동기 작업을 사용할 수 예를 들어 및 제한 시간 처리기는 지정 된 시간 내에 작업을 수행 하지 않는 경우 정상적인 저하를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-370">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-371">비동기 작업에 예외가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-371">There is an exception in the asynchronous task.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="FileDependencies">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList FileDependencies { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList FileDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.FileDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Property FileDependencies As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ FileDependencies {  void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is HttpResponse.AddFileDependencies. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-372">현재 <see cref="T:System.Web.HttpResponse" /> 개체가 종속된 파일의 배열을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-372">Sets an array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-373">현재 <see cref="T:System.Web.HttpResponse" /> 개체가 종속된 파일의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-373">The array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-374">이 속성은 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-374">This property has been deprecated.</span></span> <span data-ttu-id="f078d-375">사용 하 여는 <xref:System.Web.HttpResponse.AddFileDependencies%2A> 메서드 또는 <xref:System.Web.HttpResponse.AddFileDependency%2A> 의 메서드는 <xref:System.Web.HttpResponse> 클래스를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-375">Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.</span></span>  
  
 <span data-ttu-id="f078d-376">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-376">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-377">설정의 `FileDependencies` 특성을 `true` .aspx 파일에 지시문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-377">Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-378">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-378">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="f078d-379">찾을 컨트롤의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-379">The identifier for the control to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-380">지정된 식별자를 사용하여 서버 컨트롤의 페이지 명명 컨테이너를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-380">Searches the page naming container for a server control with the specified identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-381">지정된 컨트롤이나 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-381">The specified control, or <see langword="null" /> if the specified control does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-382"><xref:System.Web.UI.Page.FindControl%2A> 메서드를 사용 하는 컨트롤에 액세스할 수 있습니다 인 <xref:System.Web.UI.Control.ID%2A> 디자인 타임에를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-382">The <xref:System.Web.UI.Page.FindControl%2A> method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time.</span></span> <span data-ttu-id="f078d-383">메서드만 있는 페이지의 즉시, 또는 최상위 수준 컨테이너 검색; 명명 컨테이너는 페이지에 포함 된 컨트롤에 대 한 재귀적으로 검색을 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-383">The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.</span></span> <span data-ttu-id="f078d-384">하위 수준 명명 컨테이너의 컨트롤에 액세스 하려면 호출 된 `FindControl` 해당 컨테이너의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-384">To access controls in a subordinate naming container, call the `FindControl` method of that container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-385">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Page.FindControl%2A> 템플릿 내에 있는 컨트롤을 찾을 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-385">The following code example demonstrates how to use the <xref:System.Web.UI.Page.FindControl%2A> method to locate controls inside templates.</span></span> <span data-ttu-id="f078d-386">이 예제에서는 두 개의 <xref:System.Web.UI.WebControls.Repeater> 컨트롤에 정의 됩니다; catch 하는 다른 방법을 각각 보여 줍니다는 <xref:System.Web.UI.WebControls.LinkButton.Click> 의 이벤트는 <xref:System.Web.UI.WebControls.LinkButton> 반복기 항목 템플릿에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-386">In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/cs/pagefindcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/vb/pagefindcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As HtmlForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlForm ^ Form { System::Web::UI::HtmlControls::HtmlForm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-387">페이지에 대한 HTML 폼을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-387">Gets the HTML form for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-388">페이지와 관련된 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-388">The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-389">사용 하 여는 <xref:System.Web.UI.Page.Form%2A> 메서드 및 속성을 액세스 하는 속성은 <xref:System.Web.UI.HtmlControls.HtmlForm> 페이지 컨트롤 계층의 기반이 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-389">Use the <xref:System.Web.UI.Page.Form%2A> property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
      </Docs>
    </Member>
    <Member MemberName="FrameworkInitialize">
      <MemberSignature Language="C#" Value="protected override void FrameworkInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FrameworkInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FrameworkInitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FrameworkInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FrameworkInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-390">페이지의 선언적 특성을 기반으로 페이지를 생성하는 동안 컨트롤 트리를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-390">Initializes the control tree during page generation based on the declarative nature of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-391"><xref:System.Web.UI.Page.FrameworkInitialize%2A> 메서드 초기화에서 <xref:System.Web.UI.Page> 개체 및 페이지의 선언적 특성에 따라 제어 트리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-391">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page.</span></span> <span data-ttu-id="f078d-392"><xref:System.Web.UI.Page.FrameworkInitialize%2A> 페이지 구문 분석 및 코드 생성에 대 한 메서드는 <xref:System.Web.UI.Page> 선언적 페이지에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-392">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page.</span></span> <span data-ttu-id="f078d-393">일반적으로 있습니다 해서는 안이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-393">Ordinarily, you should not over need to override this method.</span></span> <span data-ttu-id="f078d-394">를 재정의 하는 경우 사용할 기본 클래스를 호출 해야 <xref:System.Web.UI.Page.FrameworkInitialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-394">If overriding, be sure to call the base class's <xref:System.Web.UI.Page.FrameworkInitialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public object GetDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetDataItem" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataItem () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDataItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-395">데이터 바인딩 컨텍스트 스택의 맨 위에서 데이터 항목을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-395">Gets the data item at the top of the data-binding context stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-396">데이터 바인딩 컨텍스트 스택의 맨 위에 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-396">The object at the top of the data binding context stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-397">페이지에 대한 데이터 바인딩 컨텍스트가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-397">There is no data-binding context for the page.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientEvent">
      <MemberSignature Language="C#" Value="public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientEvent(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientEvent(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-398">클라이언트 이벤트 다시 게시를 수신하는 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-398">The server control that receives the client event postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f078d-399">
            <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />에 전달되는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-399">A <see cref="T:System.String" /> that is passed to <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-400">지정된 이벤트 인수를 사용하고 지정된 컨트롤에 대해 서버로 다시 게시하기 위해 클라이언트 이벤트에서 사용할 수 있는 참조를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-400">Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-401">클라이언트 이벤트를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-401">The string that represents the client event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-402">참조는 <xref:System.Web.UI.ClientScriptManager> 이 사용 되지 않는 멤버에 대 한 대안에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-402">See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.OnClientClick" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackClientHyperlink. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-403">다시 게시 작업을 처리하는 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-403">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f078d-404">서버 컨트롤에 전달된 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-404">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-405">지정된 이벤트 인수를 사용하여 지정된 컨트롤을 서버에 다시 게시하는 클라이언트 이벤트에 사용할 수 있는 참조를 가져옵니다. 이 참조의 시작 부분에는 <see langword="javascript:" />라는 문자열이 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-405">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-406">대상 컨트롤의 ID 및 이벤트 인수를 포함하는 다시 게시 함수에 대한 JavaScript 호출을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-406">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-407">참조는 <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> 이 사용 되지 않는 멤버에 대 한 대안에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-407">See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-408">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-408">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f078d-409">이 메서드는 사용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-409">This method has been deprecated.</span>
          </span>
          <span data-ttu-id="f078d-410">대신 <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> 클래스의 <see cref="T:System.Web.UI.ClientScriptManager" /> 메서드를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-410">Use the <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> method in the <see cref="T:System.Web.UI.ClientScriptManager" /> class instead.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-411">서버에서 다시 게시 작업을 처리하는 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-411">The server control to process the postback on the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-412">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-412">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f078d-413">참조 문자열은 지정된 <see cref="T:System.Web.UI.Control" /> 개체에 의해 정의됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-413">The reference string is defined by the specified <see cref="T:System.Web.UI.Control" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-414">클라이언트의 스크립트로 처리될 때 다시 게시 작업을 시작하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-414">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-415">이 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-415">This method has been deprecated.</span></span> <span data-ttu-id="f078d-416">대신 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 클래스의 <xref:System.Web.UI.ClientScriptManager> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-416">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#2)]
 [!code-vb[Page_GetPostBackEventReference#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-417">다시 게시 작업을 처리하는 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-417">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f078d-418">서버 컨트롤에 전달된 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-418">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-419">서버에 다시 게시 작업을 발생시키는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-419">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f078d-420">참조 문자열은 다시 게시 작업과 추가 이벤트 정보의 문자열 인수를 처리하는 지정된 컨트롤에 의해 정의됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-420">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-421">클라이언트의 스크립트로 처리될 때 다시 게시 작업을 시작하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-421">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-422">이 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-422">This method has been deprecated.</span></span> <span data-ttu-id="f078d-423">대신 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 클래스의 <xref:System.Web.UI.ClientScriptManager> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-423">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#1)]
 [!code-vb[Page_GetPostBackEventReference#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetTypeHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTypeHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetTypeHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTypeHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-424">런타임에 생성된 <see cref="T:System.Web.UI.Page" /> 개체가 만든 해시 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-424">Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time.</span>
          </span>
          <span data-ttu-id="f078d-425">이 해시 코드는 <see cref="T:System.Web.UI.Page" /> 개체의 컨트롤 계층 구조에서 고유합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-425">This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-426">런타임에 생성된 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-426">The hash code generated at run time.</span>
          </span>
          <span data-ttu-id="f078d-427">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-427">The default is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-428">이 메서드를 재정의 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-428">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ValidatorCollection GetValidators(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetValidators(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidators (validationGroup As String) As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ValidatorCollection ^ GetValidators(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="f078d-429">반환할 유효성 검사 그룹 또는 기본 유효성 검사 그룹을 반환하는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-429">The validation group to return, or <see langword="null" /> to return the default validation group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-430">지정된 유효성 검사 그룹에 대한 유효성 검사기 컨트롤의 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-430">Returns a collection of control validators for a specified validation group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-431">지정된 유효성 검사 그룹에 대한 유효성 검사기 컨트롤이 들어 있는 <see cref="T:System.Web.UI.ValidatorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-431">A <see cref="T:System.Web.UI.ValidatorCollection" /> that contains the control validators for the specified validation group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-432"><xref:System.Web.UI.Page.GetValidators%2A> 메서드 특정 유효성 검사 그룹에 연결 된 모든 유효성 검사 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-432">The <xref:System.Web.UI.Page.GetValidators%2A> method returns all the validation objects associated with a specific validation group.</span></span> <span data-ttu-id="f078d-433">기본 유효성 검사 그룹을 반환할 수 있습니다 (사용 하지 않고 컨트롤와 관련 된 모든 유효성 검사 컨트롤의 `ValidationGroup` 속성 집합)을 설정 하 여는 `validationGroup` 매개 변수를 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-433">You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.</span></span>  
  
 <span data-ttu-id="f078d-434">유효성 검사 그룹 구성원 확인을 위해 수집 및 호출을 통해 열거는 <xref:System.Web.UI.IValidator.Validate%2A> 각 유효성 검사기의 메서드가 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-434">To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-435">다음 코드 예제에서는 <xref:System.Web.UI.Page.GetValidators%2A> 메서드를 기본 유효성 검사 그룹을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-435">The following code example uses the <xref:System.Web.UI.Page.GetValidators%2A> method to return the default validation group.</span></span>  
  
 [!code-csharp[PageGetValidators#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageGetValidators/CS/pagegetvalidatorscs.aspx#1)]
 [!code-vb[PageGetValidators#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageGetValidators/VB/pagegetvalidatorsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate(System.String)" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
      </Docs>
    </Member>
    <Member MemberName="GetWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected object GetWrappedFileDependencies (string[] virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetWrappedFileDependencies(string[] virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetWrappedFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetWrappedFileDependencies (virtualFileDependencies As String()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetWrappedFileDependencies(cli::array &lt;System::String ^&gt; ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="f078d-436">가상 파일 위치의 문자열 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-436">A string array of virtual file locations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-437">가상 파일 위치의 목록에 해당하는 실제 파일 이름의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-437">Returns a list of physical file names that correspond to a list of virtual file locations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-438">실제 파일 위치의 목록이 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-438">An object containing a list of physical file locations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-439"><xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> 메서드는 현재 페이지를 구성 하는 사용자 제어 파일 등 파일의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-439">The <xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> method gets a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="f078d-440">이러한 페이지 수정 되 면 전체 페이지 다음에 필요할 때가 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-440">If any of these pages are modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="f078d-441">이 메서드를 재정의 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-441">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlHead Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlHead Header" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As HtmlHead" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlHead ^ Header { System::Web::UI::HtmlControls::HtmlHead ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlHead</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-442">
            <see langword="head" /> 요소가 페이지 선언에서 <see langword="runat=server" />로 정의된 경우 페이지의 문서 헤더를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-442">Gets the document header for the page if the <see langword="head" /> element is defined with a <see langword="runat=server" /> in the page declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-443">페이지 헤더를 포함하는 <see cref="T:System.Web.UI.HtmlControls.HtmlHead" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-443">An <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> containing the page header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-444"><xref:System.Web.UI.Page.Header%2A> 속성에 대 한 참조를 가져옵니다는 <xref:System.Web.UI.HtmlControls.HtmlHead> 페이지에 대 한 문서 헤더 정보를 설정 하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-444">The <xref:System.Web.UI.Page.Header%2A> property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page.</span></span> <span data-ttu-id="f078d-445"><xref:System.Web.UI.HtmlControls.HtmlHead> 스타일 시트, 스타일 규칙, 제목 및 메타 데이터를 같은 정보를 추가할 수 있습니다는 `head` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-445">The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-446">스타일의 메서드를 사용 하 여 프로그래밍 방식으로 추가 된 <xref:System.Web.UI.IStyleSheet> 비동기 포스트백 도중 인터페이스가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-446">Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="f078d-447">웹 페이지에 AJAX 기능을 추가할 때 비동기 포스트백 전체 페이지를 업데이트 하지 않고 페이지의 영역을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-447">When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="f078d-448">자세한 내용은 참조 [Microsoft Ajax 개요](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-448">For more information, see [Microsoft Ajax Overview](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-449">다음 코드 예제에서는 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlHead> 프로그래밍 방식으로 사용 하 여 제어는 <xref:System.Web.UI.Page.Header%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-449">The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the <xref:System.Web.UI.Page.Header%2A> property.</span></span> <span data-ttu-id="f078d-450">A `title` 요소 및 `style` 요소에 추가 되는 `head` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-450">A `title` element and `style` element are added to the `head` element of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/CS/htmlheadclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/VB/htmlheadclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlLink" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-451">
            <see cref="T:System.Web.UI.Page" /> 클래스의 특정 인스턴스에 대한 식별자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-451">Gets or sets an identifier for a particular instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-452">
            <see cref="T:System.Web.UI.Page" /> 클래스의 인스턴스에 대한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-452">The identifier for the instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
          <span data-ttu-id="f078d-453">기본값은 '_Page'입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-453">The default value is '_Page'.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="public virtual char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char IdSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-454">페이지에서 컨트롤의 고유 ID를 빌드할 때 컨트롤 식별자를 구분하는 데 사용되는 문자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-454">Gets the character used to separate control identifiers when building a unique ID for a control on a page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-455">컨트롤 식별자를 구분하는 데 사용되는 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-455">The character used to separate control identifiers.</span>
          </span>
          <span data-ttu-id="f078d-456">기본값은 페이지를 렌더링하는 <see cref="T:System.Web.UI.Adapters.PageAdapter" /> 인스턴스에 의해 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-456">The default is set by the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> instance that renders the page.</span>
          </span>
          <span data-ttu-id="f078d-457">
            <see cref="P:System.Web.UI.Page.IdSeparator" />는 서버 쪽 필드이므로 수정해서는 안 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-457">The <see cref="P:System.Web.UI.Page.IdSeparator" /> is a server-side field and should not be modified.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.ID" />
      </Docs>
    </Member>
    <Member MemberName="InitComplete">
      <MemberSignature Language="C#" Value="public event EventHandler InitComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.InitComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-458">페이지 초기화가 완료될 때 이 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-458">Occurs when page initialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-459"><xref:System.Web.UI.Page.InitComplete> 이벤트 페이지의 초기화 단계가 끝날 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-459">The <xref:System.Web.UI.Page.InitComplete> event is called at the end of the page's initialization stage.</span></span> <span data-ttu-id="f078d-460">이 페이지의 수명 주기이 단계에서 선언 된 모든 페이지에 있는 컨트롤 초기화 되지만 페이지의 상태는 아직 채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-460">At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.</span></span> <span data-ttu-id="f078d-461">서버 컨트롤에 액세스할 수 있습니다 하지만 사용자에서 반환 된 정보가 아직 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-461">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="f078d-462">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-462">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCulture">
      <MemberSignature Language="C#" Value="protected virtual void InitializeCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitializeCulture" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeCulture ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeCulture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-463">페이지의 현재 스레드에 대한 <see cref="P:System.Web.UI.Page.Culture" /> 및 <see cref="P:System.Web.UI.Page.UICulture" />를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-463">Sets the <see cref="P:System.Web.UI.Page.Culture" /> and <see cref="P:System.Web.UI.Page.UICulture" /> for the current thread of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-464"><xref:System.Web.UI.Page.InitializeCulture%2A> 메서드에 코딩 논리가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-464">The <xref:System.Web.UI.Page.InitializeCulture%2A> method contains no coding logic.</span></span> <span data-ttu-id="f078d-465">컨트롤의 기능을 확장 하는 개발자는 <xref:System.Web.UI.Page> 클래스 재정의할 수 있습니다는 <xref:System.Web.UI.Page.InitializeCulture%2A> 초기화 하려면 메서드는 <xref:System.Web.UI.Page.Culture%2A> 및 <xref:System.Web.UI.Page.UICulture%2A> 페이지에 대 한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-465">Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the <xref:System.Web.UI.Page.InitializeCulture%2A> method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.Web.UI.Page.FrameworkInitialize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InitOutputCache">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-466">현재 페이지 요청에 대한 출력 캐시를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-466">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-467">이 메서드는 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-467">This method is not intended to be used directly from your code.</span></span> <span data-ttu-id="f078d-468">을 사용 하려면 페이지에 대 한 출력 캐싱을 조작 이러한 방법 중 하나를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-468">To enable and manipulate output caching for a page, use one of these approaches:</span></span>  
  
-   <span data-ttu-id="f078d-469">선언적으로 지시문을 사용 하 여.aspx 파일에서 옵션을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-469">Set options declaratively using the  directive in the .aspx file.</span></span>  
  
-   <span data-ttu-id="f078d-470">메서드 및 속성을 사용 하 여는 <xref:System.Web.HttpCachePolicy> 클래스에 의해 노출 되는 `Response.Cache` 페이지의 코드에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-470">Use the methods and properties of the <xref:System.Web.HttpCachePolicy> class, which is exposed by the `Response.Cache` object in the page's code.</span></span>  
  
 <span data-ttu-id="f078d-471">자세한 내용은 참조 [ASP.NET 페이지 캐싱](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-471">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected internal virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitOutputCache(class System.Web.UI.OutputCacheParameters cacheSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitOutputCache (cacheSettings As OutputCacheParameters)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitOutputCache(System::Web::UI::OutputCacheParameters ^ cacheSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheSettings" Type="System.Web.UI.OutputCacheParameters" />
      </Parameters>
      <Docs>
        <param name="cacheSettings">
          <span data-ttu-id="f078d-472">캐시 설정이 들어 있는 <see cref="T:System.Web.UI.OutputCacheParameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-472">An <see cref="T:System.Web.UI.OutputCacheParameters" /> that contains the cache settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-473">
            <see cref="T:System.Web.UI.OutputCacheParameters" /> 개체를 기반으로 현재 페이지 요청에 대한 출력 캐시를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-473">Initializes the output cache for the current page request based on an <see cref="T:System.Web.UI.OutputCacheParameters" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-474">이 메서드를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-474">You should not call this method.</span></span> <span data-ttu-id="f078d-475">을 사용 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 속성의 지시문을 사용 하 여는 <xref:System.Web.HttpCachePolicy> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-475">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f078d-476">통해 액세스할 수 `Response.Cache` 페이지의 코드 선언 블록 또는 코드 숨김 파일에서 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-476">The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file.</span></span> <span data-ttu-id="f078d-477">자세한 내용은 참조 [ASP.NET 페이지 캐싱](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-477">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-478">캐시 프로필을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-478">The cache profile was not found.</span>
          </span>
          <span data-ttu-id="f078d-479">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-479">\- or -</span>
          </span>
          <span data-ttu-id="f078d-480">지시문 또는 구성 설정 프로필 특성이 누락된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-480">A missing directive or configuration settings profile attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f078d-481">출력 캐시 설정 위치가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-481">The output cache settings location is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="f078d-482">출력 캐시에 저장되어 있는 개체가 유효한 기간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-482">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="f078d-483">출력 캐시의 내용에 영향을 주는 세미콜론으로 구분된 헤더 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-483">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="f078d-484">
            <see langword="Vary" /> HTTP 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-484">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="f078d-485">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-485">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="f078d-486">출력 캐시의 내용에 영향을 주며 GET 또는 POST 메서드에 의해 수신되는 세미콜론으로 구분된 매개 변수 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-486">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-487">현재 페이지 요청에 대한 출력 캐시를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-487">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-488">이 메서드를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-488">You should not call this method.</span></span> <span data-ttu-id="f078d-489">을 사용 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 속성의 지시문을 사용 하 여는 <xref:System.Web.HttpCachePolicy> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-489">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f078d-490">통해 액세스할 수 `Response.Cache` 페이지의 코드에서 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-490">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="f078d-491">자세한 내용은 참조 [ASP.NET 페이지 캐싱](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-491">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f078d-492">
            <paramref name="location" />에 잘못된 값이 지정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-492">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByContentEncoding As String, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByContentEncoding, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByContentEncoding" Type="System.String" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="f078d-493">출력 캐시에 저장되어 있는 개체가 유효한 기간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-493">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByContentEncoding">
          <span data-ttu-id="f078d-494">출력 캐시의 내용에 영향을 주는 세미콜론으로 구분된 문자 집합(콘텐츠 인코딩) 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-494">A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="f078d-495">출력 캐시의 내용에 영향을 주는 세미콜론으로 구분된 헤더 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-495">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="f078d-496">
            <see langword="Vary" /> HTTP 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-496">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="f078d-497">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-497">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="f078d-498">출력 캐시의 내용에 영향을 주며 GET 또는 POST 메서드에 의해 수신되는 세미콜론으로 구분된 매개 변수 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-498">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-499">현재 페이지 요청에 대한 출력 캐시를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-499">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-500">이 메서드를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-500">You should not call this method.</span></span> <span data-ttu-id="f078d-501">을 사용 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 속성의 지시문을 사용 하 여는 <xref:System.Web.HttpCachePolicy> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-501">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f078d-502">통해 액세스할 수 `Response.Cache` 페이지의 코드에서 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-502">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="f078d-503">자세한 내용은 참조 [ASP.NET 페이지 캐싱](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-503">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f078d-504">
            <paramref name="location" />에 잘못된 값이 지정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-504">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-505">페이지가 비동기식으로 처리되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-505">Gets a value indicating whether the page is processed asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-506">페이지가 비동기 모드에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-506">
              <see langword="true" /> if the page is in asynchronous mode; otherwise, <see langword="false" />;</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-507">사용 하 여는 <xref:System.Web.UI.Page.IsAsync%2A> 속성을 웹 페이지 비동기 모드로 실행 되 고 있는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-507">Use the <xref:System.Web.UI.Page.IsAsync%2A> property to determine whether the Web page is running in asynchronous mode.</span></span> <span data-ttu-id="f078d-508">이 정보는 컨트롤 또는 코드 페이지에서 페이지 비동기 인지에 따라 해당 동작을 수정 해야 할 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-508">This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.</span></span> <span data-ttu-id="f078d-509">비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 작업](~/docs/framework/data/adonet/sql/asynchronous-operations.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-509">For more information about asynchronous programming, see [Asynchronous Operations](~/docs/framework/data/adonet/sql/asynchronous-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallback">
      <MemberSignature Language="C#" Value="public bool IsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCallback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-510">페이지 요청이 콜백의 결과인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-510">Gets a value that indicates whether the page request is the result of a callback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-511">페이지 요청이 콜백의 결과이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-511">
              <see langword="true" /> if the page request is the result of a callback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-512">자세한 내용은 참조 [포스트백 없이 클라이언트 콜백 구현](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-512">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsClientScriptBlockRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f078d-513">검색할 클라이언트 스크립트의 문자열 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-513">The string key of the client script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-514">지정된 키가 있는 클라이언트 스크립트 블록이 페이지에 등록되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-514">Determines whether the client script block with the specified key is registered with the page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-515">스크립트 블록이 등록되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-515">
              <see langword="true" /> if the script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-516">이 메서드를 호출 하기 전에 호출 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> 을 클라이언트 쪽 스크립트 불필요 하 게 막으려면 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-516">Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="f078d-517">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-517">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="f078d-518"><xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-518">The <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-519">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 에서 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-519">Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-520">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 메서드와 함께 <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-520">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="f078d-521">에 의해 결정 했을 때 코드 선언 블록에 작성 된 ECMAScript에 아직 등록 하지 경우 <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>는 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-521">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsCrossPagePostBack">
      <MemberSignature Language="C#" Value="public bool IsCrossPagePostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCrossPagePostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCrossPagePostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCrossPagePostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCrossPagePostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-522">페이지가 페이지 간 다시 게시에 사용되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-522">Gets a value indicating whether the page is involved in a cross-page postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-523">페이지가 페이지 간 요청에 참여하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-523">
              <see langword="true" /> if the page is participating in a cross-page request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-524">ASP.NET에서 다른 한 페이지에서 컨트롤을 전송 하기 위한 두 가지 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-524">ASP.NET provides two mechanisms for transferring control from one page to another.</span></span> <span data-ttu-id="f078d-525">사용할 수 있습니다는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드 간에 페이지를 없거나 처리를 전송 페이지 URL을 할당 하 여 페이지 간 요청을 만들 수는 <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> 구현 하는 단추 컨트롤의 속성은 <xref:System.Web.UI.WebControls.IButtonControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-525">You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.</span></span>  
  
 <span data-ttu-id="f078d-526">두 경우 모두는 <xref:System.Web.UI.Page.PreviousPage%2A> 페이지 속성 이전 또는 원래 페이지를 나타내는 개체에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-526">In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page.</span></span> <span data-ttu-id="f078d-527">페이지에서 B로 A 페이지의 페이지는 게시 하는 예를 들어 하는 경우 <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> 속성 (을 통해 액세스할 수는 <xref:System.Web.UI.Page.PreviousPage%2A> 속성) 됩니다 `true` 및 페이지 B <xref:System.Web.UI.Page.PreviousPage%2A> 속성 페이지 A의 이름을 갖고</span><span class="sxs-lookup"><span data-stu-id="f078d-527">If, for example, Page A posts to Page B, Page A's <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.PostBackUrl" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBack">
      <MemberSignature Language="C#" Value="public bool IsPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-528">페이지가 처음 렌더링되고 있는지 또는 다시 게시에 대한 응답으로 로드되고 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-528">Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-529">클라이언트에서 다시 게시함으로써 페이지가 로드되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-529">
              <see langword="true" /> if the page is being loaded in response to a client postback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-530">참조에 대 한 설명은 다시 게시와 콜백 차이 [포스트백 없이 클라이언트 콜백 구현](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-530">For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-531">값을 테스트 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.Page.IsPostBack%2A> 속성 페이지를 처음으로 렌더링 되 고 포스트백에 응답 하는지 여부를 확인 하기 위해 페이지를 로드 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="f078d-531">The following example shows how to test the value of the <xref:System.Web.UI.Page.IsPostBack%2A> property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback.</span></span> <span data-ttu-id="f078d-532">코드를 호출 하는 경우 페이지를 처음으로 렌더링 되는 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-532">If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f078d-533">페이지 태그 (표시 되지 않음)가 포함 된 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 필수 입력된 필드에 대 한 항목이 없는 경우 별표를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-533">The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field.</span></span> <span data-ttu-id="f078d-534">호출 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 제출 단추를 클릭할 때까지 기다리지 않고 페이지 렌더링 될 때 즉시 표시할 별표 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-534">Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button.</span></span> <span data-ttu-id="f078d-535">포스트백 후 않아도 호출 하 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>의 일부로 해당 메서드가 호출 되기 때문에는 <xref:System.Web.UI.Page> 수명 주기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-535">After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Validate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.Page.IsCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBackEventControlRegistered">
      <MemberSignature Language="C#" Value="public bool IsPostBackEventControlRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBackEventControlRegistered" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBackEventControlRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBackEventControlRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBackEventControlRegistered { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-536">다시 게시를 수행하는 페이지의 컨트롤이 등록되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-536">Gets a value that indicates whether the control in the page that performs postbacks has been registered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-537">컨트롤이 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-537">
              <see langword="true" /> if the control has been registered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-538">
            <see cref="T:System.Web.UI.Page" /> 개체를 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-538">Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-539">모든 경우에 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-539">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.IHttpHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsStartupScriptRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f078d-540">검색할 시작 스크립트의 문자열 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-540">The string key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-541">클라이언트 시작 스크립트가 <see cref="T:System.Web.UI.Page" /> 개체에 등록되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-541">Determines whether the client startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-542">시작 스크립트가 등록되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-542">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-543">이 메서드를 호출 하기 전에 호출 <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> 을 클라이언트 쪽 스크립트 불필요 하 게 막으려면 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-543">Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="f078d-544">이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-544">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="f078d-545"><xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-545">The <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-546">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 에서 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-546">Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-547">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드와 함께 <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-547">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="f078d-548">에 의해 결정 했을 때 코드 선언 블록에 작성 된 ECMAScript에 아직 등록 하지 경우 <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-548">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-549">페이지 유효성 검사의 성공 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-549">Gets a value indicating whether page validation succeeded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-550">페이지 유효성 검사가 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-550">
              <see langword="true" /> if page validation succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-551">이 속성을 반환 하려면 `true`, 현재 유효성 검사 그룹의 모든 유효성 검사 서버 컨트롤을 성공적으로 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-551">For this property to return `true`, all validation server controls in the current validation group must validate successfully.</span></span> <span data-ttu-id="f078d-552">호출한 후에이 속성을 확인 해야는 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 메서드 또는 집합은 `CausesValidation` 속성을 `true` 에 `OnServerClick` 양식 처리를 시작 하는 ASP.NET 서버 컨트롤에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-552">You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing.</span></span> <span data-ttu-id="f078d-553">이러한 서버 컨트롤의 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-553">These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.</span></span>  
  
 <span data-ttu-id="f078d-554">사용 하 여 유효성 검사 그룹의 유효성 검사를 적용 하는 경우는 <xref:System.Web.UI.Page.Validate%2A> 메서드를 다음 지정 된 유효성 검사 그룹의 모든 유효성 검사 컨트롤 유효성을 검사 해야 성공적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-554">If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-555">다음 코드 예제는 <xref:System.Web.UI.Page.IsValid%2A> 속성을 조건문을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-555">The following code example demonstrates using the <xref:System.Web.UI.Page.IsValid%2A> property to set up a conditional statement.</span></span> <span data-ttu-id="f078d-556">속성이 반환 하는 경우 `true`, `Text` 의 속성은 `lblOutput` "페이지는 유효한!"로 설정 되어</span><span class="sxs-lookup"><span data-stu-id="f078d-556">If the property returns `true`, the `Text` property of the `lblOutput` control is set to "Page is valid!"</span></span> <span data-ttu-id="f078d-557">그렇지 않으면 "일부 필수 필드는 비어 있습니다."로 설정</span><span class="sxs-lookup"><span data-stu-id="f078d-557">Otherwise, it is set to "Some of the required fields are empty."</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Validate#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-558">유효성 검사가 수행되기 전에 <see cref="P:System.Web.UI.Page.IsValid" /> 속성이 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-558">The <see cref="P:System.Web.UI.Page.IsValid" /> property is called before validation has occurred.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-559">페이지 컨텍스트에 저장된 개체의 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-559">Gets a list of objects stored in the page context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-560">페이지 컨텍스트에 저장된 개체가 들어 있는 <see cref="T:System.Collections.IDictionary" />에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-560">A reference to an <see cref="T:System.Collections.IDictionary" /> containing objects stored in the page context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-561">사용 된 <xref:System.Web.UI.Page.Items%2A> 페이지 요청으로 같은 수명 개체를 저장 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-561">Use the <xref:System.Web.UI.Page.Items%2A> property to store objects with the same lifetime as the page request.</span></span> <span data-ttu-id="f078d-562">이 속성은 읽기 전용입니다. 그러나 개체를 추가할 수 있습니다는 <xref:System.Collections.IDictionary> 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-562">This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.</span></span>  
  
 <span data-ttu-id="f078d-563">에 추가 된 개체는 <xref:System.Web.UI.Page.Items%2A> 속성은 개체를 추가할 수 있도록 페이지의 수명 동안 내내 사용할 수는 <xref:System.Web.UI.Page.Items%2A> 속성에서 초기 페이지 수명에에서 대 한 이벤트 주기가 하며 이후의 이벤트에서 이러한 개체에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-563">Objects added to the <xref:System.Web.UI.Page.Items%2A> property are available throughout the lifetime of the page, so you can add objects to the <xref:System.Web.UI.Page.Items%2A> property in events early in the page life cycle and access those objects in later events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-564">페이지와 관련된 <see cref="T:System.Threading.Thread" /> 개체의 로캘 식별자를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-564">Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-565">
            <see cref="T:System.Threading.Thread" />에 전달할 로캘 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-565">The locale identifier to pass to the <see cref="T:System.Threading.Thread" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-566">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-566">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-567">하지만 `LCID` .aspx 파일의 지시문에서 특성을 설정할 수 있습니다을 사용 하 여 로캘 식별자를 설정 하는 기본 방법은는 <xref:System.Web.UI.Page.Culture%2A> 및 <xref:System.Web.UI.Page.UICulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-567">The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
        <altmember cref="P:System.Web.UI.Page.UICulture" />
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-568">페이지 주기의 로드 단계가 끝날 때 이 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-568">Occurs at the end of the load stage of the page's life cycle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-569"><xref:System.Web.UI.Page.LoadComplete> 모든 포스트백 데이터 후 이벤트가 발생 하 고 페이지에 및 이후 뷰 상태 데이터를 로드는 <xref:System.Web.UI.Control.OnLoad%2A> 페이지에서 모든 컨트롤에 대해 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-569">The <xref:System.Web.UI.Page.LoadComplete> event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.</span></span>  
  
 <span data-ttu-id="f078d-570">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-570">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="LoadPageStateFromPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual object LoadPageStateFromPersistenceMedium ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object LoadPageStateFromPersistenceMedium() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function LoadPageStateFromPersistenceMedium () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ LoadPageStateFromPersistenceMedium();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-571">저장된 모든 뷰 상태 정보를 <see cref="T:System.Web.UI.Page" /> 개체에 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-571">Loads any saved view-state information to the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-572">저장된 뷰 상태를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-572">The saved view state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-573"><xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> 메서드는 <xref:System.Web.UI.PageStatePersister.Load%2A> 의 메서드는 <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> 에서 참조 하는 개체는 <xref:System.Web.UI.Page.PageStatePersister%2A> 로드할 모든 속성에 대 한 뷰 상태 정보를 저장는 <xref:System.Web.UI.Page> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-573">The <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="f078d-574">ASP.NET의 하위 항목 중 두 개에 포함 되어는 <xref:System.Web.UI.PageStatePersister> 클래스는 <xref:System.Web.UI.HiddenFieldPageStatePersister> ASP.NET 페이지에 포함 된 숨겨진된 필드에 상태 정보를 저장 하는 클래스 및 <xref:System.Web.UI.SessionPageStatePersister> 클래스의 상태를 저장 하는 <xref:System.Web.UI.Page.Session%2A> 연관 된 개체는 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-574">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span>  
  
 <span data-ttu-id="f078d-575">사용자가 선택한 위치에 상태를 저장 하려면 새 만들어야의 하위 폴더는 <xref:System.Web.UI.PageStatePersister> 클래스 저장 하 고 사용자가 선택한 상태 지 속성 매체를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-575">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="f078d-576">새로 만드는 데 따른 예제를 보려면 <xref:System.Web.UI.PageStatePersister> 개체, 참조는 <xref:System.Web.UI.PageStatePersister> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-576">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="f078d-577">.NET Framework 버전 1.0 또는 1.1을 로드 하려는 경우이 메서드를 재정의 사용 하는 경우는 <xref:System.Web.UI.Page> 숨겨진된 필드 이외의 위치에서 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-577">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field.</span></span> <span data-ttu-id="f078d-578">그렇게 하도록 선택할 경우 재정의 해야는 <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-578">If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-579">포스트백 후 클라이언트 브라우저의 동일한 위치로 사용자를 되돌릴지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-579">Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.</span>
          </span>
          <span data-ttu-id="f078d-580">이 속성은 사용되지 않는 <see cref="P:System.Web.UI.Page.SmartNavigation" /> 속성을 대체합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-580">This property replaces the obsolete <see cref="P:System.Web.UI.Page.SmartNavigation" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-581">클라이언트 위치를 유지해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-581">
              <see langword="true" /> if the client position should be maintained; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-582">웹 페이지 서버에 게시 되 면 사용자 페이지의 위쪽에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-582">When Web pages are posted back to the server, the user is returned to the top of the page.</span></span> <span data-ttu-id="f078d-583">긴 웹 페이지에 페이지를 다시 여 마지막 위치 페이지에서 스크롤할 하면 사용자가을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-583">On long Web pages, this means that the user has to scroll the page back to the last position on the page.</span></span>  
  
 <span data-ttu-id="f078d-584">경우는 <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> 속성이 `true`, 사용자가 반환 마지막 위치 페이지에서.</span><span class="sxs-lookup"><span data-stu-id="f078d-584">When the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property is set to `true`, the user is instead returned to the last position on the page.</span></span>  
  
 <span data-ttu-id="f078d-585">설정한는 <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> 속성에는 [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 지시문입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-585">You set the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property in the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f078d-586">가상 경로를 나타내는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-586">A <see cref="T:System.String" /> that represents the virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-587">가상 경로(절대 또는 상대) 또는 응용 프로그램에 상대적인 경로가 매핑되는 실제 경로를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-587">Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-588">가상 경로 또는 응용 프로그램에 상대적인 경로와 관련된 실제 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-588">The physical path associated with the virtual path or application-relative path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f078d-589"><xref:System.Web.UI.Page.MapPath%2A> 속성 호스팅 환경에 대 한 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-589">The <xref:System.Web.UI.Page.MapPath%2A> property can potentially contain sensitive information about the hosting environment.</span></span> <span data-ttu-id="f078d-590">반환 값은 하지 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-590">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-591">다음 예제에서는 <xref:System.Web.UI.Page.MapPath%2A> 메서드는 하위 폴더의 실제 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-591">The following example uses the <xref:System.Web.UI.Page.MapPath%2A> method to obtain the physical path of a subfolder.</span></span> <span data-ttu-id="f078d-592">읽은 파일 이름을 추가 합니다는 <xref:System.Web.UI.WebControls.TextBox.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-592">It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="f078d-593">결과 해당 파일에 실제 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-593">The result is the absolute physical path to that file.</span></span>  
  
 [!code-csharp[Page_MapPath_ResponseEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/CS/page_mappath_responseencoding.cs.aspx#1)]
 [!code-vb[Page_MapPath_ResponseEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/VB/page_mappath_responseencoding.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-594">페이지의 전반적인 모양을 결정하는 마스터 페이지를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-594">Gets the master page that determines the overall look of the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-595">이 페이지와 연결된 <see cref="T:System.Web.UI.MasterPage" />가 있으면 해당 마스터 페이지이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-595">The <see cref="T:System.Web.UI.MasterPage" /> associated with this page if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-596"><xref:System.Web.UI.Page.Master%2A> 속성에서 반환 된 <xref:System.Web.UI.MasterPage> 이 페이지와 관련 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-596">The <xref:System.Web.UI.Page.Master%2A> property returns the <xref:System.Web.UI.MasterPage> object associated with this page.</span></span> <span data-ttu-id="f078d-597">이 속성은 읽기 전용입니다. 그러나이 속성을 설정할 수는 <xref:System.Web.UI.MasterPage> 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-597">This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.</span></span>  
  
 <span data-ttu-id="f078d-598"><xref:System.Web.UI.Page.Master%2A> 속성은 마스터 페이지의를 참조 하는 페이지에 대해서만 유효는 <xref:System.Web.UI.Page.MasterPageFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-598">The <xref:System.Web.UI.Page.Master%2A> property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property.</span></span> <span data-ttu-id="f078d-599">액세스 하는 경우는 <xref:System.Web.UI.Page.Master%2A> 마스터 페이지를 참조 하지 않는 페이지에서 속성 `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-599">If you access the <xref:System.Web.UI.Page.Master%2A> property on a page that does not reference a master page, `null` is returned.</span></span> <span data-ttu-id="f078d-600">마스터 페이지의 내용이 후에 사용할는 <xref:System.Web.UI.Page.PreInit> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-600">The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.MasterPageFile" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public virtual string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-601">마스터 페이지의 가상 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-601">Gets or sets the virtual path of the master page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-602">마스터 페이지의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-602">The virtual path of the master page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-603"><xref:System.Web.UI.Page.MasterPageFile%2A> 속성은이 페이지와 연결 된 마스터 페이지 파일의 가상 경로 (응용 프로그램의 루트)부터 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-603">The <xref:System.Web.UI.Page.MasterPageFile%2A> property is a virtual path (from the root of the application) of the master page file associated with this page.</span></span> <span data-ttu-id="f078d-604"><xref:System.Web.UI.Page.MasterPageFile%2A> 속성에만 설정할 수 있습니다는 <xref:System.Web.UI.Page.PreInit> 이벤트를 설정 하는 <xref:System.Web.UI.Page.MasterPageFile%2A> 후의 <xref:System.Web.UI.Page.PreInit> 이벤트를 발생 시킵니다는 <xref:System.InvalidOperationException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-604">The <xref:System.Web.UI.Page.MasterPageFile%2A> property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the <xref:System.Web.UI.Page.MasterPageFile%2A> property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="f078d-605">경우는 <xref:System.Web.UI.Page.MasterPageFile%2A> 속성이 올바른지 형식의 예외가 <xref:System.Web.HttpException> 페이지 수명 주기에서 이후에 하지만 속성이 설정 되어 있을 때 예외가 throw 됩니다는 <xref:System.Web.UI.Page.PreInit> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-605">If the <xref:System.Web.UI.Page.MasterPageFile%2A> property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.</span></span>  
  
 <span data-ttu-id="f078d-606">페이지는는 <xref:System.Web.UI.Page.MasterPageFile%2A> 속성 집합 콘텐츠 페이지 이며 따라서만 최상위 컨트롤을 포함할 수 있습니다 <xref:System.Web.UI.WebControls.Content> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-606">Pages that have the <xref:System.Web.UI.Page.MasterPageFile%2A> property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-607">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> 이벤트가 완료된 후에 <see cref="E:System.Web.UI.Page.PreInit" /> 속성이 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-607">The <see cref="P:System.Web.UI.Page.MasterPageFile" /> property is set after the <see cref="E:System.Web.UI.Page.PreInit" /> event is complete.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-608">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> 속성에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-608">The file specified in the <see cref="P:System.Web.UI.Page.MasterPageFile" /> property does not exist.</span>
          </span>
          <span data-ttu-id="f078d-609">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-609">\- or -</span>
          </span>
          <span data-ttu-id="f078d-610">페이지에 최상위 컨트롤인 <see cref="T:System.Web.UI.WebControls.Content" /> 컨트롤이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-610">The page does not have a <see cref="T:System.Web.UI.WebControls.Content" /> control as the top level control.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Master" />
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-611">페이지 상태 필드의 최대 길이를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-611">Gets or sets the maximum length for the page's state field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-612">페이지 상태 필드의 최대 길이(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-612">The maximum length, in bytes, for the page's state field.</span>
          </span>
          <span data-ttu-id="f078d-613">기본값은 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-613">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-614">경우는 <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> 양수 속성, 클라이언트 브라우저에 보내지는 뷰 상태는 여러 개의 숨겨진된 필드를 나뉩니다 및 각 필드의 값에 지정 된 크기 보다 작으면는 <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-614">When the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property.</span></span>  
  
 <span data-ttu-id="f078d-615">설정의 <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> 음수로 (기본값) 속성 보기 상태 필드를 청크로 분할 되지 않습니다 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-615">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property to a negative number (the default) indicates that the view-state field should not be separated into chunks.</span></span> <span data-ttu-id="f078d-616">설정의 <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> 소수의 성능이 저하 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-616">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> to a small number may result in poor performance.</span></span>  
  
 <span data-ttu-id="f078d-617">값을 설정할는 <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> 속성에는 Web.config 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-617">Set the value of the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-618">
            <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> 속성이 -1 또는 양수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-618">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property is not equal to -1 or a positive number.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-619">페이지가 초기화된 후 <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> 속성이 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-619">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property was set after the page was initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MetaDescription">
      <MemberSignature Language="C#" Value="public string MetaDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-620">"설명" <see langword="meta" /> 요소의 내용을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-620">Gets or sets the content of the "description" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-621">"설명" <see langword="meta" /> 요소의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-621">The content of the "description" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-622">HTML `meta` 요소 검색 엔진 목록을 개선 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-622">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="f078d-623">"Description" `meta` 요소 목록 미리 보기를 개선 하기 위해 일부 검색 엔진에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-623">The "description" `meta` element is used by some search engines to improve listing previews.</span></span>  
  
 <span data-ttu-id="f078d-624">"Description" 이면 `meta` 요소에는 `head` 페이지 태그의 `meta` 페이지가 렌더링 될 때 요소가 페이지에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-624">If there is no "description" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="f078d-625">페이지 태그 "description"가 이미 있으면 `meta` 요소를이 속성은 가져오거나는 `content` 특성에는 `meta` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-625">If the page markup already has a "description" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="f078d-626">지시문에이 속성을 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-626">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-627">설정 하는 경우는 <xref:System.Web.UI.Page.MetaDescription%2A> "ASP.NET 개요" 페이지의 속성을 다음 요소는 렌더링 된 HTML에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-627">If you set the <xref:System.Web.UI.Page.MetaDescription%2A> property of a page to "ASP.NET Overview", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="description" content="ASP.NET Overview" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-628">페이지에는 헤더 컨트롤("서버"로 설정된 <see langword="head" /> 특성과 <see langword="runat" /> 요소)이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-628">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaKeywords" />
      </Docs>
    </Member>
    <Member MemberName="MetaKeywords">
      <MemberSignature Language="C#" Value="public string MetaKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaKeywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaKeywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-629">"키워드" <see langword="meta" /> 요소의 내용을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-629">Gets or sets the content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-630">"키워드" <see langword="meta" /> 요소의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-630">The content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-631">HTML `meta` 요소 검색 엔진 목록을 개선 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-631">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="f078d-632">"키워드" `meta` 요소 전혀 사용 되지 않는 또는 거의 가중치 주요 검색 엔진에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-632">The "keywords" `meta` element is either not used at all or is given very little weight by the major search engines.</span></span>  
  
 <span data-ttu-id="f078d-633">"키워드" 이면 `meta` 요소에는 `head` 페이지 태그의 `meta` 페이지가 렌더링 될 때 요소가 페이지에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-633">If there is no "keywords" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="f078d-634">페이지 태그 "키워드"가 이미 있으면 `meta` 요소를이 속성은 가져오거나는 `content` 특성에는 `meta` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-634">If the page markup already has a "keywords" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="f078d-635">지시문에이 속성을 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-635">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-636">설정 하는 경우는 <xref:System.Web.UI.Page.MetaKeywords%2A> "HTML, CSS, JavaScript, XML" 페이지의 속성을 다음 요소는 렌더링 된 HTML에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-636">If you set the <xref:System.Web.UI.Page.MetaKeywords%2A> property of a page to "HTML,CSS,XML,JavaScript", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="keywords" content=" HTML,CSS,XML,JavaScript" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-637">페이지에는 헤더 컨트롤("서버"로 설정된 <see langword="head" /> 특성과 <see langword="runat" /> 요소)이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-637">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaDescription" />
      </Docs>
    </Member>
    <Member MemberName="ModelBindingExecutionContext">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelBindingExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBindingExecutionContext As ModelBindingExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelBindingExecutionContext ^ ModelBindingExecutionContext { System::Web::ModelBinding::ModelBindingExecutionContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelBindingExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-638">모델 바인딩 실행 컨텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-638">Gets the model binding execution context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-639">모델 바인딩 실행 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-639">The model binding execution context.</span>
          </span>
          <span data-ttu-id="f078d-640">모델 바인딩 실행 컨텍스트가 <see langword="null" />인 경우 새 것이 만들어지고 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-640">If the model binding execution context is <see langword="null" />, a new one is created and returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelStateDictionary ^ ModelState { System::Web::ModelBinding::ModelStateDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-641">모델과 모델 바인딩 유효성 검사의 상태를 포함하는 모델 상태 사전 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-641">Gets the model state dictionary object that contains the state of the model and of model-binding validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-642">모델 상태 사전 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-642">The model state dictionary object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-643">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-643">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-644">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-644">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-645">페이지를 초기화하는 <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-645">Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-646"><xref:System.Web.UI.Page.OnInit%2A> 메서드를 만드는 데 필요한 초기화 및 설정 단계를 수행 합니다.는 <xref:System.Web.UI.Page> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="f078d-646">The <xref:System.Web.UI.Page.OnInit%2A> method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="f078d-647">이 페이지의 수명 주기이 단계 페이지에 선언 된 서버 컨트롤의 기본 상태로 초기화 됩니다. 그러나 각 컨트롤의 뷰 상태는 아직 채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-647">In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.</span></span> <span data-ttu-id="f078d-648">페이지에서 제어 하는 동안 페이지에 있는 다른 서버 컨트롤에 액세스할 수 없습니다는 `Page_Init` 다른 컨트롤의 자식 또는 부모 컨트롤 인지 여부에 관계 없이 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-648">A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls.</span></span> <span data-ttu-id="f078d-649">다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-649">Other server controls are not guaranteed to be created and ready for access.</span></span>  
  
 <span data-ttu-id="f078d-650"><xref:System.Web.UI.Page.OnInit%2A> 사이 호출 됩니다는 <xref:System.Web.UI.Page.OnPreInit%2A> 메서드 및 하기 전에 <xref:System.Web.UI.Page.OnInitComplete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-650">The <xref:System.Web.UI.Page.OnInit%2A> method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.</span></span>  
  
 <span data-ttu-id="f078d-651">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-651">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-652">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-652">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-653">또한 <xref:System.Web.UI.Page.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-653">The <xref:System.Web.UI.Page.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-654">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-654">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-655">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-655">When overriding <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInitComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInitComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-656">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-656">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-657">페이지가 초기화된 후에 <see cref="E:System.Web.UI.Page.InitComplete" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-657">Raises the <see cref="E:System.Web.UI.Page.InitComplete" /> event after page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-658"><xref:System.Web.UI.Page.OnInitComplete%2A> 메서드 페이지 초기화가 완료 된 후 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-658">The <xref:System.Web.UI.Page.OnInitComplete%2A> method is called after page initialization is complete.</span></span> <span data-ttu-id="f078d-659">이 페이지의 수명 주기이 단계에서 선언 된 모든 페이지에 있는 컨트롤 초기화 되지만 페이지의 뷰 상태는 아직 채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-659">In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.</span></span> <span data-ttu-id="f078d-660">서버 컨트롤에 액세스할 수 있습니다 하지만 사용자에서 반환 된 정보가 아직 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-660">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="f078d-661"><xref:System.Web.UI.Page.OnInitComplete%2A> 메서드가 끝날 때 발생는 <xref:System.Web.UI.Page> 초기화 단계와 로드 단계 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-661">The <xref:System.Web.UI.Page.OnInitComplete%2A> method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.</span></span>  
  
 <span data-ttu-id="f078d-662">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-662">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-663">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-663">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-664">또한 <xref:System.Web.UI.Page.OnInitComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-664">The <xref:System.Web.UI.Page.OnInitComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-665">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-665">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-666">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-666">When overriding <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoadComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-667">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-667">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-668">페이지 로드 단계가 끝날 때 <see cref="E:System.Web.UI.Page.LoadComplete" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-668">Raises the <see cref="E:System.Web.UI.Page.LoadComplete" /> event at the end of the page load stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-669"><xref:System.Web.UI.Page.OnLoadComplete%2A> 메서드 페이지 로드 단계가 끝날 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-669">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method is called at the end of the page load stage.</span></span> <span data-ttu-id="f078d-670">이 시점에서 페이지 수명 주기 다시 게시 된 데이터 및 뷰 상태 데이터를 모든 페이지에 컨트롤에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-670">At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.</span></span>  
  
 <span data-ttu-id="f078d-671">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-671">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-672">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-672">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-673">또한 <xref:System.Web.UI.Page.OnLoadComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-673">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-674">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-674">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-675">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-675">When overriding <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreInit">
      <MemberSignature Language="C#" Value="protected virtual void OnPreInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-676">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-676">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-677">페이지 초기화가 시작될 때 <see cref="E:System.Web.UI.Page.PreInit" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-677">Raises the <see cref="E:System.Web.UI.Page.PreInit" /> event at the beginning of page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-678"><xref:System.Web.UI.Page.OnPreInit%2A> 메서드 페이지 초기화 단계가의 시작 부분에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-678">The <xref:System.Web.UI.Page.OnPreInit%2A> method is called at the beginning of the page initialization stage.</span></span>  
  
 <span data-ttu-id="f078d-679">이후에 <xref:System.Web.UI.Page.OnPreInit%2A> 메서드는, 개인 설정 정보가 로드 되 고 페이지 테마 있는 경우 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-679">After the <xref:System.Web.UI.Page.OnPreInit%2A> method is called, personalization information is loaded and the page theme, if any, is initialized.</span></span> <span data-ttu-id="f078d-680">동적으로 정의 하는 기본 설정된 단계 이기도 한 <xref:System.Web.UI.PageTheme> 또는 <xref:System.Web.UI.MasterPage> 페이지에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-680">This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.</span></span>  
  
 <span data-ttu-id="f078d-681">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-681">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-682">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-682">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-683">또한 <xref:System.Web.UI.Page.OnPreInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-683">The <xref:System.Web.UI.Page.OnPreInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-684">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-684">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-685">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-685">When overriding <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnPreLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-686">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-686">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-687">다시 게시된 데이터가 페이지 서버 컨트롤에 로드된 후 <see cref="E:System.Web.UI.Page.PreLoad" /> 이벤트가 발생하기 전에 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-687">Raises the <see cref="E:System.Web.UI.Page.PreLoad" /> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-688"><xref:System.Web.UI.Page.OnPreLoad%2A> 메서드는 사용자 로부터 반환 된 모든 포스트백 데이터를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-688">The <xref:System.Web.UI.Page.OnPreLoad%2A> method is called after all postback data returned from the user is loaded.</span></span> <span data-ttu-id="f078d-689">페이지의 수명 주기에서이 단계에서는 뷰 상태 정보 및 포스트백 데이터에 대 한 선언 초기화 단계 만들어진 컨트롤은 페이지의 컨트롤에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-689">At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.</span></span>  
  
 <span data-ttu-id="f078d-690">만든 컨트롤은 <xref:System.Web.UI.Page.OnPreLoad%2A> 메서드 뷰 상태와 포스트백 데이터로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-690">Controls created in the <xref:System.Web.UI.Page.OnPreLoad%2A> method will also be loaded with view-state and postback data.</span></span>  
  
 <span data-ttu-id="f078d-691">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-691">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-692">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-692">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-693">또한 <xref:System.Web.UI.Page.OnPreLoad%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-693">The <xref:System.Web.UI.Page.OnPreLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-694">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-694">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-695">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-695">When overriding <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRenderComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnPreRenderComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreRenderComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreRenderComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreRenderComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-696">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-696">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-697">
            <see cref="E:System.Web.UI.Page.PreRenderComplete" /> 이벤트가 발생한 후 페이지가 렌더링되기 전에 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-697">Raises the <see cref="E:System.Web.UI.Page.PreRenderComplete" /> event after the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> event and before the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-698"><xref:System.Web.UI.Page.OnPreRenderComplete%2A> 메서드 페이지 수명 주기의 렌더링 이전 단계가 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-698">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method is called when the prerendering stage of the page life cycle is complete.</span></span> <span data-ttu-id="f078d-699">페이지 수명 주기의이 단계에서는 모든 컨트롤을 만들 및 페이지 출력을 렌더링 하도록 준비 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-699">At this stage of the page life cycle, all controls are created and the page is ready to render the output.</span></span>  
  
 <span data-ttu-id="f078d-700">호출 페이지의 뷰 상태를 저장 하기 전에 마지막 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-700">This is the last event called before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="f078d-701">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-701">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-702">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-702">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-703">또한 <xref:System.Web.UI.Page.OnPreRenderComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-703">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-704">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-704">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-705">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-705">When overriding <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSaveStateComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSaveStateComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSaveStateComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSaveStateComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSaveStateComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f078d-706">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-706">A <see cref="T:System.EventArgs" /> object containing the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-707">페이지 상태가 지속성 매체에 저장된 후에 <see cref="E:System.Web.UI.Page.SaveStateComplete" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-707">Raises the <see cref="E:System.Web.UI.Page.SaveStateComplete" /> event after the page state has been saved to the persistence medium.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-708"><xref:System.Web.UI.Page.OnSaveStateComplete%2A> 때 컨트롤에 대 한 상태 정보 페이지에 대 한 지 속성 매체에 기록 된 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-708">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method is called when the state information for the control has been written to the persistence medium for the page.</span></span> <span data-ttu-id="f078d-709">호출 하 여 상태 정보가 지 속성 매체에 기록 되는 <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-709">State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 <span data-ttu-id="f078d-710">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-710">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f078d-711">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-711">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f078d-712">또한 <xref:System.Web.UI.Page.OnSaveStateComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-712">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f078d-713">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-713">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-714">파생 클래스에서 <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-714">When overriding <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-715">특정 요청 브라우저에 대해 페이지를 렌더링하는 어댑터를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-715">Gets the adapter that renders the page for the specific requesting browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-716">페이지를 렌더링하는 <see cref="T:System.Web.UI.Adapters.PageAdapter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-716">The <see cref="T:System.Web.UI.Adapters.PageAdapter" /> that renders the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-717"><xref:System.Web.UI.Page.PageAdapter%2A> 속성 반환 특정 <xref:System.Web.UI.Adapters.PageAdapter> 개체의 동작을 수정 하는 <xref:System.Web.UI.Page> 요청 하는 브라우저에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-717">The <xref:System.Web.UI.Page.PageAdapter%2A> property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.</span></span>  
  
 <span data-ttu-id="f078d-718">특정 <xref:System.Web.UI.Adapters.PageAdapter> 들어오는의 특징을 검사 하 여 결정 됩니다 <xref:System.Web.UI.Page.Request%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-718">The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object.</span></span> <span data-ttu-id="f078d-719">요청 된 수명 주기 이벤트에 대해에 어댑터를 선택 하는 경우는 <xref:System.Web.UI.Adapters.PageAdapter> 에서 해당 이벤트를 재정의 하는 개체는 <xref:System.Web.UI.Page> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-719">When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageStatePersister">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.PageStatePersister PageStatePersister" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageStatePersister" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PageStatePersister As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::PageStatePersister ^ PageStatePersister { System::Web::UI::PageStatePersister ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-720">페이지와 관련된 <see cref="T:System.Web.UI.PageStatePersister" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-720">Gets the <see cref="T:System.Web.UI.PageStatePersister" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-721">페이지와 관련된 <see cref="T:System.Web.UI.PageStatePersister" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-721">A <see cref="T:System.Web.UI.PageStatePersister" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-722">HTTP 요청 및 응답은 기본적으로 상태 비저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-722">HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="f078d-723">ASP.NET 서버 페이지 HTTP 요청 간에 상태를 유지 하기 위해 저장할 수 <xref:System.Web.UI.Page> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-723">To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="f078d-724">이 상태 이면 보기 상태 라는 페이지와 제어 설정 및 데이터 페이지 및 컨트롤 있는 것 처럼 사용자 보여 준다는 사실을 알았습니다 및 마지막 라운드트립에서 페이지에 보고 상호 작용 하는 것과 같은 표시 하는 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-724">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.</span></span> <span data-ttu-id="f078d-725">같은 페이지에 대 한 연속 요청 사이의 뷰 상태를 저장 메커니즘은 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-725">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="f078d-726">추상 <xref:System.Web.UI.PageStatePersister> 클래스는 이러한 상태 저장 메커니즘에 대 한 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-726">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.</span></span>  
  
 <span data-ttu-id="f078d-727">페이지 개발자는 일반적으로 사용 하려면 필요 하지는 <xref:System.Web.UI.Page.PageStatePersister%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-727">Page developers will typically not need to use the <xref:System.Web.UI.Page.PageStatePersister%2A> property.</span></span> <span data-ttu-id="f078d-728"><xref:System.Web.UI.Page.PageStatePersister%2A> 속성의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-728">The <xref:System.Web.UI.Page.PageStatePersister%2A> property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="postEventArgumentID">
      <MemberSignature Language="C#" Value="public const string postEventArgumentID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventArgumentID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventArgumentID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventArgumentID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventArgumentID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-729">렌더링된 페이지에 EVENTARGUMENT 숨김 필드를 정의하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-729">A string that defines the EVENTARGUMENT hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventSourceID" />
      </Docs>
    </Member>
    <Member MemberName="postEventSourceID">
      <MemberSignature Language="C#" Value="public const string postEventSourceID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventSourceID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventSourceID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventSourceID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-730">렌더링된 페이지에 EVENTTARGET 숨김 필드를 정의하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-730">A string that defines the EVENTTARGET hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventArgumentID" />
      </Docs>
    </Member>
    <Member MemberName="PreInit">
      <MemberSignature Language="C#" Value="public event EventHandler PreInit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreInit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreInit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreInit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreInit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-731">페이지 초기화 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-731">Occurs before page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-732">이 이벤트를 사용 하면 페이지 요청에서 포스트백에 대 한 응답에서 페이지가 로드 되 고 있는지 여부 등의 조건을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-732">This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.</span></span> <span data-ttu-id="f078d-733">프로필 속성의 값을 확인할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-733">You can also check the values of profile properties.</span></span>  
  
 <span data-ttu-id="f078d-734">이벤트를 사용 하면 페이지 수명 주기에서 나중에 사용 되는 값을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-734">The event enables you to set values that are used later in the page life cycle.</span></span> <span data-ttu-id="f078d-735">동적으로 마스터 페이지 또는 요청 된 페이지의 테마를 설정 하 고 동적 컨트롤을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-735">You can dynamically set a master page or a theme for the requested page, and create dynamic controls.</span></span>  
  
 <span data-ttu-id="f078d-736">방식에 대 한 자세한 내용은 <xref:System.Web.UI.Page.PreInit> ASP.NET 수명 주기에 맞는 이벤트를 참조 하십시오. [ASP.NET 페이지 수명 주기 개요](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-736">For more information about how the <xref:System.Web.UI.Page.PreInit> event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public event EventHandler PreLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreLoad" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreLoad" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreLoad As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreLoad;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-737">페이지 <see cref="E:System.Web.UI.Control.Load" /> 이벤트가 발생하기 전에 이 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-737">Occurs before the page <see cref="E:System.Web.UI.Control.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-738"><xref:System.Web.UI.Page.PreLoad> 이벤트가 모든 포스트백 데이터 처리 된 후 및 하기 전에 <xref:System.Web.UI.Control.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-738">The <xref:System.Web.UI.Page.PreLoad> event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event.</span></span> <span data-ttu-id="f078d-739">로드 하기 전에 다시 게시 된 데이터를 두 번째 시도 하는 <xref:System.Web.UI.Page.OnLoadComplete%2A> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-739">There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event.</span></span> <span data-ttu-id="f078d-740">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-740">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
      </Docs>
    </Member>
    <Member MemberName="PreRenderComplete">
      <MemberSignature Language="C#" Value="public event EventHandler PreRenderComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRenderComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreRenderComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRenderComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRenderComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-741">페이지 내용이 렌더링되기 전에 이 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-741">Occurs before the page content is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-742"><xref:System.Web.UI.Page.PreRenderComplete> 페이지 수명 주기의 사전 렌더링 단계가 완료 되 면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-742">The <xref:System.Web.UI.Page.PreRenderComplete> event is raised when the pre-render stage of the page life cycle is complete.</span></span> <span data-ttu-id="f078d-743">페이지 수명 주기의이 단계에서는 모든 컨트롤을 만들, 필요한 페이지 매김이 완료 되 면 및 페이지 출력 스트림으로 렌더링 하도록 준비 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-743">At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.</span></span>  
  
 <span data-ttu-id="f078d-744">페이지의 뷰 상태가 저장 되기 전에 발생 하는 마지막 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-744">This is the last event raised before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="f078d-745">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-745">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public System.Web.UI.Page PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousPage As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Page ^ PreviousPage { System::Web::UI::Page ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-746">현재 페이지로 컨트롤을 전송한 페이지를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-746">Gets the page that transferred control to the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-747">현재 페이지로 컨트롤을 전송한 페이지를 나타내는 <see cref="T:System.Web.UI.Page" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-747">The <see cref="T:System.Web.UI.Page" /> representing the page that transferred control to the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-748">사용 하는 경우는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드 또는 처리를 전송 한 ASP.NET 페이지에서 다른 페이지 간 게시를 사용 하 여 원래 페이지의 대상 페이지에 대 한 필요할 수 있는 요청 정보를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-748">When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.</span></span> <span data-ttu-id="f078d-749">사용할 수는 <xref:System.Web.UI.Page.PreviousPage%2A> 해당 정보에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-749">You can use the <xref:System.Web.UI.Page.PreviousPage%2A> property to access that information.</span></span>  
  
 <span data-ttu-id="f078d-750">현재 페이지 (전송 아니거나 다른 페이지에서 동시 게시)를 직접 요청으로 렌더링 되는 경우는 <xref:System.Web.UI.Page.PreviousPage%2A> 속성 포함 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-750">If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the <xref:System.Web.UI.Page.PreviousPage%2A> property contains `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-751">다음 예제에서는 두 부분으로입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-751">The following example is in two parts.</span></span> <span data-ttu-id="f078d-752">첫 번째는 ASP.NET 페이지를 사용 하는 <xref:System.Web.HttpServerUtility.Transfer%2A> 으로 페이지 모델에서 노출 하는 메서드에 `Server.Transfer("path")`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-752">The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer("path")`.</span></span> <span data-ttu-id="f078d-753">두 번째 부분은 사용 하는 대상 페이지는 <xref:System.Web.UI.Page.PreviousPage%2A> 속성을 첫 번째 페이지의 제목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-753">The second part is the target page, which uses the <xref:System.Web.UI.Page.PreviousPage%2A> property to get the title of the first page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Main.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Main.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Notify.aspx#2)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Notify.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-754">현재 사용자가 이전 페이지에 액세스할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-754">The current user is not allowed to access the previous page.</span>
          </span>
          <span data-ttu-id="f078d-755">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-755">-or-</span>
          </span>
          <span data-ttu-id="f078d-756">ASP.NET 라우팅은 사용 중이며 이전 페이지 URL은 라우팅된 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-756">ASP.NET routing is in use and the previous page's URL is a routed URL.</span>
          </span>
          <span data-ttu-id="f078d-757">ASP.NET이 액세스 권한을 확인할 때에는 해당 URL이 파일에 대한 실제 경로라고 가정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-757">When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.</span>
          </span>
          <span data-ttu-id="f078d-758">라우팅된 URL과 관련된 사례가 아니므로 검사는 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-758">Because this is not the case with a routed URL, the check fails.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f078d-759">
            <see cref="T:System.Web.HttpContext" />, <see cref="P:System.Web.HttpContext.Request" /> 및 <see cref="P:System.Web.HttpContext.Response" /> 등과 같이 HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <see cref="P:System.Web.HttpContext.Session" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-759">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-760">
            <see cref="T:System.Web.UI.Page" />, <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" /> 및 <see cref="P:System.Web.UI.Page.Response" /> 속성과 같은 <see cref="P:System.Web.UI.Page.Application" /> 개체의 내장 서버 개체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-760">Sets the intrinsic server objects of the <see cref="T:System.Web.UI.Page" /> object, such as the <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, and <see cref="P:System.Web.UI.Page.Application" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-761">이 메서드를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-761">You should not call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Context" />
        <altmember cref="P:System.Web.UI.Page.Request" />
        <altmember cref="P:System.Web.UI.Page.Response" />
        <altmember cref="P:System.Web.UI.Page.Application" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(class System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (sourceControl As IPostBackEventHandler, eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::Web::UI::IPostBackEventHandler ^ sourceControl, System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControl" Type="System.Web.UI.IPostBackEventHandler" />
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceControl">
          <span data-ttu-id="f078d-762">다시 게시를 발생시킨 ASP.NET 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-762">The ASP.NET server control that caused the postback.</span>
          </span>
          <span data-ttu-id="f078d-763">이 컨트롤은 <see cref="T:System.Web.UI.IPostBackEventHandler" /> 인터페이스를 구현해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-763">This control must implement the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</span>
          </span>
        </param>
        <param name="eventArgument">
          <span data-ttu-id="f078d-764">다시 게시 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-764">The postback argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-765">들어오는 다시 게시 이벤트를 처리하도록 다시 게시를 발생시킨 서버 컨트롤에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-765">Notifies the server control that caused the postback that it should handle an incoming postback event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-766"><xref:System.Web.UI.Page> 호출 개체는 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> 포스트백이 발생할 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-766">The <xref:System.Web.UI.Page> object calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback occurs.</span></span> <span data-ttu-id="f078d-767">로드 및 변경 내용 알림 완료 된 후 하지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-767">This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-768">다음 예제에서는 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> 때 사용자 지정 다시 게시 이벤트 발생 asp `userButton` 서버 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-768">The following example uses the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterArrayDeclaration(string arrayName, string arrayValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="f078d-769">값을 선언할 배열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-769">The name of the array in which to declare the value.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="f078d-770">배열에서 찾을 수 있는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-770">The value to place in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-771">페이지가 렌더링될 때 ECMAScript 배열 선언으로 선언되는 값을 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-771">Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-772">이 메서드는 클라이언트 스크립트 라이브러리가 동일한 형식의 모든 컨트롤을 작동할 수 있도록 자신을 배열 내에서 선언 하 스크립트 기반 컨트롤에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-772">This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.</span></span>  
  
 <span data-ttu-id="f078d-773"><xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-773">The <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-774">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 에서 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-774">Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-775">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> 메서드는 배열을 선언 하 `myArray`, 라는 세 개의 개체가 들어 있는 `x`, `y`, 및 `z`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-775">The following code example uses the <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`.</span></span> <span data-ttu-id="f078d-776">정의 하 고 사용 하 여 시작 스크립트를 등록 하는 예제는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-776">The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="f078d-777">때 ECMAScript `doClick` 이 코드를 포함 하는 페이지에서 함수를 호출, 배열 및 해당 개체에서 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-777">When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.</span></span>  
  
 [!code-csharp[Page_RegisterArrayDeclaration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/CS/page_registerarraydeclaration.cs.aspx#1)]
 [!code-vb[Page_RegisterArrayDeclaration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/VB/page_registerarraydeclaration.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncTask">
      <MemberSignature Language="C#" Value="public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAsyncTask(class System.Web.UI.PageAsyncTask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAsyncTask (task As PageAsyncTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAsyncTask(System::Web::UI::PageAsyncTask ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Web.UI.PageAsyncTask" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="f078d-778">비동기 작업을 정의하는 <see cref="T:System.Web.UI.PageAsyncTask" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-778">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-779">페이지에 새 비동기 작업을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-779">Registers a new asynchronous task with the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-780">사용 하 여 비동기 작업 정의 <xref:System.Web.UI.PageAsyncTask> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-780">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="f078d-781">작업이 정의 된 경우 사용 된 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 페이지와 작업을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-781">When the task is defined, use the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method to register the task with the page.</span></span> <span data-ttu-id="f078d-782">작업을 등록 한 후 호출 된 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 메서드를 비동기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-782">After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="f078d-783"><xref:System.Web.UI.Page.RegisterAsyncTask%2A> 동기 및 비동기 페이지와 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-783">The <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method can be used with both synchronous and asynchronous pages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-784">다음 코드 예제에서는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성으로는 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 및 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-784">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f078d-785">Note 시작, 종료 및 제한 시간 처리기를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-785">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f078d-786">예제에서는 인위적 지연을 포함 되는 비동기 작업에 지정 된 대로 작업에 대 한 할당된 된 시간 초과 상황을 보여 주기 위해는 <xref:System.Web.UI.Page.AsyncTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-786">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f078d-787">실제 시나리오에서는 데이터베이스 호출 또는 이미지 생성을 수행 하는 비동기 작업을 사용할 수 예를 들어 및 제한 시간 처리기는 지정 된 시간 내에 작업을 수행 하지 않는 경우 정상적인 저하를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-787">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-788">비동기 작업이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-788">The asynchronous task is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public virtual void RegisterClientScriptBlock (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterClientScriptBlock(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterClientScriptBlock (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterClientScriptBlock(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterClientScriptBlock(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f078d-789">스크립트 블록을 식별하는 고유 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-789">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f078d-790">클라이언트에 보낸 스크립트의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-790">Content of script that is sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-791">클라이언트 쪽 스크립트 블록을 응답으로 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-791">Emits client-side script blocks to the response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-792">클라이언트 쪽 스크립트의 여는 태그 바로 뒤 내보내집니다는 <xref:System.Web.UI.Page> 개체의 `<form runat= server>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-792">The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="f078d-793">열기 및 닫기 포함 해야 `<script>` 주위의 스크립트 블록에 지정 된 문자열의 `script` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-793">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="f078d-794">이 메서드는 키를 사용 하 여 스크립트 블록을 식별, 때문에 스크립트 블록에서 다른 서버 컨트롤 인스턴스에 요청 될 때마다 출력 스트림으로 내보낼 수 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-794">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.</span></span> <span data-ttu-id="f078d-795">키를 사용 하 여 서로 방해 하는 다른 컨트롤의 스크립트 블록의 될 가능성은 줄어듭니다도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-795">Using a key also decreases the likelihood of different controls' script blocks interfering with each other.</span></span>  
  
 <span data-ttu-id="f078d-796">모든 스크립트와 동일한 블록 `key` 매개 변수 값에는 중복 요소로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-796">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-797">요청 하는 브라우저는 스크립트를 지원 하지 않는 경우 렌더링할 수 있도록 HTML 주석 스크립트에 태그를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-797">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="f078d-798"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-798">The <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-799">대신 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 클래스의 <xref:System.Web.UI.ClientScriptManager> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-799">Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-800">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 메서드와 함께 <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-800">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="f078d-801">에 의해 결정 된을 코드 선언 블록에 ECMAScript에 이미 등록 되지 않은 경우 <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-801">If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="f078d-802">렌더링할 숨김 필드의 고유 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-802">The unique name of the hidden field to be rendered.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="f078d-803">숨겨진 폼에 내보낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-803">The value to be emitted in the hidden form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-804">서버 컨트롤이 폼에 있는 숨김 필드를 자동으로 등록할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-804">Allows server controls to automatically register a hidden field on the form.</span>
          </span>
          <span data-ttu-id="f078d-805">
            <see cref="T:System.Web.UI.Page" /> 서버 컨트롤이 렌더링되면 필드가 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 개체로 보내집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-805">The field will be sent to the <see cref="T:System.Web.UI.Page" /> object when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-806"><xref:System.Web.UI.Page.RegisterHiddenField%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-806">The <xref:System.Web.UI.Page.RegisterHiddenField%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-807">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 에서 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-807">Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-808">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterHiddenField%2A> ECMAScript 코드를 만드는 데 메서드에 요청 브라우저에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-808">The following code example uses the <xref:System.Web.UI.Page.RegisterHiddenField%2A> method to help create ECMAScript code that is passed to the requesting browser.</span></span> <span data-ttu-id="f078d-809">숨겨진된 필드의 이름으로 설정 됩니다 `myHiddenField` 값은 "Microsoft 시작!"로 설정 하 고</span><span class="sxs-lookup"><span data-stu-id="f078d-809">The name of the hidden field is set to `myHiddenField` and its value is set to "Welcome to Microsoft!"</span></span> <span data-ttu-id="f078d-810"><xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드 호출의 `myHiddenField` 값 페이지에서 단추를 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-810">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-811">이 예제에 숨겨진된 필드가 있는데이 잠재적인 보안 문제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-811">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="f078d-812">기본적으로 텍스트 상자의 값와 마찬가지로 숨겨진된 필드의 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-812">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="f078d-813">ASP.NET 웹 페이지는 사용자 입력 스크립트 또는 HTML 요소가 포함 되지 않습니다 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-813">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-814">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-814">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#1)]
 [!code-vb[Page_RegisterHiddenField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterOnSubmitStatement (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterOnSubmitStatement(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f078d-815">스크립트 블록을 식별하는 고유 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-815">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f078d-816">클라이언트에 보낼 클라이언트 쪽 스크립트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-816">The client-side script to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-817">페이지가 클라이언트 <see langword="OnSubmit" /> 이벤트에 액세스할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-817">Allows a page to access the client <see langword="OnSubmit" /> event.</span>
          </span>
          <span data-ttu-id="f078d-818">스크립트는 다른 곳에서 등록된 클라이언트에 대한 함수 호출이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-818">The script should be a function call to client code registered elsewhere.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-819"><xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-819">The <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-820">사용 하 여는 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 에서 메서드는 <xref:System.Web.UI.ClientScriptManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-820">Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-821">다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 클라이언트의 제출 단추를 클릭할 때 응답 하는 스크립트를 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-821">The following code example demonstrates using the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> to access a script that responds when a client-side Submit button is clicked.</span></span> <span data-ttu-id="f078d-822">이 이벤트가 발생할 때 클라이언트에서 등록 된 ECMAScript 코드 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-822">When this event occurs, the registered ECMAScript code is executed on the client.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-823">이 예제에 숨겨진된 필드가 있는데이 잠재적인 보안 문제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-823">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="f078d-824">기본적으로 텍스트 상자의 값와 마찬가지로 숨겨진된 필드의 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-824">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="f078d-825">ASP.NET 웹 페이지는 사용자 입력 스크립트 또는 HTML 요소가 포함 되지 않습니다 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-825">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-826">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-826">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#2)]
 [!code-vb[Page_RegisterHiddenField#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void RegisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-827">등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-827">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-828">컨트롤을 상태를 지속시켜야 하는 컨트롤로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-828">Registers a control as one whose control state must be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-829">컨트롤 상태를 사용 하는 사용자 지정 서버 컨트롤을 호출 해야 합니다는 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 메서드 각 요청에 대해 컨트롤 상태에 대 한 등록은 지연 되지 요청에서 요청에 포스트백 이벤트 동안 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-829">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on each request because registration for control state is not carried over from request to request during a postback event.</span></span> <span data-ttu-id="f078d-830">등록 하는 것이 좋습니다는 <xref:System.Web.UI.Control.Init> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-830">It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-831">다음 코드 예제에서는 사용자 지정 서버 컨트롤을 호출 하는 표시 된 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-831">The following code example shows a custom server control calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span>  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-832">등록할 컨트롤이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-832">The control to register is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-833">
            <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> 이벤트가 수행되는 동안이나 수행되기 전에만 <see cref="E:System.Web.UI.Control.PreRender" /> 메서드를 호출할 수 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-833">The <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> method can be called only before or during the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresPostBack">
      <MemberSignature Language="C#" Value="public void RegisterRequiresPostBack (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresPostBack(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresPostBack(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-834">등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-834">The control to be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-835">페이지가 서버에 다시 게시될 때 다시 게시를 처리해야 하는 컨트롤로 컨트롤을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-835">Registers a control as one that requires postback handling when the page is posted back to the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-836">등록 해야 컨트롤이 구현 해야 합니다는 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스 또는 <xref:System.Web.HttpException> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-836">The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised.</span></span> <span data-ttu-id="f078d-837">컨트롤을 통해 구현 되는 경우는 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스 수 있도록 다시 게시 데이터의 처리 및 발생 게시물을 좋아하고 게시물의 백업 데이터 변경 이벤트.</span><span class="sxs-lookup"><span data-stu-id="f078d-837">When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events.</span></span> <span data-ttu-id="f078d-838">서버 컨트롤의 이벤트 모델에 대 한 자세한 내용은 참조 하십시오. [ASP.NET Web Forms 서버 컨트롤 이벤트 모델](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-838">For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).</span></span>  
  
 <span data-ttu-id="f078d-839">또는 그 전에 페이지와 컨트롤을 등록 된 `Page_PreRender` 페이지 수명 주기의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-839">Register controls with the page at or before the `Page_PreRender` event of the page life cycle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-840">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> 텍스트 상자 컨트롤을 요구 하는 메서드 `myTextBox`, 텍스트 상자와 연결 된 모든 코드를 실행 하기 전에 다시 게시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-840">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute.</span></span> <span data-ttu-id="f078d-841"><xref:System.Web.UI.WebControls.TextBox> 컨트롤은 구현에서 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-841"><xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-842">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-842">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-843">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-843">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-844">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-844">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterRequiresPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/CS/page_registerrequirespostback.cs.aspx#1)]
 [!code-vb[Page_RegisterRequiresPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/VB/page_registerrequirespostback.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-845">등록할 컨트롤이 <see cref="T:System.Web.UI.IPostBackDataHandler" /> 인터페이스를 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-845">The control to register does not implement the <see cref="T:System.Web.UI.IPostBackDataHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresRaiseEvent">
      <MemberSignature Language="C#" Value="public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRequiresRaiseEvent(class System.Web.UI.IPostBackEventHandler control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterRequiresRaiseEvent (control As IPostBackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRequiresRaiseEvent(System::Web::UI::IPostBackEventHandler ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.IPostBackEventHandler" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-846">등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-846">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-847">ASP.NET 서버 컨트롤을 <see cref="T:System.Web.UI.Page" /> 개체에서 처리될 때 이벤트 발생을 필요로 하는 컨트롤로 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-847">Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-848">페이지 요청에 따라 하나의 서버 컨트롤을 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-848">Only one server control can be registered per page request.</span></span> <span data-ttu-id="f078d-849"><xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> 컨트롤에는 해당 컨트롤 ID 폼에 데이터를 게시할 때 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-849">The <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> must be used when the control does not include its control ID in the form post data.</span></span> <span data-ttu-id="f078d-850">또한 등록은 한 컨트롤을 구현 해야 합니다는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-850">Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-851">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> 등록 하는 메서드는 <xref:System.Web.UI.WebControls.Button> 웹 서버 컨트롤 이벤트를 발생 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-851">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised.</span></span> <span data-ttu-id="f078d-852">첫 번째 등록 한 후 <xref:System.Web.UI.WebControls.Button> 컨트롤을 두 번째 발생할 수 있습니다 <xref:System.Web.UI.WebControls.Button> 컨트롤 첫 번째 단추의 결과 게시 하는 코드에 선언 된 페이지에는 이벤트를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-852">After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresViewStateEncryption">
      <MemberSignature Language="C#" Value="public void RegisterRequiresViewStateEncryption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresViewStateEncryption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresViewStateEncryption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresViewStateEncryption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-853">컨트롤을 뷰 상태를 암호화해야 하는 컨트롤로 페이지에 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-853">Registers a control with the page as one requiring view-state encryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-854">잠재적으로 중요 한 정보를 처리 하는 사용자 지정 컨트롤을 개발 하는 경우 호출 된 <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> 메서드를 페이지와 컨트롤을 등록 하 고 컨트롤 암호화 된 뷰 상태를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-854">If you are developing a custom control that deals with potentially sensitive information, call the <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> method to register the control with the page and ensure view state for the control is encrypted.</span></span>  
  
 <span data-ttu-id="f078d-855">전체 페이지 상태 암호화 됩니다는 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 로 설정 된 <xref:System.Web.UI.ViewStateEncryptionMode.Auto> 또는 <xref:System.Web.UI.ViewStateEncryptionMode.Always>합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-855">The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode.Auto> or <xref:System.Web.UI.ViewStateEncryptionMode.Always>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-856">다음 코드 예제에 대 한 뷰 상태 암호화 모드를 설정 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Page> 개체와의 뷰 상태를 통해 암호화를 요청 <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-856">The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>.</span></span> <span data-ttu-id="f078d-857">이 예제에서는 뷰 상태를 데이터베이스에서 고객 정보를 검색할 때 암호화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-857">In this example, view state will be encrypted when customer information is retrieved from a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/CS/encryptViewState.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/VB/encryptViewState.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-858">
            <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> 메서드를 페이지 수명 주기의 페이지 <see langword="PreRender" />단계 또는 그 이전에 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-858">The <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method must be called before or during the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public virtual void RegisterStartupScript (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStartupScript(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStartupScript (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStartupScript(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterStartupScript(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f078d-859">스크립트 블록을 식별하는 고유 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-859">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f078d-860">클라이언트에 보낼 스크립트의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-860">Content of script that will be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-861">클라이언트 쪽 스크립트 블록을 페이지 응답으로 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-861">Emits a client-side script block in the page response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-862">비슷합니다는 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 메서드를는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드 내보내는의 닫는 태그 바로 앞의 스크립트는 <xref:System.Web.UI.Page> 개체의 `<form runat= server>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-862">Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="f078d-863">열기 및 닫기 포함 해야 `<script>` 주위의 스크립트 블록에 지정 된 문자열의 `script` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-863">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="f078d-864">이 메서드는 키를 사용 하 여 스크립트 블록을 식별, 때문에 스크립트 블록 있어서는 안 될 때마다 다른 서버 컨트롤 인스턴스에 의해 요청 된 출력 스트림으로 내보낼 수</span><span class="sxs-lookup"><span data-stu-id="f078d-864">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance</span></span>  
  
 <span data-ttu-id="f078d-865">모든 스크립트와 동일한 블록 `key` 매개 변수 값에는 중복 요소로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-865">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-866">요청 하는 브라우저는 스크립트를 지원 하지 않는 경우 렌더링할 수 있도록 HTML 주석 스크립트에 태그를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-866">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="f078d-867"><xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-867">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method has been deprecated.</span></span> <span data-ttu-id="f078d-868">대신 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 클래스의 <xref:System.Web.UI.ClientScriptManager> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-868">Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-869">다음 코드 예제에서는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 메서드와 함께 <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-869">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="f078d-870">에 의해 결정 된을 코드 선언 블록에 작성 된 ECMAScript에 이미 등록 되지 않은 경우는 <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 메서드는 <xref:System.Web.UI.Page.RegisterStartupScript%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-870">If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterViewStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterViewStateHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewStateHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterViewStateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewStateHandler ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewStateHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-871">이 메서드를 호출하면, 페이지 뷰 상태가 유지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-871">Causes page view state to be persisted, if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-872"><xref:System.Web.UI.Page.RegisterViewStateHandler%2A> 메서드를 통해 자동으로 호출 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlForm> 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-872">The <xref:System.Web.UI.Page.RegisterViewStateHandler%2A> method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control.</span></span> <span data-ttu-id="f078d-873">이 메서드가 호출 되지 않습니다 페이지 뷰 상태가 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-873">If this method is not invoked, the page view state will not be persisted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-874">일반적으로는 <xref:System.Web.UI.HtmlControls.HtmlForm> 페이지에 대 한 서버 컨트롤에서는이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-874">Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_RegisterViewStateHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterViewStateHandler/CS/page_registerviewstatehandler.cs#1)]
 [!code-vb[Page_RegisterViewStateHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterViewStateHandler/VB/page_registerviewstatehandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f078d-875">페이지 내용을 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-875">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the page content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-876">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 초기화하고 렌더링할 <see cref="T:System.Web.UI.Page" />의 자식 컨트롤을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-876">Initializes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and calls on the child controls of the <see cref="T:System.Web.UI.Page" /> to render.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-877"><xref:System.Web.UI.Page.Render%2A> 메서드는 텍스트와 클라이언트 브라우저로 전송 되는 태그를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-877">The <xref:System.Web.UI.Page.Render%2A> method is responsible for creating the text and markup that is sent to the client browser.</span></span> <span data-ttu-id="f078d-878">기본 <xref:System.Web.UI.Page.Render%2A> 메서드 호출 <xref:System.Web.UI.Control.RenderChildren%2A> 텍스트와 페이지에 포함 된 컨트롤에 대 한 태그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-878">The default <xref:System.Web.UI.Page.Render%2A> method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-879">요청된 페이지에 대한 <see cref="T:System.Web.HttpRequest" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-879">Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-880">페이지와 관련된 현재 <see cref="T:System.Web.HttpRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-880">The current <see cref="T:System.Web.HttpRequest" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-881"><xref:System.Web.HttpRequest> 개체에는 현재 HTTP 요청에 대한 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-881">The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-882">다음 예제를 가져오는 방법을 보여 줍니다는 <xref:System.Web.HttpRequest.Headers%2A> 에서 컬렉션은 <xref:System.Web.HttpRequest> 개체 및 ASP.NET 페이지에 쓰려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-882">The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-883">
            <see cref="T:System.Web.HttpRequest" /> 개체를 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-883">Occurs when the <see cref="T:System.Web.HttpRequest" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequiresControlState">
      <MemberSignature Language="C#" Value="public bool RequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-884">컨트롤 상태 요구 사항을 확인하는 <see cref="T:System.Web.UI.Control" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-884">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-885">지정된 <see cref="T:System.Web.UI.Control" /> 개체가 등록되어 컨트롤 상태 관리에 참여하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-885">Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-886">지정된 <see cref="T:System.Web.UI.Control" />에 컨트롤 상태가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-886">
              <see langword="true" /> if the specified <see cref="T:System.Web.UI.Control" /> requires control state; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-887">컨트롤 상태는 웹 서버 컨트롤; 작동 해야 하는 중요 한 뷰 상태 데이터는 구성 개체 해당 기본 보기 상태에서 별도 개체에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-887">Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.</span></span>  
  
 <span data-ttu-id="f078d-888">컨트롤 상태를 사용 하 여 사용자 지정 컨트롤을 호출 해야 합니다는 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 컨트롤 상태를 저장 하기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-888">Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state.</span></span> <span data-ttu-id="f078d-889">사용 된 <xref:System.Web.UI.Page.RequiresControlState%2A> 컨트롤 상태를 필요로 하는 컨트롤로 페이지와 함께 등록 되어 있는 컨트롤에 대 한 검사 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-889">Use the <xref:System.Web.UI.Page.RequiresControlState%2A> method to check for controls that are registered with the page as requiring control state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.PageStatePersister.ControlState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-890">
            <see cref="T:System.Web.HttpResponse" /> 개체와 연결된 <see cref="T:System.Web.UI.Page" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-890">Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
          <span data-ttu-id="f078d-891">이 개체를 사용하여 HTTP 응답 데이터를 클라이언트에 보낼 수 있고 이 개체는 해당 응답에 대한 정보를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-891">This object allows you to send HTTP response data to a client and contains information about that response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-892">페이지와 관련된 현재 <see cref="T:System.Web.HttpResponse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-892">The current <see cref="T:System.Web.HttpResponse" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f078d-893">다음 코드 예제에서는 쿠키를 만들고 사용 하 여 페이지의 HTTP 출력에 추가 된 <xref:System.Web.HttpResponse> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-893">The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-894">
            <see cref="T:System.Web.HttpResponse" /> 개체는 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-894">The <see cref="T:System.Web.HttpResponse" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="ResponseEncoding">
      <MemberSignature Language="C#" Value="public string ResponseEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-895">현재 <see cref="T:System.Web.HttpResponse" /> 개체의 인코딩 언어를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-895">Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-896">현재 <see cref="T:System.Web.HttpResponse" />의 인코딩 언어가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-896">A string that contains the encoding language for the current <see cref="T:System.Web.HttpResponse" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-897">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-897">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-898">설정 된 `ResponseEncoding` 특성.aspx 파일에 지시문을 사용 하 여 원하는 값으로.</span><span class="sxs-lookup"><span data-stu-id="f078d-898">Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-899">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-899">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData RouteData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteData RouteData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.RouteData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteData As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteData ^ RouteData { System::Web::Routing::RouteData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-900">현재 <see cref="P:System.Web.Routing.RequestContext.RouteData" /> 인스턴스의 <see cref="T:System.Web.Routing.RequestContext" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-900">Gets the <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-901">현재 <see cref="P:System.Web.Routing.RequestContext.RouteData" /> 인스턴스의 <see cref="T:System.Web.Routing.RequestContext" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-901">The <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-902">페이지를 통해 ASP.NET 라우팅이 요청에 대 한 응답을 실행 중인 경우이 속성 경로 데이터로 전달 된 URL 매개 변수 값에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-902">If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.</span></span> <span data-ttu-id="f078d-903">페이지 경로 URL 대신 실제 URL에 대 한 응답에서를 실행 하는 경우이 속성은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-903">If the page runs in response to a physical URL instead of a route URL, this property is `null`.</span></span> <span data-ttu-id="f078d-904">라는 URL 매개 변수 값을 추출 하는 방법을 보여 주는 다음 예제 `year`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-904">The following example shows how to extract the value of a URL parameter that is named `year`.</span></span>  
  
```vb  
Dim year As Integer = Convert.ToInt32(Page.RouteData.Values("year"))  
```  
  
```csharp  
int year = Convert.ToInt32(Page.RouteData.Values["year"])  
```  
  
 <span data-ttu-id="f078d-905">경로의 URL 패턴을 사용 하 여 정의 된 경우 `{locale}/{year}` 도메인용 `contoso.com`, 요청 된 URL이 고 `contoso.com/US/2010`, `year` "2010"이 코드를 실행할 때 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-905">If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value "2010" when this code runs.</span></span>  
  
 <span data-ttu-id="f078d-906">ASP.NET 라우팅에 대 한 자세한 내용은 참조 [ASP.NET 라우팅에서](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-906">For more information about ASP.NET routing, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Routing.RequestContext.RouteData" />
      </Docs>
    </Member>
    <Member MemberName="SavePageStateToPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual void SavePageStateToPersistenceMedium (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SavePageStateToPersistenceMedium(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SavePageStateToPersistenceMedium (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SavePageStateToPersistenceMedium(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="f078d-907">뷰 상태 정보를 저장할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-907">An <see cref="T:System.Object" /> in which to store the view-state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-908">페이지의 뷰 상태 및 컨트롤 상태 정보를 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-908">Saves any view-state and control-state information for the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-909"><xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> 메서드는 <xref:System.Web.UI.PageStatePersister.Save%2A> 의 메서드는 <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> 에서 참조 하는 개체는 <xref:System.Web.UI.Page.PageStatePersister%2A> 속성 페이지에 대 한 뷰 상태와 제어 상태 정보를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-909">The <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.</span></span>  
  
 <span data-ttu-id="f078d-910">ASP.NET의 하위 항목 중 두 개에 포함 되어는 <xref:System.Web.UI.PageStatePersister> 클래스는 <xref:System.Web.UI.HiddenFieldPageStatePersister> ASP.NET 페이지에 포함 된 숨겨진된 필드에 상태 정보를 저장 하는 클래스 및 <xref:System.Web.UI.SessionPageStatePersister> 클래스의 상태를 저장 하는 <xref:System.Web.UI.Page.Session%2A> 연관 된 개체는 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-910">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span> <span data-ttu-id="f078d-911">사용할 때의 <xref:System.Web.UI.SessionPageStatePersister> 다시 게시를 결정 하는 데 사용이 숨겨진된 VIEWSTATE 필드를 렌더링 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-911">Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.</span></span>  
  
 <span data-ttu-id="f078d-912">사용자가 선택한 위치에 상태를 저장 하려면 새 만들어야의 하위 폴더는 <xref:System.Web.UI.PageStatePersister> 클래스 저장 하 고 사용자가 선택한 상태 지 속성 매체를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-912">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="f078d-913">새로 만드는 데 따른 예제를 보려면 <xref:System.Web.UI.PageStatePersister> 개체, 참조는 <xref:System.Web.UI.PageStatePersister> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-913">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="f078d-914">.NET Framework 버전 1.0 또는 1.1을 저장 하려는 경우이 메서드를 재정의 사용 하는 경우는 <xref:System.Web.UI.Page> 숨겨진된 필드 이외에 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-914">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field.</span></span> <span data-ttu-id="f078d-915">그렇게 하도록 선택할 경우 재정의 해야는 <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-915">If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="SaveStateComplete">
      <MemberSignature Language="C#" Value="public event EventHandler SaveStateComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SaveStateComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.SaveStateComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SaveStateComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SaveStateComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-916">페이지와 페이지에 있는 컨트롤에 대한 모든 뷰 상태 및 컨트롤 상태 정보가 저장된 후에 이 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-916">Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-917">후 저장 된 웹 페이지에 컨트롤에 대 한 상태 정보는 <xref:System.Web.UI.Page.PreRenderComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-917">State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f078d-918"><xref:System.Web.UI.Page.SaveStateComplete> 뷰 상태와 페이지의 컨트롤 상태 후에 이벤트가 발생 하 고 페이지에 있는 컨트롤 유지 미디어에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-918">The <xref:System.Web.UI.Page.SaveStateComplete> event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.</span></span>  
  
 <span data-ttu-id="f078d-919">요청한 브라우저에 페이지를 렌더링 하기 전에 발생 하는 마지막 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-919">This is the last event raised before the page is rendered to the requesting browser.</span></span>  
  
 <span data-ttu-id="f078d-920">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-920">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-921">
            <see cref="T:System.Web.HttpServerUtility" /> 클래스의 인스턴스인 <see langword="Server" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-921">Gets the <see langword="Server" /> object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-922">페이지와 관련된 현재 <see langword="Server" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-922">The current <see langword="Server" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-923">이 속성은 자주 사용 되는에 대 한 액세스를 제공 <xref:System.Web.HttpServerUtility.HtmlEncode%2A> 및 <xref:System.Web.HttpServerUtility.MapPath%2A> 다른 규칙 으로부터 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-923">This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-924">다음 코드 예제를 사용 하 여 서버에서 오류 정보에 액세스 하는 방법을 보여 줍니다는 `Server` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-924">The following code example demonstrates how to access error information from the server by using the `Server` object.</span></span> <span data-ttu-id="f078d-925">특히,이 예제에서는에서 요청 된 URL을 가져옵니다는 `Request` 개체에서 가장 최근에 발생 한 오류는 `Server` 개체 (사용 하 여는 <xref:System.Web.HttpServerUtility.GetLastError%2A> 메서드) 되 고 모두 클라이언트에 의해 표시 될 수 있는 문자열로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-925">In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client.</span></span> <span data-ttu-id="f078d-926">한 번는 `message` 변수 오류를 사용 하 여 삭제 됩니다는 클라이언트에 기록 되는 <xref:System.Web.HttpServerUtility.ClearError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-926">Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Error method#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Error method/CS/sourcecs.aspx#1)]
 [!code-vb[System.Web.UI.Page_Error method#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Error method/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-927">ASP.NET에서 제공하는 현재 <see langword="Session" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-927">Gets the current <see langword="Session" /> object provided by ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-928">현재 세션 상태 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-928">The current session-state data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-929">이 속성은 현재 요청 세션에 대 한 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-929">This property provides information about the current request's session.</span></span> <span data-ttu-id="f078d-930">A `Session` ASP.NET 응용 프로그램에서 페이지 또는 문서를 요청 하는 각 사용자에 대해 유지 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-930">A `Session` object is maintained for each user that requests a page or document from an ASP.NET application.</span></span> <span data-ttu-id="f078d-931">에 저장 된 변수는 `Session` 개체에는 사용자 응용 프로그램에서 페이지를 이동할 때 삭제 되지 않으며, 대신, 이러한 변수는 한 유지 사용자가 응용 프로그램 페이지에에서 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-931">Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.</span></span> <span data-ttu-id="f078d-932">세션 상태에 대 한 자세한 내용은 참조 [ASP.NET 세션 상태 개요](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-932">For more information about session state, see [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-933">다음 코드 예제에서는 한 `GetStyle` Web Forms 페이지의 세션 상태에 저장 된 키를 검색 하 고 해당 값을 문자열로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-933">The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.</span></span>  
  
 [!code-csharp[Page.Session_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Session_Samples1/CS/sessioncs.aspx#1)]
 [!code-vb[Page.Session_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Session_Samples1/VB/sessionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-934">세션 정보가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-934">Occurs when the session information is set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-935">브라우저 포커스를 지정된 컨트롤로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-935">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">
          <span data-ttu-id="f078d-936">포커스를 설정할 컨트롤의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-936">The ID of the control to set focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-937">브라우저 포커스를 지정된 식별자를 가진 컨트롤에 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-937">Sets the browser focus to the control with the specified identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-938">사용 하 여는 <xref:System.Web.UI.Page.SetFocus%2A> 지정한 ID 가진 컨트롤을 만드는 메서드와 알림이 브라우저에 표시 된 웹 페이지의 활성 컨트롤 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-938">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the control with the specified ID string the active control in the Web page displayed by the browser.</span></span> <span data-ttu-id="f078d-939"><xref:System.Web.UI.Page.SetFocus%2A> 클라이언트에 렌더링 하기 위한 준비 페이지 메서드를 호출 해야는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-939">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-940"><xref:System.Web.UI.Page.SetFocus%2A> 메서드 ECMAScript 버전 1.3 이상을 지 원하는 브라우저 에서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-940">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-941">다음 코드 예제에서는 웹 페이지에 두 번째 텍스트 상자에 포커스를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-941">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-942">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-942">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-943">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-943">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-944">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-944">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbyidcs.aspx#1)]
 [!code-aspx-vb[PageSetFocus#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbyidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-945">
            <paramref name="clientID" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-945">
              <paramref name="clientID" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-946">컨트롤이 Web Forms 페이지에 속해 있지 않을 때 <see cref="M:System.Web.UI.Page.SetFocus(System.String)" />가 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-946">
              <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="f078d-947">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-947">\- or -</span>
          </span>
          <span data-ttu-id="f078d-948">
            <see cref="M:System.Web.UI.Page.SetFocus(System.String)" />가 <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트 다음에 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-948">
              <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-949">포커스를 받을 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-949">The control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-950">브라우저 포커스를 지정된 컨트롤로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-950">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-951">사용 된 <xref:System.Web.UI.Page.SetFocus%2A> 메서드를 브라우저에 표시 된 웹 페이지의 활성 컨트롤로 지정된 된 컨트롤을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-951">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the specified control the active control on the Web page displayed by the browser.</span></span> <span data-ttu-id="f078d-952"><xref:System.Web.UI.Page.SetFocus%2A> 클라이언트에 렌더링 하기 위한 준비 페이지 메서드를 호출 해야는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-952">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-953"><xref:System.Web.UI.Page.SetFocus%2A> 메서드 ECMAScript 버전 1.3 이상을 지 원하는 브라우저 에서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-953">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-954">다음 코드 예제에서는 웹 페이지에 두 번째 텍스트 상자에 포커스를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-954">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-955">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-955">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-956">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-956">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-957">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-957">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbycontrolcs.aspx#2)]
 [!code-aspx-vb[PageSetFocus#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbycontrolvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-958">
            <paramref name="control" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-958">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-959">컨트롤이 Web Forms 페이지에 속해 있지 않을 때 <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />가 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-959">
              <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="f078d-960">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-960">\- or -</span>
          </span>
          <span data-ttu-id="f078d-961">
            <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />가 <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트 다음에 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-961">
              <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipFormActionValidation">
      <MemberSignature Language="C#" Value="public bool SkipFormActionValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipFormActionValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SkipFormActionValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipFormActionValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipFormActionValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-962">쿼리 문자열 값의 유효성을 검사할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-962">Gets or sets a value that indicates whether the query string value is validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-963">쿼리 문자열 유효성 검사를 생략해야 하는 경우(쿼리 문자열의 유효성을 검사해서는 안 되는 경우) <see langword="true" />이며, 그렇지 않고 쿼리 문자열 유효성 검사를 보통 때처럼 수행해야 하는 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-963">
              <see langword="true" /> if query string validation should be skipped (the query string should not be validated); otherwise, <see langword="false" /> if query string validation should take place as normal.</span>
          </span>
          <span data-ttu-id="f078d-964">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-964">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is Page.SetFocus and Page.MaintainScrollPositionOnPostBack. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-965">스마트 탐색이 사용되도록 설정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-965">Gets or sets a value indicating whether smart navigation is enabled.</span>
          </span>
          <span data-ttu-id="f078d-966">이 속성은 사용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-966">This property is deprecated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-967">스마트 탐색을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-967">
              <see langword="true" /> if smart navigation is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-968">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-968">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-969">설정의 `SmartNavigation` 특성을 `true` .aspx 파일 지시문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-969">Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-970">페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-970">When the page is requested, the dynamically generated class sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-971">Asp.net 버전 2.0에는 <xref:System.Web.UI.Page.SmartNavigation%2A> 속성은 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-971">In ASP.NET version 2.0, the <xref:System.Web.UI.Page.SmartNavigation%2A> property is deprecated.</span></span> <span data-ttu-id="f078d-972">사용 하 여 <xref:System.Web.UI.Page.SetFocus%2A> 메서드 및 <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-972">Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.</span></span>  
  
 <span data-ttu-id="f078d-973">Microsoft Internet Explorer 5.5 브라우저 또는 이후, 스마트 탐색 하 여 페이지를 요청할 때 다음을 수행 하 여 페이지의 사용자 환경을 향상 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-973">When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:</span></span>  
  
-   <span data-ttu-id="f078d-974">탐색에 의해 발생 하는 플래시를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-974">Eliminating the flash caused by navigation.</span></span>  
  
-   <span data-ttu-id="f078d-975">페이지를 이동할 때 스크롤 위치를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-975">Persisting the scroll position when moving from page to page.</span></span>  
  
-   <span data-ttu-id="f078d-976">탐색 요소 포커스를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-976">Persisting element focus between navigations.</span></span>  
  
-   <span data-ttu-id="f078d-977">브라우저의 기록에서 마지막 페이지 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-977">Retaining only the last page state in the browser's history.</span></span>  
  
 <span data-ttu-id="f078d-978">스마트 탐색은 가장 반환이 크게 변경 되지 않는 시각적 콘텐츠 하지만 자주 다시 게시 해야 하는 ASP.NET 페이지에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-978">Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.</span></span> <span data-ttu-id="f078d-979">이 속성을 설정할 것인지 결정할 때이 점을 고려해 야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-979">Consider this carefully when deciding whether to set this property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.SetFocus" />
        <altmember cref="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public virtual string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-980">페이지 수명 주기에서 일찍 페이지에 적용되는 테마의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-980">Gets or sets the name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-981">페이지 수명 주기에서 일찍 페이지에 적용되는 테마의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-981">The name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-982">이 속성은 css 스타일 시트 ()에 직접 참조 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-982">This property does not refer directly to a cascading style sheet (CSS).</span></span> <span data-ttu-id="f078d-983">속성에는 그 안에 CSS 파일을 포함할 수 있는 ASP.NET 테마의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-983">The property contains the name of an ASP.NET theme, which can  include CSS files within it.</span></span>  
  
 <span data-ttu-id="f078d-984"><xref:System.Web.UI.Page.StyleSheetTheme%2A> 속성 페이지 수명 주기의 초기 단계에서 한 페이지에 적용 되는 테마의 이름을 지정 하는 반면는 <xref:System.Web.UI.Page.Theme%2A> 속성 페이지 수명 주기의 뒷부분에 나오는 페이지에 적용 되는 테마의 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-984">The <xref:System.Web.UI.Page.StyleSheetTheme%2A> property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle.</span></span> <span data-ttu-id="f078d-985">즉, 페이지 설정에 스타일 시트 테마의 설정 보다 우선을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-985">This means that settings on the page take precedence over settings in the style sheet theme.</span></span> <span data-ttu-id="f078d-986">자세한 내용은 참조 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-986">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="f078d-987">일반적으로 page 지시문에서 또는 속성을 재정의 하 여이 속성에 대 한 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-987">You typically set a value for this property in the page directive or by overriding the property.</span></span> <span data-ttu-id="f078d-988">내용은 다음 항목을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-988">For information, see the following topics:</span></span>  
  
-   [<span data-ttu-id="f078d-989">방법: ASP.NET 테마를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-989">How to: Apply ASP.NET Themes</span></span>](http://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe)  
  
-   <span data-ttu-id="f078d-990">[방법: ASP.NET 테마를 프로그래밍 방식으로 적용](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span><span class="sxs-lookup"><span data-stu-id="f078d-990">[How to: Apply ASP.NET Themes Programmatically](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-991">
            <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> 메서드가 이미 호출된 후 <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> 속성을 설정하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-991">An attempt was made to set the <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> property after the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-992">
            <see cref="P:System.Web.UI.Page.StyleSheetTheme" />이 잘못된 테마 이름으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-992">
              <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> is set to an invalid theme name.</span>
          </span>
          <span data-ttu-id="f078d-993">속성 setter에 의해서가 아니라 <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> 메서드가 호출되면 이 예외가 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-993">This exception is thrown when the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method is called, not by the property setter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Theme" />
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public virtual string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-994">페이지 테마의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-994">Gets or sets the name of the page theme.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-995">페이지 테마의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-995">The name of the page theme.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-996"><xref:System.Web.UI.Page.Theme%2A> 속성 페이지에 대해 사용 되는 테마의 이름을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-996">The <xref:System.Web.UI.Page.Theme%2A> property sets the name of the theme used for the page.</span></span> <span data-ttu-id="f078d-997">테마의 설정 보다 우선 하도록 페이지에 설정 하려는 경우 사용 된 <xref:System.Web.UI.Page.StyleSheetTheme%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-997">If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property.</span></span> <span data-ttu-id="f078d-998">자세한 내용은 참조 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-998">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="f078d-999"><xref:System.Web.UI.Page.Theme%2A> 이전에 속성을 설정 해야는 <xref:System.Web.UI.Page.PreInit> 이벤트를 설정은 <xref:System.Web.UI.Page.Theme%2A> 후는 <xref:System.Web.UI.Page.PreInit> 이벤트 하면는 <xref:System.InvalidOperationException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-999">The <xref:System.Web.UI.Page.Theme%2A> property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the <xref:System.Web.UI.Page.Theme%2A> property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="f078d-1000">지정된 된 테마는 응용 프로그램 또는 전역 테마로 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1000">The specified theme must exist as either an application or a global theme.</span></span> <span data-ttu-id="f078d-1001">테마가 없는 경우는 <xref:System.Web.HttpException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1001">If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1002">다음 코드 예제에서는 <xref:System.Web.UI.Page.Theme%2A> 쿼리 문자열에 전달 된 속성을 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1002">The following code example sets the <xref:System.Web.UI.Page.Theme%2A> property to a name passed in the query string.</span></span>  
  
 [!code-csharp[PageTheme#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageTheme/CS/pagethemecs.aspx#1)]
 [!code-vb[PageTheme#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageTheme/VB/pagethemevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-1003">
            <see cref="P:System.Web.UI.Page.Theme" /> 이벤트가 발생한 후 <see cref="E:System.Web.UI.Page.PreInit" />를 설정하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1003">An attempt was made to set <see cref="P:System.Web.UI.Page.Theme" /> after the <see cref="E:System.Web.UI.Page.PreInit" /> event has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-1004">
            <see cref="P:System.Web.UI.Page.Theme" />이 잘못된 테마 이름으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1004">
              <see cref="P:System.Web.UI.Page.Theme" /> is set to an invalid theme name.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1005">페이지의 제목을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1005">Gets or sets the title for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1006">페이지의 제목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1006">The title of the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1007">사용 하 여는 <xref:System.Web.UI.Page.Title%2A> 속성을 요청 하는 브라우저에 전달 된 HTML 헤더에서 페이지 제목을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1007">Use the <xref:System.Web.UI.Page.Title%2A> property to set the page title in the HTML header sent to the requesting browser.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-1008">페이지는 `head` 요소는 특성이 있는 `runat="server"`, 그렇지 않으면 제목 렌더링 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1008">The page must contain a `head` element that has the attribute `runat="server"`, otherwise the title will not render.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-1009">
            <see cref="P:System.Web.UI.Page.Title" /> 속성에 페이지의 헤더 컨트롤이 필요한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1009">The <see cref="P:System.Web.UI.Page.Title" /> property requires a header control on the page.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTitle" />
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1010">현재 웹 요청에 대한 <see cref="T:System.Web.TraceContext" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1010">Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1011">현재 웹 요청에 대해 <see cref="T:System.Web.TraceContext" /> 개체에서 가져온 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1011">Data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1012">추적을 추적 하 고 웹 요청에 대 한 실행 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1012">Tracing tracks and presents the execution details about a Web request.</span></span> <span data-ttu-id="f078d-1013">렌더링된 된 페이지에 표시 되도록 추적 데이터에 대 한 응용 프로그램 또는 페이지 수준에서 추적을 활성화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1013">For trace data to be visible in a rendered page, you must enable tracing at the page or application level.</span></span>  
  
 <span data-ttu-id="f078d-1014">추적은 페이지에는 기본적으로 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1014">Tracing on a page is disabled by default.</span></span> <span data-ttu-id="f078d-1015">지시문을 사용 하는 페이지에 대 한 추적을 사용 하려면 `<% @ Page trace="true" %>`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1015">To enable tracing for a page, use the  directive `<% @ Page trace="true" %>`.</span></span> <span data-ttu-id="f078d-1016">전체 응용 프로그램에 대 한 추적을 사용 하려면 응용 프로그램의 구성 파일, 응용 프로그램의 루트 디렉터리에 있는 Web.config에에서 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1016">To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="f078d-1017">자세한 내용은 참조 [ASP.NET 추적 개요](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1017">For more information, see [ASP.NET Tracing Overview](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1018">다음 코드 예제에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> 속성 및 <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> 통해 메서드는 <xref:System.Web.UI.Page.Trace%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1018">The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> method through the <xref:System.Web.UI.Page.Trace%2A> property.</span></span> <span data-ttu-id="f078d-1019">이 코드는 호출의 <xref:System.Diagnostics.Trace.Write%2A> 추적 하는 경우에 메서드를 사용할 수는 <xref:System.Web.UI.Page> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1019">This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object.</span></span> <span data-ttu-id="f078d-1020">사용 하지 않는 경우이 코드가 실행 되지 않습니다, 응용 프로그램에 대 한 오버 헤드를 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1020">If it is not enabled, this code will not run, which can help reduce overhead for your application.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Trace#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Trace/CS/trace1cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Trace#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Trace/VB/trace1vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceEnabled">
      <MemberSignature Language="C#" Value="public bool TraceEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1021">
            <see cref="T:System.Web.UI.Page" /> 개체에 대한 추적이 활성화되어 있는지 여부를 나타내는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1021">Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1022">페이지에 대한 추적이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1022">
              <see langword="true" /> if tracing is enabled for the page; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-1023">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1023">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1024">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-1024">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-1025">설정의 `Trace` 특성을 `true` .aspx 파일 지시문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1025">Set the `Trace` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-1026">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1026">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceModeValue" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceModeValue">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceModeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceModeValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceModeValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceModeValue As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceModeValue { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1027">페이지에 추적 문이 표시되는 모드를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1027">Sets the mode in which trace statements are displayed on the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1028">
            <see cref="T:System.Web.TraceMode" /> 열거형 멤버 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1028">One of the <see cref="T:System.Web.TraceMode" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1029">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-1029">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-1030">설정의 `TraceMode` .aspx 파일의 지시어의 경우에 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1030">Set the `TraceMode` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-1031">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1031">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceEnabled" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TransactionMode">
      <MemberSignature Language="C#" Value="protected int TransactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TransactionMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property TransactionMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TransactionMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1032">페이지에 대한 트랜잭션 지원 수준을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1032">Sets the level of transaction support for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1033">
            <see cref="T:System.EnterpriseServices.TransactionOption" /> 열거형 멤버 중 하나를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1033">An integer that represents one of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1034">대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f078d-1034">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f078d-1035">설정의 `Transaction` .aspx 파일의 지시어의 경우에 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1035">Set the `Transaction` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-1036">페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1036">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryUpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1037">값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1037">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1038">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1038">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f078d-1039">모델의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1039">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f078d-1040">모델입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1040">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1041">데이터 바인딩 컨트롤의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1041">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-1042">모델 바인딩이 성공적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1042">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1043">데이터 바인딩된 컨트롤의 지정 된 메서드에서만이 메서드를 호출 해야 `UpdateMethod` 또는 `InsertMethod` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1043">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="f078d-1044">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1044">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f078d-1045">모델의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1045">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f078d-1046">모델입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1046">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="f078d-1047">값 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1047">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1048">지정된 값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1048">Updates the model instance using values from the specified value provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f078d-1049">모델 바인딩이 성공적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1049">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1050">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1050">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public string UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UICulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UICulture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1051">페이지와 관련된 <see cref="T:System.Threading.Thread" /> 개체의 UI(사용자 인터페이스) ID를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1051">Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1052">UI ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1052">The UI ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1053">이 속성은에 대 한 바로 가기는 <xref:System.Threading.Thread.CurrentThread%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1053">This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property.</span></span> <span data-ttu-id="f078d-1054">문화권 속성은 실행 중인 스레드 속성</span><span class="sxs-lookup"><span data-stu-id="f078d-1054">The culture is a property of the executing thread</span></span>  
  
 <span data-ttu-id="f078d-1055">설정의 `UICulture` .aspx 파일의 지시어의 경우에 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1055">Set the `UICulture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f078d-1056">페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1056">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="f078d-1057">값을 명시적으로 설정할 수 또한는 <xref:System.Web.UI.Page.UICulture%2A> 속성에는 Web.config 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1057">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.UICulture%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
      </Docs>
    </Member>
    <Member MemberName="UniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="protected internal virtual string UniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property UniqueFilePathSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ UniqueFilePathSuffix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1058">브라우저 캐싱을 위해 파일 경로에 추가할 고유 접미사를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1058">Gets a unique suffix to append to the file path for caching browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1059">파일 경로에 추가되는 고유 접미사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1059">A unique suffix appended to the file path.</span>
          </span>
          <span data-ttu-id="f078d-1060">기본값은 "__ufps="와 고유한 6자리 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1060">The default is "__ufps=" plus a unique 6-digit number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1061"><xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> 속성 브라우저 캐시에 필요한 경우 파일 경로의 끝에 추가 되는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1061">The <xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> property returns a string that is appended to the end of a file path when required for caching browsers.</span></span> <span data-ttu-id="f078d-1062">특정 요청과 관련 된 파일 경로 확인 하는 문자열이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1062">The string is used to identify the file path associated with a specific request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnobtrusiveValidationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UnobtrusiveValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UnobtrusiveValidationMode As UnobtrusiveValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UnobtrusiveValidationMode UnobtrusiveValidationMode { System::Web::UI::UnobtrusiveValidationMode get(); void set(System::Web::UI::UnobtrusiveValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UnobtrusiveValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1063">눈에 띄지 않는 JavaScript가 클라이언트 쪽 유효성 검사를 수행할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1063">Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1064">눈에 띄지 않는 JavaScript가 사용되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1064">
              <see langword="true" /> if unobtrusive JavaScript is used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void UnregisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-1065">컨트롤 상태의 지속을 중지할 <see cref="T:System.Web.UI.Control" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1065">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1066">지정된 컨트롤에 대한 컨트롤 상태의 지속을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1066">Stops persistence of control state for the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1067">컨트롤 상태를 사용 하는 사용자 지정 서버 컨트롤을 호출 해야 합니다는 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 전에 각 요청에는 상태가 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1067">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted.</span></span> <span data-ttu-id="f078d-1068">컨트롤 상태에 대 한 등록 동안 지연 되지 않습니다을 통해 요청에서 요청에 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1068">Registration for control state is not carried over from request to request during a postback.</span></span> <span data-ttu-id="f078d-1069">사용 된 <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> 메서드를 더 이상 포스트백에 대해 유지 해야 하는 컨트롤에 대 한 제어 상태가 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1069">Use the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.</span></span>  
  
 <span data-ttu-id="f078d-1070">내부적으로 <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> 사용 하는 경우 메서드가 호출 되는 <xref:System.Web.UI.Control.RemovedControl%2A> controls 컬렉션에서 컨트롤을 제거 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-1070">Internally, the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f078d-1071">
            <see cref="T:System.Web.UI.Control" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1071">The <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1072">값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1072">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1073">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1073">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f078d-1074">모델의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1074">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f078d-1075">모델입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1075">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1076">데이터 바인딩 컨트롤의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1076">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1077">데이터 바인딩된 컨트롤의 지정 된 메서드에서만이 메서드를 호출 해야 `UpdateMethod` 또는 `InsertMethod` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1077">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="f078d-1078">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1078">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f078d-1079">모델의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1079">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f078d-1080">모델입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1080">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="f078d-1081">값 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1081">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1082">지정된 값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1082">Updates the specified model instance using values from a specified value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1083">Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1083">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1084">페이지를 요청하는 사용자에 대한 정보를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1084">Gets information about the user making the page request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1085">페이지를 요청하는 사용자를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1085">An <see cref="T:System.Security.Principal.IPrincipal" /> that represents the user making the page request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1086"><xref:System.Security.Principal.IPrincipal> 개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1086">An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 <span data-ttu-id="f078d-1087">이 속성에 사용 되는 <xref:System.Web.HttpContext> 개체의 <xref:System.Web.HttpContext.User%2A> 요청이 발생 한 위치를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1087">This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1088">다음 코드 예제에서는 <xref:System.Web.UI.Page.User%2A> 속성 현재 사용자에 대 한 인증 및 id 정보에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1088">The following code example uses the <xref:System.Web.UI.Page.User%2A> property to access authentication and identity information for the current user.</span></span> <span data-ttu-id="f078d-1089">사용자 인증 되지 않은 경우으로 리디렉션되어 로그인 페이지로 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1089">If the user is not authenticated, it redirects them to a login page.</span></span>  
  
 [!code-csharp[Page_User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_User/CS/page_user.cs.aspx#1)]
 [!code-vb[Page_User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_User/VB/page_user.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1090">페이지에 포함된 유효성 검사 컨트롤이 자신에게 할당된 정보의 유효성을 검사하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1090">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1091">페이지에 포함된 유효성 검사 컨트롤이 자신에게 할당된 정보의 유효성을 검사하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1091">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1092">ASP.NET 서버 컨트롤을 클릭할 때이 메서드가 호출 되는 `CausesValidation` 속성이로 설정 `true`, 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1092">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="f078d-1093">여기에 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton> 웹 서버 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, 및 <xref:System.Web.UI.HtmlControls.HtmlButton> HTML 서버 컨트롤 및 컨트롤의 같은서버에다시자동으로게시할수있는<xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, 및 <xref:System.Web.UI.WebControls.BulletedList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1093">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="f078d-1094">단추 컨트롤의 설정 페이지에서 모든 단추 컨트롤에 대 한 유효성 검사를 사용 하지 않으려면 `CausesValidation` 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1094">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="f078d-1095">유효성 검사 컨트롤에 포함 된 반복이 메서드가 호출 되 면는 <xref:System.Web.UI.ValidatorCollection> 연관 된 개체는 <xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> 속성 및 현재 유효성 검사 그룹의 각 유효성 검사 컨트롤에 대 한 유효성 검사 논리를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1095">When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> property and invokes the validation logic for each validation control in the current validation group.</span></span> <span data-ttu-id="f078d-1096">유효성 검사 그룹 페이지를 서버에 게시 하는 컨트롤에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1096">The validation group is determined by the control that posted the page to the server.</span></span> <span data-ttu-id="f078d-1097">유효성 검사 그룹이 지정 된 경우 유효성 검사 그룹이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1097">If no validation group is specified, then no validation group is used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-1098">페이지 유효성 검사 동작이 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1098">The behavior of page validation has changed.</span></span> <span data-ttu-id="f078d-1099">[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], 더 이상 호출을 제어는 <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> 방법으로, 이러한 사용의 <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1099">In [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], controls no longer call the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="f078d-1100">사용 하는 경우는 <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> 에서 메서드는 [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] 페이지에서 유효성 검사 그룹은 무시 되 고 모든 컨트롤에 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1100">If you use the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method on an [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1101">다음 코드 예제에서는 <xref:System.Web.UI.Page.Validate%2A> 메서드 서로 다른 유효성 검사 그룹이 시나리오의 페이지를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1101">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-1102">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1102">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-1103">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1103">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-1104">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-1104">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f078d-1105">
              <see cref="M:System.Web.UI.Page.Validate" /> 에서 메서드를 사용 하지 않는 [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-1105">The <see cref="M:System.Web.UI.Page.Validate" /> method is not used by [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)].</span>
            </span>
            <span data-ttu-id="f078d-1106">사용 하는 [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], 재정의 <see cref="M:System.Web.UI.Page.Validate(System.String)" /> 페이지 유효성 검사 동작을 변경 하려면 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f078d-1106">When you are using [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], override the <see cref="M:System.Web.UI.Page.Validate(System.String)" /> method to change page validation behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (validationGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="f078d-1107">유효성을 검사할 컨트롤의 유효성 검사 그룹 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1107">The validation group name of the controls to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1108">지정된 유효성 검사 그룹의 유효성 검사 컨트롤이 할당된 정보의 유효성을 검사하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1108">Instructs the validation controls in the specified validation group to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1109">ASP.NET 서버 컨트롤을 클릭할 때이 메서드가 호출 되는 `CausesValidation` 속성이로 설정 `true`, 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1109">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="f078d-1110">여기에 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton> 웹 서버 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, 및 <xref:System.Web.UI.HtmlControls.HtmlButton> HTML 서버 컨트롤 및 컨트롤의 같은서버에다시자동으로게시할수있는<xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, 및 <xref:System.Web.UI.WebControls.BulletedList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1110">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="f078d-1111">단추 컨트롤의 설정 페이지에서 모든 단추 컨트롤에 대 한 유효성 검사를 사용 하지 않으려면 `CausesValidation` 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1111">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="f078d-1112"><xref:System.Web.UI.Page.Validate%2A> 메서드는 지정 된 유효성 검사 그룹의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1112">The <xref:System.Web.UI.Page.Validate%2A> method validates the specified validation group.</span></span> <span data-ttu-id="f078d-1113">호출한 후의 <xref:System.Web.UI.Page.Validate%2A> 유효성 검사 그룹에 대 한 메서드는 <xref:System.Web.UI.Page.IsValid%2A> 메서드는 반환 `true` 지정 된 유효성 검사 그룹 및 페이지를 서버에 게시 하는 컨트롤의 유효성 검사 그룹을 모두 사용할 수 있는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1113">After calling the <xref:System.Web.UI.Page.Validate%2A> method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1114">다음 코드 예제에서는 <xref:System.Web.UI.Page.Validate%2A> 메서드 서로 다른 유효성 검사 그룹이 시나리오의 페이지를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1114">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f078d-1115">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1115">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f078d-1116">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1116">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f078d-1117">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f078d-1117">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1118">잠재적으로 위험한 값이 있는지 확인하기 위해 페이지에서 브라우저의 클라이언트 입력을 검사하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1118">Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1119">페이지가 클라이언트 입력을 확인하는지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1119">A value that indicates whether the page checks client input.</span>
          </span>
          <span data-ttu-id="f078d-1120">기본값은 <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1120">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1121">값 <xref:System.Web.UI.ValidateRequestMode.Inherit> 에서 사용 되지 않습니다는 <xref:System.Web.UI.Page> 클래스에서 상속 하는 것이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1121">The value <xref:System.Web.UI.ValidateRequestMode.Inherit> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Validators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection Validators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ValidatorCollection Validators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Validators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validators As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidatorCollection ^ Validators { System::Web::UI::ValidatorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1122">요청된 페이지에 들어 있은 모든 유효성 검사 컨트롤의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1122">Gets a collection of all validation controls contained on the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1123">유효성 검사 컨트롤의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1123">The collection of validation controls.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1124">이 속성을 사용 하 여 메서드 및 속성을 조작는 <xref:System.Web.UI.ValidatorCollection> 개체와 현재 연결 된 <xref:System.Web.UI.Page> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="f078d-1124">You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="f078d-1125">이 컬렉션 페이지에 포함 된 모든 유효성 검사 서버 컨트롤을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1125">This collection contains all the validation server controls that are contained in a page.</span></span>  
  
 <span data-ttu-id="f078d-1126">호출 된 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 메서드를 사용 하면 유효성 검사 논리를 현재 유효성 검사 그룹의 각 유효성 검사 서버 컨트롤에 대해 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1126">Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method causes validation logic to be executed for each validation server control in the current validation group.</span></span> <span data-ttu-id="f078d-1127">이러한 컨트롤 통과 하지 않으면는 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 속성에서 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1127">If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property returns `false`.</span></span>  
  
 <span data-ttu-id="f078d-1128">유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 유효성 검사 컨트롤](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1128">For more information on validation controls, see [ASP.NET Validation Controls](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyRenderingInServerForm">
      <MemberSignature Language="C#" Value="public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyRenderingInServerForm(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void VerifyRenderingInServerForm(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f078d-1129">
            <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤에 필요한 ASP.NET 서버 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1129">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f078d-1130">
            <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤이 런타임에 지정된 ASP.NET 서버 컨트롤에 렌더링되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1130">Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1131">내부에 필요한 컨트롤을 `<form runat=server>` 태그 렌더링 되는 태그 밖에 배치 되는 경우 오류 메시지를 표시 하기 전에이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1131">Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags.</span></span> <span data-ttu-id="f078d-1132">다시 게시 또는 등록 된 스크립트 블록에 종속 하는 컨트롤의 재정의에이 메서드를 호출 해야는 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-1132">Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f078d-1133">다른 방식으로 서버 form 요소를 렌더링 된 페이지 다양 한 상황에서 예외를 throw 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1133">Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.</span></span>  
  
 <span data-ttu-id="f078d-1134">다시 게시 하거나 클라이언트 쪽 스크립트를 사용 하는 서버 컨트롤에 포함 되지 않는 경우 작동 하지 것입니다는 <xref:System.Web.UI.HtmlControls.HtmlForm> 서버 컨트롤 (<`form runat="server">`) 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1134">Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat="server">`) tags.</span></span> <span data-ttu-id="f078d-1135">이러한 컨트롤에 포함 되지 않는 경우 오류 메시지를 제공 렌더링 될 때이 메서드를 호출할 수는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1135">These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 <span data-ttu-id="f078d-1136">일반적으로 재정의 하는 경우이 메서드를 호출은 사용자 지정 서버 컨트롤을 개발 하는 경우는 `Render` 모든 종류의 입력된 태그에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-1136">When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag.</span></span> <span data-ttu-id="f078d-1137">이 입력된 컨트롤을 호출 하는 경우에 특히 중요 <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, 클라이언트 스크립트를 내보내는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1137">This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script.</span></span> <span data-ttu-id="f078d-1138">복합 서버 컨트롤이이 호출을 만들 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1138">A composite server control does not need to make this call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f078d-1139">다음 코드 예제에서는 재정의 <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> 사용자 지정 서버 컨트롤의 메서드.</span><span class="sxs-lookup"><span data-stu-id="f078d-1139">The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> method of a custom server control.</span></span> <span data-ttu-id="f078d-1140">페이지에 해당 콘텐츠를 작성 하는이 컨트롤을 사용 하 여는 <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> 여는 태그와 닫는 태그 사이 컨트롤이 표시 되는지 확인 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1140">When this control writes its content to a page, it uses the <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#3)]
 [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/vb/testlinkbutton.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-1141">지정된 서버 컨트롤이 런타임에 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 서버 컨트롤의 여는 태그와 닫는 태그 사이에 포함되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1141">The specified server control is not contained between the opening and closing tags of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control at run time.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f078d-1142">확인할 컨트롤이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1142">The control to verify is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1143">뷰 상태의 암호화 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1143">Gets or sets the encryption mode of the view state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1144">
            <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1144">One of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> values.</span>
          </span>
          <span data-ttu-id="f078d-1145">기본값은 <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1145">The default value is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1146"><xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 코드에서 속성을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1146">The <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property cannot be set in code.</span></span> <span data-ttu-id="f078d-1147">지시문만 설정할 수는 < 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1147">It can only be set in the  directive or in the < element of the configuration file.</span></span> <span data-ttu-id="f078d-1148">값이 구성 파일에 설정 된 값 지시문 재정의 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1148">Values set in the  directive override any values set in the configuration file.</span></span>  
  
 <span data-ttu-id="f078d-1149">지시문에이 속성을 설정 하기 위한 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1149">The syntax for setting this property in the  directive is as follows:</span></span>  
  
```vb  
<%@ Page Language="VB" ViewStateEncryptionMode="Always" %>  
```  
  
```csharp  
<%@ Page Language="C#" ViewStateEncryptionMode="Always" %>  
```  
  
 <span data-ttu-id="f078d-1150">구성 파일에서이 속성을 설정 하기 위한 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1150">The syntax for setting this property in the configuration file is as follows:</span></span>  
  
```vb  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
```csharp  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
 <span data-ttu-id="f078d-1151">사용자 지정 컨트롤 개발자가 해당 컨트롤의 뷰 상태에 잠재적으로 중요 한 데이터를 저장 하기 전에 코드에서이 속성의 값을 확인 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1151">Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f078d-1152">값 집합이 <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 열거형의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1152">The value set is not a member of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f078d-1153">
            <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> 속성을 페이지 수명 주기의 페이지 <see langword="PreRender" />단계 또는 그 이전에만 설정이 가능합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1153">The <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property can be set only in or before the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateUserKey">
      <MemberSignature Language="C#" Value="public string ViewStateUserKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateUserKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateUserKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateUserKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateUserKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1154">현재 페이지와 관련된 뷰 상태 변수에서 개별 사용자에 대한 식별자를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1154">Assigns an identifier to an individual user in the view-state variable associated with the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1155">개별 사용자에 대한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1155">The identifier for the individual user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f078d-1156">설정의 <xref:System.Web.UI.Page.ViewStateUserKey%2A> 속성 악의적인 사용자 로부터 응용 프로그램에 대 한 공격을 방지 하는 데 도움이 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1156">Setting the <xref:System.Web.UI.Page.ViewStateUserKey%2A> property can help you prevent attacks on your application from malicious users.</span></span> <span data-ttu-id="f078d-1157">공격을 생성 하는 변수를 사용할 수 없습니다 있도록 식별자 개별 사용자에 대 한 뷰 상태 변수를 할당할 수 있도록 하 여 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1157">It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.</span></span> <span data-ttu-id="f078d-1158">것을 방지 하기 위해 수행할 수 있는 작업 및 웹 공격에 대 한 자세한 내용은 참조 하십시오. [걸릴 이점은의 ASP.NET 기본 제공 기능을 웹 공격 오프 지금](http://go.microsoft.com/fwlink/?LinkId=163557)합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1158">For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557).</span></span>  
  
 <span data-ttu-id="f078d-1159">사용자의 인증 이름이 같은 모든 문자열 값으로이 속성을 설정할 수 있습니다 또는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1159">You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f078d-1160">중에이 속성을 설정 해야 합니다는 `Page_Init` 페이지 처리의 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1160">You must set this property during the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="f078d-1161">설정 중에이 속성의 `Page_Load` 단계 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1161">Setting this property during the `Page_Load` phase throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f078d-1162">페이지 처리 중에 <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> 속성이 너무 늦게 액세스된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1162">The <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> property was accessed too late during page processing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f078d-1163">
            <see cref="T:System.Web.UI.Page" /> 개체가 렌더링되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1163">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object is rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f078d-1164">
            <see cref="T:System.Web.UI.Page" />가 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1164">
              <see langword="true" /> if the <see cref="T:System.Web.UI.Page" /> is to be rendered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f078d-1165">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f078d-1165">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f078d-1166">다음 예에서는 <xref:System.Web.UI.Page.Visible%2A> 속성을 `false` 페이지의 렌더링 된 내용을 숨길 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1166">The following example sets the <xref:System.Web.UI.Page.Visible%2A> property to `false` to hide the rendered content of a page.</span></span> <span data-ttu-id="f078d-1167">이 페이지를 처음 요청할 때 데이터 원본은 채워지며 페이지에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1167">When this page is first requested, a data source is populated and displayed in the page.</span></span> <span data-ttu-id="f078d-1168">사용자가 단추를 클릭할 때는 `HideButton_Click` 이벤트 처리기는 페이지의 콘텐츠를 렌더링 된 전체를 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="f078d-1168">When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.</span></span>  
  
 [!code-csharp[Page_Visible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_Visible/CS/page_visible.cs.aspx#1)]
 [!code-vb[Page_Visible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_Visible/VB/page_visible.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.TemplateControl" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
  </Members>
</Type>