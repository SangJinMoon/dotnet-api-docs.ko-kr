<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PageStatePersister.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58088aa9ec9624ae83238fa8fc2f4457413effd55.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8088aa9ec9624ae83238fa8fc2f4457413effd55</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageStatePersister">
          <source>Provides the base functionality for ASP.NET view state persistence mechanisms.</source>
          <target state="translated">ASP.NET 뷰 상태 유지 메커니즘의 기본 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The HTTP requests and responses are inherently stateless.</source>
          <target state="translated">HTTP 요청 및 응답은 기본적으로 상태 비저장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>To maintain state information between HTTP requests, ASP.NET server pages can store <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> state.</source>
          <target state="translated">ASP.NET 서버 페이지 HTTP 요청 간의 상태 정보를 유지 하기 위해 저장할 수 <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> 상태입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.</source>
          <target state="translated">이 상태 이면 보기 상태 라는 페이지와 제어 설정 및 데이터 페이지 및 컨트롤 있는 것 처럼 사용자 보여 준다는 사실을 알았습니다 및 보고 서버에 마지막 라운드트립에서 상호 작용 하는 것과 같은 표시 하는 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Several mechanisms exist to store view state between successive requests to the same page.</source>
          <target state="translated">같은 페이지에 대 한 연속 요청 사이의 뷰 상태를 저장 메커니즘은 여러 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The abstract <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class represents the base class for these state information storage mechanisms.</source>
          <target state="translated">추상 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스는 이러한 상태 정보 저장 메커니즘에 대 한 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the <ph id="ph1">`type`</ph> attribute set to <ph id="ph2">`"hidden"`</ph>) on the page.</source>
          <target state="translated">ASP.NET의 기본 뷰 상태 지 속성 메커니즘이 숨겨진된 HTML 요소에 Base64 인코딩 문자열로 상태 정보를 유지 하는 것 (인 요소는 <ph id="ph1">`type`</ph> 특성이로 설정 <ph id="ph2">`"hidden"`</ph>) 페이지.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>An ASP.NET page uses a <ph id="ph1">&lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt;</ph> object to perform this work, using an <ph id="ph2">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> instance to serialize and deserialize object state information.</source>
          <target state="translated">ASP.NET 페이지를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt;</ph> 개체의이 작업을 사용 하 여 작동는 <ph id="ph2">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 인스턴스를 직렬화 하 고 개체 상태 정보를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Alternately, you can store the view state for your pages in the <ph id="ph1">&lt;xref:System.Web.HttpContext.Session%2A&gt;</ph> object on the server using the <ph id="ph2">&lt;xref:System.Web.UI.SessionPageStatePersister&gt;</ph> class for mobile clients with limited bandwidth and resources.</source>
          <target state="translated">또는 사용자 페이지에 대 한 뷰 상태를 저장할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpContext.Session%2A&gt;</ph> 사용 하 여 서버에서 개체는 <ph id="ph2">&lt;xref:System.Web.UI.SessionPageStatePersister&gt;</ph> 모바일 클라이언트 제한 된 대역폭 및 리소스에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>In some cases, you might disable view state persistence altogether.</source>
          <target state="translated">경우에 따라 뷰 상태 유지를 완전히 비활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.</source>
          <target state="translated">이 작업을 수행 하는 경우 결과 경우에 따라 페이지 및 컨트롤 상태 지 속성을 사용 하는 올바르게 작동 하지 않을 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>For more information about page state management and view state, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.</source>
          <target state="translated">페이지 상태 관리 및 보기 상태에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 상태 관리 개요<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>If you are writing controls, you can store state information for the controls in the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> dictionary, which is a <ph id="ph2">&lt;xref:System.Web.UI.StateBag&gt;</ph> object.</source>
          <target state="translated">컨트롤을 작성 하는 경우 컨트롤에 대 한 상태 정보를 저장할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 사전에는 <ph id="ph2">&lt;xref:System.Web.UI.StateBag&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>A developer would retrieve the control state through the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property.</source>
          <target state="translated">개발자를 통해 컨트롤 상태를 검색 하는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>You assign keys and values to the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property, and the <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> object serializes the state information between requests.</source>
          <target state="translated">키와 값을 할당는 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> 개체가 요청 간의 상태 정보를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>To perform custom state handling in your control, override the <ph id="ph1">&lt;xref:System.Web.UI.Control.LoadViewState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveViewState%2A&gt;</ph> methods.</source>
          <target state="translated">컨트롤에서 처리 하는 사용자 지정 상태를 수행 하려면 재정의 <ph id="ph1">&lt;xref:System.Web.UI.Control.LoadViewState%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveViewState%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.</source>
          <target state="translated">뷰 상태가 페이지 개발자가 해제 되어이 사전에 저장 된 모든 상태 정보가 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.</source>
          <target state="translated">이 가능성을 줄이려면, asp.net 버전 2.0 컨트롤 상태 라는 별도 개체에서 중요 한 상태 정보를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The control state object is not affected when view state is disabled by a page developer.</source>
          <target state="translated">컨트롤 상태 개체 페이지 개발자가 상태 보기를 비활성화 하는 경우 영향을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Storing state information in the control state object requires that the control override the <ph id="ph1">&lt;xref:System.Web.UI.Control.LoadControlState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveControlState%2A&gt;</ph> methods and that the control be registered to store state information in control state every time the control is initialized.</source>
          <target state="translated">컨트롤 상태 개체에 상태 정보를 저장 하려면 필요 컨트롤을 재정의 하는 <ph id="ph1">&lt;xref:System.Web.UI.Control.LoadControlState%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveControlState%2A&gt;</ph> 메서드 및 상태 정보를 저장 하는 컨트롤에 등록 될 때마다 컨트롤을 초기화할 상태를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>You can register a control to use control state by overriding the <ph id="ph1">&lt;xref:System.Web.UI.Control.OnInit%2A&gt;</ph> method and calling the <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt;</ph> method.</source>
          <target state="translated">재정의 하 여 컨트롤 상태를 사용 하도록 컨트롤을 등록할 수는 <ph id="ph1">&lt;xref:System.Web.UI.Control.OnInit%2A&gt;</ph> 메서드와 호출은 <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 속성 및 컨트롤 상태 컨트롤을 개발할 때 참조 <bpt id="p1">[</bpt>사용자 지정 ASP.NET 서버 컨트롤 개발<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.</source>
          <target state="translated">뷰 상태를 유지 하면 기존 지원할 수 없는 클라이언트 상태 지 속성 메커니즘을 보려면 확장할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스를 직접 보기 상태 지 속성 메서드를 도입 하 고 페이지 어댑터를 사용 하 여 ASP.NET 응용 프로그램을 구성 하려면 페이지가 제공 되는 클라이언트의 종류에 따라 다른 뷰 상태를 유지 하는 메커니즘을 사용 하도록</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class must override the abstract <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> method to store view state and control state in the persistence medium, and override the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method to extract it.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스가 추상 재정의 해야 합니다 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> 중간 규모의 지 속성에서 보기 상태와 컨트롤 상태를 저장 하 고 재정의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 추출 하기 위해 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>If you need to serialize view state and control state to a string, you can use the <ph id="ph1">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> object that is accessed using the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property.</source>
          <target state="translated">뷰 상태와 컨트롤 상태를 문자열로 serialize 해야 하는 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 개체를 사용 하 여 액세스 되는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>It efficiently serializes and deserializes object state information to a Base64-encoded string.</source>
          <target state="translated">효율적으로 또는 그 반대로 serialize 하 고 개체 상태 정보를 Base64 인코딩 문자열을 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>You can also override the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property to supply your own object state serialization mechanism.</source>
          <target state="translated">재정의할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> 속성을 사용자 고유의 개체 상태 직렬화 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The following code example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> object that saves view and control state on the Web server.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 웹 서버에서 보기 및 제어 상태를 저장 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The <ph id="ph1">`StreamPageStatePersister`</ph> demonstrates how to override the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> methods to extract and save view state information.</source>
          <target state="translated"><ph id="ph1">`StreamPageStatePersister`</ph> 재정의 하는 방법을 보여 줍니다.는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> 상태 정보를 추출 하 고 보기를 저장 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the <ph id="ph1">`MyPageAdapter`</ph> class is provided to activate the <ph id="ph2">`StreamPageStatePersister`</ph> for an ASP.NET application.</source>
          <target state="translated">상태 지 속성 메커니즘 자동 선택 렌더링 및 클라이언트 기능에 관련 되어 있으므로 <ph id="ph1">`MyPageAdapter`</ph> 클래스 활성화에 제공 됩니다는 <ph id="ph2">`StreamPageStatePersister`</ph> ASP.NET 응용 프로그램에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Finally, a browser capabilities (.browser) file is provided to enable the <ph id="ph1">`MyPageAdapter`</ph> adapter for a specific class of clients (in this case, the default Web browser).</source>
          <target state="translated">사용할 수 있도록 브라우저 기능 (브라우저) 파일은 제공 하는 마지막으로,는 <ph id="ph1">`MyPageAdapter`</ph> 어댑터 (이 경우 기본 웹 브라우저)에서 클라이언트의 특정 클래스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The following code example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.Adapters.PageAdapter&gt;</ph> class that returns an instance of <ph id="ph2">`StreamPageStatePersister`</ph>, which is used to persist view and control state for an ASP.NET Web page.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.Adapters.PageAdapter&gt;</ph> 클래스의 인스턴스를 반환 하는 <ph id="ph2">`StreamPageStatePersister`</ph>, ASP.NET 웹 페이지에 대 한 상태 보기 및 제어를 유지 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line.</source>
          <target state="translated">다음과 같은 컴파일러 명령줄을 사용 하는 샘플을 실행 하는 데 사용할 수 있는 어셈블리에이 두 클래스를 컴파일하십시오.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Ensure that the compiled assembly is in the \Bin directory underneath the ASP.NET application root.</source>
          <target state="translated">ASP.NET 응용 프로그램 루트 아래의 \Bin 디렉터리에 컴파일된 어셈블리 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>Finally, to enable the <ph id="ph1">`MyPageAdapter`</ph> adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information.</source>
          <target state="translated">마지막으로 사용할 수 있도록는 <ph id="ph1">`MyPageAdapter`</ph> 어댑터, ASP.NET 응용 프로그램 루트 아래에 있는 브라우저 라는 디렉터리를 만들고 구성 정보와 함께 브라우저 파일을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>The <ph id="ph1">`&lt;refid&gt;`</ph> element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file.</source>
          <target state="translated"><ph id="ph1">`&lt;refid&gt;`</ph> 구성 파일의 요소는 구성 Default.browser 구성 파일에서 default 브라우저에 대 한 지정 된 값을 재정의 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageStatePersister">
          <source>In this example, <ph id="ph1">`MyPageAdapter`</ph> is used for ASP.NET Web pages (where normally no adapter is used).</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`MyPageAdapter`</ph> (일반적으로 어댑터가 사용 되는 위치) ASP.NET 웹 페이지에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> that the view state persistence mechanism is created for.</source>
          <target state="translated">뷰 상태 유지 메커니즘이 작성된 대상 <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageStatePersister" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.PageStatePersister" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)">
          <source>The <ph id="ph1">&lt;paramref name="page" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="page" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>Gets or sets an object that represents the data that controls contained by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object use to persist across HTTP requests to the Web server.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 개체에 포함된 컨트롤에서 웹 서버에 대한 HTTP 요청 간에 유지하기 위해 사용하는 데이터를 나타내는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>An object that contains view state data.</source>
          <target state="translated">뷰 상태 데이터가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.</source>
          <target state="translated">컨트롤 상태가 중요 한 뷰 상태 데이터를 웹 서버 컨트롤 필요가 함수 및 기본 보기 상태 정보를 별도 개체에 포함 된 구성 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>Control state data is not affected when view state is disabled at the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> level, but requires extra implementation steps to use.</source>
          <target state="translated">컨트롤 상태 데이터에서 뷰 상태를 비활성화 하는 경우 영향을 받지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> 수준, 데 사용할 단계를 추가로 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>For more information on using the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.</source>
          <target state="translated">사용 하 여 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 속성 및 컨트롤 상태 컨트롤을 개발할 때 참조 <bpt id="p1">[</bpt>사용자 지정 ASP.NET 서버 컨트롤 개발<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>The following code example demonstrates how a class that derives from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class initializes the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 방법에서 파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스를 초기화 하는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property has been assigned to the <ph id="ph2">&lt;xref:System.Web.UI.Pair.Second&gt;</ph> field of a <ph id="ph3">&lt;xref:System.Web.UI.Pair&gt;</ph> object, and serialized using the <ph id="ph4">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> class.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성에 할당 된는 <ph id="ph2">&lt;xref:System.Web.UI.Pair.Second&gt;</ph> 필드는 <ph id="ph3">&lt;xref:System.Web.UI.Pair&gt;</ph> 개체를 사용 하 여 serialize 된 <ph id="ph4">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> class is used to deserialize view state and control state information, and the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property is initialized from the resulting <ph id="ph4">&lt;xref:System.Web.UI.Pair&gt;</ph> object's <ph id="ph5">&lt;xref:System.Web.UI.Pair.Second&gt;</ph> field.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> 클래스 뷰 상태 및 제어 상태 정보를 deserialize 하는 데 사용 됩니다 및 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성은 결과에서 초기화 <ph id="ph4">&lt;xref:System.Web.UI.Pair&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.Web.UI.Pair.Second&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ControlState">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>Overridden by derived classes to deserialize and load persisted state information when a <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object initializes its control hierarchy.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 개체에서 해당 컨트롤 계층을 초기화할 때 유지된 상태 정보를 deserialize하고 로드하기 위해 파생된 클래스에서 재정의합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implement the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method to initialize the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> properties from some persisted format.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스 구현은 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 초기화 하려면 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 일부 지속된 형식에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>The following code example demonstrates how a class that derives from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method to load view state from a persistence medium.</source>
          <target state="translated">다음 코드 예제에서는 방법에서 파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스 구현은 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 메서드를 미디어에서 뷰 상태를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>The <ph id="ph1">`StreamPageStatePersister`</ph> attempts to read data from a stream.</source>
          <target state="translated"><ph id="ph1">`StreamPageStatePersister`</ph> 스트림에서 데이터를 읽으려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>It uses an <ph id="ph1">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> object to deserialize view state data and initialize the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property, which a page uses to initialize controls.</source>
          <target state="translated">사용 하 여 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 뷰 상태 데이터를 deserialize 하 고 초기화 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성 페이지를 사용 하 여 컨트롤을 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Load">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageStatePersister.Page">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object that the view state persistence mechanism is created for.</source>
          <target state="translated">뷰 상태 유지 메커니즘이 작성된 대상 <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.Page">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Web.UI.PageStatePersister" /&gt;</ph> is associated with.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>가 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.PageStatePersister" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.Page">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Page%2A&gt;</ph> property to access the current <ph id="ph2">&lt;xref:System.Web.HttpContext&gt;</ph> object.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Page%2A&gt;</ph> 속성에 현재 액세스 <ph id="ph2">&lt;xref:System.Web.HttpContext&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageStatePersister.Save">
          <source>Overridden by derived classes to serialize persisted state information when a <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object is unloaded from memory.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 개체를 메모리에서 언로드할 때 유지된 상태 정보를 serialize하기 위해 파생된 클래스에서 재정의합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Save">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implement the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> method to persist the contents of the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> properties to a persistence medium.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스 구현에서 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> 의 콘텐츠를 유지 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 미디어에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Save">
          <source>The following code example demonstrates how a class that derives from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> method to persist view state to a persistence medium.</source>
          <target state="translated">다음 코드 예제에서는 방법에서 파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> 메서드 미디어에 뷰 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Save">
          <source>The <ph id="ph1">`StreamPageStatePersister`</ph> uses an <ph id="ph2">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> object to serialize the contents of the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> property and <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`StreamPageStatePersister`</ph> 사용 하 여 프로그램 <ph id="ph2">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 의 내용을 직렬화 할 개체는 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 속성 및 <ph id="ph4">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageStatePersister.Save">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageStatePersister.StateFormatter">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.UI.IStateFormatter" /&gt;</ph> object that is used to serialize and deserialize the state information contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.PageStatePersister.ViewState" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.UI.PageStatePersister.ControlState" /&gt;</ph> properties during calls to the <ph id="ph4">&lt;see cref="M:System.Web.UI.PageStatePersister.Save" /&gt;</ph> and <ph id="ph5">&lt;see cref="M:System.Web.UI.PageStatePersister.Load" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IStateFormatter" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Web.UI.PageStatePersister.ViewState" /&gt;</ph> 메서드를 호출하는 동안 <ph id="ph3">&lt;see cref="P:System.Web.UI.PageStatePersister.ControlState" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="M:System.Web.UI.PageStatePersister.Save" /&gt;</ph> 속성에 포함된 상태 정보를 serialize 및 deserialize하는 데 사용되는 <ph id="ph5">&lt;see cref="M:System.Web.UI.PageStatePersister.Load" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.StateFormatter">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Web.UI.IStateFormatter" /&gt;</ph> that is used to serialize and deserialize object state.</source>
          <target state="translated">개체 상태를 serialize 및 deserialize하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.IStateFormatter" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.StateFormatter">
          <source>You can override the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property to provide your own view state formatter.</source>
          <target state="translated">재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> 속성을 사용자 고유의 뷰 상태 포맷터를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.StateFormatter">
          <source>The following code example demonstrates how a class that derives from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class accesses the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property to retrieve an <ph id="ph3">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> object, which is the default implementation of the <ph id="ph4">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> interface, to serialize view state and control state to a stream.</source>
          <target state="translated">다음 코드 예제에서는 클래스에서 파생 되는 방법의 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 액세스 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> 속성 검색을 <ph id="ph3">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> 기본 구현인 개체의는 <ph id="ph4">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 인터페이스 보기를 직렬화 하는 데 스트림에 상태 및 제어 상태입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.StateFormatter">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>Gets or sets an object that represents the data that controls contained by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object use to persist across HTTP requests to the Web server.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 개체에 포함된 컨트롤에서 웹 서버에 대한 HTTP 요청 간에 유지하기 위해 사용하는 데이터를 나타내는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>An object that contains view state data.</source>
          <target state="translated">뷰 상태 데이터가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>View state is a dictionary of state data that Web server controls need to function and render themselves.</source>
          <target state="translated">뷰 상태가 작동 하 고 렌더링 하는 웹 서버 컨트롤 상태 데이터의 사전입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>Control developers typically access the view state object using the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property.</source>
          <target state="translated">컨트롤 개발자가 일반적으로 사용 하 여 보기 상태 개체에 액세스는 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>View state is affected when view state is disabled at the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> level, and as a result controls might not behave correctly in these scenarios.</source>
          <target state="translated">뷰 상태에서 뷰 상태를 비활성화 하는 경우 영향을 <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> 수준 및 그 결과 컨트롤이 수 올바르게 작동 하지 이러한 시나리오에서 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>For more information on using <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.</source>
          <target state="translated">사용 하 여 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 컨트롤을 개발할 때 상태를 제어 하 고, 참조 <bpt id="p1">[</bpt>사용자 지정 ASP.NET 서버 컨트롤 개발<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>The following code example demonstrates how a class that derives from the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class initializes the <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 방법에서 파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스를 초기화 하는 <ph id="ph2">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> property has been assigned to the <ph id="ph2">&lt;xref:System.Web.UI.Pair.First&gt;</ph> field of a <ph id="ph3">&lt;xref:System.Web.UI.Pair&gt;</ph> object, and serialized using the <ph id="ph4">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> object, which is an instance of the <ph id="ph5">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> interface.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 속성에 할당 된는 <ph id="ph2">&lt;xref:System.Web.UI.Pair.First&gt;</ph> 필드는 <ph id="ph3">&lt;xref:System.Web.UI.Pair&gt;</ph> 개체를 사용 하 여 serialize 된 <ph id="ph4">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> 인스턴스 개체의는 <ph id="ph5">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> 인터페이스.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> interface is used to deserialize view state information, and the <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> property is initialized from the resulting <ph id="ph4">&lt;xref:System.Web.UI.Pair&gt;</ph> object's <ph id="ph5">&lt;xref:System.Web.UI.Pair.First&gt;</ph> field.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Web.UI.ObjectStateFormatter&gt;</ph> 인터페이스가 뷰 상태 정보를 deserialize 하는 데 사용 됩니다 및 <ph id="ph3">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> 속성은 결과에서 초기화 <ph id="ph4">&lt;xref:System.Web.UI.Pair&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.Web.UI.Pair.First&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageStatePersister.ViewState">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>