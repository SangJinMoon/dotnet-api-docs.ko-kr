<Type Name="ControlBuilder" FullName="System.Web.UI.ControlBuilder">
  <TypeSignature Language="C#" Value="public class ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3567a-101">컨트롤과 그 컨트롤에 포함되는 자식 컨트롤을 만들 때 페이지 파서를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-101">Supports the page parser in building a control and the child controls it contains.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-102">기본적으로 모든 컨트롤이 페이지에 연결 되어 있는 기본값 <xref:System.Web.UI.ControlBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-102">By default, every control on a page is associated with a default <xref:System.Web.UI.ControlBuilder> class.</span></span> <span data-ttu-id="3567a-103">구문 분석 중 ASP.NET 페이지 프레임 워크의 트리를 작성 <xref:System.Web.UI.ControlBuilder> 해당 페이지에 대 한 컨트롤의 트리 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-103">During parsing, the ASP.NET page framework builds a tree of <xref:System.Web.UI.ControlBuilder> objects corresponding to the tree of controls for the page.</span></span> <span data-ttu-id="3567a-104"><xref:System.Web.UI.ControlBuilder> 트리는 다음 제어 트리를 만드는 페이지 코드를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-104">The <xref:System.Web.UI.ControlBuilder> tree is then used to generate page code to create the control tree.</span></span> <span data-ttu-id="3567a-105">자식 컨트롤 뿐 아니라는 <xref:System.Web.UI.ControlBuilder> 컨트롤 태그 내에서 콘텐츠를 구문 분석 방법을의 동작을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-105">In addition to child controls, the <xref:System.Web.UI.ControlBuilder> defines the behavior of how the content within control tags is parsed.</span></span> <span data-ttu-id="3567a-106">사용자 고유의 사용자 지정 컨트롤 작성기 클래스를 정의 하 여이 기본 동작을 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-106">You can override this default behavior by defining your own custom control builder class.</span></span> <span data-ttu-id="3567a-107">적용 하 여 이렇게는 <xref:System.Web.UI.ControlBuilderAttribute> 컨트롤 작성기 클래스에 특성을 다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-107">This is done by applying a <xref:System.Web.UI.ControlBuilderAttribute> attribute to your control builder class as follows:</span></span>  
  
 `[ControlBuilderAttribute(typeof(ControlBuilderType))]`  
  
   
  
## Examples  
 <span data-ttu-id="3567a-108">다음 코드 예제에서는 한 <xref:System.Web.UI.WebControls.Table> 컨트롤 특성과 내용이 테이블이 작성 될 때 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-108">The following code example creates a <xref:System.Web.UI.WebControls.Table> control whose attributes and content are defined at the time the table is built.</span></span> <span data-ttu-id="3567a-109">다음은 명령줄 실행 파일을 빌드하는 데 사용할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-109">The following is the command line to use to build the executable.</span></span>  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  
```  
  
 [!code-csharp[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.cs#1)]
 [!code-vb[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.vb#1)]  
  
 <span data-ttu-id="3567a-110">다음 코드 예제에서는 이전 사용자 지정 컨트롤을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-110">The following code example uses the previous custom control.</span></span> <span data-ttu-id="3567a-111">특히, 특성을 가진 테이블을 작성 하 고 콘텐츠 런타임 시 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-111">In particular, it builds a table whose attributes and content are defined at run time.</span></span> <span data-ttu-id="3567a-112">지시문에 표시 된 값은 앞의 명령줄을 반영 한다는 점에 주의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-112">Notice that the values shown in the  directive reflect the previous command line.</span></span>  
  
 [!code-aspx-csharp[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.aspx#2)]
 [!code-aspx-vb[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
    <altmember cref="T:System.Web.UI.ParseChildrenAttribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-113"><see cref="T:System.Web.UI.ControlBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-113">Initializes a new instance of the <see cref="T:System.Web.UI.ControlBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-114">이 생성자를 사용 하 여 새 인스턴스를 만들 수는 <xref:System.Web.UI.ControlBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-114">Use this constructor to create a new instance the <xref:System.Web.UI.ControlBuilder> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3567a-115">페이지를 구문 분석할 때 ASP.NET에서 일반적으로이 생성자는 사용 하 고 컨트롤 계층 구조를 만드는 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-115">This constructor is generally used by ASP.NET when parsing the page and creating the control hierarchy.</span></span> <span data-ttu-id="3567a-116">사용자 코드에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-116">It is not intended for use in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public virtual bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-117">콘텐츠에서 컨트롤의 여는 태그와 닫는 태그 사이에 공백 리터럴이 허용되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-117">Determines whether white space literals are permitted in the content between a control's opening and closing tags.</span></span> <span data-ttu-id="3567a-118">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-118">This method is called by the ASP.NET page framework.</span></span></summary>
        <returns><span data-ttu-id="3567a-119">항상 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-119">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-120"><xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> 메서드를 사용 하 여를 콘텐츠에서 컨트롤의 닫는 태그 사이 공백 리터럴이 허용 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-120">The <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> method is used to determine whether white space literals are permitted in the content between the opening and closing tags of a control.</span></span> <span data-ttu-id="3567a-121">이 메서드가 반환 될 때 `false`, 콘텐츠 페이지 파서에서 처리 하기 전에 공백 리터럴이 내용에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-121">When this method returns `false`, the white space literals are trimmed from the content before the content is processed by the page parser.</span></span> <span data-ttu-id="3567a-122">이 메서드가 반환 될 때 `true`, 공백 리터럴이 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-122">When this method returns `true`, the white space literals not removed.</span></span>  
  
 <span data-ttu-id="3567a-123">이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-123">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#4)]
 [!code-vb[ControlBuilderSamples_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3567a-124">이 메서드를 사용자 지정 컨트롤에 공백 리터럴이 허용 되는지 여부를 나타내는 파생된 클래스에서 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-124">You can override this method in your derived class to indicate whether white space literals are permitted in your custom control.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public virtual void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendLiteralString (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendLiteralString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3567a-125">컨트롤에 추가할 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-125">The content to add to the control.</span></span></param>
        <summary><span data-ttu-id="3567a-126">지정된 리터럴 콘텐츠를 컨트롤에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-126">Adds the specified literal content to a control.</span></span> <span data-ttu-id="3567a-127">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-127">This method is called by the ASP.NET page framework.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-128">재정의 <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> 방법을 리터럴 콘텐츠 컨트롤의 여는 태그와 닫는 태그 사이 제어 하는 메서드를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-128">Override the <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> method to control how literal content between the control's opening and closing tags is processed.</span></span> <span data-ttu-id="3567a-129">리터럴 콘텐츠는 브라우저에서 서버 컨트롤에 전달 되는 모든 텍스트 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-129">Literal content can be any text that is passed by the browser to the server control.</span></span> <span data-ttu-id="3567a-130">예를 들어 모든 HTML 요소와 여는 태그와 닫는 태그 사이의 텍스트는 리터럴 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-130">For example, any HTML elements and text, between their opening and closing tags, are literal content.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#3)]
 [!code-vb[ControlBuilderSamples_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3567a-131">문자열 리터럴의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="3567a-131">The string literal is not well formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendSubBuilder">
      <MemberSignature Language="C#" Value="public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSubBuilder(class System.Web.UI.ControlBuilder subBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendSubBuilder (subBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendSubBuilder(System::Web::UI::ControlBuilder ^ subBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="subBuilder"><span data-ttu-id="3567a-132">자식 컨트롤에 할당된 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-132">The <see cref="T:System.Web.UI.ControlBuilder" /> object assigned to the child control.</span></span></param>
        <summary><span data-ttu-id="3567a-133">컨테이너 컨트롤에 속하는 모든 자식 컨트롤에 대한 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에 빌더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-133">Adds builders to the <see cref="T:System.Web.UI.ControlBuilder" /> object for any child controls that belong to the container control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3567a-134">다음 예제에서는 재정의 <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> throw 하는 메서드는 <xref:System.Exception> 이 컨트롤 작성기에 적용 되는 컨트롤의 해당 인스턴스에 있는 컨트롤을 포함 하려고 할 경우 <xref:System.Web.UI.ControlCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-134">The following example overrides the <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> method to throw an <xref:System.Exception> if the control this control builder is applied to tries to include controls in its instance of <xref:System.Web.UI.ControlCollection> class.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#1)]
 [!code-vb[ControlBuilderSamples_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
    <Member MemberName="BindingContainerBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder BindingContainerBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerBuilder As ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlBuilder ^ BindingContainerBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-135">이 빌더가 만드는 컨트롤의 바인딩 컨테이너에 해당하는 컨트롤 작성기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-135">Gets the control builder that corresponds to the binding container for the control that this builder creates.</span></span></summary>
        <value><span data-ttu-id="3567a-136">컨트롤의 바인딩 컨테이너에 해당하는 컨트롤 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-136">The control builder that corresponds to the binding container for the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainerType">
      <MemberSignature Language="C#" Value="public virtual Type BindingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-137">이 작성기가 만드는 컨트롤의 바인딩 컨테이너 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-137">Gets the type of the binding container for the control that this builder creates.</span></span></summary>
        <value><span data-ttu-id="3567a-138">이 작성기가 만드는 컨트롤의 바인딩 컨테이너 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-138">A <see cref="T:System.Type" /> that represent the type of the binding container for the control that this builder creates.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.BindingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildObject">
      <MemberSignature Language="C#" Value="public virtual object BuildObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BuildObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.BuildObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ BuildObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-139"><see cref="T:System.Web.UI.ControlBuilder" /> 개체가 참조하는 컨트롤의 디자인 타임 인스턴스를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-139">Builds a design-time instance of the control that is referred to by this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3567a-140">빌드된 결과 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-140">The resulting built control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseControl">
      <MemberSignature Language="C#" Value="public virtual void CloseControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CloseControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-141">파서에서 호출하여 컨트롤의 여는 태그와 닫는 태그의 구문 분석이 완료되었음을 작성기에 알려 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-141">Called by the parser to inform the builder that the parsing of the control's opening and closing tags is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-142"><xref:System.Web.UI.ControlBuilder.CloseControl%2A> 메서드 컨트롤의 구문 분석이 완료가 작성기에 나타낼 파서에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-142">The <xref:System.Web.UI.ControlBuilder.CloseControl%2A> method is used by the parser to indicate to the builder that it has finished parsing the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection ComplexPropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ComplexPropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ComplexPropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexPropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ ComplexPropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-143">복합 속성 항목의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-143">Gets a collection of complex property entries.</span></span></summary>
        <value><span data-ttu-id="3567a-144">복합 속성 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-144">A collection of complex property entries.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-145">항목이 없는 경우에 정적 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-145">If there are no entries, a static empty collection is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-146">만들려는 컨트롤의 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-146">Gets the <see cref="T:System.Type" /> for the control to be created.</span></span></summary>
        <value><span data-ttu-id="3567a-147">만들려는 컨트롤의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-147">The <see cref="T:System.Type" /> for the control to be created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3567a-148">이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-148">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="3567a-149">경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-149">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="3567a-150">하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-150">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="CreateBuilderFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ControlBuilder CreateBuilderFromType(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs, int32 line, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ControlBuilder ^ CreateBuilderFromType(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs, int line, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parser"><span data-ttu-id="3567a-151">컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-151">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control.</span></span></param>
        <param name="parentBuilder"><span data-ttu-id="3567a-152">부모 컨트롤을 빌드하는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-152">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control.</span></span></param>
        <param name="type"><span data-ttu-id="3567a-153">작성기가 만들 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-153">The <see cref="T:System.Type" /> of the object that the builder will create.</span></span></param>
        <param name="tagName"><span data-ttu-id="3567a-154">빌드할 태그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-154">The name of the tag to be built.</span></span> <span data-ttu-id="3567a-155">이 매개 변수를 사용하면 작성기는 여러 가지 태그 형식을 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-155">This allows the builder to support multiple tag types.</span></span></param>
        <param name="id"><span data-ttu-id="3567a-156">컨트롤에 할당된 <see cref="P:System.Web.UI.ControlBuilder.ID" /> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-156">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control.</span></span></param>
        <param name="attribs"><span data-ttu-id="3567a-157">지정된 태그 특성을 모두 보유하는 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-157">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span></span></param>
        <param name="line"><span data-ttu-id="3567a-158">지정된 컨트롤의 소스 파일 줄 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-158">The source file line number for the specified control.</span></span></param>
        <param name="sourceFileName"><span data-ttu-id="3567a-159">컨트롤이 만들어지는 소스 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-159">The name of the source file from which the control is to be created.</span></span></param>
        <summary><span data-ttu-id="3567a-160">지정한 태그 이름과 개체 형식은 물론 작성기를 정의하는 다른 매개 변수에서 <see cref="T:System.Web.UI.ControlBuilder" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-160">Creates a <see cref="T:System.Web.UI.ControlBuilder" /> object from the specified tag name and object type, as well as other parameters defining the builder.</span></span></summary>
        <returns><span data-ttu-id="3567a-161">컨트롤을 만드는 작성기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-161">The builder that is responsible for creating the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFilterResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IFilterResolutionService CurrentFilterResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.CurrentFilterResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentFilterResolutionService As IFilterResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IFilterResolutionService ^ CurrentFilterResolutionService { System::Web::UI::IFilterResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IFilterResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-162">디자이너에서 컨트롤을 구문 분석하고 유지할 때 장치 필터 관련 서비스를 관리하는 데 사용되는 <see cref="T:System.Web.UI.IFilterResolutionService" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-162">Gets an <see cref="T:System.Web.UI.IFilterResolutionService" /> object that is used to manage device-filter related services when parsing and persisting controls in the designer.</span></span></summary>
        <value><span data-ttu-id="3567a-163">디자이너에서 컨트롤을 구문 분석하고 유지할 때 장치 필터 관련 서비스를 관리하는 데 사용되는 <see cref="T:System.Web.UI.IFilterResolutionService" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-163">An <see cref="T:System.Web.UI.IFilterResolutionService" /> object that is used to manage device filter related services when parsing and persisting controls in the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-164"><xref:System.Web.UI.IFilterResolutionService> 인터페이스는 컨트롤 디자이너에서 장치 필터를 사용 하는 방법에 적용 되는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-164">The <xref:System.Web.UI.IFilterResolutionService> interface is an interface that is specific to how a control uses device filters in a designer.</span></span> <span data-ttu-id="3567a-165">컨트롤은 구문 분석 하거나 디자이너 브라우저 요청의 컨텍스트 외부에서 유지 된 <xref:System.Web.UI.IFilterResolutionService> 현재 컨트롤 명명 된 필터에 의해 영향을 받는 여부 및 명명된 된 필터는 특정 장치 필터의 일부 인지 여부를 결정 하는 방법을 제공 합니다. 계층 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-165">When controls are parsed or persisted in the designer outside the context of a browser request, the <xref:System.Web.UI.IFilterResolutionService> provides a way to determine whether the current control is affected by a named filter and whether a named filter is part of a specific device-filter hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IFilterResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="DeclareType">
      <MemberSignature Language="C#" Value="public virtual Type DeclareType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclareType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.DeclareType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclareType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclareType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-166">코드 생성에서 컨트롤을 선언하는 데 사용되는 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-166">Gets the type that will be used by code generation to declare the control.</span></span></summary>
        <value><span data-ttu-id="3567a-167">코드 생성에서 컨트롤을 선언하는 데 사용되는 컨트롤의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-167">The <see cref="T:System.Type" /> of the control used by code generation to declare the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerFilter">
      <MemberSignature Language="C#" Value="public static readonly string DesignerFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DesignerFilter" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ControlBuilder.DesignerFilter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignerFilter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DesignerFilter;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-168"><c>"__designer"</c> 리터럴 문자열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-168">Represents the <c>"__designer"</c> literal string.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FChildrenAsProperties">
      <MemberSignature Language="C#" Value="protected bool FChildrenAsProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FChildrenAsProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-169">컨트롤에 <see cref="T:System.Web.UI.ParseChildrenAttribute" />가 <see langword="true" />로 설정된 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-169">Gets a value that determines whether the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to <see langword="true" />.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-170"><see cref="T:System.Web.UI.ParseChildrenAttribute" />를 <see langword="true" />로 설정한 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />가 컨트롤에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-170"><see langword="true" /> if the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to <see langword="true" />, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FIsNonParserAccessor">
      <MemberSignature Language="C#" Value="protected bool FIsNonParserAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FIsNonParserAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FIsNonParserAccessor" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FIsNonParserAccessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FIsNonParserAccessor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-171">컨트롤이 <see cref="T:System.Web.UI.IParserAccessor" /> 인터페이스를 구현하는지 여부를 결정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-171">Gets a value that determines whether the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-172">컨트롤이 <see cref="T:System.Web.UI.IParserAccessor" /> 인터페이스를 구현하면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-172"><see langword="false" /> if the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface, otherwise <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="3567a-173">자식의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-173">The tag name of the child.</span></span></param>
        <param name="attribs"><span data-ttu-id="3567a-174">자식 컨트롤에 포함된 특성의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-174">An array of attributes contained in the child control.</span></span></param>
        <summary><span data-ttu-id="3567a-175">자식 태그에 해당하는 컨트롤 형식의 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-175">Obtains the <see cref="T:System.Type" /> of the control type corresponding to a child tag.</span></span> <span data-ttu-id="3567a-176">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-176">This method is called by the ASP.NET page framework.</span></span></summary>
        <returns><span data-ttu-id="3567a-177">지정된 컨트롤 자식의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-177">The <see cref="T:System.Type" /> of the specified control's child.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-178">이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-178">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#2)]
 [!code-vb[ControlBuilderSamples_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectPersistData">
      <MemberSignature Language="C#" Value="public System.Web.UI.ObjectPersistData GetObjectPersistData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ObjectPersistData GetObjectPersistData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetObjectPersistData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectPersistData () As ObjectPersistData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ObjectPersistData ^ GetObjectPersistData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ObjectPersistData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-179">이 <see cref="T:System.Web.UI.ObjectPersistData" /> 개체의 <see cref="T:System.Web.UI.ControlBuilder" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-179">Creates the <see cref="T:System.Web.UI.ObjectPersistData" /> object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3567a-180">이 <see cref="T:System.Web.UI.ObjectPersistData" />에 대한 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-180">The <see cref="T:System.Web.UI.ObjectPersistData" /> for this <see cref="T:System.Web.UI.ControlBuilder" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ObjectPersistData" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceKey">
      <MemberSignature Language="C#" Value="public string GetResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResourceKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResourceKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetResourceKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-181">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 리소스 키를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-181">Retrieves the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3567a-182"><see cref="T:System.Web.UI.ControlBuilder" />의 리소스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-182">The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasAspCode">
      <MemberSignature Language="C#" Value="public virtual bool HasAspCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAspCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.HasAspCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAspCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAspCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-183">컨트롤에 코드 블록이 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-183">Gets a value indicating whether the control contains any code blocks.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-184">컨트롤에 적어도 하나 이상의 코드 블록이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-184"><see langword="true" /> if the control contains at least one code block; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3567a-185">이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-185">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="3567a-186">경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-186">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="3567a-187">하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-187">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBody">
      <MemberSignature Language="C#" Value="public virtual bool HasBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HasBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-188">컨트롤에 여는 태그와 닫는 태그가 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-188">Determines if a control has both an opening and closing tag.</span></span> <span data-ttu-id="3567a-189">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-189">This method is called by the ASP.NET page framework.</span></span></summary>
        <returns>
          <span data-ttu-id="3567a-190">컨트롤에 여는 태그와 닫는 태그가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-190"><see langword="true" /> if the control has an opening and closing tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-191">이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-191">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3567a-192">이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-192">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="3567a-193">경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-193">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="3567a-194">하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-194">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public virtual bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecodeLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HtmlDecodeLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-195">HTML 컨트롤의 리터럴 문자열이 HTML로 디코딩되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-195">Determines whether the literal string of an HTML control must be HTML decoded.</span></span> <span data-ttu-id="3567a-196">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-196">This method is called by the ASP.NET page framework.</span></span></summary>
        <returns>
          <span data-ttu-id="3567a-197">HTML 컨트롤의 리터럴 문자열이 디코딩되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-197"><see langword="true" /> if the HTML control literal string is to be decoded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-198">리터럴 문자열을 여는 태그와 HTML 컨트롤의 닫는 태그 사이 오는 텍스트를 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-198">A literal string refers to the text between the opening and closing tag of an HTML control.</span></span> <span data-ttu-id="3567a-199">HTML 인코딩이 텍스트를 브라우저는 표시 되지 않고 HTML로 해석 하는 문자열 표현으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-199">HTML encoding is when text is converted into a string representation that the browser will display rather than interpret as HTML.</span></span> <span data-ttu-id="3567a-200">질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공백 수 잘리거나 표시 될 때 해당 문자를 인코딩해야 하므로 일부 브라우저에 의해 손상 `a` 태그 쿼리 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-200">Characters such as the question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers, so those characters must be encoded when they appear in `a` tags or in query strings.</span></span>  
  
 <span data-ttu-id="3567a-201"><xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-201">The <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3567a-202">다음 예제에서는 재정의 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> 메서드가이 작성기에 적용 되는 컨트롤의 리터럴 문자열의 HTML 디코딩을 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-202">The following example overrides the <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> method to allow HTML decoding of literal strings in any control this builder is applied to.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#2)]
 [!code-vb[ControlBuilderSamples_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-203">만들려는 컨트롤의 ID 속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-203">Gets or sets the identifier property for the control to be built.</span></span></summary>
        <value><span data-ttu-id="3567a-204">컨트롤의 ID 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-204">The identifier property for the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InDesigner">
      <MemberSignature Language="C#" Value="protected bool InDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-205"><see cref="T:System.Web.UI.ControlBuilder" />가 디자이너에서 실행되고 있는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-205">Returns whether the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-206"><see cref="T:System.Web.UI.ControlBuilder" />가 디자이너에서 실행되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-206"><see langword="true" /> if the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3567a-207">다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-207">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-208">컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드는 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-208">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="3567a-209"><xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-209">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-210">경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-210">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="3567a-211">그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-211">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="parser"><span data-ttu-id="3567a-212">컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-212">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control.</span></span></param>
        <param name="parentBuilder"><span data-ttu-id="3567a-213">부모 컨트롤을 빌드하는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-213">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control.</span></span></param>
        <param name="type"><span data-ttu-id="3567a-214">작성기가 만들려는 컨트롤에 할당된 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-214">The <see cref="T:System.Type" /> assigned to the control that the builder will create.</span></span></param>
        <param name="tagName"><span data-ttu-id="3567a-215">빌드할 태그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-215">The name of the tag to be built.</span></span> <span data-ttu-id="3567a-216">이 매개 변수를 사용하면 작성기는 여러 가지 태그 형식을 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-216">This allows the builder to support multiple tag types.</span></span></param>
        <param name="id"><span data-ttu-id="3567a-217">컨트롤에 할당된 <see cref="P:System.Web.UI.ControlBuilder.ID" /> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-217">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control.</span></span></param>
        <param name="attribs"><span data-ttu-id="3567a-218">지정된 태그 특성을 모두 보유하는 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-218">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span></span></param>
        <summary><span data-ttu-id="3567a-219">인스턴스화된 후에 사용하기 위해 <see cref="T:System.Web.UI.ControlBuilder" />를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-219">Initializes the <see cref="T:System.Web.UI.ControlBuilder" /> for use after it is instantiated.</span></span> <span data-ttu-id="3567a-220">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-220">This method is called by the ASP.NET page framework.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-221">이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-221">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPageTheme">
      <MemberSignature Language="C#" Value="protected bool InPageTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPageTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InPageTheme" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InPageTheme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InPageTheme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-222">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체가 페이지 테마를 생성하는 데 사용할지 여부를 결정하는 부울 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-222">Gets a Boolean value indicating whether this <see cref="T:System.Web.UI.ControlBuilder" /> object is used to generate page themes.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-223">이 <see cref="T:System.Web.UI.ControlBuilder" />를 사용하여 페이지 테마를 생성하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-223"><see langword="true" /> to use this <see cref="T:System.Web.UI.ControlBuilder" /> to generate page themes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-224">바인딩 컨테이너에 설정된 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-224">Gets the type set on the binding container.</span></span></summary>
        <value><span data-ttu-id="3567a-225">바인딩 컨테이너에 설정된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-225">The type set on the binding container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public bool Localize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Localize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Localize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Localize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Localize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-226">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에서 만든 컨트롤이 지역화되어 있는지 여부를 나타내는 부울 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-226">Gets a Boolean value indicating whether the control that is created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized.</span></span></summary>
        <value>
          <span data-ttu-id="3567a-227">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에서 만든 컨트롤이 지역화되어 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-227"><see langword="true" /> to indicate that the control created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamingContainerType">
      <MemberSignature Language="C#" Value="public Type NamingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NamingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.NamingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NamingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-228">이 작성기에서 만든 컨트롤의 명명 컨테이너 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-228">Gets the type of the naming container for the control that this builder creates.</span></span></summary>
        <value><span data-ttu-id="3567a-229">이 작성기에서 만든 컨트롤의 명명 컨테이너 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-229">A <see cref="T:System.Type" /> that represent the type of the naming container for the control that this builder creates.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.ControlBuilder.ControlType" />
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public virtual bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NeedsTagInnerText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool NeedsTagInnerText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3567a-230">컨트롤 작성기가 내부 텍스트를 가져오는지 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-230">Determines if the control builder needs to get its inner text.</span></span> <span data-ttu-id="3567a-231">내부 텍스트를 가져오려면 <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> 메서드가 호출되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-231">If so, the <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> method must be called.</span></span> <span data-ttu-id="3567a-232">이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-232">This method is called by the ASP.NET page framework.</span></span></summary>
        <returns>
          <span data-ttu-id="3567a-233">컨트롤 작성기가 내부 텍스트를 가져오면 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-233"><see langword="true" /> if the control builder needs to get its inner text.</span></span> <span data-ttu-id="3567a-234">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-234">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-235">내부 텍스트와 컨트롤의 닫는 태그 사이 있는 텍스트가입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-235">The inner text is the text between the opening and closing tags of the control.</span></span>  
  
 <span data-ttu-id="3567a-236">이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-236">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3567a-237">다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-237">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-238">컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-238">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="3567a-239"><xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-239">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-240">경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-240">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="3567a-241">그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-241">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppendToParentBuilder">
      <MemberSignature Language="C#" Value="public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppendToParentBuilder(class System.Web.UI.ControlBuilder parentBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAppendToParentBuilder (parentBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAppendToParentBuilder(System::Web::UI::ControlBuilder ^ parentBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="parentBuilder"><span data-ttu-id="3567a-242">현재 작성기가 추가되는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-242">The <see cref="T:System.Web.UI.ControlBuilder" /> object to which the current builder is added.</span></span></param>
        <summary><span data-ttu-id="3567a-243">내부 텍스트가 부모 컨트롤 작성기에 추가되고 있음을 <see cref="T:System.Web.UI.ControlBuilder" />에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-243">Notifies the <see cref="T:System.Web.UI.ControlBuilder" /> that it is being added to a parent control builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3567a-244">이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-244">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="3567a-245">경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-245">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="3567a-246">하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-246">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageVirtualPath">
      <MemberSignature Language="C#" Value="public string PageVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.PageVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageVirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-247">이 <see cref="T:System.Web.UI.ControlBuilder" /> 인스턴스로 빌드할 페이지의 가상 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-247">Gets the virtual path of a page to be built by this <see cref="T:System.Web.UI.ControlBuilder" /> instance.</span></span></summary>
        <value><span data-ttu-id="3567a-248">빌드할 페이지의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-248">The virtual path of the page to be built.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.TemplateParser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateParser Parser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Parser" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Parser As TemplateParser" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::TemplateParser ^ Parser { System::Web::UI::TemplateParser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-249">컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-249">Gets the <see cref="T:System.Web.UI.TemplateParser" /> responsible for parsing the control.</span></span></summary>
        <value><span data-ttu-id="3567a-250">컨트롤을 구문 분석하는 데 사용되는 <see cref="T:System.Web.UI.TemplateParser" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-250">The <see cref="T:System.Web.UI.TemplateParser" /> used to parse the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-251">이 속성을 검색 된 <xref:System.Web.UI.TemplateParser> 는 컨트롤을 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-251">This property retrieves the <xref:System.Web.UI.TemplateParser> responsible for parsing the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateParser" />
      </Docs>
    </Member>
    <Member MemberName="ProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessGeneratedCode(class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessGeneratedCode(System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit"><span data-ttu-id="3567a-252">작성 중인 컨트롤의 CodeDOM 그래프의 루트 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-252">The root container of a CodeDOM graph of the control that is being built.</span></span></param>
        <param name="baseType"><span data-ttu-id="3567a-253">작성 중인 컨트롤이 들어 있는 페이지 또는 사용자 정의 컨트롤의 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-253">The base type of the page or user control that contains the control that is being built.</span></span></param>
        <param name="derivedType"><span data-ttu-id="3567a-254">작성 중인 컨트롤이 들어 있는 페이지 또는 사용자 정의 컨트롤의 파생 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-254">The derived type of the page or user control that contains the control that is being built.</span></span></param>
        <param name="buildMethod"><span data-ttu-id="3567a-255">컨트롤을 작성하는 데 사용되는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-255">The code that is used to build the control.</span></span></param>
        <param name="dataBindingMethod"><span data-ttu-id="3567a-256">컨트롤의 데이터 바인딩 메서드를 작성하는 데 사용되는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-256">The code that is used to build the data-binding method of the control.</span></span></param>
        <summary><span data-ttu-id="3567a-257">사용자 지정 컨트롤 작성기를 활성화하여 생성된 CodeDom(코드 문서 개체 모델)에 액세스하고, 컨트롤을 구문 분석 및 작성하는 동안 코드를 삽입 및 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-257">Enables custom control builders to access the generated Code Document Object Model (CodeDom) and insert and modify code during the process of parsing and building controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-258">단일 파일 페이지 모델에는 `baseType` 및 `derivedType` 매개 변수는 동일한 <xref:System.CodeDom.CodeTypeDeclaration> 형식에서 일반적으로 파생 되는 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-258">In the single-file page model, the `baseType` and `derivedType` parameters are the same <xref:System.CodeDom.CodeTypeDeclaration> type, which typically derives from the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="3567a-259">코드 숨김 페이지 모델에서 `baseType` 는 <xref:System.CodeDom.CodeTypeDeclaration> 에서 일반적으로 파생 되는 부분 코드 숨김 클래스를 나타내는 형식을 <xref:System.Web.UI.Page> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-259">In the code-behind page model, `baseType` is the <xref:System.CodeDom.CodeTypeDeclaration> type that represents the partial code-behind class, which is typically derived from the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="3567a-260">`derivedType` 매개 변수는 태그를 포함 하는 partial 클래스에서 파생 된 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-260">The `derivedType` parameter is the class that derives from the partial class that contains the markup.</span></span>  
  
 <span data-ttu-id="3567a-261">ASP.NET 웹 페이지 모델에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지 구문 개요](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02)합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-261">For more information about ASP.NET Web page models, see [ASP.NET Web Forms Page Syntax Overview](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02).</span></span>  
  
 <span data-ttu-id="3567a-262">CodeDOM을 사용 하 여 표시 하 고 소스 코드를 생성 하는 방법에 대 한 자세한 내용은 참조 [동적 소스 코드 생성 및 컴파일](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-262">For more information about how to use the CodeDOM to represent and generate source code, see [Dynamic Source Code Generation and Compilation](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-263">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 서비스 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-263">Gets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <value><span data-ttu-id="3567a-264">이 <see cref="T:System.IServiceProvider" />의 서비스 개체를 나타내는 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-264">An <see cref="T:System.IServiceProvider" /> that represents the service object for this <see cref="T:System.Web.UI.ControlBuilder" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceKey">
      <MemberSignature Language="C#" Value="public void SetResourceKey (string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceKey(string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceKey (resourceKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceKey(System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="3567a-265"><see cref="T:System.Web.UI.ControlBuilder" />의 리소스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-265">The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</span></span></param>
        <summary><span data-ttu-id="3567a-266">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 리소스 키를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-266">Sets the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      </Docs>
    </Member>
    <Member MemberName="SetServiceProvider">
      <MemberSignature Language="C#" Value="public void SetServiceProvider (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetServiceProvider(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceProvider (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceProvider(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="3567a-267"><see cref="T:System.IServiceProvider" />의 서비스 개체를 나타내는 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-267">An <see cref="T:System.IServiceProvider" /> that represents the service object for the <see cref="T:System.Web.UI.ControlBuilder" />.</span></span></param>
        <summary><span data-ttu-id="3567a-268">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 서비스 개체를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-268">Sets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public virtual void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTagInnerText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTagInnerText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="3567a-269">제공할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-269">The text to be provided.</span></span></param>
        <summary><span data-ttu-id="3567a-270">컨트롤 태그의 내부 텍스트를 <see cref="T:System.Web.UI.ControlBuilder" />에 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-270">Provides the <see cref="T:System.Web.UI.ControlBuilder" /> with the inner text of the control tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-271">이 메서드는 경우에 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 이전에 반환 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-271">This method is called only if <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> previously returned `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3567a-272">다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-272">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-273">컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-273">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="3567a-274"><xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-274">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="3567a-275">경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-275">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="3567a-276">그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-276">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubBuilders">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList SubBuilders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList SubBuilders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.SubBuilders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubBuilders As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ SubBuilders { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-277">이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에 대한 하위 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-277">Gets a list of child <see cref="T:System.Web.UI.ControlBuilder" /> objects for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span></span></summary>
        <value><span data-ttu-id="3567a-278">자식 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-278">A list of child <see cref="T:System.Web.UI.ControlBuilder" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-279">만들려는 컨트롤의 태그 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-279">Gets the tag name for the control to be built.</span></span></summary>
        <value><span data-ttu-id="3567a-280">컨트롤의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-280">The tag name for the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection TemplatePropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection TemplatePropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TemplatePropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ TemplatePropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-281">템플릿 속성 항목의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-281">Gets a collection of template property entries.</span></span></summary>
        <value><span data-ttu-id="3567a-282">템플릿 속성 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-282">A collection of template property entries.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-283">항목이 없는 경우에 정적 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-283">If there are no entries, a static empty collection is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IThemeResolutionService ThemeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ThemeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeResolutionService As IThemeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IThemeResolutionService ^ ThemeResolutionService { System::Web::UI::IThemeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IThemeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3567a-284">디자인 타임에 컨트롤 테마와 스킨을 관리하는 데 사용되는 <see cref="T:System.Web.UI.IThemeResolutionService" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-284">Gets an <see cref="T:System.Web.UI.IThemeResolutionService" /> object that is used in design time to manage control themes and skins.</span></span></summary>
        <value><span data-ttu-id="3567a-285">디자인 타임에 컨트롤 테마와 스킨을 관리하는 데 사용되는 <see cref="T:System.Web.UI.IThemeResolutionService" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-285">An <see cref="T:System.Web.UI.IThemeResolutionService" /> object that is used in design time to manage control themes and skins.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3567a-286"><xref:System.Web.UI.IThemeResolutionService> 인터페이스는 하나 이상에 대 한 컨테이너 <xref:System.Web.UI.ThemeProvider> 제공 하는 개체는 <xref:System.Web.UI.SkinBuilder> 테마를 적용 하 고 디자이너에서 생성 될 때 컨트롤 스킨을 제어 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3567a-286">The <xref:System.Web.UI.IThemeResolutionService> interface is a container for one or more <xref:System.Web.UI.ThemeProvider> objects, which in turn supply the <xref:System.Web.UI.SkinBuilder> objects that apply themes and control skins to controls when they are created in a designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IThemeResolutionService" />
      </Docs>
    </Member>
  </Members>
</Type>