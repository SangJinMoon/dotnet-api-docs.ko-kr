<Type Name="ControlBuilder" FullName="System.Web.UI.ControlBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f189e34352a9bc82c2ac71e575d4e05ef76238" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30611067" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컨트롤과 그 컨트롤에 포함되는 자식 컨트롤을 만들 때 페이지 파서를 지원합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 모든 컨트롤이 페이지에 연결 되어 있는 기본값 <xref:System.Web.UI.ControlBuilder> 클래스입니다. 구문 분석 중 ASP.NET 페이지 프레임 워크의 트리를 작성 <xref:System.Web.UI.ControlBuilder> 해당 페이지에 대 한 컨트롤의 트리 하는 개체입니다. <xref:System.Web.UI.ControlBuilder> 트리는 다음 제어 트리를 만드는 페이지 코드를 생성 하는 데 사용 됩니다. 자식 컨트롤 뿐 아니라는 <xref:System.Web.UI.ControlBuilder> 컨트롤 태그 내에서 콘텐츠를 구문 분석 방법을의 동작을 정의 합니다. 사용자 고유의 사용자 지정 컨트롤 작성기 클래스를 정의 하 여이 기본 동작을 재정의할 수 있습니다. 적용 하 여 이렇게는 <xref:System.Web.UI.ControlBuilderAttribute> 컨트롤 작성기 클래스에 특성을 다음과 같이 합니다.  
  
 `[ControlBuilderAttribute(typeof(ControlBuilderType))]`  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Web.UI.WebControls.Table> 컨트롤 특성과 내용이 테이블이 작성 될 때 정의 됩니다. 다음은 명령줄 실행 파일을 빌드하는 데 사용할을 합니다.  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  
```  
  
 [!code-csharp[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.cs#1)]
 [!code-vb[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.vb#1)]  
  
 다음 코드 예제에서는 이전 사용자 지정 컨트롤을 사용 합니다. 특히, 특성을 가진 테이블을 작성 하 고 콘텐츠 런타임 시 정의 됩니다. 지시문에 표시 된 값은 앞의 명령줄을 반영 한다는 점에 주의 합니다.  
  
 [!code-aspx-csharp[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.aspx#2)]
 [!code-aspx-vb[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
    <altmember cref="T:System.Web.UI.ParseChildrenAttribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 새 인스턴스를 만들 수는 <xref:System.Web.UI.ControlBuilder> 클래스입니다.  
  
> [!NOTE]
>  페이지를 구문 분석할 때 ASP.NET에서 일반적으로이 생성자는 사용 하 고 컨트롤 계층 구조를 만드는 합니다. 사용자 코드에 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public virtual bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘텐츠에서 컨트롤의 여는 태그와 닫는 태그 사이에 공백 리터럴이 허용되는지 여부를 결정합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <returns>항상 <see langword="true" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> 메서드를 사용 하 여를 콘텐츠에서 컨트롤의 닫는 태그 사이 공백 리터럴이 허용 되는지 여부를 확인 합니다. 이 메서드가 반환 될 때 `false`, 콘텐츠 페이지 파서에서 처리 하기 전에 공백 리터럴이 내용에서 제거 됩니다. 이 메서드가 반환 될 때 `true`, 공백 리터럴이 제거 되지 않습니다.  
  
 이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#4)]
 [!code-vb[ControlBuilderSamples_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 사용자 지정 컨트롤에 공백 리터럴이 허용 되는지 여부를 나타내는 파생된 클래스에서 재정의할 수 있습니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public virtual void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendLiteralString (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendLiteralString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">컨트롤에 추가할 콘텐츠입니다.</param>
        <summary>지정된 리터럴 콘텐츠를 컨트롤에 추가합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> 방법을 리터럴 콘텐츠 컨트롤의 여는 태그와 닫는 태그 사이 제어 하는 메서드를 처리 합니다. 리터럴 콘텐츠는 브라우저에서 서버 컨트롤에 전달 되는 모든 텍스트 될 수 있습니다. 예를 들어 모든 HTML 요소와 여는 태그와 닫는 태그 사이의 텍스트는 리터럴 내용입니다.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#3)]
 [!code-vb[ControlBuilderSamples_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">문자열 리터럴의 형식이 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendSubBuilder">
      <MemberSignature Language="C#" Value="public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSubBuilder(class System.Web.UI.ControlBuilder subBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendSubBuilder (subBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendSubBuilder(System::Web::UI::ControlBuilder ^ subBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="subBuilder">자식 컨트롤에 할당된 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</param>
        <summary>컨테이너 컨트롤에 속하는 모든 자식 컨트롤에 대한 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에 빌더를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 재정의 <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> throw 하는 메서드는 <xref:System.Exception> 이 컨트롤 작성기에 적용 되는 컨트롤의 해당 인스턴스에 있는 컨트롤을 포함 하려고 할 경우 <xref:System.Web.UI.ControlCollection> 클래스입니다.  
  
 [!code-csharp[ControlBuilderSamples_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#1)]
 [!code-vb[ControlBuilderSamples_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
    <Member MemberName="BindingContainerBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder BindingContainerBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerBuilder As ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlBuilder ^ BindingContainerBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 빌더가 만드는 컨트롤의 바인딩 컨테이너에 해당하는 컨트롤 작성기를 가져옵니다.</summary>
        <value>컨트롤의 바인딩 컨테이너에 해당하는 컨트롤 작성기입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainerType">
      <MemberSignature Language="C#" Value="public virtual Type BindingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 작성기가 만드는 컨트롤의 바인딩 컨테이너 형식을 가져옵니다.</summary>
        <value>이 작성기가 만드는 컨트롤의 바인딩 컨테이너 형식을 나타내는 <see cref="T:System.Type" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.BindingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildObject">
      <MemberSignature Language="C#" Value="public virtual object BuildObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BuildObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.BuildObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ BuildObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlBuilder" /> 개체가 참조하는 컨트롤의 디자인 타임 인스턴스를 빌드합니다.</summary>
        <returns>빌드된 결과 컨트롤입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseControl">
      <MemberSignature Language="C#" Value="public virtual void CloseControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CloseControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파서에서 호출하여 컨트롤의 여는 태그와 닫는 태그의 구문 분석이 완료되었음을 작성기에 알려 줍니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlBuilder.CloseControl%2A> 메서드 컨트롤의 구문 분석이 완료가 작성기에 나타낼 파서에서 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection ComplexPropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ComplexPropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ComplexPropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexPropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ ComplexPropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>복합 속성 항목의 컬렉션을 가져옵니다.</summary>
        <value>복합 속성 항목의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목이 없는 경우에 정적 빈 컬렉션이 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>만들려는 컨트롤의 <see cref="T:System.Type" />을 가져옵니다.</summary>
        <value>만들려는 컨트롤의 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다. 경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다. 하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="CreateBuilderFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ControlBuilder CreateBuilderFromType(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs, int32 line, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ControlBuilder ^ CreateBuilderFromType(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs, int line, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parser">컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" /> 개체입니다.</param>
        <param name="parentBuilder">부모 컨트롤을 빌드하는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</param>
        <param name="type">작성기가 만들 개체의 <see cref="T:System.Type" />입니다.</param>
        <param name="tagName">빌드할 태그의 이름입니다. 이 매개 변수를 사용하면 작성기는 여러 가지 태그 형식을 지원할 수 있습니다.</param>
        <param name="id">컨트롤에 할당된 <see cref="P:System.Web.UI.ControlBuilder.ID" /> 특성입니다.</param>
        <param name="attribs">지정된 태그 특성을 모두 보유하는 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</param>
        <param name="line">지정된 컨트롤의 소스 파일 줄 번호입니다.</param>
        <param name="sourceFileName">컨트롤이 만들어지는 소스 파일의 이름입니다.</param>
        <summary>지정한 태그 이름과 개체 형식은 물론 작성기를 정의하는 다른 매개 변수에서 <see cref="T:System.Web.UI.ControlBuilder" /> 개체를 만듭니다.</summary>
        <returns>컨트롤을 만드는 작성기를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFilterResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IFilterResolutionService CurrentFilterResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.CurrentFilterResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentFilterResolutionService As IFilterResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IFilterResolutionService ^ CurrentFilterResolutionService { System::Web::UI::IFilterResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IFilterResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너에서 컨트롤을 구문 분석하고 유지할 때 장치 필터 관련 서비스를 관리하는 데 사용되는 <see cref="T:System.Web.UI.IFilterResolutionService" /> 개체입니다.</summary>
        <value>디자이너에서 컨트롤을 구문 분석하고 유지할 때 장치 필터 관련 서비스를 관리하는 데 사용되는 <see cref="T:System.Web.UI.IFilterResolutionService" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IFilterResolutionService> 인터페이스는 컨트롤 디자이너에서 장치 필터를 사용 하는 방법에 적용 되는 인터페이스입니다. 컨트롤은 구문 분석 하거나 디자이너 브라우저 요청의 컨텍스트 외부에서 유지 된 <xref:System.Web.UI.IFilterResolutionService> 현재 컨트롤 명명 된 필터에 의해 영향을 받는 여부 및 명명된 된 필터는 특정 장치 필터의 일부 인지 여부를 결정 하는 방법을 제공 합니다. 계층 구조입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IFilterResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="DeclareType">
      <MemberSignature Language="C#" Value="public virtual Type DeclareType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclareType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.DeclareType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclareType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclareType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>코드 생성에서 컨트롤을 선언하는 데 사용되는 형식을 가져옵니다.</summary>
        <value>코드 생성에서 컨트롤을 선언하는 데 사용되는 컨트롤의 <see cref="T:System.Type" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerFilter">
      <MemberSignature Language="C#" Value="public static readonly string DesignerFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DesignerFilter" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ControlBuilder.DesignerFilter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignerFilter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DesignerFilter;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>"__designer"</c> 리터럴 문자열을 나타냅니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FChildrenAsProperties">
      <MemberSignature Language="C#" Value="protected bool FChildrenAsProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FChildrenAsProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 <see cref="T:System.Web.UI.ParseChildrenAttribute" />가 <see langword="true" />로 설정된 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ParseChildrenAttribute" />를 <see langword="true" />로 설정한 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />가 컨트롤에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FIsNonParserAccessor">
      <MemberSignature Language="C#" Value="protected bool FIsNonParserAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FIsNonParserAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FIsNonParserAccessor" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FIsNonParserAccessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FIsNonParserAccessor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 <see cref="T:System.Web.UI.IParserAccessor" /> 인터페이스를 구현하는지 여부를 결정하는 값을 가져옵니다.</summary>
        <value>
          컨트롤이 <see cref="T:System.Web.UI.IParserAccessor" /> 인터페이스를 구현하면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">자식의 태그 이름입니다.</param>
        <param name="attribs">자식 컨트롤에 포함된 특성의 배열입니다.</param>
        <summary>자식 태그에 해당하는 컨트롤 형식의 <see cref="T:System.Type" />을 가져옵니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <returns>지정된 컨트롤 자식의 <see cref="T:System.Type" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#2)]
 [!code-vb[ControlBuilderSamples_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectPersistData">
      <MemberSignature Language="C#" Value="public System.Web.UI.ObjectPersistData GetObjectPersistData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ObjectPersistData GetObjectPersistData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetObjectPersistData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectPersistData () As ObjectPersistData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ObjectPersistData ^ GetObjectPersistData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ObjectPersistData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ObjectPersistData" /> 개체의 <see cref="T:System.Web.UI.ControlBuilder" /> 개체를 만듭니다.</summary>
        <returns>이 <see cref="T:System.Web.UI.ObjectPersistData" />에 대한 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ObjectPersistData" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceKey">
      <MemberSignature Language="C#" Value="public string GetResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResourceKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResourceKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetResourceKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 리소스 키를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.ControlBuilder" />의 리소스 키입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasAspCode">
      <MemberSignature Language="C#" Value="public virtual bool HasAspCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAspCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.HasAspCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAspCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAspCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 코드 블록이 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤에 적어도 하나 이상의 코드 블록이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다. 경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다. 하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBody">
      <MemberSignature Language="C#" Value="public virtual bool HasBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HasBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 여는 태그와 닫는 태그가 있는지 여부를 결정합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <returns>
          컨트롤에 여는 태그와 닫는 태그가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
   
  
## Examples  
 이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다. 경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다. 하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public virtual bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecodeLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HtmlDecodeLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>HTML 컨트롤의 리터럴 문자열이 HTML로 디코딩되는지 여부를 결정합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <returns>
          HTML 컨트롤의 리터럴 문자열이 디코딩되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 리터럴 문자열을 여는 태그와 HTML 컨트롤의 닫는 태그 사이 오는 텍스트를 참조합니다. HTML 인코딩이 텍스트를 브라우저는 표시 되지 않고 HTML로 해석 하는 문자열 표현으로 변환 됩니다. 질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공백 수 잘리거나 표시 될 때 해당 문자를 인코딩해야 하므로 일부 브라우저에 의해 손상 `a` 태그 쿼리 문자열입니다.  
  
 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 재정의 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> 메서드가이 작성기에 적용 되는 컨트롤의 리터럴 문자열의 HTML 디코딩을 수 있도록 합니다.  
  
 [!code-csharp[ControlBuilderSamples_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#2)]
 [!code-vb[ControlBuilderSamples_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>만들려는 컨트롤의 ID 속성을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 ID 속성입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InDesigner">
      <MemberSignature Language="C#" Value="protected bool InDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlBuilder" />가 디자이너에서 실행되고 있는지 여부를 반환합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ControlBuilder" />가 디자이너에서 실행되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다. 컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드는 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다. 경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다. 그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="parser">컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" /> 개체입니다.</param>
        <param name="parentBuilder">부모 컨트롤을 빌드하는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</param>
        <param name="type">작성기가 만들려는 컨트롤에 할당된 <see cref="T:System.Type" />입니다.</param>
        <param name="tagName">빌드할 태그의 이름입니다. 이 매개 변수를 사용하면 작성기는 여러 가지 태그 형식을 지원할 수 있습니다.</param>
        <param name="id">컨트롤에 할당된 <see cref="P:System.Web.UI.ControlBuilder.ID" /> 특성입니다.</param>
        <param name="attribs">지정된 태그 특성을 모두 보유하는 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</param>
        <summary>인스턴스화된 후에 사용하기 위해 <see cref="T:System.Web.UI.ControlBuilder" />를 초기화합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPageTheme">
      <MemberSignature Language="C#" Value="protected bool InPageTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPageTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InPageTheme" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InPageTheme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InPageTheme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체가 페이지 테마를 생성하는 데 사용할지 여부를 결정하는 부울 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Web.UI.ControlBuilder" />를 사용하여 페이지 테마를 생성하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 컨테이너에 설정된 형식을 가져옵니다.</summary>
        <value>바인딩 컨테이너에 설정된 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public bool Localize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Localize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Localize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Localize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Localize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에서 만든 컨트롤이 지역화되어 있는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에서 만든 컨트롤이 지역화되어 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamingContainerType">
      <MemberSignature Language="C#" Value="public Type NamingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NamingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.NamingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NamingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 작성기에서 만든 컨트롤의 명명 컨테이너 형식을 가져옵니다.</summary>
        <value>이 작성기에서 만든 컨트롤의 명명 컨테이너 형식을 나타내는 <see cref="T:System.Type" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.ControlBuilder.ControlType" />
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public virtual bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NeedsTagInnerText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool NeedsTagInnerText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 작성기가 내부 텍스트를 가져오는지 결정합니다. 내부 텍스트를 가져오려면 <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> 메서드가 호출되어야 합니다. 이 메서드는 ASP.NET 페이지 프레임워크에서 호출합니다.</summary>
        <returns>
          컨트롤 작성기가 내부 텍스트를 가져오면 <see langword="true" />를 반환합니다. 기본값은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내부 텍스트와 컨트롤의 닫는 태그 사이 있는 텍스트가입니다.  
  
 이 메서드는 구문 분석 하는 동안 ASP.NET 페이지 프레임 워크에서 호출 되며 코드에서 직접 호출할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다. 컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다. 경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다. 그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppendToParentBuilder">
      <MemberSignature Language="C#" Value="public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppendToParentBuilder(class System.Web.UI.ControlBuilder parentBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAppendToParentBuilder (parentBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAppendToParentBuilder(System::Web::UI::ControlBuilder ^ parentBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="parentBuilder">현재 작성기가 추가되는 <see cref="T:System.Web.UI.ControlBuilder" /> 개체입니다.</param>
        <summary>내부 텍스트가 부모 컨트롤 작성기에 추가되고 있음을 <see cref="T:System.Web.UI.ControlBuilder" />에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제는 재정의 <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> 확인 하는 <xref:System.Web.UI.ControlBuilder.ControlType%2A> 이 작성기 컨트롤의 형식을 결정 하는 속성에 적용 됩니다. 경우는 `CustomTextBox`, 작성기 검사 여부의 값은 <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> 속성 컨트롤에 포함 되어 있습니다. 하는 경우, 예외가 throw 됩니다, 그렇지 않은 경우는 <xref:System.Web.UI.ControlBuilder.HasBody%2A> 메서드를 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageVirtualPath">
      <MemberSignature Language="C#" Value="public string PageVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.PageVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageVirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 인스턴스로 빌드할 페이지의 가상 경로를 가져옵니다.</summary>
        <value>빌드할 페이지의 가상 경로입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.TemplateParser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateParser Parser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Parser" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Parser As TemplateParser" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::TemplateParser ^ Parser { System::Web::UI::TemplateParser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤을 구문 분석하는 <see cref="T:System.Web.UI.TemplateParser" />를 가져옵니다.</summary>
        <value>컨트롤을 구문 분석하는 데 사용되는 <see cref="T:System.Web.UI.TemplateParser" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 검색 된 <xref:System.Web.UI.TemplateParser> 는 컨트롤을 구문 분석 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateParser" />
      </Docs>
    </Member>
    <Member MemberName="ProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessGeneratedCode(class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessGeneratedCode(System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">작성 중인 컨트롤의 CodeDOM 그래프의 루트 컨테이너입니다.</param>
        <param name="baseType">작성 중인 컨트롤이 들어 있는 페이지 또는 사용자 정의 컨트롤의 기본 형식입니다.</param>
        <param name="derivedType">작성 중인 컨트롤이 들어 있는 페이지 또는 사용자 정의 컨트롤의 파생 형식입니다.</param>
        <param name="buildMethod">컨트롤을 작성하는 데 사용되는 코드입니다.</param>
        <param name="dataBindingMethod">컨트롤의 데이터 바인딩 메서드를 작성하는 데 사용되는 코드입니다.</param>
        <summary>사용자 지정 컨트롤 작성기를 활성화하여 생성된 CodeDom(코드 문서 개체 모델)에 액세스하고, 컨트롤을 구문 분석 및 작성하는 동안 코드를 삽입 및 수정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 파일 페이지 모델에는 `baseType` 및 `derivedType` 매개 변수는 동일한 <xref:System.CodeDom.CodeTypeDeclaration> 형식에서 일반적으로 파생 되는 <xref:System.Web.UI.Page> 클래스입니다.  
  
 코드 숨김 페이지 모델에서 `baseType` 는 <xref:System.CodeDom.CodeTypeDeclaration> 에서 일반적으로 파생 되는 부분 코드 숨김 클래스를 나타내는 형식을 <xref:System.Web.UI.Page> 클래스입니다. `derivedType` 매개 변수는 태그를 포함 하는 partial 클래스에서 파생 된 클래스입니다.  
  
 ASP.NET 웹 페이지 모델에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지 구문 개요](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02)합니다.  
  
 CodeDOM을 사용 하 여 표시 하 고 소스 코드를 생성 하는 방법에 대 한 자세한 내용은 참조 [동적 소스 코드 생성 및 컴파일](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 서비스 개체를 가져옵니다.</summary>
        <value>이 <see cref="T:System.IServiceProvider" />의 서비스 개체를 나타내는 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceKey">
      <MemberSignature Language="C#" Value="public void SetResourceKey (string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceKey(string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceKey (resourceKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceKey(System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <see cref="T:System.Web.UI.ControlBuilder" />의 리소스 키입니다.</param>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 리소스 키를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      </Docs>
    </Member>
    <Member MemberName="SetServiceProvider">
      <MemberSignature Language="C#" Value="public void SetServiceProvider (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetServiceProvider(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceProvider (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceProvider(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <see cref="T:System.IServiceProvider" />의 서비스 개체를 나타내는 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</param>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 서비스 개체를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public virtual void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTagInnerText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTagInnerText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">제공할 텍스트입니다.</param>
        <summary>컨트롤 태그의 내부 텍스트를 <see cref="T:System.Web.UI.ControlBuilder" />에 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 경우에 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 이전에 반환 된 `true`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성 때는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 메서드를 호출 합니다. 컨트롤에 연결 되어 있어이 작성기는 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 디자이너를 통해 디자인 타임에 컨트롤 액세스 되는지 여부를 확인 합니다. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> 의 값을 반환는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성을 선택한 다음은 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 메서드를 호출 합니다. 경우는 <xref:System.Web.UI.ControlBuilder.InDesigner%2A> 속성이 `false`, <xref:System.Exception> throw 됩니다. 그렇지 않으면 컨트롤의 내부 텍스트에 반환 되는 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> 호출 합니다.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubBuilders">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList SubBuilders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList SubBuilders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.SubBuilders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubBuilders As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ SubBuilders { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.ControlBuilder" /> 개체에 대한 하위 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 목록을 가져옵니다.</summary>
        <value>자식 <see cref="T:System.Web.UI.ControlBuilder" /> 개체의 목록입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>만들려는 컨트롤의 태그 이름을 가져옵니다.</summary>
        <value>컨트롤의 태그 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection TemplatePropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection TemplatePropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TemplatePropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ TemplatePropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>템플릿 속성 항목의 컬렉션을 가져옵니다.</summary>
        <value>템플릿 속성 항목의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목이 없는 경우에 정적 빈 컬렉션이 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IThemeResolutionService ThemeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ThemeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeResolutionService As IThemeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IThemeResolutionService ^ ThemeResolutionService { System::Web::UI::IThemeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IThemeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임에 컨트롤 테마와 스킨을 관리하는 데 사용되는 <see cref="T:System.Web.UI.IThemeResolutionService" /> 개체를 가져옵니다.</summary>
        <value>디자인 타임에 컨트롤 테마와 스킨을 관리하는 데 사용되는 <see cref="T:System.Web.UI.IThemeResolutionService" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IThemeResolutionService> 인터페이스는 하나 이상에 대 한 컨테이너 <xref:System.Web.UI.ThemeProvider> 제공 하는 개체는 <xref:System.Web.UI.SkinBuilder> 테마를 적용 하 고 디자이너에서 생성 될 때 컨트롤 스킨을 제어 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IThemeResolutionService" />
      </Docs>
    </Member>
  </Members>
</Type>