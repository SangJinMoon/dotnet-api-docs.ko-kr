<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="752e52270def6f816ff7394f3965438a1e3f64db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576515" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>스타일 규칙 작성을 지원하기 위해 클래스에서 구현해야 하는 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스를 구현 하는 클래스 스타일 규칙 만들기를 지원 하기 위해 사용할 수 있습니다.  
  
 스타일 시트를 만들고 작성 하는 방법은 사용자 지정 하려면이 인터페이스를 구현 하는 클래스를 만들어야 합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlHead> 클래스를 통해 ASP.NET에서 사용 하기 위해이 인터페이스를 구현 하는 <xref:System.Web.UI.Page.Header%2A> 속성입니다.  
  
> [!NOTE]
>  비동기 포스트백 도중 스타일 또는 스타일 규칙을 프로그래밍 방식으로 수정 또는 추가 지원 되지 않습니다. ASP.NET 웹 페이지에 AJAX 기능을 추가 하면 비동기 포스트백 전체 페이지를 업데이트 하지 않고 페이지의 영역을 업데이트 합니다. 자세한 내용은 참조 [Microsoft Ajax 개요](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.Page.Header%2A> 구현의 <xref:System.Web.UI.IStyleSheet> 새 스타일 규칙을 만들고 등록 사용자 지정 프로그래밍 방식으로 보여 주기 위해 <xref:System.Web.UI.WebControls.Style> 개체입니다.  
  
 예, 사용자 지정의 첫 번째 부분에서 <xref:System.Web.UI.WebControls.Style> 개체 `labelStyle`을 만든 다음 현재 위치 (URL)에 대 한 등록 합니다. 그런 다음 `label1` 호출 레이블을 <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> 메서드 있도록는 `labelStyle` 스타일에 적용 되는 `label1` 레이블.  
  
 다른 사용자 지정을 정의 하는 두 번째 예제에서는 부분 <xref:System.Web.UI.WebControls.Style> 개체 `bodyStyle`, 새 스타일 규칙을 만드는 해당 속성을 설정 합니다.  
  
> [!NOTE]
>  이 클래스를 사용자 지정 구현을 만들 개발자에 주로 사용 됩니다. 이 예제에서는.NET Framework에서 제공 하는 구현을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 다음은 앞의 예제에서 웹 페이지에 대 한 코드 숨김 파일입니다.  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">포함 스타일시트에 추가할 스타일 규칙입니다.</param>
        <param name="urlResolver">현재 위치(URL)에 대한 컨텍스트 정보가 포함된 <see cref="T:System.Web.UI.IUrlResolutionService" /> 구현 개체입니다.</param>
        <param name="selector">스타일의 영향을 받는 HTML 페이지 부분입니다.</param>
        <summary>클래스에서 구현할 때 지정한 문서 언어 요소 형식 또는 선택기에 대한 스타일 규칙을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> 메서드는 지정된 된 선택기에 대 한 스타일 규칙을 만듭니다. 동일한 선택기에 대 한 여러 스타일 규칙을 만들 수 있습니다.  
  
 경우 `urlResolver` 로 설정 된 `null`, 현재 URL <xref:System.Web.UI.Page> 인스턴스가 사용 됩니다.  
  
> [!NOTE]
>  비동기 포스트백 도중 스타일 또는 스타일 규칙을 프로그래밍 방식으로 수정 또는 추가 지원 되지 않습니다. ASP.NET 웹 페이지에 AJAX 기능을 추가 하면 비동기 포스트백 전체 페이지를 업데이트 하지 않고 페이지의 영역을 업데이트 합니다. 자세한 내용은 참조 [Microsoft Ajax 개요](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.Page.Header%2A> 구현의 <xref:System.Web.UI.IStyleSheet> 새 정의 보여 주기 위해 <xref:System.Web.UI.WebControls.Style> 개체 `bodyStyle`합니다. 그런 다음 `bodyStyle` 호출 하 여 현재 URL에 추가 됩니다 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">포함 스타일시트에 추가할 스타일 규칙입니다.</param>
        <param name="urlResolver">현재 위치(URL)에 대한 컨텍스트 정보가 포함된 <see cref="T:System.Web.UI.IUrlResolutionService" /> 구현 개체입니다.</param>
        <summary>클래스에서 구현할 때 웹 페이지의 <see langword="&lt;head&gt;" /> 섹션에 있는 포함 스타일시트에 새 스타일 규칙을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 새 스타일 규칙을 추가 하 고 <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> 내에서 포함 된 스타일 시트에 속성 이름을 `<head>` 섹션은 <xref:System.Web.UI.Page> 개체를 자동으로 생성 된 스타일 이름으로 규칙을 연결 합니다. <xref:System.Web.UI.WebControls.Style> 개체가 사용 하 여 지정 된 렌더링은 `urlResolver` 매개 변수입니다.  
  
 경우 `urlResolver` 로 설정 된 `null`, 현재 URL <xref:System.Web.UI.Page> 사용 됩니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Style> 개체가 이미 등록 되어 추가 되지 않은 여러 번입니다.  
  
> [!NOTE]
>  비동기 포스트백 도중 스타일을 프로그래밍 방식으로 수정 또는 추가 지원 되지 않습니다. ASP.NET 웹 페이지에 AJAX 기능을 추가 하면 비동기 포스트백 전체 페이지를 업데이트 하지 않고 페이지의 영역을 업데이트 합니다. 자세한 내용은 참조 [Microsoft Ajax 개요](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.Page.Header%2A> 의 구현 <xref:System.Web.UI.IStyleSheet> 사용자 지정 만들기를 보여 주기 위해 <xref:System.Web.UI.WebControls.Style> 개체 `labelStyle`, 다음 현재 위치 (URL)에 대 한 등록 합니다. 그런 다음 `label1` 호출 레이블을 <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> 메서드 있도록는 `labelStyle` 스타일에 적용 되는 `label1` 레이블.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>