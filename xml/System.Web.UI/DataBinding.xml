<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e915345435b8c5e768afcc088fce8f6170747f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="efc59-101">ASP.NET 서버 컨트롤의 단일 데이터 바인딩 식에 대한 정보를 포함하여 Microsoft Visual Studio와 같은 RAD(신속한 응용 프로그램 개발) 디자이너가 디자인 타임에 데이터 바인딩 식을 만들 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efc59-101">Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time.</span>
      </span>
      <span data-ttu-id="efc59-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efc59-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efc59-103">인스턴스에서 서버 컨트롤의 각 데이터 바인딩 식을 디자인 타임에 표시 됩니다는 <xref:System.Web.UI.DataBinding> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-103">Each data-binding expression in a server control is represented at design time by an instance of the <xref:System.Web.UI.DataBinding> class.</span></span> <span data-ttu-id="efc59-104">데이터 바인딩 식이 하나 이상 포함 된 모든 서버 컨트롤에는 <xref:System.Web.UI.DataBindingCollection> 포함 된 개체는 <xref:System.Web.UI.DataBinding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-104">Any server control that contains one or more data-binding expressions has a <xref:System.Web.UI.DataBindingCollection> object that contains the <xref:System.Web.UI.DataBinding> objects.</span></span> <span data-ttu-id="efc59-105">이 컬렉션은이 통해 액세스할 수는 <xref:System.Web.UI.Control> 구현 클래스는 <xref:System.Web.UI.IDataBindingsAccessor> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-105">This collection is accessible through the <xref:System.Web.UI.Control> class implementing the <xref:System.Web.UI.IDataBindingsAccessor> interface.</span></span> <span data-ttu-id="efc59-106">RAD 사용자 지정 디자이너를 만들 때 컬렉션에 액세스 하려면 해당 구현을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-106">When you create a custom RAD designer, use that implementation to access the collection.</span></span> <span data-ttu-id="efc59-107">모든 <xref:System.Web.UI.DataBinding> 또는 <xref:System.Web.UI.DataBindingCollection> 서버 컨트롤에 연결 된 개체 디자인 타임에만 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-107">Any <xref:System.Web.UI.DataBinding> or <xref:System.Web.UI.DataBindingCollection> objects associated with a server control exist only at design time.</span></span> <span data-ttu-id="efc59-108">실행 시 존재 하지 않는 하며, 따라서 액세스할 수 없는 런타임 중.</span><span class="sxs-lookup"><span data-stu-id="efc59-108">They do not exist at run time and, therefore, are not accessible during run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efc59-109">다음 코드 예제에서는 한 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체에 같은 집합 <xref:System.Web.UI.DataBindingCollection> 들어 있는 컬렉션은 `propertyName` 의 값과 함께 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-109">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="efc59-110">컬렉션에 있으면는 <xref:System.Web.UI.DataBinding> 개체는 `propertyName` 값 `Text`, 개체의 값을 반환 하는이 코드 <xref:System.Web.UI.DataBinding.Expression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-110">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="efc59-111">이러한 개체가 없으면 빈 문자열이 반환 합니다 ("").</span><span class="sxs-lookup"><span data-stu-id="efc59-111">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="efc59-112">데이터 바인딩될 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-112">The property to bind data to.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="efc59-113">데이터 바인딩될 속성의 .NET Framework 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-113">The .NET Framework type of the property to bind data to.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="efc59-114">계산될 데이터 바인딩 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-114">The data-binding expression to be evaluated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efc59-115">
            <see cref="T:System.Web.UI.DataBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-115">Initializes a new instance of the <see cref="T:System.Web.UI.DataBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efc59-116">다음 코드 예제에서는 한 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체에 같은 집합 <xref:System.Web.UI.DataBindingCollection> 들어 있는 컬렉션은 `propertyName` 의 값과 함께 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-116">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="efc59-117">컬렉션에 있으면는 <xref:System.Web.UI.DataBinding> 개체는 `propertyName` 값 `Text`, 개체의 값을 반환 하는이 코드 <xref:System.Web.UI.DataBinding.Expression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-117">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="efc59-118">이러한 개체가 없으면 빈 문자열이 반환 합니다 ("").</span><span class="sxs-lookup"><span data-stu-id="efc59-118">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="efc59-119">현재 <see cref="T:System.Web.UI.DataBinding" />와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-119">The object to compare against the current <see cref="T:System.Web.UI.DataBinding" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efc59-120">지정된 개체가 현재 개체와 같은 <see cref="T:System.Web.UI.DataBinding" /> 클래스의 인스턴스인지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-120">Determines whether the specified object is the same instance of the <see cref="T:System.Web.UI.DataBinding" /> class as the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efc59-121">데이터 바인딩 속성 이름이 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-121">
              <see langword="true" /> if the data-binding property names match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efc59-122">계산될 데이터 바인딩 식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-122">Gets or sets the data-binding expression to be evaluated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efc59-123">계산될 데이터 바인딩 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-123">The data-binding expression to be evaluated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efc59-124">다음 코드 예제에서는 한 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체에 같은 집합 <xref:System.Web.UI.DataBindingCollection> 들어 있는 컬렉션은 `propertyName` 의 값과 함께 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-124">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="efc59-125">컬렉션에 있으면는 <xref:System.Web.UI.DataBinding> 개체는 `propertyName` 값 `Text`, 개체의 값을 반환 하는이 코드 <xref:System.Web.UI.DataBinding.Expression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-125">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="efc59-126">이러한 개체가 없으면 빈 문자열이 반환 합니다 ("").</span><span class="sxs-lookup"><span data-stu-id="efc59-126">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efc59-127">
            <see cref="T:System.Web.UI.DataBinding" /> 개체의 인스턴스에 대한 해시 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-127">Retrieves the hash code for an instance of the <see cref="T:System.Web.UI.DataBinding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efc59-128">부호 있는 32비트 정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-128">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efc59-129"><xref:System.Web.UI.DataBinding> 개체에 배치 되는 <xref:System.Web.UI.DataBindingCollection> 디자인 타임에만 액세스할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-129"><xref:System.Web.UI.DataBinding> objects are placed in a <xref:System.Web.UI.DataBindingCollection> object, accessible only at design time.</span></span> <span data-ttu-id="efc59-130">컬렉션은 컨트롤의 바인딩을 나타내는 하는 해시 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-130">The collection is a hash table that represents the bindings on a control.</span></span> <span data-ttu-id="efc59-131">하나만 있을 수 있습니다, 속성 당 하나의 바인딩이 해시 코드 계산과 일치 하도록는 <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> 구현과 속성 이름만 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-131">There can only be one binding per property, so the hash code computation matches the <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> implementation and only takes the property name into account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efc59-132">데이터 바인딩될 ASP.NET 서버 컨트롤 속성의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-132">Gets the name of the ASP.NET server control property to bind data to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efc59-133">데이터 바인딩될 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-133">The property to bind data to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efc59-134">다음 코드 예제에서는 세 개의 변수를 선언 `dataBindingOutput1`, `dataBindingOutput2`, 및 `dataBindingOutput3`의 다른 속성에 액세스 하는 <xref:System.Web.UI.DataBinding> 개체 `myDataBinding2`합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-134">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="efc59-135">다음의 값을 할당는 <xref:System.Web.UI.DataBinding.PropertyName%2A> 속성을 `dataBindingOutput1`, 문자열와 연결 "속성 이름이 인"는 값 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-135">It then assigns the value of the <xref:System.Web.UI.DataBinding.PropertyName%2A> property to `dataBindingOutput1`, concatenates it with the string "The property name is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efc59-136">데이터 바인딩된 ASP.NET 서버 컨트롤 속성의 .NET Framework 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-136">Gets the .NET Framework type of the data-bound ASP.NET server control property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efc59-137">데이터 바인딩된 속성의 .NET Framework 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc59-137">The .NET Framework type of the data-bound property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efc59-138">다음 코드 예제에서는 세 개의 변수를 선언 `dataBindingOutput1`, `dataBindingOutput2`, 및 `dataBindingOutput3`의 다른 속성에 액세스 하는 <xref:System.Web.UI.DataBinding> 개체 `myDataBinding2`합니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-138">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="efc59-139"><xref:System.Web.UI.DataBinding.PropertyType%2A> 속성 값이 할당 `dataBindingOutput2` "is 속성 형식," 문자열로 연결 하 고 파일에는 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="efc59-139">The <xref:System.Web.UI.DataBinding.PropertyType%2A> property value is assigned to `dataBindingOutput2` and concatenated with the string "The property type is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>