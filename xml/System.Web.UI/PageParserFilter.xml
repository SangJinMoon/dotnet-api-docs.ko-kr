<Type Name="PageParserFilter" FullName="System.Web.UI.PageParserFilter">
  <TypeSignature Language="C#" Value="public abstract class PageParserFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageParserFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParserFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageParserFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParserFilter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e076b-101">구문 분석 시 페이지에서 항목이 허용되는지 여부를 확인하기 위해 ASP.NET 파서가 사용하는 페이지 파서 필터의 추상 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-101">Provides an abstract base class for a page parser filter that is used by the ASP.NET parser to determine whether an item is allowed in the page at parse time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e076b-102">다음 예제에서 파생 되는 클래스를 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.PageParserFilter> ASP.NET 페이지 파서의 동작을 제어 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-102">The following example demonstrates how you can create a class that derives from the <xref:System.Web.UI.PageParserFilter> class to govern the behavior of the ASP.NET page parser.</span></span> <span data-ttu-id="e076b-103">`CustomPageParserFilter` 하는 파서 필터 명시적으로 페이지에서 코드를 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-103">The `CustomPageParserFilter` is a parser filter that explicitly rejects code in the page.</span></span> <span data-ttu-id="e076b-104">재정의 하 여 수행 된 <xref:System.Web.UI.PageParserFilter.AllowCode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-104">It does this by overriding the <xref:System.Web.UI.PageParserFilter.AllowCode%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.PageParserFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/CS/CustomPageParserFilter.cs#2)]
 [!code-vb[System.Web.UI.PageParserFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/VB/CustomPageParserFilter.vb#2)]  
  
 <span data-ttu-id="e076b-105">사용 하 여 `CustomPageParserFilter` 예제를 클래스 App_Code 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-105">To use the `CustomPageParserFilter` sample, place the class in your App_Code directory.</span></span> <span data-ttu-id="e076b-106">필터를 사용 하려면 ASP.NET 파서를 구성 해야 합니다는 `pages` 사이트의 Web.config 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-106">You must configure the ASP.NET parsers to use the filter in the `pages` section of your site's Web.config configuration file.</span></span> <span data-ttu-id="e076b-107">다음 예제에서는 구성 파일에 대 한 구성을 보여 줍니다. `CustomPageParserFilter`합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-107">The following example configuration file shows the configuration for `CustomPageParserFilter`.</span></span> <span data-ttu-id="e076b-108">를 파서 필터를 사용 하도록 구성 하는 경우 ASP.NET 파서 코드 페이지에서 발생 하는 경우 빌드 동안 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-108">When configured to use a parser filter, the ASP.NET parser throws an exception during the build if it encounters code in a page.</span></span>  
  
 `<?xml version="1.0" ?>`  
  
 `<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">`  
  
 `<system.web>`  
  
 `<pages`  
  
 `pageParserFilterType="Samples.AspNet.CS.CustomPageParserFilter">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageParserFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageParserFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e076b-109"><see cref="T:System.Web.UI.PageParserFilter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-109">Initializes a new instance of the <see cref="T:System.Web.UI.PageParserFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="protected void AddControl (Type type, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddControl(class System.Type type, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AddControl(System.Type,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddControl(Type ^ type, System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e076b-110"><see cref="T:System.Web.UI.ControlBuilder" />가 나타내는 컨트롤 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-110">The control type that the <see cref="T:System.Web.UI.ControlBuilder" /> represents.</span></span></param>
        <param name="attributes"><span data-ttu-id="e076b-111">지정된 태그 특성을 모두 보유하는 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-111">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span></span></param>
        <summary><span data-ttu-id="e076b-112">페이지 컨트롤 트리에서 현재 페이지 파서 위치에 <see cref="T:System.Web.UI.ControlBuilder" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-112">Adds a <see cref="T:System.Web.UI.ControlBuilder" /> object in the page control tree at the current page parser position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-114">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-114">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBaseType">
      <MemberSignature Language="C#" Value="public virtual bool AllowBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowBaseType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowBaseType (baseType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowBaseType(Type ^ baseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="e076b-115">현재 페이지의 기본 클래스가 될 수 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-115">A <see cref="T:System.Type" /> that represents the potential base class of the current page.</span></span></param>
        <summary><span data-ttu-id="e076b-116">페이지가 지정된 <see cref="T:System.Type" />에서 파생될 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-116">Determines whether the page can be derived from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-117">페이지가 지정된 형식에서 상속될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-117"><see langword="true" /> if the page can inherit from the specified type; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-118">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-118">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-119"><xref:System.Web.UI.TemplateParser> 클래스는 기본 형식을 허용 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-119">The <xref:System.Web.UI.TemplateParser> class determines whether a base type is permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCode">
      <MemberSignature Language="C#" Value="public virtual bool AllowCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.AllowCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-120">ASP.NET 파서 필터가 페이지에서 코드를 허용하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-120">Gets a value indicating whether an ASP.NET parser filter permits code on the page.</span></span></summary>
        <value>
          <span data-ttu-id="e076b-121">파서 필터가 코드를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-121"><see langword="true" /> if a parser filter permits code; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-122">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-122">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-123"><xref:System.Web.UI.TemplateParser> 클래스는 모든 관련 검사 <xref:System.Web.UI.PageParserFilter> 페이지 컴파일할 수 있는 코드를 포함할 수 있는지 여부를 결정 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e076b-123">The <xref:System.Web.UI.TemplateParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to determine whether a page can contain code that can be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowControl">
      <MemberSignature Language="C#" Value="public virtual bool AllowControl (Type controlType, System.Web.UI.ControlBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowControl(class System.Type controlType, class System.Web.UI.ControlBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowControl(System.Type,System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowControl (controlType As Type, builder As ControlBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowControl(Type ^ controlType, System::Web::UI::ControlBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="controlType"><span data-ttu-id="e076b-124">추가할 컨트롤의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-124">A <see cref="T:System.Type" /> that represents the type of control to add.</span></span></param>
        <param name="builder"><span data-ttu-id="e076b-125">지정된 컨트롤 형식을 빌드하는 데 사용되는 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-125">A <see cref="T:System.Web.UI.ControlBuilder" /> used to build the specified type of control.</span></span></param>
        <summary><span data-ttu-id="e076b-126">이 페이지에 대해 지정된 컨트롤 형식이 허용되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-126">Gets a value indicating whether the specified control type is allowed for this page.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-127">현재 페이지에서 컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-127"><see langword="true" /> if the control can be used with the current page; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-128">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-128">The default value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-129"><xref:System.Web.UI.TemplateParser> 클래스를 구문 분석 시 컨트롤이 페이지에 허용 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-129">The <xref:System.Web.UI.TemplateParser> class checks to see whether controls are permitted in a page at parse time.</span></span> <span data-ttu-id="e076b-130">재정의 <xref:System.Web.UI.PageParserFilter.AllowControl%2A> 거부 하거나 특정 컨트롤 페이지에서 허용 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="e076b-130">Override the <xref:System.Web.UI.PageParserFilter.AllowControl%2A> method to reject or permit specific controls in your pages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowServerSideInclude">
      <MemberSignature Language="C#" Value="public virtual bool AllowServerSideInclude (string includeVirtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowServerSideInclude(string includeVirtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowServerSideInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowServerSideInclude (includeVirtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowServerSideInclude(System::String ^ includeVirtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeVirtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeVirtualPath"><span data-ttu-id="e076b-131">포함된 파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-131">The virtual path to the included file.</span></span></param>
        <summary><span data-ttu-id="e076b-132">파서가 페이지에서 특정 서버측 Include를 허용하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-132">Determines whether a parser permits a specific server-side include on a page.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-133">파서가 특정 서버측 Include를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-133"><see langword="true" /> if a parser permits the specific server-side include; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-134">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-134">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-135">재정의 <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> 모두 거부 하는 메서드 또는 특정 서버 쪽 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-135">Override the <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> method to reject all or specific server-side includes.</span></span> <span data-ttu-id="e076b-136">구문을 포함 하는 서버 쪽에 대 한 자세한 내용은 참조 [지시문 구문을 포함 하는 서버 쪽](http://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9)합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-136">For more information about server-side include syntax, see [Server-Side Include Directive Syntax](http://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowVirtualReference">
      <MemberSignature Language="C#" Value="public virtual bool AllowVirtualReference (string referenceVirtualPath, System.Web.UI.VirtualReferenceType referenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowVirtualReference(string referenceVirtualPath, valuetype System.Web.UI.VirtualReferenceType referenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowVirtualReference(System.String,System.Web.UI.VirtualReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowVirtualReference (referenceVirtualPath As String, referenceType As VirtualReferenceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowVirtualReference(System::String ^ referenceVirtualPath, System::Web::UI::VirtualReferenceType referenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceVirtualPath" Type="System.String" />
        <Parameter Name="referenceType" Type="System.Web.UI.VirtualReferenceType" />
      </Parameters>
      <Docs>
        <param name="referenceVirtualPath"><span data-ttu-id="e076b-137">마스터 페이지 파일, ASP.NET 페이지 또는 사용자 정의 컨트롤과 같은 리소스의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-137">The virtual path to a resource, such as a master page file, ASP.NET page, or user control.</span></span></param>
        <param name="referenceType"><span data-ttu-id="e076b-138">리소스 형식을 식별하는 <see cref="T:System.Web.UI.VirtualReferenceType" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-138">A <see cref="T:System.Web.UI.VirtualReferenceType" /> value that identifies the type of resource.</span></span></param>
        <summary><span data-ttu-id="e076b-139">파서가 페이지에서 특정 리소스 형식에 대한 가상 참조를 허용하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-139">Determines whether a parser permits a virtual reference to a specific type of resource on a page.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-140">파서가 특정 리소스 형식에 대한 가상 참조를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-140"><see langword="true" /> if the parser permits a virtual reference to a specific type of resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-141"><xref:System.Web.UI.TemplateParser> 클래스 페이지에서 특정 유형의 리소스를 참조할 수 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-141">The <xref:System.Web.UI.TemplateParser> class determines whether a particular type of resource can be referenced from a page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.VirtualReferenceType" />
      </Docs>
    </Member>
    <Member MemberName="CalledFromParseControl">
      <MemberSignature Language="C#" Value="protected bool CalledFromParseControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalledFromParseControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CalledFromParseControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CalledFromParseControl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-142">파서 필터가 페이지에서 호출되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-142">Gets a value that indicates whether the parser filter was called from the page.</span></span></summary>
        <value>
          <span data-ttu-id="e076b-143">파서 필터가 페이지에서 호출되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-143"><see langword="true" /> if a parser filter was called from the page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-144">이 속성이 `true` 때의 구현을 <xref:System.Web.UI.PageParserFilter> 클래스를 호출 하 여 호출 됩니다는 `ParseControl` 의 메서드는 <xref:System.Web.UI.Page> 클래스 또는 호출 하는 `ParseControl` 의 메서드는 `TemplateControl` 는 의참조<xref:System.Web.UI.Page>클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-144">This property is set to `true` when an implementation of the <xref:System.Web.UI.PageParserFilter> class is invoked by calling the `ParseControl` method of the <xref:System.Web.UI.Page> class or by calling the `ParseControl` method of the `TemplateControl` reference of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompilationMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.CompilationMode GetCompilationMode (System.Web.UI.CompilationMode current);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.CompilationMode GetCompilationMode(valuetype System.Web.UI.CompilationMode current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCompilationMode (current As CompilationMode) As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::CompilationMode GetCompilationMode(System::Web::UI::CompilationMode current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Web.UI.CompilationMode" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="e076b-145">페이지에 대한 현재 컴파일 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-145">The current compilation mode for the page.</span></span></param>
        <summary><span data-ttu-id="e076b-146">페이지에 대한 현재 컴파일 모드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-146">Retrieves the current compilation mode for the page.</span></span></summary>
        <returns><span data-ttu-id="e076b-147"><see cref="T:System.Web.UI.CompilationMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-147">One of the <see cref="T:System.Web.UI.CompilationMode" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-148"><xref:System.Web.UI.TemplateControlParser> 클래스는 모든 관련 검사 <xref:System.Web.UI.PageParserFilter> 인스턴스를 현재 처리 된 페이지에 컴파일 모드를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-148">The <xref:System.Web.UI.TemplateControlParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to apply a compilation mode to the currently processed page.</span></span> <span data-ttu-id="e076b-149">기본 구현은 <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> 메서드는 반환 된 <xref:System.Web.UI.CompilationMode> 현재 매개 변수에 전달 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-149">The default implementation of the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method simply returns the <xref:System.Web.UI.CompilationMode> value that is passed in the current parameter.</span></span> <span data-ttu-id="e076b-150">재정의 <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> 사용할 특정 또는 다른 방법을 <xref:System.Web.UI.CompilationMode> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-150">Override the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method to use a specific or different <xref:System.Web.UI.CompilationMode> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetNoCompileUserControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetNoCompileUserControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNoCompileUserControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetNoCompileUserControlType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNoCompileUserControlType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetNoCompileUserControlType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e076b-151">동적으로 컴파일되지 않는 페이지나 컨트롤에 사용해야 하는 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-151">Returns a <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span></summary>
        <returns><span data-ttu-id="e076b-152">동적으로 컴파일되지 않는 페이지나 컨트롤에 사용해야 하는 반환 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-152">The return <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span> <span data-ttu-id="e076b-153">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-153">The default is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-154">재정의할 수 있습니다는 <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> 페이지 또는 동적으로 컴파일되지 않습니다 처럼 처리 하는 컨트롤의 반환 형식을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="e076b-154">You can override the <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> method to specify the return type of pages or controls that are treated as if they are not dynamically compiled.</span></span> <span data-ttu-id="e076b-155">기본값은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-155">The default is `null`.</span></span>  
  
 <span data-ttu-id="e076b-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-157">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-157">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e076b-158">페이지에 사용되는 필터를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-158">Initializes a filter used for a page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-159">때문에 <xref:System.Web.UI.PageParserFilter> 클래스는 잘 정의 된 public 생성자를 노출 하지 않습니다, 사용 하는 페이지 파서에서 초기화는 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e076b-159">Because the <xref:System.Web.UI.PageParserFilter> class does not expose well-defined public constructors, it is initialized by the page parsers that use the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method.</span></span> <span data-ttu-id="e076b-160">재정의 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 인스턴스의 경우 단계를 사용자 고유의 사용자 지정 초기화를 추가 하는 방법을 <xref:System.Web.UI.PageParserFilter> 생성 되어 ASP.NET에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-160">Override the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method to add your own custom initialization steps when an instance of <xref:System.Web.UI.PageParserFilter> is created and used by ASP.NET.</span></span> <span data-ttu-id="e076b-161">`virtualPath` 에 전달 된 매개 변수는 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 메서드 설정은 <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> 속성 일 수 없습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-161">The `virtualPath` parameter passed to the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method sets the <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property, and cannot be `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="protected int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.Line" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Line { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-162">파일에서 현재 구문 분석 중인 줄 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-162">Gets the line number that is currently being parsed in the file.</span></span></summary>
        <value><span data-ttu-id="e076b-163">파일에서 파서 필터가 현재 처리 중인 줄을 나타내는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-163">The integer value representing the line in the file that the parser filter is currently processing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-164">사용자 지정에서 <xref:System.Web.UI.PageParserFilter> 구현에서 사용 하 여는 <xref:System.Web.UI.PageParserFilter.Line%2A> 속성을 구문 분석 하는 동안 오류가 발생 하는 보고서입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-164">In a custom <xref:System.Web.UI.PageParserFilter> implementation, use the <xref:System.Web.UI.PageParserFilter.Line%2A> property to report where errors occur during parsing.</span></span>  
  
 <span data-ttu-id="e076b-165"><xref:System.Web.UI.PageParserFilter.Line%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-165"><xref:System.Web.UI.PageParserFilter.Line%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-166">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-166">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfControlsAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfControlsAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfControlsAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfControlsAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfControlsAllowed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-167">파서 필터가 단일 페이지에서 구문 분석할 수 있는 최대 컨트롤 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-167">Gets the maximum number of controls that a parser filter can parse for a single page.</span></span></summary>
        <value><span data-ttu-id="e076b-168">파서 필터가 페이지에서 구문 분석할 수 있는 최대 컨트롤 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-168">The maximum number of controls a parser filter can parse for a page.</span></span> <span data-ttu-id="e076b-169">기본값은 0으로, 구문 분석되는 컨트롤이 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-169">The default value is 0, which indicates that no controls are parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-170">ASP.NET 페이지 파서 구문 분석 하 고 의해 설정 된 한계를 초과 하면 컨트롤의 추적는 <xref:System.Web.UI.PageParserFilter> throw 인스턴스에 <xref:System.Web.HttpException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-170">The ASP.NET page parser keeps track of the controls it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an <xref:System.Web.HttpException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfDirectDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfDirectDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfDirectDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfDirectDependenciesAllowed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-171">페이지 파서가 단일 페이지에서 허용하는 직접 파일 종속성의 최대 개수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-171">Gets the maximum number of direct file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="e076b-172">페이지 파서가 페이지에서 구문 분석할 수 있는 직접 파일 종속성의 최대 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-172">The maximum number of direct file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="e076b-173">기본값은 0으로, 종속성이 허용되지 않음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-173">The default is 0, which that indicates no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-174"><xref:System.Web.UI.TemplateParser> 클래스 직접 수 하는 추적 및 간접 파일 종속성, 구문 분석 하 고도 초과 하면 설정한는 <xref:System.Web.UI.PageParserFilter> 인스턴스를 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-174">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="ParseComplete">
      <MemberSignature Language="C#" Value="public virtual void ParseComplete (System.Web.UI.ControlBuilder rootBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseComplete(class System.Web.UI.ControlBuilder rootBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ParseComplete(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ParseComplete (rootBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ParseComplete(System::Web::UI::ControlBuilder ^ rootBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="rootBuilder"><span data-ttu-id="e076b-175">페이지 구문 분석과 연결된 <see cref="T:System.Web.UI.ControlBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-175">The <see cref="T:System.Web.UI.ControlBuilder" /> associated with the page parsing.</span></span></param>
        <summary><span data-ttu-id="e076b-176">페이지의 구문 분석이 완료되면 이를 필터에 알리기 위해 ASP.NET 페이지 파서에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-176">Called by an ASP.NET page parser to notify a filter when the parsing of a page is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessDirective">
      <MemberSignature Language="C#" Value="public virtual void PreprocessDirective (string directiveName, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreprocessDirective(string directiveName, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PreprocessDirective (directiveName As String, attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PreprocessDirective(System::String ^ directiveName, System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directiveName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="directiveName"><span data-ttu-id="e076b-177">Page 지시문입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-177">The page directive.</span></span></param>
        <param name="attributes"><span data-ttu-id="e076b-178">페이지에서 구문 분석된 특성 및 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-178">A collection of attributes and values parsed from the page.</span></span></param>
        <summary><span data-ttu-id="e076b-179">페이지 파서 필터가 페이지 지시문을 전처리할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-179">Allows the page parser filter to preprocess page directives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-180">페이지 파서 호출은 <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> 구문 분석 중에 발생 하는 각 지시문에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="e076b-180">The page parser calls the <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> method for each directive encountered during parsing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCodeConstruct">
      <MemberSignature Language="C#" Value="public virtual bool ProcessCodeConstruct (System.Web.UI.CodeConstructType codeType, string code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessCodeConstruct(valuetype System.Web.UI.CodeConstructType codeType, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessCodeConstruct (codeType As CodeConstructType, code As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessCodeConstruct(System::Web::UI::CodeConstructType codeType, System::String ^ code);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.Web.UI.CodeConstructType" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeType"><span data-ttu-id="e076b-181">코드 구문의 형식을 식별하는 <see cref="T:System.Web.UI.CodeConstructType" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-181">One of the <see cref="T:System.Web.UI.CodeConstructType" /> enumeration values that identifies the type of the code construct.</span></span></param>
        <param name="code"><span data-ttu-id="e076b-182">코드 구문 내의 코드가 들어 있는 문자열 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-182">The string literal that contains the code inside the code construct.</span></span></param>
        <summary><span data-ttu-id="e076b-183">이후에 파서 필터에서 코드 블록을 처리해야 하는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-183">Returns a value that indicates whether a code block should be processed by subsequent parser filters.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-184">파서에서 코드 구문을 추가로 처리해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-184"><see langword="true" /> if the parser should process a code construct further; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-185">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-185">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-186">재정의할 수 있습니다는 <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> 사용자 지정을 구현 하는 경우 코드 구조에 포함 된 코드를 구문 분석할 메서드의 <xref:System.Web.UI.PageParserFilter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-186">You can override the <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> method to parse code contained in code constructs when implementing a custom <xref:System.Web.UI.PageParserFilter>.</span></span> <span data-ttu-id="e076b-187">이 메서드는 코드를 처리 후 반환 `true` 파서가 추가로 고, 그렇지 않으면 코드 처리를 하는 경우 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-187">After processing the code, this method returns `true` if the parser should process the code further; otherwise, it returns `false`.</span></span>  
  
 <span data-ttu-id="e076b-188">허용 되는 코드 생성의 종류는 <xref:System.Web.UI.CodeConstructType> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-188">The type of allowed code constructs are the <xref:System.Web.UI.CodeConstructType> enumeration values.</span></span>  
  
 <span data-ttu-id="e076b-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-190">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-190">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CodeConstructType" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDataBindingAttribute">
      <MemberSignature Language="C#" Value="public virtual bool ProcessDataBindingAttribute (string controlId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessDataBindingAttribute(string controlId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessDataBindingAttribute (controlId As String, name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessDataBindingAttribute(System::String ^ controlId, System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e076b-191">데이터 바인딩 특성이 들어 있는 컨트롤의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-191">The ID of the control that contains the data binding attribute.</span></span></param>
        <param name="name"><span data-ttu-id="e076b-192">데이터 바인딩 식이 있는 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-192">The name of the attribute with the data binding expression.</span></span></param>
        <param name="value"><span data-ttu-id="e076b-193">데이터 바인딩 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-193">The data binding expression.</span></span></param>
        <summary><span data-ttu-id="e076b-194">파서 필터에서 특성의 데이터 바인딩 식을 처리할지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-194">Returns a value that indicates whether the parser filter processes a data binding expression in an attribute.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-195">파서 필터에서 데이터 바인딩 특성을 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-195"><see langword="true" /> if the parser filter processes data binding attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-196">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-196">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-197">재정의할 수 있습니다는 <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> 메서드를 사용자 지정을 구현 하는 경우 데이터 바인딩 식을 처리 하는 파서 필터에서 <xref:System.Web.UI.PageParserFilter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-197">You can override the <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> method to allow the parser filter to process data binding expressions when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="e076b-198">특성으로 사용 하는 데이터 바인딩 식의 예는 `<%# expression %>`합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-198">An example of a data binding expression used with an attribute is `<%# expression %>`.</span></span>  
  
 <span data-ttu-id="e076b-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-200">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-200">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventHookup">
      <MemberSignature Language="C#" Value="public virtual bool ProcessEventHookup (string controlId, string eventName, string handlerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessEventHookup(string controlId, string eventName, string handlerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessEventHookup(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessEventHookup (controlId As String, eventName As String, handlerName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessEventHookup(System::String ^ controlId, System::String ^ eventName, System::String ^ handlerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handlerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e076b-201">해당 이벤트에 처리할 이벤트 처리기가 있는 컨트롤의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-201">The ID of the control whose event has the event handler to process.</span></span></param>
        <param name="eventName"><span data-ttu-id="e076b-202">필터링할 <c>controlID</c>의 이벤트 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-202">The event name of the <c>controlID</c> to filter on.</span></span></param>
        <param name="handlerName"><span data-ttu-id="e076b-203">필터링할 <c>eventName</c> 이름의 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-203">The handler of the <c>eventName</c> name to filter on.</span></span></param>
        <summary><span data-ttu-id="e076b-204">파서 필터에서 이벤트 처리기를 추가로 처리할지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-204">Returns a value that indicates whether event handlers should be processed further by the parser filter.</span></span></summary>
        <returns>
          <span data-ttu-id="e076b-205">파서에서 이벤트 처리기를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-205"><see langword="true" /> if the parser processes event handlers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e076b-206">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-206">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-207">재정의할 수 있습니다는 <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> 메서드를 사용자 지정을 구현 하는 경우 이벤트 후크를 처리 하 여 파서에서 <xref:System.Web.UI.PageParserFilter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-207">You can override the <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> method to allow the parser to process event hookups when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="e076b-208">이벤트 처리기의 예제에 대 한 처리기를 제공 하는 <xref:System.Web.UI.WebControls.Button.Click> 의 이벤트는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-208">An example of an event handler is providing a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e076b-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-210">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-210">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperty">
      <MemberSignature Language="C#" Value="protected void SetPageProperty (string filter, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPageProperty(string filter, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.SetPageProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPageProperty (filter As String, name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPageProperty(System::String ^ filter, System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="e076b-211">식의 필터 값이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-211">A string containing the value of the filter on an expression.</span></span> <span data-ttu-id="e076b-212">예제를 보려면 <see cref="T:System.Web.UI.PropertyEntry" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e076b-212">For an example, see <see cref="T:System.Web.UI.PropertyEntry" />.</span></span></param>
        <param name="name"><span data-ttu-id="e076b-213">값을 설정할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-213">The name of the property to set a value for.</span></span></param>
        <param name="value"><span data-ttu-id="e076b-214">설정할 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-214">The value of the property to set.</span></span></param>
        <summary><span data-ttu-id="e076b-215"><see cref="T:System.Web.UI.TemplateControl" /> 클래스에서 파생된 <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" /> 및 <see cref="T:System.Web.UI.MasterPage" />와 같은 컨트롤의 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-215">Sets a property on a control derived from the <see cref="T:System.Web.UI.TemplateControl" /> class, which includes the <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" />, and <see cref="T:System.Web.UI.MasterPage" /> controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e076b-217">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e076b-217">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PropertyEntry" />
      </Docs>
    </Member>
    <Member MemberName="TotalNumberOfDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int TotalNumberOfDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalNumberOfDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalNumberOfDependenciesAllowed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-218">페이지 파서가 단일 페이지에서 허용하는 직접 및 간접 파일 종속성의 최대 개수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-218">Gets the maximum number of direct and indirect file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="e076b-219">페이지 파서가 페이지에서 구문 분석할 수 있는 직접 및 간접 파일 종속성의 최대 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-219">The maximum number of direct and indirect file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="e076b-220">기본값은 0으로, 종속성이 허용되지 않음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-220">The default is 0, which indicates that no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-221"><xref:System.Web.UI.TemplateParser> 클래스 직접 수 하는 추적 및 간접 파일 종속성, 구문 분석 하 고도 초과 하면 설정한는 <xref:System.Web.UI.PageParserFilter> 인스턴스를 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-221">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e076b-222">현재 구문 분석하고 있는 페이지의 가상 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-222">Gets the virtual path to the page currently being parsed.</span></span></summary>
        <value><span data-ttu-id="e076b-223">ASP.NET 페이지의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-223">A virtual path to an ASP.NET page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e076b-224"><xref:System.Web.UI.PageParserFilter.VirtualPath%2A> 속성은 절대 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e076b-224">The <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property is never `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>