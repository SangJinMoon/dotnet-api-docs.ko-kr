<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52fd9f5f59442c7630b462fbf485465dfc7c41206.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fd9f5f59442c7630b462fbf485465dfc7c41206</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IDataSource">
          <source>Represents an abstract data source that data-bound controls bind to.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 바인딩할 추상 데이터 소스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion.</source>
          <target state="translated">ASP.NET 웹 서버 컨트롤의 데이터를 일관성 있게에 바인딩할 수 있도록 하는 컨트롤 데이터 바인딩 아키텍처를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls.</source>
          <target state="translated">데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤 및 데이터 소스 제어 바인딩 이라고 하는 클래스 라고 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on.</source>
          <target state="translated">데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 관계형 데이터베이스, 파일, 스트림, 비즈니스 개체 및 등입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.</source>
          <target state="translated">데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>You implement the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface when you want to implement your own custom ASP.NET data source control.</source>
          <target state="translated">구현 하는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 사용자 고유의 사용자 지정 ASP.NET 데이터 소스 제어를 구현 하려면 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface is a data source control.</source>
          <target state="translated">클래스를 구현 하는 모든 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스는 데이터 소스 제어 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스는 해당 역할을 제어 하 고는 두 가지 방법으로 기본 데이터 바인딩 아키텍처 개념 중 하나를 정의 하는 모든 ASP.NET 데이터 원본에 대 한 기초:는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>This concept is that all data source controls support one or more named views on their data.</source>
          <target state="translated">이 개념은 모든 데이터 소스 컨트롤이 데이터에 대해 하나 이상의 명명 된 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>The data source view object is similar to the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> abstraction in the <ph id="ph2">&lt;xref:System.Data&gt;</ph> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines.</source>
          <target state="translated">데이터 원본 뷰 개체는 비슷합니다는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 추상화는 <ph id="ph2">&lt;xref:System.Data&gt;</ph> 네임 스페이스: 정렬, 필터링 및 보기를 정의 하는 다른 데이터 작업에 대 한 데이터의 보기를 사용자 지정 된 된 데이터 바인딩 가능 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>At its core, a data source control does nothing more than retrieve views on data.</source>
          <target state="translated">본질적으로 데이터 소스 제어는 아무 작업도 수행 이상은 뷰 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>A data source control can have one or more associated data source view objects.</source>
          <target state="translated">데이터 소스 제어는 하나 이상의 연결 된 데이터 원본 뷰 개체를 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Some data source controls, including those that represent relational databases such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>, support only one view.</source>
          <target state="translated">일부 데이터 소스와 같은 관계형 데이터베이스를 표시 하는 것을 포함 하 여 컨트롤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>, 보기가 하나만 지원 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Other data source controls, including hierarchical data source controls such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SiteMapDataSource&gt;</ph>, support many views.</source>
          <target state="translated">다른 데이터 소스와 같은 계층적 데이터 소스 컨트롤을 포함 하 여 컨트롤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SiteMapDataSource&gt;</ph>, 여러 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>The data source view defines the capabilities of a data source and the operations that it supports.</source>
          <target state="translated">데이터 원본 뷰는 데이터 원본 및 지 원하는 작업의 기능을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>In summary, data source controls implement the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent.</source>
          <target state="translated">요약 하면, 데이터 소스 컨트롤 구현는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스, 하나를 지원 또는 이상의 나타내는 데이터 원본에서 데이터 검색을 항상 지원을 나타내지만, 데이터에 대해 뷰를 명명 된 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>Data source controls always retrieve data on demand, such as when <ph id="ph1">`DataBind`</ph> is called on a data bound control.</source>
          <target state="translated">데이터 소스 컨트롤은 항상 경우와 같이 필요에 따라 데이터를 검색 <ph id="ph1">`DataBind`</ph> 데이터 바인딩된 컨트롤에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>The following code example demonstrates how a class can implement the methods defined by the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface to provide data to data-bound controls.</source>
          <target state="translated">다음 코드 예제에서는 클래스 정의 하는 메서드의 구현 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 데이터 바인딩된 컨트롤에 데이터를 제공 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data.</source>
          <target state="translated">이 예에서 데이터 소스 제어의 쉼표로 구분 된 값 파일에서 데이터 소스 역할을 및 쉼표로 구분 된 파일 데이터를 표시 하는 데이터 바인딩된 컨트롤에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IDataSource">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="E:System.Web.UI.IDataSource.DataSourceChanged">
          <source>Occurs when a data source control has changed in some way that affects data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 영향을 주는 방식으로 데이터 소스 컨트롤이 변경된 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.IDataSource.DataSourceChanged">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트는 데이터 바인딩된 컨트롤과 데이터 간의 데이터 바인딩에 영향을 주는 방식으로 데이터 바인딩된 컨트롤 또는 기본 데이터의 속성 변경 될 때입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.IDataSource.DataSourceChanged">
          <source>For example, the event is raised if a file name property, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt;</ph> property, is changed on a file-based data source control.</source>
          <target state="translated">예를 들어는 이벤트는 같은 파일 이름 속성이 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt;</ph> 파일 기반 데이터 소스 컨트롤에서 속성을 변경 되 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.IDataSource.DataSourceChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>The name of the view to retrieve.</source>
          <target state="translated">검색할 뷰의 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>Gets the named data source view associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>Returns the named <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceView" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceView" /&gt;</ph>과 연결된 명명된 <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>Data source control classes can support one or more views on their underlying data.</source>
          <target state="translated">데이터 소스 컨트롤 클래스는 내부 데이터에 하나 이상의 뷰를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>These views are represented by instances of the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> class.</source>
          <target state="translated">이러한 보기의 인스턴스로 표현 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.</source>
          <target state="translated">데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 하 고 기본 데이터 저장소에서 데이터를 검색 및 정렬, 삽입, 삭제 및 업데이트 같은 작업을 수행 하는 데 필요한 모든 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>Data source control classes that implement the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implement the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method to return strongly typed view objects associated with the class.</source>
          <target state="translated">데이터 소스 제어에 구현 하는 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스 구현에서 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> 클래스와 연결 된 개체를 보고 하는 메서드를 강력한 형식의 반환 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>The following code example demonstrates how a data source control class that implements the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implements the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method, returning a strongly typed instance of the <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 방법을 구현 하는 데이터 소스 컨트롤 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 구현는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> 의 강력한 형식의 인스턴스를 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>Because the data source control supports only one view, it ignores the name and returns a view named with the default view name.</source>
          <target state="translated">데이터 소스 제어 트리 보기가 하나만 지원 하므로 이름을 무시 하 고 기본 뷰 이름으로 명명 된 뷰를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetView(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>Gets a collection of names representing the list of view objects associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph> 인터페이스와 관련된 뷰 개체의 목록을 나타내는 이름의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the names of the views associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>와 연결된 뷰의 이름이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>Data source control classes can support one or more named views on their underlying data.</source>
          <target state="translated">데이터 소스 컨트롤 클래스는 내부 데이터에 하나 이상의 명명 된 뷰를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method returns a collection of view names currently associated with the data source control instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> 메서드 뷰 이름은 현재 인스턴스와 관련 된 데이터 소스 컨트롤의 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>Callers can iterate through the collection of view names and retrieve individual <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> objects with the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method.</source>
          <target state="translated">호출자의 뷰 이름 컬렉션을 반복 하 고 개별 검색 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> 개체와 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>Data source control classes that implement the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implement the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method to return a collection of names that represents all the data source view objects currently associated with the data source control class.</source>
          <target state="translated">데이터 소스 제어에 구현 하는 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스 구현에서 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> 현재 데이터 소스 컨트롤 클래스와 연결 된 개체를 보고 하는 모든 데이터 원본을 나타내는 이름의 컬렉션을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>The following code example demonstrates how a data source control that implements the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implements the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method, returning an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> collection of names.</source>
          <target state="translated">다음 코드 예제에서는 방법을 구현 하는 데이터 소스 제어는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 구현는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> 이름의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>Because the data source supports only one view, the method returns a collection of one element using the default name for the view.</source>
          <target state="translated">데이터 원본 뷰를 하나만 지원 하므로 메서드 뷰에 대 한 기본 이름을 사용 하 여 한 요소의 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IDataSource.GetViewNames">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>