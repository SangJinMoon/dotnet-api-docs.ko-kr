<Type Name="ClientIDMode" FullName="System.Web.UI.ClientIDMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34492f73cb6864b2a196e4b1127aa7b47f0e2de5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30604907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ClientIDMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientIDMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientIDMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ClientIDMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ClientIDMode" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>ASP.NET이 클라이언트 스크립트에서 액세스할 수 있는 <see cref="P:System.Web.UI.Control.ClientID" />를 생성하는 방법을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.ClientIDMode> 설정할 때 열거형은 <xref:System.Web.UI.Control.ClientIDMode%2A> 컨트롤의 속성입니다. 에 할당 하는 값은 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성 결정 방법을 <xref:System.Web.UI.Control.ClientID%2A> 속성이 하나씩 생성 됩니다. 값은 <xref:System.Web.UI.Control.ClientID%2A> 속성으로 렌더링 되는 `id` 태그에서 특성은 컨트롤에 액세스할 클라이언트 스크립트에서 사용 하는 값입니다. 값을 할당 하는 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성에 영향을 주지 않습니다는 <xref:System.Web.UI.Control.ID%2A> 서버 컨트롤의 속성은 `id` 특성 해당 HTML 요소입니다.  
  
 기본값 <xref:System.Web.UI.Control.ClientIDMode%2A> 페이지는 예측 가능 합니다. 기본값 <xref:System.Web.UI.Control.ClientIDMode%2A> 한 컨트롤 상속 합니다.  
  
 기본 생성 모드 컨트롤에 대 한 기본값은 Inherit, 이므로 예측 가능 합니다. 그러나 (이전 버전에서 ASP.NET 4로 웹 프로젝트를 변환 하려면 Visual Studio를 사용 하는 경우 Visual Studio 자동 설정 사이트 기본 AutoID Web.config 파일에.)  
  
 설정할 수 있습니다는 `ClientIDMode` 사이트의 Web.config 파일에 있는 요소를 설정 하 여 웹 사이트의 모든 페이지에 대 한 값입니다. 설정할 수 있습니다는 `ClientIDMode` 페이지 지시문에 대 한 값입니다.  
  
 자세한 내용은 [ASP.NET 웹 서버 컨트롤 식별](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7)을 참조하세요.  
  
   
  
## Examples  
 다음 예제와 <xref:System.Web.UI.WebControls.Label> 에 포함 된 컨트롤에는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 에 <xref:System.Web.UI.WebControls.ListView> 컨트롤의 <xref:System.Web.UI.Control.ClientIDMode%2A> 예측 가능 속성 및 <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> 속성이로 설정 되어 `ProductID`합니다. 클라이언트 스크립트의 특정 인스턴스를 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.Label> 기반는 `ProductID` 액세스 하려고 하는 인스턴스의 값입니다.  
  
 이 예에서는 3 개 HTML 만듭니다 `ProductIDLabel` 컨트롤입니다. 페이지를 실행 하는 경우 컨트롤에 대 한 Id는 다음이 됩니다.  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
 자세한 내용은 참조 [ASP.NET 웹 서버 컨트롤 확인](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7)  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
    <altmember cref="P:System.Web.UI.HierarchicalDataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.Configuration.PagesSection.ClientIDMode" />
    <altmember cref="P:System.Web.UI.DataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode" />
  </Docs>
  <Members>
    <Member MemberName="AutoID">
      <MemberSignature Language="C#" Value="AutoID" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode AutoID = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.AutoID" />
      <MemberSignature Language="VB.NET" Value="AutoID" />
      <MemberSignature Language="C++ CLI" Value="AutoID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>컨트롤의 <see cref="P:System.Web.UI.Control.ClientID" /> 값과 각 부모 명명 컨테이너의 <see cref="P:System.Web.UI.Control.ID" /> 값을 연결하여 <see cref="P:System.Web.UI.Control.ID" /> 값이 생성됩니다. 컨트롤의 여러 인스턴스가 렌더링되는 데이터 바인딩 시나리오에서는 컨트롤의 <see cref="P:System.Web.UI.Control.ID" /> 값 앞에 증분 값이 삽입됩니다. 각 세그먼트는 밑줄 문자(_)로 구분됩니다. 이 알고리즘은 ASP.NET 4 이전 버전의 ASP.NET에서 사용할 수 있는 유일한 알고리즘입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Inherit = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>컨트롤은 해당 <see cref="T:System.Web.UI.ClientIDMode" /> 컨트롤의 <see cref="P:System.Web.UI.Control.NamingContainer" /> 설정을 상속합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Predictable">
      <MemberSignature Language="C#" Value="Predictable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Predictable = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Predictable" />
      <MemberSignature Language="VB.NET" Value="Predictable" />
      <MemberSignature Language="C++ CLI" Value="Predictable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>이 알고리즘은 데이터 바인딩된 컨트롤에 있는 컨트롤에 사용됩니다. 컨트롤의 <see cref="P:System.Web.UI.Control.ClientID" /> 값과 부모 명명 컨테이너의 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 연결하여 <see cref="P:System.Web.UI.Control.ID" /> 값이 생성됩니다. 컨트롤이 여러 행을 생성하는 데이터 바인딩된 컨트롤일 경우 <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> 속성에 지정된 데이터 필드의 값이 끝에 추가됩니다. <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 경우 여러 데이터 필드가 지정될 수 있습니다. <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> 속성이 비어 있으면 데이터 필드 값 대신 일련 번호가 끝에 추가됩니다. 각 세그먼트는 밑줄 문자(_)로 구분됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Static = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.Control.ClientID" /> 값은 <see cref="P:System.Web.UI.Control.ID" /> 속성의 값으로 설정되어 있습니다. 명명 컨테이너인 컨트롤은 해당 컨트롤에 포함된 모든 컨트롤에 대한 명명 컨테이너 계층의 최상위 컨테이너로 사용됩니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>