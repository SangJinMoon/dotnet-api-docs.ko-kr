<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttributeCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e9d1ac0e398bbc2a6301e4c20b8cd6c306029d3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9d1ac0e398bbc2a6301e4c20b8cd6c306029d3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.AttributeCollection">
          <source>Provides object-model access to all attributes declared in the opening tag of an ASP.NET server control element.</source>
          <target state="translated">ASP.NET 서버 컨트롤 요소의 여는 태그에 선언된 모든 특성에 대한 개체 모델 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.AttributeCollection">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>Individual items in the collection return a <ph id="ph1">&lt;xref:System.String&gt;</ph> object as their value.</source>
          <target state="translated">컬렉션의 개별 항목 반환는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 개체 값을 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>If there are no attribute items in the collection, the collection returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이면 컬렉션에 특성 항목이 없으면이 컬렉션에 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>Attributes on an HTML server control are programmatically available through the <ph id="ph1">&lt;xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A&gt;</ph> property, which is inherited by all HTML server controls.</source>
          <target state="translated">HTML 서버 컨트롤에는 특성을 통해 프로그래밍 방식으로 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A&gt;</ph> 모든 HTML 서버 컨트롤에서 상속 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>ASP.NET exposes attributes of HTML server controls as properties of those controls.</source>
          <target state="translated">ASP.NET는 이러한 컨트롤의 속성으로 HTML 서버 컨트롤의 특성을 노출합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>You can add attributes to a Web server control through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl.Attributes%2A&gt;</ph> property, which is inherited by all Web server controls.</source>
          <target state="translated">특성을 통해 웹 서버 컨트롤을 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl.Attributes%2A&gt;</ph> 모든 웹 서버 컨트롤에서 상속 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>The attributes in the attributes collection for a Web server control do not necessarily correspond to the control's strongly typed properties for that control.</source>
          <target state="translated">웹 서버 컨트롤에 대 한 특성 컬렉션에 있는 특성의 해당 컨트롤에 대 한 컨트롤의 강력한 형식의 속성에 반드시 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object that is named <ph id="ph2">`myAttributeCollection`</ph>, and then checks whether the page has been posted back.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 명명 된 개체 <ph id="ph2">`myAttributeCollection`</ph>, 여부 페이지 포스트백 되었는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>If it has not, the code adds two attributes to the collection.</source>
          <target state="translated">그렇지 않은 경우 코드는 컬렉션에 두 개의 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>It then gets the number of attributes in the collection and iterates through the collection, writing the key to each attribute to the page.</source>
          <target state="translated">컬렉션의 특성 수를 가져옵니다 하 고 페이지에 각 특성을 컬렉션에서 반복 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.AttributeCollection">
          <source>If the page is a postback, the code gets the new number of attributes and iterates through the collection, writing the key and value of each attribute to the page.</source>
          <target state="translated">페이지 다시 게시 인 경우 코드는 새로운 특성 수를 가져오고 페이지에 키와 각 특성의 값을 작성 하는 컬렉션을 반복 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)">
          <source>An object that contains the attribute keys and their values from the opening tag of the server control.</source>
          <target state="translated">서버 컨트롤의 여는 태그에 있는 특성 키와 해당 값이 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> constructor to create an instance of the class named it <ph id="ph2">`myAttributeCollection`</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 클래스의 인스턴스를 만드는 생성자 이라는 <ph id="ph2">`myAttributeCollection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)">
          <source>The code passes the control's <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property as a parameter argument.</source>
          <target state="translated">코드는 컨트롤의 전달 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 매개 변수 인수로 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>The attribute name.</source>
          <target state="translated">특성 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>The attribute value.</source>
          <target state="translated">특성 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>Adds an attribute to a server control's <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object.</source>
          <target state="translated">서버 컨트롤의 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체에 특성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>If the string in the <ph id="ph1">`value`</ph> parameter contains an ampersand (&amp;), the character is automatically encoded.</source>
          <target state="translated">경우 문자열에는 <ph id="ph1">`value`</ph> 앰퍼샌드 (&amp;), 문자를 포함 하는 매개 변수는 자동으로 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>The resulting HTML representation is "<ph id="ph1">&amp;amp;</ph>".</source>
          <target state="translated">HTML 이러한 표시는 "<ph id="ph1">&amp;amp;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Add%2A&gt;</ph> method to programmatically add an attribute to an ASP.NET server control <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Add%2A&gt;</ph> ASP.NET 서버 컨트롤을 프로그래밍 방식으로 특성을 추가 하는 메서드 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> instance that writes the attribute to the opening tag of an ASP.NET server control.</source>
          <target state="translated">특성을 ASP.NET 서버 컨트롤의 여는 태그에 쓰는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>Adds attributes from the <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> class to the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object that is responsible for rendering the attributes as markup.</source>
          <target state="translated">특성을 태그로 렌더링해야 하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체에 <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스의 특성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>This method copies all the server control's attributes to an <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object so that they can be rendered by the next call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 서버 컨트롤의 모든 특성을 복사는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체에 대 한 다음 호출에서 렌더링 될 수 있도록는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>For controls that are contained in other controls such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Calendar&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;</ph>, you can potentially improve performance by rendering the contained controls directly.</source>
          <target state="translated">와 같은 다른 컨트롤에 포함 된 컨트롤에 대 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Calendar&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;</ph>, 직접 포함 된 컨트롤을 렌더링 하 여 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>Rendering directly can be faster than rendering through the container control because container controls require that you copy all the child control attributes to the container control and render them after they are copied.</source>
          <target state="translated">직접 렌더링 하는 컨테이너 컨트롤 컨테이너 컨트롤에 있는 모든 자식 컨트롤 특성을 복사 하 고 복사 된 후 렌더링 해야 하기 때문에 컨테이너 컨트롤을 통해 렌더링 보다 빠를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>The following example shows how to add new attributes to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> server control named <ph id="ph2">`myButton`</ph> and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> server control named <ph id="ph4">`myTextBox`</ph>.</source>
          <target state="translated">다음 예제에서는 새 특성을 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 이라는 서버 컨트롤 <ph id="ph2">`myButton`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 이라는 서버 컨트롤 <ph id="ph4">`myTextBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
          <source>It then adds those attributes to a custom <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object that will write those attributes to an output stream for each of those controls.</source>
          <target state="translated">그런 다음 이러한 특성을 사용자 지정 추가 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 각 컨트롤의에 대 한 특성을 출력 스트림에 기록 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Clear">
          <source>Removes all attributes from a server control's <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object.</source>
          <target state="translated">서버 컨트롤의 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체에서 모든 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Clear">
          <source>The following example shows how to programmatically remove all attributes from an HTML server control's <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 HTML 서버 컨트롤의에서 모든 특성을 제거 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Web.UI.AttributeCollection.Count">
          <source>Gets the number of attributes in the <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체의 특성 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">컬렉션의 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Count">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Count%2A&gt;</ph> property to write the number of attributes on a control to the containing page.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Count%2A&gt;</ph> 특성의 수를 포함 하는 페이지 컨트롤에 쓸 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>Gets a collection of styles for the ASP.NET server control to which the current <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object belongs.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체가 속해 있는 ASP.NET 서버 컨트롤에 대한 스타일 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>A collection that contains the styles for the current server control.</source>
          <target state="translated">현재 서버 컨트롤에 대한 스타일이 들어 있는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>Any style declared for a particular HTML server control is added to the <ph id="ph1">&lt;xref:System.Web.UI.CssStyleCollection&gt;</ph> object when the containing ASP.NET Web page is parsed.</source>
          <target state="translated">특정 HTML 서버 컨트롤에 추가 됩니다에 대 한 선언 된 모든 스타일은 <ph id="ph1">&lt;xref:System.Web.UI.CssStyleCollection&gt;</ph> 포함 하는 ASP.NET 웹 페이지 구문 분석 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>You can use this property to add, remove, and iterate through the styles declared for the server control.</source>
          <target state="translated">이 속성은 추가, 제거 및 서버 컨트롤에 대해 선언 된 스타일 반복을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>The following example shows how to add a CSS style value programmatically to a server control's <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 서버 컨트롤의 프로그래밍 방식으로 CSS 스타일 값을 추가 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.CssStyle">
          <source>When a button is clicked, the background color of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> server control named <ph id="ph2">`TextBox1`</ph> is set to the selected item in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> server control named <ph id="ph4">`DropDownList1`</ph>.</source>
          <target state="translated">단추를 클릭할 때,의 배경색을 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 이라는 서버 컨트롤 <ph id="ph2">`TextBox1`</ph> 에서 선택한 항목으로 설정 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 이라는 서버 컨트롤 <ph id="ph4">`DropDownList1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>The object instance to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>Determines whether the current instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object is equal to the specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체의 현재 인스턴스가 지정된 개체와 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that is contained in the <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parameter is equal to the current instance of <ph id="ph3">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="o" /&gt;</ph> 매개 변수에 들어 있는 개체가 <ph id="ph3">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph>의 현재 인스턴스와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>For the compared objects to be equal, they must meet the following criteria:</source>
          <target state="translated">동일한 것으로 비교 된 개체는 다음 조건을 충족 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>The object that is contained in the <ph id="ph1">`o`</ph> parameter must be an <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">에 포함 된 개체는 <ph id="ph1">`o`</ph> 매개 변수 여야 합니다는 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>Both collections must contain the same number of items.</source>
          <target state="translated">컬렉션은 모두 동일한 항목 수를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>The key value of each entry in both collections must match.</source>
          <target state="translated">두 컬렉션의 각 항목의 키 값이 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
          <source>This method is primarily used by control developers.</source>
          <target state="translated">이 메서드는 주로 컨트롤 개발자가 사용합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.GetHashCode">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.GetHashCode%2A&gt;</ph> method to determine the hash code for this <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.GetHashCode%2A&gt;</ph> 이 대 한 해시 코드를 확인할 수 있는 방법은 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Web.UI.AttributeCollection.Item(System.String)">
          <source>The location of the attribute in the collection.</source>
          <target state="translated">컬렉션의 특성 위치입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.AttributeCollection.Item(System.String)">
          <source>Gets or sets a specified attribute value for a server control.</source>
          <target state="translated">서버 컨트롤에 지정된 특성 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Item(System.String)">
          <source>The attribute value.</source>
          <target state="translated">특성 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Item(System.String)">
          <source>You can add an attribute to or retrieve one from an ASP.NET server control that uses this property.</source>
          <target state="translated">특성을 추가 하거나이 속성을 사용 하는 ASP.NET 서버 컨트롤에서 하나를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Item(System.String)">
          <source>The following example shows how to set a dynamic HTML <ph id="ph1">`onblur`</ph> attribute to run an ECMAScript (JavaScript) command when a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> Web server control loses focus.</source>
          <target state="translated">다음 예제에서는 동적 HTML을 설정 하는 방법을 보여 줍니다. <ph id="ph1">`onblur`</ph> 는 ECMAScript (JavaScript)를 실행 하는 특성 명령 시기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 웹 서버 컨트롤이 포커스를 잃을 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Web.UI.AttributeCollection.Keys">
          <source>Gets a collection of keys to all attributes in the server control's <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object.</source>
          <target state="translated">서버 컨트롤의 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체에 있는 모든 특성에 대한 키 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Keys">
          <source>The collection of keys.</source>
          <target state="translated">키 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Keys">
          <source>This property contains all the keys that are in the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> of an ASP.NET server control, whether you have added them programmatically with the <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection.Add%2A&gt;</ph> method, or declaratively.</source>
          <target state="translated">이 속성에 있는 모든 키를 포함 합니다.는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> ASP.NET 서버 컨트롤의 여부를 추가 했으므로 프로그래밍 방식으로 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection.Add%2A&gt;</ph> 메서드를 선언적으로 또는 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.AttributeCollection.Keys">
          <source>The following example shows how to iterate through the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object for an <ph id="ph3">&lt;xref:System.Web.UI.HtmlControls.HtmlSelect&gt;</ph> server control.</source>
          <target state="translated">반복 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection.Keys%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체에 대 한는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlControls.HtmlSelect&gt;</ph> 서버 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Remove(System.String)">
          <source>The name of the attribute to remove.</source>
          <target state="translated">제거할 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Remove(System.String)">
          <source>Removes an attribute from a server control's <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> object.</source>
          <target state="translated">서버 컨트롤의 <ph id="ph1">&lt;see cref="T:System.Web.UI.AttributeCollection" /&gt;</ph> 개체에서 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Remove(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object does not contain an attribute that has the specified <ph id="ph2">`key`</ph>, the collection remains unchanged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체가 지정 하는 특성을 포함 하지 않습니다 <ph id="ph2">`key`</ph>, 컬렉션 그대로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Remove(System.String)">
          <source>No exception is thrown.</source>
          <target state="translated">예외가 throw되지 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Remove(System.String)">
          <source>The following example shows how to programmatically remove an attribute from an HTML server control's <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 HTML 서버 컨트롤의에서 특성을 제거 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Web.UI.AttributeCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> instance that writes the attribute collection to the current output stream.</source>
          <target state="translated">현재 출력 스트림에 특성 컬렉션을 쓰는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>Writes the collection of attributes to the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream for the control to which the collection belongs.</source>
          <target state="translated">컬렉션이 속하는 컨트롤에 대한 지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 출력 스트림에 특성 컬렉션을 씁니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>The first code example shows how to inherit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class to create a custom control named <ph id="ph2">`AttribRender`</ph> that overrides the <ph id="ph3">&lt;xref:System.Web.UI.AttributeCollection.Render%2A&gt;</ph> method.</source>
          <target state="translated">첫 번째 코드 예제에서는에서 상속 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 라는 사용자 지정 컨트롤을 만드는 클래스 <ph id="ph2">`AttribRender`</ph> 재정의 하는 <ph id="ph3">&lt;xref:System.Web.UI.AttributeCollection.Render%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>The second code example shows how to use the custom control in an ASP.NET Web page.</source>
          <target state="translated">두 번째 코드 예제에서는 ASP.NET 웹 페이지에서 사용자 지정 컨트롤을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>The following example shows how to create a custom control named <ph id="ph1">`AttribRender`</ph> that overrides the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl.Render%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class without calling the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebControl.Render%2A&gt;</ph> method of the base class.</source>
          <target state="translated">다음 예에서는 라는 사용자 지정 컨트롤을 만드는 방법을 보여 줍니다 <ph id="ph1">`AttribRender`</ph> 재정의 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl.Render%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 호출 하지 않고 클래스는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebControl.Render%2A&gt;</ph> 기본 클래스의 메서드.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>Instead, <ph id="ph1">`AttribRender`</ph> invokes the <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection.Render%2A&gt;</ph> method.</source>
          <target state="translated">대신, <ph id="ph1">`AttribRender`</ph> 호출의 <ph id="ph2">&lt;xref:System.Web.UI.AttributeCollection.Render%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>The following example shows how to use the <ph id="ph1">`AttribRender`</ph> custom control in a Web page.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">`AttribRender`</ph> 웹 페이지에서 사용자 지정 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
          <source>It assumes that the code file for the custom control is in the App_Code folder for the application.</source>
          <target state="translated">응용 프로그램의 App_Code 폴더에 사용자 지정 컨트롤에 대 한 코드 파일 임을 가정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>