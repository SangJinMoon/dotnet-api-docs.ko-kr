<Type Name="CssStyleCollection" FullName="System.Web.UI.CssStyleCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d00adbfe168da76deb3d84fefd333846f05d9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CssStyleCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CssStyleCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.CssStyleCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CssStyleCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class CssStyleCollection sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>지정된 HTML 서버 컨트롤에 대한 HTML CSS 인라인 스타일 특성을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 포함 하는 Web Forms 페이지를 구문 분석할 때 특정 HTML 서버 컨트롤에 대 한 선언 된 모든 스타일 컬렉션에 추가 됩니다. 자동으로 구문 분석 하 고 사전 패턴의 API 통해 CSS 속성을 표시 합니다. CSS 속성을 통해 서버 컨트롤을 조작할 수 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlControl.Style%2A> 속성입니다. 인덱싱된 컬렉션에서 CSS 속성의 키와 값을 사용 하면 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 반복에서 <xref:System.Web.UI.CssStyleCollection> 개체에 대 한 프로그램 <xref:System.Web.UI.HtmlControls.HtmlInputText> 서버 컨트롤입니다. <xref:System.Web.UI.CssStyleCollection.Keys%2A> 속성은 서버 컨트롤에 선언 된 스타일 특성을 결정 하는 데 사용 하 고 다음 바인딩 특성 이름을 지정 하 고 값을 한 <xref:System.Web.UI.WebControls.DataList> Web Forms 페이지에는 개체입니다.  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" />에 스타일 항목을 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션에 추가할 새 스타일 특성의 이름입니다.</param>
        <param name="value">컬렉션에 추가할 스타일 특성의 값입니다.</param>
        <summary>지정한 이름/값 쌍을 사용하여 컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" />에 스타일 항목을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가할 스타일 항목에 있는 경우는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형의 오버 로드를 사용 하 여는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 를 받는 메서드에 <xref:System.Web.UI.HtmlTextWriterStyle> 매개 변수는 강력한 형식 때문에 있습니다. 즉,의 get 접근자와 항목을 볼 때 추가 된 항목이 포함 될는 <xref:System.Web.UI.CssStyleCollection.Item%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 메서드의 두 오버 로드를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 연계 스타일 시트를 추가 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect>, <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>, 및 <xref:System.Web.UI.WebControls.Label> 프로그래밍 방식으로 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션에 추가할 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값입니다.</param>
        <param name="value">컬렉션에 추가할 스타일 특성의 값입니다.</param>
        <summary>지정한 <see cref="T:System.Web.UI.CssStyleCollection" /> 열거형 값과 해당 값을 사용하여 컨트롤의 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 컬렉션에 스타일 항목을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 추가할 스타일 항목이 있는 경우는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형이 사용 하 여 <xref:System.Web.UI.CssStyleCollection.Add%2A> 오버 로드는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 메서드 대신 사용 하지 않는 오버 로드는 <xref:System.Web.UI.HtmlTextWriterStyle> 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 메서드의 두 오버 로드를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 연계 스타일 시트를 추가 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect>, <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>, 및 <xref:System.Web.UI.WebControls.Label> 프로그래밍 방식으로 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.CssStyleCollection" /> 개체에서 모든 스타일 항목을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.CssStyleCollection.Clear%2A> 에서 스타일을 프로그래밍 방식으로 모든 CSS를 삭제 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.CssStyleCollection" /> 개체의 항목 수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.CssStyleCollection" /> 개체에 있는 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 한 `CountStyleFunc` 의 현재 값을 가져오는 함수를는 <xref:System.Web.UI.CssStyleCollection.Count%2A> 속성에 대 한 프로그램 <xref:System.Web.UI.HtmlControls.HtmlInputText> 서버 컨트롤 ASP.NET 페이지에 표시 합니다.  
  
 [!code-aspx-csharp[CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CssStyleCollection/CS/cssstylecollection_4.cs.aspx#1)]
 [!code-aspx-vb[CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CssStyleCollection/VB/cssstylecollection_4.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>HTML 서버 컨트롤에 지정된 CSS 값을 가져오거나 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">CSS 특성에 대한 인덱스입니다.</param>
        <summary>HTML 서버 컨트롤에 지정한 CSS 값을 가져오거나 설정합니다.</summary>
        <value>
          <paramref name="key" />의 값</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.CssStyleCollection.Item%2A> 에 설정 된 스타일의 값을 반환 하는 <xref:System.Web.UI.HtmlControls.HtmlInputText> 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[System.Web.UI.HtmlTextWriterStyle key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(valuetype System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::Web::UI::HtmlTextWriterStyle] { System::String ^ get(System::Web::UI::HtmlTextWriterStyle key); void set(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</param>
        <summary>HTML 서버 컨트롤에 지정된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 값을 가져오거나 설정합니다.</summary>
        <value>
          <paramref name="key" /> 값이거나, <paramref name="key" />가 서버 컨트롤의 컬렉션에 있을 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프로그래밍 방식으로 추가 되는 스타일 항목은 <xref:System.Web.UI.CssStyleCollection> 가진 컨트롤에 대 한 컬렉션의 <xref:System.Web.UI.CssStyleCollection.Item%2A> 속성 또는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 를 사용 하는 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형 값을 입력으로 스타일 항목의 계산에 포함 됩니다 와 함께 반환 되는 <xref:System.Web.UI.CssStyleCollection.Count%2A> 되며 속성으로 반환 되는 리터럴 문자열에 포함 된는 <xref:System.Web.UI.CssStyleCollection.Value%2A> 속성입니다. 이러한 특성은 강력한 형식입니다. 서버 컨트롤에 추가 하려는 연계 스타일 시트 특성에 있는 경우는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형 이러한 강력한 형식의 메서드를 사용 합니다. 추가할 특성에 존재 하지 않는 경우는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형을 사용 하 여는 <xref:System.Web.UI.CssStyleCollection.Item%2A> 속성 또는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 메서드.  
  
 액세스 하는 동안는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거 값의 <xref:System.Web.UI.CssStyleCollection> 추가 되지 않은 하는 컨트롤의 하거나 지정 된을 추가 하는 CSS 특성을 액세스 하는 <xref:System.Web.UI.CssStyleCollection.Item%2A> 속성 또는 <xref:System.Web.UI.CssStyleCollection.Add%2A> 메서드 반환 `null` 는 를사용하여<xref:System.Web.UI.CssStyleCollection.Item%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.CssStyleCollection.Item%2A> 에 설정 된 스타일의 값을 반환 하는 <xref:System.Web.UI.HtmlControls.HtmlInputText> 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특정 HTML 서버 컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" /> 개체에 있는 모든 스타일에 대한 키 컬렉션을 가져옵니다.</summary>
        <value>지정한 HTML 서버 컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" />에 들어 있는 키 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 통해 반복 하는 방법을 보여 줍니다는 <xref:System.Web.UI.CssStyleCollection> 컬렉션에 대 한 프로그램 <xref:System.Web.UI.HtmlControls.HtmlInputText> 서버 컨트롤입니다. <xref:System.Web.UI.CssStyleCollection.Keys%2A> 속성을 사용 하는 서버 컨트롤에 선언 된 스타일 특성을 결정 및 특성 이름 바인딩 값을 한 <xref:System.Web.UI.WebControls.DataList> Web Forms 페이지에는 개체입니다.  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" />에서 스타일 항목을 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">제거할 스타일 항목의 문자열 리터럴입니다.</param>
        <summary>지정한 스타일 키를 사용하여 컨트롤의 <see cref="T:System.Web.UI.CssStyleCollection" />에서 스타일 항목을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.CssStyleCollection.Remove%2A> 에서 스타일을 프로그래밍 방식으로 CSS를 삭제 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">제거할 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값입니다.</param>
        <summary>지정한 <see cref="T:System.Web.UI.CssStyleCollection" /> 열거형 값을 사용하여 컨트롤의 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 컬렉션에서 스타일 항목을 제거합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML 서버 컨트롤의 <see langword="style" /> 특성 값을 가져오거나 설정합니다.</summary>
        <value>스타일 문자열 리터럴입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.CssStyleCollection.Value%2A> 속성의 스타일 특성을 나열 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 전송 단추를 클릭할 때 제어 합니다.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Item" />
      </Docs>
    </Member>
  </Members>
</Type>