<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlTextWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512a77ea598c1fb3af16632e6711c2fe49de157af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12a77ea598c1fb3af16632e6711c2fe49de157af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">ASP.NET 서버 컨트롤 출력 스트림에 태그 문자와 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">이 클래스는 ASP.NET 서버 컨트롤이 태그를 클라이언트로 렌더링할 때 사용하는 서식 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 데스크톱 브라우저에 HTML 4.0 렌더링 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> is also the base class for all markup writers in the <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, including the <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 의 모든 태그 작성기에 대 한 기본 클래스 이기도 <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> 네임 스페이스를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">이러한 클래스는 요소, 특성 및 다른 유형의 변경에 대 한 스타일 및 레이아웃 정보를 작성 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">또한 이러한 클래스는 각 표시 언어와 관련 된 페이지 및 컨트롤 어댑터 클래스에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">대부분의 경우 ASP.NET 자동으로 요청 하는 장치에 대 한 적절 한 기록기를 사용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">그러나 사용자 지정 텍스트 작성기 또는 특정 장치에 대 한 페이지를 렌더링 하는 특정 작성기를 지정 하려면 매핑해야 작성기의 페이지에는 <ph id="ph1">`controlAdapters`</ph> 응용 프로그램 브라우저 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method of a custom control that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> 에서 파생 된 사용자 지정 컨트롤의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The code example illustrates how to use various <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> methods, properties, and fields.</source>
          <target state="translated">다양 한를 사용 하는 방법을 보여 주는 코드 예제 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 메서드, 속성 및 필드입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> instance that renders the markup content.</source>
          <target state="translated">태그 내용을 렌더링하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class that uses a default tab string.</source>
          <target state="translated">기본 탭 문자열을 사용하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant when indentation of a line is necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> 생성자 사용 하 여는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> 줄의 들여쓰기 필요한 경우에 상수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> overload to initialize the new instance.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> 오버 로드를 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> 사용자 지정을 만드는 데 생성자 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 라는 개체 <ph id="ph3">`StyledLabelHtmlWriter.`</ph> 때는 <ph id="ph4">`MyPage`</ph> 에서 파생 된 사용자 지정 클래스는 <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> 클래스, 클라이언트 요청 브라우저를 사용 하 여는 <ph id="ph6">`StyledLabelHtmlWriter`</ph> 출력 스트림에 해당 콘텐츠를 렌더링 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that renders the markup content.</source>
          <target state="translated">태그 내용을 렌더링하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">줄 들여쓰기를 렌더링하는 데 사용할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class with a specified tab string character.</source>
          <target state="translated">지정된 탭 문자열 문자를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor uses <ph id="ph3">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> 생성자 사용 하 여 <ph id="ph3">`tabString`</ph> 줄의 들여쓰기는 필요한 경우.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base constructor to initialize the new instance.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 새 인스턴스를 초기화 하는 기본 생성자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> 사용자 지정을 만드는 데 생성자 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 라는 개체 <ph id="ph3">`StyledLabelHtmlWriter.`</ph> 때는 <ph id="ph4">`MyPage`</ph> 에서 파생 된 사용자 지정 클래스는 <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> 클래스, 클라이언트 요청 브라우저를 사용 하 여는 <ph id="ph6">`StyledLabelHtmlWriter`</ph> 출력 스트림에 해당 콘텐츠를 렌더링 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 태그 특성과 값을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">추가할 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 태그 특성과 값을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> 특성 중 하나가 아닌 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 값 특성은 런타임이 될 때까지 알 수 없는 경우 또는 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">지정 된 태그 요소의 모든 인스턴스에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 특성이 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소의 여는 태그에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">특성 목록에서 다음 지워집니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소에 모든 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The code calls two different overloads of <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and two different overloads of <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> before it calls the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to render a <ph id="ph4">`&lt;span&gt;`</ph> element to the output stream.</source>
          <target state="translated">서로 다른 두 개의 오버 로드를 호출 하는 코드 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 및 서로 다른 두 오버 로드 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 호출 하기 전에 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 렌더링 하는 메서드는 <ph id="ph4">`&lt;span&gt;`</ph> 요소를 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method is used to define the custom attribute named <ph id="ph2">`CustomAttribute`</ph> and the custom value named <ph id="ph3">`CustomAttributeValue`</ph> for the <ph id="ph4">`&lt;span&gt;`</ph> element that this code renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> 메서드 라는 사용자 지정 특성을 정의 하는 <ph id="ph2">`CustomAttribute`</ph> 라는 사용자 지정 값 및 <ph id="ph3">`CustomAttributeValue`</ph> 에 대 한는 <ph id="ph4">`&lt;span&gt;`</ph> 이 코드를 렌더링 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">출력 스트림에 추가할 태그 특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">태그 특성과 특성 값을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to render a standard markup attribute.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> 표준 태그 특성을 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">지정 된 태그 요소의 모든 인스턴스에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 특성은 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소의 여는 태그에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">특성 목록에서 다음 지워집니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소에 모든 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to add an <ph id="ph3">`Onclick`</ph> attribute to a markup element, and then set its value to the following ECMAScript code:</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> 를 추가 하려면 메서드는 <ph id="ph3">`Onclick`</ph> 태그 요소에 특성을 설정한 다음 해당 값 다음 ECMAScript 코드:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">추가할 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성과 그 값을 인코딩하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">지정된 태그 특성과 값을 선택적으로 인코딩하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 특성 중 하나가 아닌 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 값 또는 특성 인코딩이 될 때까지 알 수 없는 경우에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">지정 된 태그 요소의 모든 인스턴스에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 특성이 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소의 여는 태그에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">특성 목록에서 다음 지워집니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 메서드 <ph id="ph2">`fEncode`</ph> 로 설정 <ph id="ph3">`true`</ph>, 특성 인용 부호 ("), 작음 (&lt;) 기호를 포함할 수 있는 수 있는 경우 또는 앰퍼샌드 (&amp;).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">이 메서드는 요청한 장치에서의 요구 사항을 충족 하기 위해 특성을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">설정할 수 있습니다 <ph id="ph1">`fEncode`</ph> 를 <ph id="ph2">`false`</ph>는 이러한 문자가 축적할 수를 알고 있는 경우 또는 특성이 이미 인코딩된 알고 있는 경우.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소에 모든 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that a custom attribute, named <ph id="ph3">`myattribute`</ph>, and its value are not encoded for an <ph id="ph4">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 메서드 라는 사용자 지정 특성을 확인 하려면 <ph id="ph3">`myattribute`</ph>, 해당 값에 대해 인코딩되지 및는 <ph id="ph4">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">추가할 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the attribute.</source>
          <target state="translated">특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Adds the specified markup attribute and value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value, to the opening tag of the element that the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 태그 특성과 값을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 열거형 값과 함께 <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> 에서 상속 된 경우에 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">하면 새로 만드는 <ph id="ph1">`name`</ph> 및 <ph id="ph2">`key`</ph> 특성에 대 한 쌍입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">출력 스트림에 추가할 태그 특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성과 그 값을 인코딩하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">태그 특성과 특성 값을 선택적으로 인코딩하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 메서드를 선택적으로 인코딩하여 표준 태그 특성을 렌더링 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">지정 된 태그 요소의 모든 인스턴스에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 특성이 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 요소의 여는 태그를 렌더링 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">특성 목록에서 다음 지워집니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 메서드 <ph id="ph2">`fEncode`</ph> 로 설정 <ph id="ph3">`true`</ph>, 특성 인용 부호 ("), 작음 (&lt;) 기호를 포함할 수 있는 수 있는 경우 또는 앰퍼샌드 (&amp;).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">이 메서드는 요청한 장치에서의 요구 사항을 충족 하기 위해 특성을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">설정할 수 있습니다 <ph id="ph1">`fEncode`</ph> 를 <ph id="ph2">`false`</ph>는 이러한 문자가 축적할 수를 알고 있는 경우 또는 특성이 이미 인코딩된 알고 있는 경우.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드는 요소에 모든 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that the string value that is assigned to an <ph id="ph2">`Alt`</ph> attribute for an <ph id="ph3">`&lt;img&gt;`</ph> element is encoded for the requesting device.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 에 할당 된 문자열 값 않도록 하는 <ph id="ph2">`Alt`</ph> 특성에 <ph id="ph3">`&lt;img&gt;`</ph> 요소는 요청 하는 장치에 대 한 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds a markup style attribute to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">태그 스타일 특성을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">추가할 스타일 특성이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 태그 스타일 특성과 특성 값을 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method when the style is not a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration or is not known until run time.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> 스타일의 구성원이 아닙니다. 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 열거형 않거나 런타임이 될 때까지 알 수 없는 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 렌더링 태그 요소에 대 한 스타일의 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 스타일은 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 메서드는 요소의 여는 태그에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">선 스타일이 지워집니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 요소에 특성을 메서드를 원하는 스타일을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">요소 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method to render <ph id="ph3">`font-size`</ph> and <ph id="ph4">`color`</ph> style attributes on a <ph id="ph5">`&lt;p&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> 렌더링 하려면 <ph id="ph3">`font-size`</ph> 및 <ph id="ph4">`color`</ph> 스타일 특성에는 <ph id="ph5">`&lt;p&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>This code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to render the contents of the control.</source>
          <target state="translated">사용 하 여이 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 컨트롤의 콘텐츠를 렌더링 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add to the output stream.</source>
          <target state="translated">출력 스트림에 추가할 스타일 특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Adds the markup style attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> value and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 값과 연결된 태그 스타일 특성과 특성 값을 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> method when the style is a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration and is known before run time.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> 스타일의 구성원 인 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 열거형 런타임 이전에 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 렌더링 태그 요소에 대 한 스타일의 목록을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 호출 하 여 추가 된 모든 스타일이 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 메서드는 요소의 여는 태그에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">선 스타일이 지워집니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 요소에 특성을 메서드를 원하는 스타일을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">요소 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용하세요.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The following code example demonstrates how to use part of an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는의 재정의의 일부를 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 에서 파생 된 클래스에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The code checks whether a <ph id="ph1">`&lt;Label&gt;`</ph> element is being rendered.</source>
          <target state="translated">코드 검사 여부는 <ph id="ph1">`&lt;Label&gt;`</ph> 요소 렌더링 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method is called to check whether a <ph id="ph2">`Color`</ph> style attribute has been defined for the <ph id="ph3">`&lt;Label&gt;`</ph> element.</source>
          <target state="translated">그렇다면는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> 메서드는 확인 여부는 <ph id="ph2">`Color`</ph> 스타일 특성에 대해 정의 된는 <ph id="ph3">`&lt;Label&gt;`</ph> 요소.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If a <ph id="ph1">`Color`</ph> attribute has not been defined, the code calls this overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add the <ph id="ph3">`Color`</ph> attribute to the style attribute, and then set its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`Color`</ph> 특성 정의 되지 않은,이 오버 로드를 호출 하는 코드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 를 추가 하려면 메서드는 <ph id="ph3">`Color`</ph> 스타일 특성에 특성을 다음으로 값을 설정 <ph id="ph4">`red`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">추가할 스타일 특성이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">특성에 할당할 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add.</source>
          <target state="translated">추가할 스타일 특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Adds the specified markup style attribute and the attribute value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value, to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">지정된 태그 스타일 특성과 특성 값을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 열거형 값과 함께 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> 에서 상속 된 경우에 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributes.</source>
          <target state="translated">하면 새로 만드는 <ph id="ph1">`name`</ph> 및 <ph id="ph2">`value`</ph> 쌍에 대 한 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated">컨트롤이 렌더링되려고 한다는 것을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체나 파생 클래스의 개체에 알립니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> 메서드에 기능이 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>You must override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> to provide your own rendering functionality.</source>
          <target state="translated">재정의 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> 에서 파생 된 클래스에서 메서드가 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 사용자 고유의 렌더링 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> override.</source>
          <target state="translated">필요할 수 있는 표시 언어의 예를 들어 <ph id="ph1">`&lt;p&gt;`</ph> 바로 전에 있 컨트롤을 렌더링 되어야 하는 요소에 대 한 요구는 <ph id="ph2">`&lt;p&gt;`</ph> 요소는 이전에 결정 된, 사용할 수는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and releases any system resources associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체를 닫고 이와 관련된 모든 시스템 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> base method.</source>
          <target state="translated">이 구현에서 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Following a call to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method, any operations on the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object might throw exceptions because all its resources have been released.</source>
          <target state="translated">호출 된 후에 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> 메서드에 대 한 모든 작업은 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 모든 리소스를 해제 된 개체 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>Represents a single tab character.</source>
          <target state="translated">단일 탭 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">하나의 탭 ASCII 9 문자로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The following code example demonstrates how to create a constructor that takes a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object as a parameter and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field as a parameter argument to a second version of the constructor.</source>
          <target state="translated">다음 코드 예제를 사용 하는 생성자를 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 개체를 매개 변수로 전달 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> 생성자의 두 번째 버전에 대 한 매개 변수 인수로 필드입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>When this constructor is called from code, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</source>
          <target state="translated">코드에서이 생성자를 호출 하면는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> 필드는 페이지 또는 어댑터에 사용 되는 태그 작성기의 인스턴스에 대 한 들여쓰기 정책을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">따옴표(") 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to close an attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 특성을 닫는 데 메서드.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`border`</ph> 특성에 <ph id="ph2">`&lt;table&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">코드를 호출 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 특성 값 및 사용 하 여 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 렌더링 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">현재 컨텍스트의 <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">인코딩할 특성 값을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성 값을 인코드하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 인코드하지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">현재 컨텍스트의 <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the encoded attribute value, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is empty, or the unencoded attribute value if <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인코딩된 특성 값을 포함하는 문자열이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 비어 있으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph>가 는 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이면 인코딩되지 않은 특성 값입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method if the attribute is not an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> enumeration value or is not known until run time.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> 특성이 없으면 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 열거형 값 않거나 런타임이 될 때까지 알 수 없는 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> 메서드 제거 큰따옴표 ("), 앰퍼샌드 (&amp;), 하므로 해당 잘못 된 태그 (&lt;) 기호 생성 되지 않은 입력에 관계 없이 부등호 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">에 의해 수행 됩니다 실제 인코딩과 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call, and then encodes a <ph id="ph3">`color:blue`</ph> style attribute value.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> 메서드 매개 변수로 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드 호출에서 다음 인코딩합니다는 <ph id="ph3">`color:blue`</ph> 스타일 특성 값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> representing the markup attribute.</source>
          <target state="translated">태그 특성을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">인코딩할 특성 값을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">현재 컨텍스트의 <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">인코딩된 특성 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> 메서드 제거 큰따옴표 ("), 앰퍼샌드 (&amp;), 하므로 해당 잘못 된 태그 (&lt;) 기호 생성 되지 않은 입력에 관계 없이 부등호 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">에 의해 수행 됩니다 실제 인코딩과 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the URL to encode.</source>
          <target state="translated">인코딩할 URL이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">지정된 URL의 공백을 "%20"으로 변환하여 URL 인코딩을 최소화합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the encoded URL.</source>
          <target state="translated">인코딩된 URL이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">URL의 문자 인코딩을 두 자리 16 진수 표현 (대/소문자 구분)는 문자에 대 한 ISO-라틴 문자 코드 포인트의 다음 백분율 기호 (%)으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">공백의 16 진수 표현은 20입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> method to convert any spaces in the URL that is passed as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> 메서드 매개 변수로 전달 되는 URL에 있는 공백을 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>Gets the encoding that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object uses to write content to the page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체가 페이지에 내용을 쓰는 데 사용하는 인코딩을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the markup is written to the page.</source>
          <target state="translated">페이지에 쓰는 태그의 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property obtains its value from the base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> 속성 기본에서 값을 가져오는 <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property to write the type of encoding that a custom control uses to render text to the page that contains it.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> 는 사용자 지정 컨트롤 텍스트를 포함 하는 페이지 렌더링을 사용 하 여 인코딩 유형을 쓸 속성입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated">컨트롤이 렌더링을 완료했다는 것을 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체나 파생 클래스의 개체에 알립니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use this method to close any markup elements opened in the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">이 메서드를 사용하여 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> 메서드에서 열린 태그 요소를 닫을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> 메서드에 기능이 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You must override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to provide your own rendering functionality.</source>
          <target state="translated">재정의 해야 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> 에서 파생 된 클래스에는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 사용자 고유의 렌더링 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method to close any markup elements opened in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> 에서 열을 닫는 태그 요소 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">태그 요소에서 닫는 태그의 왼쪽 꺾쇠 괄호와 슬래시 표시(<ph id="ph1">&amp;lt;</ph>/)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to construct markup element end tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 태그 요소 끝 태그를 생성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> markup element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> fields as parameter values in calls to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 닫는 태그를 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`&lt;table&gt;`</ph> 태그 요소를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> 필드에 대 한 호출에 매개 변수 값으로는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 태그 요소의 여는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">태그 블록에 적용을 시작할 레이아웃과 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> 요소의 여는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드를 배경 색 또는 테두리 너비 같은 스타일을 블록 태그에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 장치 어댑터 또는 제어를 지정된 된 스타일의 문자 형식을 사용 하는 태그를 만드는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">에 대해 같은 값을 사용 하 여 <ph id="ph1">`style`</ph> 에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 를 해당 사용 하면 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the opening tag of a <ph id="ph3">`&lt;span&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> 의 여는 태그를 렌더링 하는 메서드는 <ph id="ph3">`&lt;span&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">이 메서드 다음 추가 필요한 특성 및 스타일 특성의 여는 태그는 <ph id="ph1">`&lt;span&gt;`</ph> 지정 하는 설정을 표시 하는 요소는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> overload.</source>
          <target state="translated">사용 하 여, 특성 및 스타일 특성을 포함 하는 다른 태그 요소 렌더링 하려는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 <ph id="ph1">`TextSample`</ph>에서 파생 된는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 클래스를 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 적용할 방법을 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> 스타일 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드는 HTML 렌더링 <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드 호출을 닫습니다는 <ph id="ph2">`&lt;span&gt;`</ph> 텍스트 렌더링 된 후에 요소입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">태그 블록에 적용을 시작할 레이아웃과 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the opening tag of the markup element that will contain the style object specified in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>스타일<ept id="p1">&lt;/c&gt;</ept>에 지정된 스타일 개체가 포함될 태그 요소의 여는 태그를 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 태그 요소의 여는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드를 배경 색 또는 테두리 너비 같은 스타일을 블록 태그에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 장치 어댑터 또는 제어를 지정된 된 스타일의 문자 형식을 사용 하는 태그를 만드는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">에 대해 같은 값을 사용 하 여 <ph id="ph1">`style`</ph> 에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 를 해당 사용 하면 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the opening tag of the element specified by the <ph id="ph3">`tag`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> 로 지정한 요소를 여는 태그를 렌더링 하는 메서드는 <ph id="ph3">`tag`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> 메서드 다음 필요한 특성 및 스타일 특성에 추가 하 여 지정 된 설정을 표시 하려면 요소의 여는 태그는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> overload to render the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> 의 여는 태그를 렌더링 하는 오버 로드는 <ph id="ph2">`&lt;span&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 <ph id="ph1">`TextSample`</ph>에서 파생 된는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 클래스를 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 적용할 방법을 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> 스타일 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드는 HTML 렌더링<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드 호출을 닫습니다는 <ph id="ph2">`&lt;span&gt;`</ph> 텍스트 렌더링 된 후에 요소입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>Represents the equal sign (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</source>
          <target state="translated">등호(<ph id="ph1">&lt;see langword="=" /&gt;</ph>)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>You might want to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">사용 하려는 경우도 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> 필드 대신는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> 특성 값의 여는 구분 기호를 생성할 때 필드입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The following code example shows how to render the <ph id="ph1">`src`</ph> attribute and part of its value for an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`src`</ph> 특성 및에 대 한 해당 값의 일부는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call to render the equal sign (=) between the <ph id="ph3">`src`</ph> attribute and its value.</source>
          <target state="translated">코드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> 필드에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드 호출 사이 등호 (=)를 렌더링 하는 <ph id="ph3">`src`</ph> 특성 및 값입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">등호(=)와 큰따옴표(")를 함께 문자열(=")로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods to construct the opening delimiter of attribute values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 특성 값의 여는 구분 기호를 생성 하는 방법.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`border`</ph> 특성에 <ph id="ph2">`&lt;table&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">코드를 호출 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 특성 값 및 사용 하 여 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 렌더링 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the closing tag of a markup element to end the specified layout and character formatting.</source>
          <target state="translated">지정한 레이아웃과 문자 형식을 끝내는 태그 요소의 닫는 태그를 작성합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to close.</source>
          <target state="translated">닫을 레이아웃과 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the closing tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element to end the specified layout and character formatting.</source>
          <target state="translated">지정한 레이아웃과 문자 형식을 끝내는 <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> 요소의 닫는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the closing tag of a <ph id="ph3">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> 의 닫는 태그를 렌더링 하는 메서드는 <ph id="ph3">`&lt;span&gt;`</ph> 해당 컨트롤의 닫는 태그 뒤 요소를 열린 요소를 닫습니다 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 장치 어댑터 또는 제어를 시작 하 고 지정된 된 스타일의 문자 형식을 사용 하 여 블록을 종료 하는 태그를 만드는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">에 대해 같은 값을 사용 하 여 <ph id="ph1">`style`</ph> 에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 를 해당 사용 하면 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 <ph id="ph1">`TextSample`</ph>에서 파생 된는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 클래스를 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 적용할 방법을 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> 스타일 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드는 HTML 렌더링 <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드 호출을 닫습니다는 <ph id="ph2">`&lt;span&gt;`</ph> 텍스트 렌더링 된 후에 요소입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated">출력 텍스트에 더 이상 적용되지 않을 레이아웃 및 서식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated">지정된 스타일을 적용하는 특성을 포함하는 태그 요소의 닫는 태그를 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>This must match the key passed in the corresponding <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> call.</source>
          <target state="translated">해당 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> 호출에 전달된 키와 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">지정된 레이아웃 및 문자 서식을 끝낼 지정된 태그 요소의 닫는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the closing tag of the element that is specified by <ph id="ph3">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> 메서드는 지정 된 요소의 닫는 태그를 렌더링 <ph id="ph3">`tag`</ph> 컨트롤의 닫는 태그 뒤 해당 열려 있는 요소를 닫습니다 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 장치 어댑터 또는 제어를 시작 하 고 지정된 된 스타일의 문자 형식을 사용 하 여 블록을 종료 하는 태그를 만드는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">에 대해 같은 값을 사용 하 여 <ph id="ph1">`style`</ph> 에 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 를 해당 사용 하면 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 <ph id="ph1">`TextSample`</ph>에서 파생 된는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 클래스를 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 적용할 방법을 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> 스타일 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 메서드는 HTML 렌더링 <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> 메서드 호출을 닫습니다는 <ph id="ph2">`&lt;span&gt;`</ph> 텍스트 렌더링 된 후에 요소입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">페이지나 웹 서버 컨트롤의 모든 속성에 대한 태그 및 스타일 특성을 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Before attributes are rendered on a markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method is called.</source>
          <target state="translated">특성 태그 요소에 렌더링 되기 전에 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> methods for each attribute and style to render.</source>
          <target state="translated">차례로 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> 각 특성 및 스타일을 렌더링 하기 위한 메서드.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서 파생 된 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 재정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements:</source>
          <target state="translated">를 호출할 때는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 재정의 텍스트 작성기 모든 렌더링 하는지 여부를 확인할 <ph id="ph2">`&lt;label&gt;`</ph> 또는 <ph id="ph3">`&lt;a&gt;`</ph> 요소:</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method checks whether a <ph id="ph3">`style`</ph> attribute is rendered on the element and, if not, creates a <ph id="ph4">`style`</ph> attribute and sets it to <ph id="ph5">`color: blue`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소 렌더링 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드 검사 여부는 <ph id="ph3">`style`</ph> 특성 요소에 렌더링 하 고, 그렇지 않은 경우 만듭니다는 <ph id="ph4">`style`</ph> 설정 하는 특성 <ph id="ph5">`color: blue`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If an <ph id="ph1">`&lt;a&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether an <ph id="ph3">`href`</ph> attribute is included and, if not, adds an <ph id="ph4">`href`</ph> to the URL <ph id="ph5">http://www.cohowinery.com</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`&lt;a&gt;`</ph> 요소 렌더링 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드 확인 여부는 <ph id="ph3">`href`</ph> 특성에 포함 되며, 그렇지 않은 경우 추가 <ph id="ph4">`href`</ph> URL로 <ph id="ph5">http://www.cohowinery.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>Clears all buffers for the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체의 모든 버퍼를 지우고 버퍼링된 모든 데이터를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> method just calls the <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> 메서드를 호출는 <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>A string that contains the attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>를 가져올 특성이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>Obtains the corresponding <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute.</source>
          <target state="translated">지정된 특성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 열거형 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute; otherwise, an invalid <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">지정된 특성에 대한 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 열거형 값이거나, 해당 특성이 열거형의 멤버가 아닌 경우에는 잘못된 <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, is returned.</source>
          <target state="translated">경우 <ph id="ph1">`attrName`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열 (""), 또는 하 게 형식화 된 값-1로, 특성 이름의 테이블에서 찾을 수 없는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 개체에서 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The following code example demonstrates how to use a class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">파생 된 클래스를 사용 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 재정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The override checks whether <ph id="ph1">`tagKey`</ph> is equal to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> field, which indicates that a <ph id="ph3">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">재정의 검사 하는지 여부를 <ph id="ph1">`tagKey`</ph> 같은지를 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> 것임을 나타내는 필드는 <ph id="ph3">`&lt;font&gt;`</ph> 태그 요소 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to find out whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">재정의 호출는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> 있는지 여부를 확인 하는 메서드는 <ph id="ph2">`&lt;font&gt;`</ph> 요소를 포함 한 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> and sets its value to <ph id="ph6">`30pt`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드 호출의 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> 메서드를 정의 하는 <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 그 값을 설정 하 고 <ph id="ph6">`30pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> to obtain the markup attribute name for.</source>
          <target state="translated">태그 특성 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Obtains the name of the markup attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 값과 관련된 태그 특성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">태그 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method returns an empty string (""), if <ph id="ph2">`attrKey`</ph> is not a valid <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> 빈 문자열을 반환 하는 메서드 ("") 하는 경우, <ph id="ph2">`attrKey`</ph> 유효 하지 않거나 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> enumeration value to its string name.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 열거형 값을 문자열 이름입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The style attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>을 가져올 스타일 특성입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value for the specified style.</source>
          <target state="translated">지정된 스타일에 대한 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 열거형 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value corresponding to <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>에 해당하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method returns the value -1 typed as a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> value, if <ph id="ph3">`styleName`</ph> does not correspond to any <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> -1로 형식화 된 값을 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 경우 값 <ph id="ph3">`styleName`</ph> 하나에 해당 하지 않는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 에서 파생 된 클래스에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determines whether a <ph id="ph2">`&lt;label&gt;`</ph> markup will be rendered, and, if so, checks the element for a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 재정의 결정 여부는 <ph id="ph2">`&lt;label&gt;`</ph> 태그 렌더링 되는 경우에 대 한 요소를 검사 및는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method is used as the first parameter in a call to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to a <ph id="ph5">`&lt;label&gt;`</ph> markup element and set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`red`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성이 정의 되지 않았으면는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> 메서드 호출에서 첫 번째 매개 변수로 사용 되는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 를 추가 하려면 메서드는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성을 <ph id="ph5">`&lt;label&gt;`</ph> 태그 요소는 <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성 를<ph id="ph7">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> to obtain the style attribute name for.</source>
          <target state="translated">태그 특성 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>Obtains the markup style attribute name associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 열거형 값과 관련된 태그 스타일 특성 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The style attribute name associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value specified in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>에 지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 열거형 값과 관련된 스타일 특성 이름입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">경우 <ph id="ph1">`styleKey`</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> 빈 문자열을 반환 하는 메서드 ("").</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">다음 코드 예제를 확인 하는 방법을 보여 줍니다 여부는 <ph id="ph1">`&lt;label&gt;`</ph> 요소 렌더링 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, it checks whether a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">검사, 여부는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 스타일 특성이 요소에 정의 되었습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the attribute has not been defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method is called and the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method converts the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> enumeration member into its string representation to pass to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method.</source>
          <target state="translated">특성 정의 되지 않은 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 메서드는 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> 메서드 변환은 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 에 전달할 문자열 표현으로 열거형 멤버는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The markup element for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>를 가져올 태그 요소입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value associated with the specified markup element.</source>
          <target state="translated">지정된 태그 요소와 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 열거형 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value; otherwise, if <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> is not associated with a specific <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 열거형 값이거나, <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph>이 특정 <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 값과 연결되어 있지 않으면 <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method returns the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> field.</source>
          <target state="translated">경우 <ph id="ph1">`tagName`</ph> 은 <ph id="ph2">`null`</ph>, 빈 문자열 (""), 또는 태그 이름 테이블에서 찾을 수 없는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The following code example shows how to override the overload of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that takes a string as its parameter.</source>
          <target state="translated">다음 코드 예제에서는 오버 로드를 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 매개 변수로 문자열을 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The string is passed to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method, which converts it to the corresponding <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration member, and then passes that to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload that takes a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration value as a parameter.</source>
          <target state="translated">문자열에 전달 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> 메서드를 해당 하는 변환 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> 열거형 멤버를 다음에 전달는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 오버 로드를는 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> 열거형 값을 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> to obtain the markup element for.</source>
          <target state="translated">태그 요소를 가져올 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>Obtains the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 열거형 값과 관련된 태그 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>A string representing the markup element.</source>
          <target state="translated">태그 요소를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">경우 <ph id="ph1">`tagKey`</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> 값의 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> 빈 문자열을 반환 하는 메서드 ("").</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to close a <ph id="ph1">`&lt;font&gt;`</ph> element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 종결 하는 방법을 보여 줍니다.는 <ph id="ph1">`&lt;font&gt;`</ph> 사용 하 여 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> value to a string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> 값을 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">각 태그 줄의 시작 부분에서 들여쓰기할 탭 위치 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">각 줄을 들여쓰기할 탭 위치 수입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor the number of times that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property.</source>
          <target state="translated">들여쓰기에 지정 된 문자열을 작성 하 여 수행 됩니다는 <ph id="ph1">`tabString`</ph> 의 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> 생성자에서 지정 된 횟수는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> 속성이 음수 값으로 설정 되어 있으면 저장 되기 전에 0으로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The following code example demonstrates how to increment the value that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property when attributes have been added to the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method has been called.</source>
          <target state="translated">에 할당 된 값이 증가 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> 특성의 여는 태그에 추가 된 경우이 속성은 <ph id="ph2">`&lt;span&gt;`</ph> 요소 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>This increases the indentation for any markup that is rendered inside the <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">이 들여씁니다 내에서 렌더링 되는 태그는 <ph id="ph1">`&lt;span&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">태그 요소의 내부 내용을 쓰는 텍스트 작성기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the inner markup content.</source>
          <target state="translated">내부 태그 내용을 쓰는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">내부 태그 콘텐츠 및 태그 언어 요소의 닫는 태그 사이 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object that is an instance of the <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> 개체의 인스턴스를는 <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> 클래스가이 사실이 기록 되 고 별도 참조가 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>The following code example shows how to use a custom Web server control, derived from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서 파생 하는 사용자 지정 웹 서버 컨트롤을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> 재정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>It uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to write a <ph id="ph2">`&lt;font&gt;`</ph> element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 작성 하는 클래스는 <ph id="ph2">`&lt;font&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>After it writes the opening tag of the element, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property to write the string <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> and concatenates this string with the value of the <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용 하 여 요소의 여는 태그를 쓴 후는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> 속성의 문자열을 작성 하려면 <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> 의 값으로이 문자열을 연결 하 고는 <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">태그 특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">다음에 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 특성이 렌더링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>To obtain the value to be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> overload instead of this one.</source>
          <target state="translated">에 할당할 값을 얻기 위해는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 개체를 가져오려면는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> 대신이 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 에서 상속 되는 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override checks whether a <ph id="ph2">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 여부 검사 재정의 <ph id="ph2">`&lt;font&gt;`</ph> 태그 요소 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to check whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">재정의 호출는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> 검사 하도록 여부는 <ph id="ph2">`&lt;font&gt;`</ph> 요소에 포함 되어는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If not, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and sets its value to <ph id="ph4">`30pt`</ph>.</source>
          <target state="translated">그렇지 않은 경우, <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> 메서드를 정의 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성 및 값으로 설정 <ph id="ph4">`30pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">태그 특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">특성에 할당된 값입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">다음에 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 특성이 렌더링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> 메서드가 반환 <ph id="ph2">`true`</ph>에 할당할 값은 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> 에 개체를 반환 하는 <ph id="ph4">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether a markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 태그 스타일 특성이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 지정된 태그 스타일 특성이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">다음에 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 특성이 렌더링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>To get the value that will be rendered with the specified style attribute, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method.</source>
          <target state="translated">지정 된 스타일 특성으로 렌더링 되는 값을 사용는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">다음 코드 예제를 확인 하는 방법을 보여 줍니다 여부는 <ph id="ph1">`&lt;label&gt;`</ph> 요소 렌더링 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method checks whether a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">그렇다면는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> 메서드 검사 여부는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 스타일 특성이 요소에 정의 되었습니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute and sets its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성이 정의 되지 않았으면는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 메서드 정의 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성 및 값으로 설정 <ph id="ph4">`red`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">스타일 특성에 할당되는 값입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">다음에 <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 지정된 태그 스타일 특성과 그 값이 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute and its value will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">다음에 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> 메서드를 호출하는 동안 특성과 그 값이 렌더링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribute is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> 메서드가 반환 되 <ph id="ph2">`true`</ph>에 할당할 값은 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> 특성에 반환 되는 <ph id="ph4">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">확인할 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> markup element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> 태그 요소의 여는 태그에 특성을 렌더링할 수 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> for all attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> 메서드 반환 <ph id="ph3">`true`</ph> 모든 특성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> to limit the attributes that can be rendered in the opening tag of a <ph id="ph2">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> 의 여는 태그를 렌더링할 수 있는 특성을 제한 하는 <ph id="ph2">`&lt;form&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only for those attributes that can be included in the <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> element of the markup for which the class derived from the <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class is intended.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> 반환 하는 메서드 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 에 포함 될 수 있는 특성에만 <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> 태그에서 파생 된 클래스의 <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 사용 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체에서 사용하는 줄 종결자 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string used by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>에서 사용한 줄 종결자 문자열입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The default line terminator string is a carriage return, followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴, 줄 바꿈 ("\r\n") 뒤에 있습니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string is written to the output stream whenever one of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> methods is called.</source>
          <target state="translated">줄 종결자 문자열 때마다 하나의 출력 스트림에 쓰기의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, the default new line character is used.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> 속성이 <ph id="ph2">`null`</ph>, 기본 새 줄 문자가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서 파생 된 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 재정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements.</source>
          <target state="translated">를 호출할 때는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 재정의 텍스트 작성기 모든 렌더링 하는지 여부를 확인할 <ph id="ph2">`&lt;label&gt;`</ph> 또는 <ph id="ph3">`&lt;a&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether a style attribute is defined for the label.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드 레이블에 대 한 스타일 특성 정의 되어 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If no style is defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method sets the default value for the <ph id="ph2">`style:color`</ph> attribute to blue.</source>
          <target state="translated">없는 스타일을 정의 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 에 대 한 기본값을 설정 하는 메서드는 <ph id="ph2">`style:color`</ph> 파랑 특성입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method then uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property to insert a line break in the markup tag and writes any other defined attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> 메서드를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> 줄을 삽입 하려면 속성 태그 태그에서 중단 하 고 정의 된 다른 특성을 씁니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">렌더링할 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">특성에 할당되는 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">태그 특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">지정된 태그 특성과 그 값이 현재 태그 요소로 렌더링될 수 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> 메서드는 항상 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> 재정의 페이지에는 특성을 렌더링 되는지 여부를 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> value is not <ph id="ph3">`30pt`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override calls the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph7">`30pt`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성이 렌더링 되지만 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 값이 <ph id="ph3">`30pt`</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> 호출 재정의 <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드를 추가 하려면는 <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성 및 값을 설정 <ph id="ph7">`30pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 재정의할 수 클래스는 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> 반환 하는 메서드 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 특성을 전혀 렌더링 되 고, 특정 요소에 렌더링 되 고 또는 특정 태그에 대해 렌더링 되지 않도록 하려면.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>For example, if you do not want the object derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribute to <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elements, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</source>
          <target state="translated">파생 된 개체를 원하지 않는 경우 등 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 렌더링 하는 <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> 특성을 <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> 재정의할 수 요소는 <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> 다음 다시 돌아와 <ph id="ph5">&lt;see langword="false" /&gt;</ph> 때 <ph id="ph6">&lt;paramref name="name" /&gt;</ph> 전달 <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> 및 <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> 속성 값은 <ph id="ph9">&lt;see langword="table" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">렌더링할 스타일 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">스타일 특성에 할당되는 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the style attribute.</source>
          <target state="translated">스타일 특성과 관련된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">지정된 태그 특성과 그 값이 현재 태그 요소로 렌더링될 수 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> 메서드는 항상 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> 재정의 페이지에 스타일 특성을 렌더링 되는지 여부를 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> value is not <ph id="ph3">`purple`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override uses the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`purple`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 스타일 특성이 렌더링 되지만 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 값이 <ph id="ph3">`purple`</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> 사용 하 여 재정의 <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 설정 하는 메서드는 <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 특성을 <ph id="ph7">`purple`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 재정의할 수 클래스는 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> 반환 하는 메서드 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 스타일 특성을 전혀 렌더링 되 고, 특정 요소에 렌더링 되 고 또는 특정 태그 언어에 대해 렌더링 되지 않도록 하려면.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="color" /&gt;</ph> style attribute to a <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="color" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</source>
          <target state="translated">파생 된 개체를 원하지 않는 경우 등 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 렌더링 하는 <ph id="ph2">&lt;see langword="color" /&gt;</ph> 스타일 특성을 한 <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> 요소인을 재정의할 수 있습니다는 <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> 다음 다시 돌아와 <ph id="ph5">&lt;see langword="false" /&gt;</ph> 때 <ph id="ph6">&lt;paramref name="name" /&gt;</ph> 전달<ph id="ph7">&lt;see langword="color" /&gt;</ph>및 <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> 속성 값은 <ph id="ph9">&lt;see langword="p" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">렌더링할 요소의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associated with the element.</source>
          <target state="translated">요소와 연결된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">지정된 태그 요소가 요청한 페이지로 렌더링되는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> 메서드는 항상 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> 재정의 페이지에 요소를 렌더링 되는지 여부를 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to determine whether a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is being rendered.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> 요소 렌더링 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> 사용 하 여 재정의 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> 확인할 수 있는지 여부를 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성 렌더링 되 고 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If not, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph3">`20pt`</ph>.</source>
          <target state="translated">Not, 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 만드는 메서드를 한 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> 특성 및 값을 설정 <ph id="ph3">`20pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a markup element from being rendered at all or for a particular markup language.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 재정의할 수 클래스는 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> 반환 하는 메서드 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 태그 요소 전혀 또는 특정 태그 언어에 대 한 렌더링 되지 않도록 방지 하기 위해.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph4">&lt;see langword="false" /&gt;</ph> when a page is requested that contains a <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">파생 된 개체를 원하지 않는 경우 등 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 렌더링 하는 <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> 요소인을 재정의할 수 있습니다는 <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> 반환 하는 메서드 <ph id="ph4">&lt;see langword="false" /&gt;</ph> 포함 하는 페이지가 요청 된 경우는 <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">태그 문자 줄의 들여쓰기 수준을 나타내는 일련의 탭 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property to determine how many tab strings to write to obtain the desired indentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> 속성을 가져올 필요한 들여쓰기에 쓰려고 탭 문자열 수를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The tab string is specified with the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">탭 문자열으로 지정 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>If no tab string is specified, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) is used.</source>
          <target state="translated">탭 문자열이 지정 된 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> 상수 (<ph id="ph2">`\t`</ph>) 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method in a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> 에서 파생 된 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> override always uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant to perform the indentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> 사용 하 여 항상 재정의 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> 들여쓰기를 수행 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">렌더링된 요소의 목록에서 가장 최근에 저장된 태그 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the most recently rendered markup element.</source>
          <target state="translated">가장 최근에 렌더링된 태그 요소가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Elements are added to the list of rendered markup elements by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">요소 별로 요소를 렌더링 된 태그 목록에 추가 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list by calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 호출 하 여 태그 요소 목록에서 제거 된 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">렌더링된 요소의 목록이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The closing tag of the markup element.</source>
          <target state="translated">태그 요소의 닫는 태그입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">태그 요소의 끝 태그를 생성할 때 이후에 사용할 지정된 태그 요소를 저장합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Elements are added to the list of rendered markup elements when the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> method.</source>
          <target state="translated">렌더링 된 태그 요소 목록에 요소가 추가 됩니다 때는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드는 요소에 대 한 끝 태그를 렌더링 한 후 목록에서 태그 요소를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">등록할 태그 특성의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that corresponds with the attribute name.</source>
          <target state="translated">특성 이름에 해당하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 특성을 포함하여 태그 특성을 등록합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The predefined attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">HTML 태그 언어의 미리 정의 된 특성에 대 한 호출에 의해 등록 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> 메서드 때 첫 번째 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Dynamic attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method at other times.</source>
          <target state="translated">동적 특성을 사용 하 여 등록할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> 때도 메서드.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">사용 하는 등록 테이블은 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> 메서드는 <ph id="ph2">`static`</ph>특성 모두에 적용 되므로 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 호스트 컴퓨터에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">스타일 이름을 지정하는 소스 파일에서 전달된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that corresponds with the specified style.</source>
          <target state="translated">지정된 스타일에 해당하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 속성을 포함하여 태그 스타일 속성을 등록합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">HTML 태그 언어의 미리 정의 된 연계 스타일 시트 (CSS) 특성에 대 한 호출에 의해 등록 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> 메서드 때 첫 번째 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Dynamic style attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method at other times.</source>
          <target state="translated">동적 스타일 특성을 사용 하 여 등록할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> 때도 메서드.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">사용 하는 등록 테이블은 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> 메서드는 <ph id="ph2">`static`</ph>특성 모두에 적용 되므로 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 호스트 컴퓨터에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">HTML 태그가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies which element to render.</source>
          <target state="translated">렌더링할 요소를 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 태그를 포함하여 태그를 등록합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The predefined markup tags of the HTML language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">HTML 언어의 미리 정의 된 태그를 호출 하 여 등록 된는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> 메서드 때 첫 번째 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Dynamic markup tags can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method at other times.</source>
          <target state="translated">동적 태그를 사용 하 여 등록할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> 때도 메서드.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of tags applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">사용 하는 등록 테이블은 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> 메서드는 <ph id="ph2">`static`</ph>등록 태그의 모든 적용 되므로 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 호스트 컴퓨터의 개체입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">태그 요소의 내용 뒤와 닫는 태그 앞에 있는 텍스트나 공백을 태그 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">요소의 내용 뒤에 있는 쓸 공백이나 텍스트가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> 메서드 현재 태그 요소에 자식 요소를 삽입 하려는 경우 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to determine whether a <ph id="ph3">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> 에서 파생 된 클래스에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 을 확인 하려면 클래스 여부는 <ph id="ph3">`&lt;label&gt;`</ph> 요소 렌더링 되 고 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the closing tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> 닫는 태그를 삽입 하는 재정의 <ph id="ph2">`&lt;font&gt;`</ph> 닫는 태그 바로 앞 요소는 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If an element other than <ph id="ph1">`&lt;label&gt;`</ph> is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">이외의 다른 요소가 <ph id="ph1">`&lt;label&gt;`</ph> 렌더링 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> 기본 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> 메서드 반환 <ph id="ph3">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> if you want to write text or spacing after the element content but before the closing tag.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> 텍스트나 자 요소 콘텐츠 뒤, 닫는 태그 앞 간격을 작성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">태그 요소의 닫는 태그 뒤에 있는 공백이나 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">요소의 닫는 태그 뒤에 있는 쓸 공백이나 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> 메서드 요소 태그 추가 닫는 태그를 렌더링 하려는 경우 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is rendering a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> 클래스에서 파생 있는지 여부를 확인 하는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 렌더링 하는 클래스는 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> 닫는 태그를 삽입 하는 재정의 <ph id="ph2">`&lt;font&gt;`</ph> 요소 바로 뒤의 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">없는 경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> 기본 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> 메서드 반환 <ph id="ph3">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> if you want to write text or spacing after the element closing tag.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> 텍스트나 요소의 닫는 태그 뒤 간격을 작성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">태그 요소의 내용 앞과 여는 태그 뒤에 있는 텍스트나 공백을 씁니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">요소의 내용 앞에 있는 쓸 텍스트나 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If not overridden, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph>는 재정의되지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> 메서드 내부 태그 하기 전에 현재 태그 요소에 자식 요소를 삽입 하려는 경우 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> 클래스에서 파생 있는지 여부를 확인 하는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 렌더링 되기 직전에 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the opening tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> 의 여는 태그를 삽입 하는 재정의 <ph id="ph2">`&lt;font&gt;`</ph> 의 여는 태그 바로 다음 요소는 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">없는 경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> 기본 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> 메서드 반환 <ph id="ph3">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> if you want to write text or spacing after the opening tag but ahead of the element content.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> 를 텍스트나 여는 태그 뒤 요소 콘텐츠 앞 공백을 작성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">태그 요소의 여는 태그 앞에 있는 텍스트나 공백을 씁니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">태그 요소의 여는 태그 앞에 있는 쓸 텍스트나 공백입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If not overridden, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">재정의되지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 메서드를 의도 한 요소의 여는 태그 앞 추가 태그 렌더링 하려는 경우 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method to determine whether a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 에서 파생 된 클래스 지 여부를 결정 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스 렌더링 되기 직전에 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 의 여는 태그를 삽입 하는 재정의 <ph id="ph2">`&lt;font&gt;`</ph> 요소 바로 앞의 <ph id="ph3">`&lt;label&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If it is not rendering a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">렌더링 하는 경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 기본 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 클래스에서 구현 된 <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> 메서드 반환 <ph id="ph3">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> if you want to write text or spacing ahead of the element opening tag.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> 텍스트 또는 요소 열기 태그 앞 간격을 작성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element to the output stream.</source>
          <target state="translated">태그 요소의 여는 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">여는 태그를 렌더링할 태그 요소 이름을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> method, if the markup element is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 의 재정의 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> 태그 요소 중 하나가 아닌 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">사용 하 여 태그 요소를 생성 하는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드, 첫 번째 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 요소 특성이 나 요소의 여는 태그에서 표시 하는 스타일 특성을 지정 하는 데 필요한 메서드.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">내부 태그를 생성 한 후 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 닫는 태그를 생성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a custom control to render the opening tag of a non-standard <ph id="ph2">`MyTag`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 비 표준의 여는 태그를 렌더링 하는 사용자 지정 컨트롤에서 <ph id="ph2">`MyTag`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The code example then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render inner markup, and then calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to close the element.</source>
          <target state="translated">코드 예제에서는 다음 호출에서 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 내부 태그를 차례로 호출을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드는 요소를 닫습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">렌더링할 태그 요소의 여는 태그를 정의하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value to the output stream.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 열거형 값과 관련된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> method if the markup element is of a known type that is one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 오버 로드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> 태그 요소 중 하나 이며 알려진된 형식인 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">사용 하 여 태그 요소를 생성 하는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드, 첫 번째 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> 요소 특성이 나 요소의 여는 태그에서 표시 하는 스타일 특성을 지정 하는 데 필요한 메서드.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">내부 태그를 생성 한 후 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 닫는 태그를 생성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to output the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 의 여는 태그를 출력 하는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The attributes that are added to the element by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method will be in the opening <ph id="ph2">`&lt;img&gt;`</ph> tag.</source>
          <target state="translated">특성으로 요소에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> 메서드 여에 포함 됩니다 <ph id="ph2">`&lt;img&gt;`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method is used to generate the closing tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드를 사용 하 여를 닫는 태그를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">태그 요소의 끝 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 후 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 오버 로드를 호출한 태그와 닫는 태그 (내부 태그) 요소 간의 모든 콘텐츠가 렌더링 된 후입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after both the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that generates the opening tag and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method that renders the inner markup between the opening and closing tags of the custom <ph id="ph4">`MyTag`</ph> element have been called.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 둘 다 후 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 여는 태그를 생성 하는 메서드 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 및 사용자 지정 의닫는태그사이내부태그를렌더링하는메서드<ph id="ph4">`MyTag`</ph> 요소를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">태그의 공백과 자체 닫는 슬래시 기호(/)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> field is used in markup elements that are self-closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> 필드는 자체 닫는 태그 요소에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">자체적으로 닫는 태그 요소의 닫는 슬래시 기호와 닫는 꺾쇠 괄호(/<ph id="ph1">&amp;gt;</ph>)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method when constructing self-closing markup elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 자체적으로 닫는 태그 요소를 생성할 때 메서드.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The following code example shows how to render the value of a custom <ph id="ph1">`FileName`</ph> property followed by a quotation mark and the characters represented by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 값을 렌더링 하는 방법을 보여 줍니다. <ph id="ph1">`FileName`</ph> 따옴표 뒤 속성과 나타내는 문자는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The code example calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field as the parameter argument to close the element.</source>
          <target state="translated">코드 예제에서는 호출은 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드와 전달은 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> 필드 변수로 매개 변수 인수는 요소를 닫습니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>This code example renders the <ph id="ph1">`FileName`</ph> property value, and then the following markup:</source>
          <target state="translated">이 코드 예제에서는 렌더링 된 <ph id="ph1">`FileName`</ph> 속성 값 및 다음 태그:</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Represents the semicolon (;).</source>
          <target state="translated">세미콜론(;)을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Pass the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field as the parameter argument in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">전달 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> 필드에서 매개 변수 인수로 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드 호출에서 사용자 지정 컨트롤 또는 어댑터 세미콜론을 렌더링 하려는 경우.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The following code example demonstrates how to manually render a series of styles on a markup element.</source>
          <target state="translated">다음 코드 예제에서는 수동으로 일련의 태그 요소에는 스타일을 렌더링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render <ph id="ph2">`font-size`</ph> and <ph id="ph3">`border-style`</ph> style attributes.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 렌더링 하려면 <ph id="ph2">`font-size`</ph> 및 <ph id="ph3">`border-style`</ph> 스타일 특성입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field is used as a parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to separate the value of the <ph id="ph3">`font-size`</ph> attribute from the beginning of the <ph id="ph4">`border-style`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> 필드의 매개 변수로 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 의 값을 구분 하는 메서드는 <ph id="ph3">`font-size`</ph> 특성의 시작 부분에서는 <ph id="ph4">`border-style`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Represents an apostrophe (').</source>
          <target state="translated">아포스트로피(')를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> field when it is necessary to render an apostrophe.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> 아포스트로피를 렌더링 해야 하는 필드입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Represents the slash mark (/).</source>
          <target state="translated">슬래시 기호(/)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field to render the slash marks when you write a URL.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> URL을 작성 하는 경우 슬래시를 렌더링 하는 필드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field when writing the closing tag of a markup element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> 태그 요소의 닫는 태그를 작성할 때 필드입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The following code example demonstrates how to manually render the <ph id="ph1">`src`</ph> attribute of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 수동으로 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`src`</ph> 특성에는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field as its parameter to render slash marks in the path that is applied to the <ph id="ph3">`src`</ph> attribute.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> 에 적용 되는 경로에 슬래시를 렌더링 하는 매개 변수로 필드 표시는 <ph id="ph3">`src`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>Represents a space ( ) character.</source>
          <target state="translated">공백( ) 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods when writing separators between elements and attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 요소와 특성 간의 구분 기호를 쓸 때 메서드.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>This section provides two code examples.</source>
          <target state="translated">이 섹션에서는 두 개의 코드 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">두 번째 배열을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>These code examples generate the following markup:</source>
          <target state="translated">이러한 코드 예제에 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array that contains the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 배열을 포함 하는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 배열에서에서 만든 이전 코드 예제에서는 매개 변수로 호출할 때 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>Represents the style equals (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) character used to set style attributes equal to values.</source>
          <target state="translated">스타일 특성을 값으로 설정하는 데 사용되는 콜론(<ph id="ph1">&lt;see langword=":" /&gt;</ph>) 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method to delimit style names and values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> 스타일 이름 및 값을 구분 하는 메서드.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The following code example demonstrates how to render a <ph id="ph1">`FontWeight`</ph> attribute and value of <ph id="ph2">`bold`</ph> to the opening tag of an element.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`FontWeight`</ph> 특성 및 값의 <ph id="ph2">`bold`</ph> 요소의 여는 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field as the parameter to render the character that sets the value of each style attribute.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> 필드 각 스타일 특성의 값을 설정 하는 문자를 렌더링 하는 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value for the specified markup element.</source>
          <target state="translated">지정된 태그 요소의 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">여는 태그를 렌더링하는 태그 요소입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> 속성에서 상속 된 클래스에만 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property only in a call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method; this is the only time it is set to a consistent value.</source>
          <target state="translated">읽거나 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> 속성에 대 한 호출 에서만에서 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드; 일정 한 값으로 설정 된 유일한 시간입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 된 버전을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> 에서 파생 되는 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>It uses the value of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property to determine whether a server control using the custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is rendering a <ph id="ph3">`&lt;label&gt;`</ph> markup element.</source>
          <target state="translated">값이 사용 하는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> 속성 사용자 지정을 사용 하 여 서버 컨트롤 지 여부를 결정 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 렌더링 하는 개체는 <ph id="ph3">`&lt;label&gt;`</ph> 태그 요소입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>If it is, a <ph id="ph1">`&lt;font&gt;`</ph> element with a <ph id="ph2">`color`</ph> attribute set to <ph id="ph3">`red`</ph> is returned to modify the formatting of the <ph id="ph4">`&lt;label&gt;`</ph> element's text.</source>
          <target state="translated">인 경우는 <ph id="ph1">`&lt;font&gt;`</ph> 인 요소는 <ph id="ph2">`color`</ph> 특성이로 설정 <ph id="ph3">`red`</ph> 형식이 수정에 반환 되는 <ph id="ph4">`&lt;label&gt;`</ph> 요소의 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The property value cannot be set.</source>
          <target state="translated">속성 값이 설정될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">태그의 여는 꺾쇠 괄호(<ph id="ph1">&amp;lt;</ph>)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 태그를 쓸 때 메서드.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The following code example renders the first character of the opening tag of a <ph id="ph1">`&lt;table&gt;`</ph> element with the element name.</source>
          <target state="translated">다음 코드 예제에서는 렌더링의 여는 태그의 첫 번째 문자는 <ph id="ph1">`&lt;table&gt;`</ph> 요소 이름 가진 요소입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field as a parameter.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> 필드를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">렌더링되는 태그 요소의 태그 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">렌더링되는 태그 요소의 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> 속성에서 상속 된 클래스에만 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property only in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">읽거나 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> 속성 에서만 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> 메서드 호출; 일정 한 값으로 설정 된 유일한 시간입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 재정의 된 버전을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 에서 파생 되는 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The code example checks whether the element to render is a <ph id="ph1">`&lt;label&gt;`</ph> element by calling the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and then passing the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property value and a string, <ph id="ph4">`"label"`</ph>, as the parameter arguments.</source>
          <target state="translated">코드 예제에서는 요소를 렌더링 하 인지 확인 한 <ph id="ph1">`&lt;label&gt;`</ph> 호출 하 여 요소는 <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드를 통과 하는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> 속성 값 및 문자열을 <ph id="ph4">`"label"`</ph>, 매개 변수 인수로 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is about to be rendered, the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element, with a <ph id="ph3">`color`</ph> attribute set to <ph id="ph4">`red`</ph>, is rendered before the <ph id="ph5">`&lt;label&gt;`</ph> element's opening tag.</source>
          <target state="translated">경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소에 대 한 정보를 렌더링할 수의 여는 태그는는 <ph id="ph2">`&lt;font&gt;`</ph> 요소와는 <ph id="ph3">`color`</ph> 특성이로 설정 <ph id="ph4">`red`</ph>, 하기 전에 렌더링 되는 <ph id="ph5">`&lt;label&gt;`</ph> 요소의 여는 태그 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If the element to render is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the base class's version of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method is called.</source>
          <target state="translated">렌더링 하는 요소가 되지 않은 경우는 <ph id="ph1">`&lt;label&gt;`</ph> 요소, 버전, 기본 클래스의는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">태그의 닫는 꺾쇠 괄호(<ph id="ph1">&amp;gt;</ph>)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> 필드가 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 태그를 쓸 때 메서드.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> element by making calls to overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 닫는 태그를 렌더링 하는 방법을 보여 줍니다.는 <ph id="ph1">`&lt;table&gt;`</ph> 호출의 오버 로드 하 여 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>To render the final character of the tag, the code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field as a parameter.</source>
          <target state="translated">코드 예제에서는 렌더링 되는 태그의 마지막 문자를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> 필드를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the specified data type to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 지정된 데이터 형식을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 부울 값의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 유니코드 문자의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to end the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element by using the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 의 여는 태그를 발생 하는 <ph id="ph2">`&lt;img&gt;`</ph> 사용 하 여 요소는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> 상수입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>This code example renders the following markup:</source>
          <target state="translated">이 코드 예제에 다음 태그를 렌더링합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 유니코드 문자 배열의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">이 섹션에서는 두 개의 코드 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The first one demonstrates how to create an array of characters.</source>
          <target state="translated">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">두 번째 배열을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">이러한 코드 예제에 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. <ph id="ph1">`hello world`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">배열에 포함 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드 두 단어 사이 공백을 만듭니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph2">`hello world`</ph> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 렌더링 하는 메서드는 <ph id="ph2">`hello world`</ph> 이 예제 코드를 포함 하는 컨트롤은 페이지에 포함 되 면 페이지에 앞의 코드 예제에서 만든 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 배정밀도 부동 소수점 숫자의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 32바이트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 32바이트 부호 있는 정수의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 64바이트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 64바이트 부호 있는 정수의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 개체의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property:</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 단정밀도 부동 소수점 숫자의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> 가능한 가장 작은 값은 필드의는 <ph id="ph3">&lt;xref:System.Single&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 지정된 문자열을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a string between the opening and closing tags of a custom markup element.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 태그와 닫는 태그의 사용자 지정 태그 요소 간에 문자열을 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> 메서드와 동일한 의미 체계를 사용하여 보류 중인 탭 공백과 함께 탭 문자열과 형식이 지정된 문자열을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 값으로 형식이 지정 된 문자열을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">형식을 지정할 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 개체 배열의 텍스트 표현이 포함된 형식이 지정된 문자열을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">이 메서드에서는 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> 메서드와 동일한 의미 체계를 사용합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The first one demonstrates how to render a formatted string and the contents of an array.</source>
          <target state="translated">첫 번째 형식이 지정 된 문자열과 있는 배열의 내용을 렌더링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The second one demonstrates how to declare the array.</source>
          <target state="translated">두 번째 배열을 선언 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the contents of an object array, named <ph id="ph2">`curPriceTime`</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 서식이 지정 된 문자열과 라는 개체 배열의 내용을 렌더링 하는 메서드 <ph id="ph2">`curPriceTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The method call renders the second member of the array before it renders the first member.</source>
          <target state="translated">첫 번째 멤버를 렌더링 하기 전에 배열의 두 번째 멤버를 렌더링 하는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example demonstrates declaring the <ph id="ph1">`curPriceTime`</ph> object array.</source>
          <target state="translated">다음 코드 예제에서는 선언는 <ph id="ph1">`curPriceTime`</ph> 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 텍스트가 포함된 문자의 배열입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">쓰기를 시작할 배열의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 유니코드 문자 하위 배열의 텍스트 표현을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This section provides two code examples.</source>
          <target state="translated">이 섹션에서는 두 개의 코드 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">두 번째 배열을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">이러한 코드 예제에 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. <ph id="ph1">`hello world`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">배열에 포함 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드 두 단어 사이 공백을 만듭니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following portion of the code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the first five characters of the array created in the preceding example.</source>
          <target state="translated">다음 부분 코드 예제를 사용 하 여는 <ph id="ph1">`index`</ph> 및 <ph id="ph2">`count`</ph> 의 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 메서드 앞의 예에서 만든 배열의 처음 5 개 문자를 렌더링 합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">보류 중인 탭 공백과 함께 두 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">이 메서드에서는 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> 메서드와 동일한 의미 체계를 사용합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> 기본 메서드.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> 값 및 서식이 지정 된 문자열을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a markup attribute and its value to the output stream.</source>
          <target state="translated">태그 특성과 그 값을  출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 특성입니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">특성에 할당된 값입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">지정된 태그 특성과 값을  출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with no encoding.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드를 태그 특성과 해당 값을 인코딩하지 않고 씁니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드 큰따옴표 (")로 묶인 특성 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드 특성 이름만 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 된 <ph id="ph1">`&lt;img&gt;`</ph> 메서드의 두 오버 로드는 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">코드 예제에서는 다음 프로세스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 요소의 여는 문자를 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> 오버 로드는 쓰기는 <ph id="ph2">`alt`</ph> 특성 및 값을는 <ph id="ph3">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 오버 로드를 사용자 지정 렌더링 <ph id="ph2">`myattribute`</ph> 특성의 값으로 <ph id="ph3">`No "encoding" required`</ph>, 다음 설정 <ph id="ph4">`fEncode`</ph> 를 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">요소의 여는 태그를 닫고 다음 호출에서 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 을 닫는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">파생된 클래스에서 재정의할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> 메서드 특성 및 해당 값을 작성 하기 위한 사용자 지정 규칙을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">허용 되는 코드를 작성할 수는 예를 들어는 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> 메서드가 빈 값을 사용 하 여 특성을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 태그 특성입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">특성에 할당된 값입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성 및 할당된 값을 인코드하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 인코드하지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">지정된 태그 특성과 값을 출력 스트림에 쓰고, 지정된 경우 인코드된 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드를 태그 특성과 해당 값 또는 인코딩하지 않고 씁니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method to do the encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> 인코딩을 수행 하기 위해 메서드.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드 큰따옴표 (")로 묶인 특성 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드 특성 이름만 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 된 <ph id="ph1">`&lt;img&gt;`</ph> 메서드의 두 오버 로드는 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The code example uses the following process:</source>
          <target state="translated">코드 예제에서는 다음 프로세스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 요소의 여는 문자를 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> 오버 로드는 쓰기는 <ph id="ph2">`alt`</ph> 특성 및 값을는 <ph id="ph3">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 오버 로드를 사용자 지정 렌더링 <ph id="ph2">`myattribute`</ph> 특성의 값으로 <ph id="ph3">`No "encoding" required`</ph>, 다음 설정 <ph id="ph4">`fEncode`</ph> 를 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">요소의 여는 태그를 닫고 다음 호출에서 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 을 닫는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">파생된 클래스에서 재정의할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> 메서드 특성 및 해당 값을 작성 하기 위한 사용자 지정 규칙을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">허용 되는 코드를 작성할 수는 예를 들어는 <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> 메서드가 빈 값을 사용 하 여 특성을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">여는 태그를 쓸 태그 요소입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">탭 공백과 지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 메서드에서 태그 요소의 여는 태그의 닫는 꺾쇠 괄호 (&gt;)를 기록 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">이 특성은 요소의 여는 태그를 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant to close the opening tag when calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> 상수를 호출할 때 여는 태그를 닫습니다는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constant when you write markup elements that are self-closing.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 사용 하 여 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> 자체 닫는 태그 요소를 작성 하는 경우에 상수입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 태그 또는 특성에서 매핑을 허용 하지 않으며 각 요청에 대해 동일한 방법으로 태그 요소를 렌더링 하는 사용자 지정 서버 컨트롤에서 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 된 <ph id="ph1">`&lt;img&gt;`</ph> 메서드의 두 오버 로드는 요소는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">코드 예제에서는 다음 프로세스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 요소의 여는 문자를 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> 오버 로드는 쓰기는 <ph id="ph2">`alt`</ph> 특성 및 값을는 <ph id="ph3">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> 오버 로드를 사용자 지정 렌더링 <ph id="ph2">`myattribute`</ph> 특성의 값으로 <ph id="ph3">`No "encoding" required`</ph>, 다음 설정 <ph id="ph4">`fEncode`</ph> 를 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">요소의 여는 태그를 닫고 다음 호출에서 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 을 닫는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Writes a <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> markup element to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> 태그 요소를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> 줄을 렌더링 하는 방법은 사용자 지정 컨트롤 또는 어댑터 태그를 분리 합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes a space between the <ph id="ph2">`br`</ph> and <ph id="ph3">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> 메서드 사이 공백을 작성는 <ph id="ph2">`br`</ph> 및 <ph id="ph3">`/`</ph> HTML의 향상 된 호환성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to write a <ph id="ph2">`&lt;br /&gt;`</ph> element to the requesting browser after the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method writes the encoded <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> 작성 하는 메서드는 <ph id="ph2">`&lt;br /&gt;`</ph> 요소 후 요청 하는 브라우저를는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> 메서드 작성 한 인코딩된 <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">인코드하고 출력 스트림에 작성할 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">요청하는 장치에 대해 지정된 텍스트를 인코드한 후 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method when a string contains angle brackets (<ph id="ph2">\&lt;</ph> or &gt;) or an ampersand (&amp;).</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> 메서드 꺾쇠 괄호를 포함 하는 문자열 (<ph id="ph2">\&lt;</ph> 또는 &gt;) 또는 앰퍼샌드 (&amp;).</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to perform the encoding and also converts Unicode character <ph id="ph3">`00A0`</ph> to <ph id="ph4">`&amp;nbsp;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 인코딩을 수행 하는 메서드도 유니코드 문자를 변환 하 고 <ph id="ph3">`00A0`</ph> 를 <ph id="ph4">`&amp;nbsp;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method to write the encoded markup <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> to the output stream.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> 인코딩된 태그를 작성 하는 메서드 <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes <ph id="ph2">`&lt;br /&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> 메서드 쓰기 <ph id="ph2">`&lt;br /&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">인코드하고 출력 스트림에 작성할 URL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">지정된 URL을 인코드하고 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL might include parameters.</source>
          <target state="translated">URL에 매개 변수가 포함될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method encodes the string in the <ph id="ph2">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> 메서드에 문자열을 인코딩합니다는 <ph id="ph2">`url`</ph> URL 인코딩용 사양에 따라 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">물음표 (?) 구분 기호를 수행 하는 매개 변수는 인코딩되지 않습니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> 메서드는 다음과 같은 출력을 생성 하는 메시지:</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">인코딩하고 출력 스트림에 쓸 URL 매개 변수 문자열입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">요청하는 장치에 맞게 지정된 URL 매개 변수를 인코딩한 다음 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">URL의 매개 변수 부분에 있는 공백은 더하기 기호 (+)으로 인코딩되고 등호 (=)로 인코딩됩니다. <ph id="ph1">`%3d`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> 메서드는 다음과 같은 출력을 생성 하는 메시지:</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The element to write the closing tag for.</source>
          <target state="translated">닫는 태그를 쓸 요소입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">탭 공백과 지정된 태그 요소의 닫는 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 메서드는 요소 끝 태그는 해당 여는 태그와 일치 하는 논리 없습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 된 <ph id="ph1">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">코드 예제에서는 다음 프로세스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method to render the opening characters of the element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 요소의 여는 문자를 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write attributes to the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">두 오버 로드를 호출는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> 특성을 작성 하는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> 을 닫는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The element to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 요소입니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">탭 공백과 지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which does not write the closing angle bracket.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> 메서드 자동으로 작성 닫는 꺾쇠 괄호 (&gt;)은 요소의 여는 태그와 달리는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> 메서드를 닫는 꺾쇠 괄호를 기록 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> for markup elements that have no attributes.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> 특성이 없는 태그 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes data to an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream, as specified by the overloaded parameters, followed by a line terminator string.</source>
          <target state="translated">오버로드된 매개 변수에서 지정한 대로 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 출력 스트림에 데이터를 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>All versions of this method write any pending tab spacing to the output stream.</source>
          <target state="translated">이 메서드의 모든 버전은 출력 스트림에 보류 중인 탭 공백을 씁니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">줄 종결자 문자열을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to insert a line after an <ph id="ph2">`&lt;img&gt;`</ph> element is rendered.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 뒤에 줄을 삽입 하는 메서드는 <ph id="ph2">`&lt;img&gt;`</ph> 요소가 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 부울입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 부울 값의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The character to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자입니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 유니코드 문자를 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The character array to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 유니코드 문자 배열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">이 섹션에서는 두 개의 코드 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The first one demonstrates how to create an array.</source>
          <target state="translated">첫 번째 배열을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The second one demonstrates how to use that array.</source>
          <target state="translated">두 번째 배열을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">이러한 코드 예제에 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. <ph id="ph1">`hello world`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">배열에 포함 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드 두 단어 사이 공백을 만듭니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example renders the <ph id="ph1">`hello world`</ph> character array that was created in the preceding example by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 렌더링 되는 <ph id="ph1">`hello world`</ph> 문자 배열을 사용 하 여 앞의 예제에서 만든는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 배정밀도 부동 소수점 숫자의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 32바이트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 32바이트 부호 있는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 64바이트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 64바이트 부호 있는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 개체의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property to a control.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> 속성 컨트롤을 합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 단정밀도 부동 소수점 숫자의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 의 값을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> 가능한 가장 작은 값은 필드의는 <ph id="ph3">&lt;xref:System.Single&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">이 코드 예제에서는 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 텍스트 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 4바이트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 4바이트 부호 없는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드와 동일한 의미 체계를 사용 하 여는 <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 값으로 형식이 지정 된 문자열을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">형식을 지정할 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 개체 배열의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드와 동일한 의미 체계를 사용 하 여는 <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The first one demonstrates how to render a string and an array to the output stream.</source>
          <target state="translated">첫 번째 문자열과 출력 스트림에 배열 렌더링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The second one shows how to declare the array.</source>
          <target state="translated">두 번째 배열을 선언 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the contents of an object array to the output stream.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 서식이 지정 된 문자열과 출력 스트림에 개체 배열의 내용을 렌더링 하는 메서드.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example shows how to declare the object array that was rendered in the preceding code example.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제에서 렌더링 된 개체 배열을 선언 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">쓰기를 시작할 문자 배열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 배열의 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 유니코드 문자의 하위 배열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">두 번째 배열을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">이러한 코드 예제에 다음 태그를 생성합니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. <ph id="ph1">`hello world`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">배열에 포함 되는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> 필드 두 단어 사이 공백을 만듭니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the first five characters of the array created in the preceding code example.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`index`</ph> 및 <ph id="ph2">`count`</ph> 의 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드 이전 코드 예제에서 만든 배열의 처음 5 개 문자를 렌더링 합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0개 이상의 형식 항목을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">출력 스트림에 보류 중인 탭 공백과 두 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 메서드와 동일한 의미 체계를 사용 하 여는 <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 값 및 서식이 지정 된 문자열을 렌더링 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">문자열과 줄 종결자 문자열을 차례로 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">이 메서드는 지정된 탭 공백을 무시합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method when you do not want to render any tab spacing ahead of the rendered string <ph id="ph3">`s`</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> 메서드 보다는 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> 탭 공백이 렌더링된 된 문자열 보다 먼저 렌더링 하지 않을 때 메서드 <ph id="ph3">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 기본 메서드 쓰는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a style attribute and its value to the output stream.</source>
          <target state="translated">스타일 특성과 그 값을  출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 스타일 특성입니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">스타일 특성에 할당되는 값입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">지정된 스타일 특성을 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> 메서드는 다음과 같은 형태로 스타일 특성을 씁니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 스타일 특성입니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">스타일 특성에 할당되는 값입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the style attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스타일 특성과 그 할당 값을 인코딩하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">지정된 스타일 특성과 값을 출력 스트림에 쓰고 지정된 경우 값을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> 메서드는 다음과 같은 형태로 스타일 특성을 씁니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method is used to encode the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> 메서드 인코딩하는 데 사용 되는 <ph id="ph2">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">인코딩하고 출력 스트림에 쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the string as a part of the parameter section of the URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to encode the string as part of the path section of the URL.</source>
          <target state="translated">URL 매개 변수 섹션의 일부로 문자열을 인코딩하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, URL 경로 섹션의 일부로 문자열을 인코딩하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">지정된 문자열을 URL 요구 사항에 따라 인코딩하여 씁니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph2">`argument`</ph>) into strings of the form <ph id="ph3">`%xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph4">`%uxxxx`</ph>, where <ph id="ph5">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> 메서드 URL 구분 기호로 간주 될 수 있는 문자를 인코딩합니다 (의 설정에 종속 <ph id="ph2">`argument`</ph>) 형식의 문자열로 <ph id="ph3">`%xx`</ph>ASCII 코드를 보다 작은 128 고, 그러지 않으면, <ph id="ph4">`%uxxxx`</ph>여기서 <ph id="ph5">`x`</ph> 는 16 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> methods use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method as a utility method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> 메서드 사용은 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> 유틸리티 메서드로 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>