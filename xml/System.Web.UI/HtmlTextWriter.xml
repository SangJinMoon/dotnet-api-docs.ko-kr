<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="582bbb480d6fa91ab39a27582c06d8590dd5f772" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378360" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5c520-101">ASP.NET 서버 컨트롤 출력 스트림에 태그 문자와 텍스트를 씁니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c520-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="5c520-102">이 클래스는 ASP.NET 서버 컨트롤이 태그를 클라이언트로 렌더링할 때 사용하는 서식 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c520-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-103"><xref:System.Web.UI.HtmlTextWriter> 클래스 데스크톱 브라우저에 HTML 4.0 렌더링 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="5c520-104"><xref:System.Web.UI.HtmlTextWriter> 의 모든 태그 작성기에 대 한 기본 클래스 이기도 <xref:System.Web.UI> 네임 스페이스를 포함 하는 <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, 및 <xref:System.Web.UI.XhtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="5c520-105">이러한 클래스는 요소, 특성 및 다른 유형의 변경에 대 한 스타일 및 레이아웃 정보를 작성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="5c520-106">또한 이러한 클래스는 각 표시 언어와 관련 된 페이지 및 컨트롤 어댑터 클래스에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="5c520-107">대부분의 경우 ASP.NET 자동으로 요청 하는 장치에 대 한 적절 한 기록기를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="5c520-108">그러나 사용자 지정 텍스트 작성기 또는 특정 장치에 대 한 페이지를 렌더링 하는 특정 작성기를 지정 하려면 매핑해야 작성기의 페이지에는 `controlAdapters` 응용 프로그램 브라우저 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-109">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Control.Render%2A> 에서 파생 된 사용자 지정 컨트롤의 메서드는 <xref:System.Web.UI.Control> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="5c520-110">다양 한를 사용 하는 방법을 보여 주는 코드 예제 <xref:System.Web.UI.HtmlTextWriter> 메서드, 속성 및 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-111">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="5c520-112">태그 내용을 렌더링하는 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-113">기본 탭 문자열을 사용하는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> 생성자 사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 줄의 들여쓰기 필요한 경우에 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="5c520-115">호출 된 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> 오버 로드를 새 인스턴스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-116">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> 사용자 지정을 만드는 데 생성자 <xref:System.Web.UI.HtmlTextWriter> 라는 개체 `StyledLabelHtmlWriter.` 때는 `MyPage` 에서 파생 된 사용자 지정 클래스는 <xref:System.Web.UI.Page> 클래스, 클라이언트 요청 브라우저를 사용 하 여는 `StyledLabelHtmlWriter` 출력 스트림에 해당 콘텐츠를 렌더링 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="5c520-117">태그 내용을 렌더링하는 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="5c520-118">줄 들여쓰기를 렌더링하는 데 사용할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-119">지정된 탭 문자열 문자를 사용하여 <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> 생성자 사용 하 여 `tabString` 줄의 들여쓰기는 필요한 경우.</span><span class="sxs-lookup"><span data-stu-id="5c520-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="5c520-121">호출 된 <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> 새 인스턴스를 초기화 하는 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-122">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> 사용자 지정을 만드는 데 생성자 <xref:System.Web.UI.HtmlTextWriter> 라는 개체 `StyledLabelHtmlWriter.` 때는 `MyPage` 에서 파생 된 사용자 지정 클래스는 <xref:System.Web.UI.Page> 클래스, 클라이언트 요청 브라우저를 사용 하 여는 `StyledLabelHtmlWriter` 출력 스트림에 해당 콘텐츠를 렌더링 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-123">지정된 태그 특성과 값을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-124">추가할 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-125">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-126">지정된 태그 특성과 값을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-127">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> 특성 중 하나가 아닌 경우 메서드는 <xref:System.Web.UI.HtmlTextWriterAttribute> 값 특성은 런타임이 될 때까지 알 수 없는 경우 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="5c520-128">지정 된 태그 요소의 모든 인스턴스에 대 한는 <xref:System.Web.UI.HtmlTextWriter> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="5c520-129">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 특성이 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소의 여는 태그에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-130">특성 목록에서 다음 지워집니다는 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="5c520-131">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-132">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소에 모든 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-133"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-134">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-135"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-136">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드 호출 하기 전에 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="5c520-137">서로 다른 두 개의 오버 로드를 호출 하는 코드 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 및 서로 다른 두 오버 로드 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 호출 하기 전에 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 렌더링 하는 메서드는 `<span>` 요소를 출력 스트림에 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="5c520-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> 메서드 라는 사용자 지정 특성을 정의 하는 `CustomAttribute` 라는 사용자 지정 값 및 `CustomAttributeValue` 에 대 한는 `<span>` 이 코드를 렌더링 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-139">출력 스트림에 추가할 태그 특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-140">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-141">태그 특성과 특성 값을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-142">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> 표준 태그 특성을 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="5c520-143">지정 된 태그 요소의 모든 인스턴스에 대 한는 <xref:System.Web.UI.HtmlTextWriter> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="5c520-144">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 특성은 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소의 여는 태그에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-145">특성 목록에서 다음 지워집니다는 <xref:System.Web.UI.HtmlTextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="5c520-146">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-147">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소에 모든 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-148"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-149">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-150"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-151">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> 를 추가 하려면 메서드는 `Onclick` 태그 요소에 특성을 설정한 다음 해당 값 다음 ECMAScript 코드:</span><span class="sxs-lookup"><span data-stu-id="5c520-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-152">추가할 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-153">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="5c520-154">특성과 그 값을 인코딩하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-155">지정된 태그 특성과 값을 선택적으로 인코딩하여 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-156">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 특성 중 하나가 아닌 경우 메서드는 <xref:System.Web.UI.HtmlTextWriterAttribute> 값 또는 특성 인코딩이 될 때까지 알 수 없는 경우에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="5c520-157">지정 된 태그 요소의 모든 인스턴스에 대 한는 <xref:System.Web.UI.HtmlTextWriter> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="5c520-158">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 특성이 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소의 여는 태그에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-159">특성 목록에서 다음 지워집니다는 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="5c520-160">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 메서드 `fEncode` 로 설정 `true`, 특성 인용 부호 ("), 작음 (<) 기호를 포함할 수 있는 수 있는 경우 또는 앰퍼샌드 (&).</span><span class="sxs-lookup"><span data-stu-id="5c520-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="5c520-161">이 메서드는 요청한 장치에서의 요구 사항을 충족 하기 위해 특성을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="5c520-162">설정할 수 있습니다 `fEncode` 를 `false`는 이러한 문자가 축적할 수를 알고 있는 경우 또는 특성이 이미 인코딩된 알고 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="5c520-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="5c520-163">특성 형식이 `Style`, 값을 인코딩지 않습니다 경우에 `fEndode` 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-163">If the attribute type is `Style`, the value won’t be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="5c520-164">스타일 값 CSS 규격은 확인 악성 코드가 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-164">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>
  
 <span data-ttu-id="5c520-165">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-166">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소에 모든 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-167"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-168">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-169"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-170">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 메서드 라는 사용자 지정 특성을 확인 하려면 `myattribute`, 해당 값에 대해 인코딩되지 및는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-171">추가할 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-172">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-173">특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-174">지정된 태그 특성과 값을 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 열거형 값과 함께 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-175">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> 에서 상속 된 경우에 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-176">하면 새로 만드는 `name` 및 `key` 특성에 대 한 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-177">출력 스트림에 추가할 태그 특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-178">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="5c520-179">특성과 그 값을 인코딩하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-180">태그 특성과 특성 값을 선택적으로 인코딩하여 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-181">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> 메서드를 선택적으로 인코딩하여 표준 태그 특성을 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="5c520-182">지정 된 태그 요소의 모든 인스턴스에 대 한는 <xref:System.Web.UI.HtmlTextWriter> 클래스의 해당 요소에 대 한 특성 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="5c520-183">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 특성이 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 요소의 여는 태그를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-184">특성 목록에서 다음 지워집니다는 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="5c520-185">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> 메서드 `fEncode` 로 설정 `true`, 특성 인용 부호 ("), 작음 (<) 기호를 포함할 수 있는 수 있는 경우 또는 앰퍼샌드 (&).</span><span class="sxs-lookup"><span data-stu-id="5c520-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="5c520-186">이 메서드는 요청한 장치에서의 요구 사항을 충족 하기 위해 특성을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="5c520-187">설정할 수 있습니다 `fEncode` 를 `false`는 이러한 문자가 축적할 수를 알고 있는 경우 또는 특성이 이미 인코딩된 알고 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="5c520-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="5c520-188">특성 형식이 `Style`, 값을 인코딩지 않습니다 경우에 `fEncode` 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-188">If the attribute type is `Style`, the value won’t be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="5c520-189">스타일 값 CSS 규격은 확인 악성 코드가 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-189">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>

  
 <span data-ttu-id="5c520-190">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-191">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드는 요소에 모든 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-192"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-193">요소의 여는 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-194"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-195">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> 에 할당 된 문자열 값 않도록 하는 `Alt` 특성에 `<img>` 요소는 요청 하는 장치에 대 한 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-196">태그 스타일 특성을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만드는 요소의 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-197">추가할 스타일 특성이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-198">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-199">지정된 태그 스타일 특성과 특성 값을 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-200">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> 스타일의 구성원이 아닙니다. 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형 않거나 런타임이 될 때까지 알 수 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="5c520-201"><xref:System.Web.UI.HtmlTextWriter> 클래스 렌더링 태그 요소에 대 한 스타일의 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="5c520-202">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 스타일은 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 메서드는 요소의 여는 태그에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-203">선 스타일이 지워집니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="5c520-204">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-205">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 요소에 특성을 메서드를 원하는 스타일을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-206"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-207">요소 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-208"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-209">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> 렌더링 하려면 `font-size` 및 `color` 스타일 특성에는 `<p>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="5c520-210">사용 하 여이 코드 예제는 <xref:System.Web.UI.HtmlTextWriter> 컨트롤의 콘텐츠를 렌더링 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-211">출력 스트림에 추가할 스타일 특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-212">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-213">지정된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 값과 연결된 태그 스타일 특성과 특성 값을 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-214">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> 스타일의 구성원 인 경우 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형 런타임 이전에 알려져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="5c520-215"><xref:System.Web.UI.HtmlTextWriter> 클래스 렌더링 태그 요소에 대 한 스타일의 목록을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="5c520-216">경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 호출 하 여 추가 된 모든 스타일이 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 메서드는 요소의 여는 태그에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="5c520-217">선 스타일이 지워집니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="5c520-218">태그 요소를 렌더링 하는 코딩 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="5c520-219">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 요소에 특성을 메서드를 원하는 스타일을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="5c520-220"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="5c520-221">요소 태그와 닫는 태그 사이 있는 내용을 렌더링 하에서 필요에 따라 다른 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="5c520-222"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-223">다음 코드 예제에서는의 재정의의 일부를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 에서 파생 된 클래스에서 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-224">코드 검사 여부는 `<Label>` 요소 렌더링 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="5c520-225">그렇다면는 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> 메서드는 확인 여부는 `Color` 스타일 특성에 대해 정의 된는 `<Label>` 요소.</span><span class="sxs-lookup"><span data-stu-id="5c520-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="5c520-226">경우는 `Color` 특성 정의 되지 않은,이 오버 로드를 호출 하는 코드는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 를 추가 하려면 메서드는 `Color` 스타일 특성에 특성을 다음으로 값을 설정 `red`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-227">추가할 스타일 특성이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-228">특성에 할당할 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-229">추가할 스타일 특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-230">지정된 태그 스타일 특성과 특성 값을 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값과 함께 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 이후에 호출하여 만들어진 여는 태그에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-231">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> 에서 상속 된 경우에 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-232">하면 새로 만드는 `name` 및 `value` 쌍에 대 한 <xref:System.Web.UI.HtmlTextWriterStyle> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-233">컨트롤이 렌더링되려고 한다는 것을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체나 파생 클래스의 개체에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-234"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> 메서드에 기능이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="5c520-235">재정의 해야 합니다는 <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> 에서 파생 된 클래스에서 메서드가 <xref:System.Web.UI.HtmlTextWriter> 사용자 고유의 렌더링 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="5c520-236">필요할 수 있는 표시 언어의 예를 들어 `<p>` 바로 전에 있 컨트롤을 렌더링 되어야 하는 요소에 대 한 요구는 `<p>` 요소는 이전에 결정 된, 사용할 수는 <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-237">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 닫고 이와 관련된 모든 시스템 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-238">이 구현에서 <xref:System.Web.UI.HtmlTextWriter.Close%2A> 메서드 호출의 <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="5c520-239">호출 된 후에 <xref:System.Web.UI.HtmlTextWriter.Close%2A> 메서드에 대 한 모든 작업은 <xref:System.Web.UI.HtmlTextWriter> 모든 리소스를 해제 된 개체 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-240">단일 탭 문자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-241">하나의 탭 ASCII 9 문자로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-242">다음 코드 예제를 사용 하는 생성자를 만드는 방법을 보여 줍니다는 <xref:System.IO.TextWriter> 개체를 매개 변수로 전달 된 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 생성자의 두 번째 버전에 대 한 매개 변수 인수로 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="5c520-243">코드에서이 생성자를 호출 하면는 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 필드는 페이지 또는 어댑터에 사용 되는 태그 작성기의 인스턴스에 대 한 들여쓰기 정책을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-244">따옴표(") 문자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-245"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 특성을 닫는 데 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-246">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 `border` 특성에 `<table>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="5c520-247">코드를 호출 하 여는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 특성 값 및 사용 하 여 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> 및 <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="5c520-248">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-249">현재 컨텍스트의 <see cref="T:System.Web.HttpRequest" /> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-250">인코딩할 특성 값을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="5c520-251">특성 값을 인코드하면 <see langword="true" />이고, 인코드하지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-252">현재 컨텍스트의 <see cref="T:System.Web.HttpRequest" /> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-253">인코딩된 특성 값을 포함하는 문자열이거나, <paramref name="value" />가 비어 있으면 <see langword="null" />이고, <paramref name="fEncode" />가 는 <see langword="false" />이면 인코딩되지 않은 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-254">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> 특성이 없으면 메서드는 <xref:System.Web.UI.HtmlTextWriterAttribute> 열거형 값 않거나 런타임이 될 때까지 알 수 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="5c520-255"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> 메서드 제거 큰따옴표 ("), 앰퍼샌드 (&), 하므로 해당 잘못 된 태그 (<) 기호 생성 되지 않은 입력에 관계 없이 부등호 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="5c520-256">에 의해 수행 됩니다 실제 인코딩과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-257">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> 메서드 매개 변수로 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드 호출에서 다음 인코딩합니다는 `color:blue` 스타일 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="5c520-258">태그 특성을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-259">인코딩할 특성 값을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-260">현재 컨텍스트의 <see cref="T:System.Web.HttpRequest" /> 개체 요구 사항에 따라 지정된 태그 특성의 값을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-261">인코딩된 특성 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-262"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> 메서드 제거 큰따옴표 ("), 앰퍼샌드 (&), 하므로 해당 잘못 된 태그 (<) 기호 생성 되지 않은 입력에 관계 없이 부등호 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="5c520-263">에 의해 수행 됩니다 실제 인코딩과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="5c520-264">인코딩할 URL이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-265">지정된 URL의 공백을 "%20"으로 변환하여 URL 인코딩을 최소화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-266">인코딩된 URL이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-267">URL의 문자 인코딩을 두 자리 16 진수 표현 (대/소문자 구분)는 문자에 대 한 ISO-라틴 문자 코드 포인트의 다음 백분율 기호 (%)으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="5c520-268">공백의 16 진수 표현은 20입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-269">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> 메서드 매개 변수로 전달 되는 URL에 있는 공백을 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-270">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체가 페이지에 내용을 쓰는 데 사용하는 인코딩을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-271">페이지에 쓰는 태그의 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-272"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A> 속성 기본에서 값을 가져오는 <xref:System.IO.TextWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-273">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> 는 사용자 지정 컨트롤 텍스트를 포함 하는 페이지 렌더링을 사용 하 여 인코딩 유형을 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-274">컨트롤이 렌더링을 완료했다는 것을 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체나 파생 클래스의 개체에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="5c520-275">이 메서드를 사용하여 <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> 메서드에서 열린 태그 요소를 닫을 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-276"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> 메서드에 기능이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="5c520-277">재정의 해야 <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> 에서 파생 된 클래스에는 <xref:System.Web.UI.HtmlTextWriter> 클래스 사용자 고유의 렌더링 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="5c520-278">사용할 수는 <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> 에서 열을 닫는 태그 요소 메서드는 <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-279">태그 요소에서 닫는 태그의 왼쪽 꺾쇠 괄호와 슬래시 표시(&lt;/)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-280"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 태그 요소 끝 태그를 생성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-281">다음 코드 예제에서는 닫는 태그를 렌더링 하는 방법을 보여 줍니다.는 `<table>` 태그 요소를 사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> 및 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> 필드에 대 한 호출에 매개 변수 값으로는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="5c520-282">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-283">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 태그 요소의 여는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="5c520-284">태그 블록에 적용을 시작할 레이아웃과 형식을 지정하는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-285">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 <see langword="&lt;span&gt;" /> 요소의 여는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-286">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드를 배경 색 또는 테두리 너비 같은 스타일을 블록 태그에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="5c520-287"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 및 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 장치 어댑터 또는 제어를 지정된 된 스타일의 문자 형식을 사용 하는 태그를 만드는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="5c520-288">에 대해 같은 값을 사용 하 여 `style` 에 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 를 해당 사용 하면 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="5c520-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> 의 여는 태그를 렌더링 하는 메서드는 `<span>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="5c520-290">이 메서드 다음 추가 필요한 특성 및 스타일 특성의 여는 태그는 `<span>` 지정 하는 설정을 표시 하는 요소는 <xref:System.Web.UI.WebControls.Style> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="5c520-291">사용 하 여, 특성 및 스타일 특성을 포함 하는 다른 태그 요소 렌더링 하려는 경우는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-292">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 `TextSample`에서 파생 된는 <xref:System.Web.UI.WebControls.WebControl> 클래스를 사용 하는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 적용할 방법을 <xref:System.Web.UI.WebControls.Style.ForeColor%2A> 스타일 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="5c520-293"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드는 HTML 렌더링 `<span style="color:Navy;">`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="5c520-294"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드 호출을 닫습니다는 `<span>` 텍스트 렌더링 된 후에 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="5c520-295">태그 블록에 적용을 시작할 레이아웃과 형식을 지정하는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="5c520-296">
            <c>스타일</c>에 지정된 스타일 개체가 포함될 태그 요소의 여는 태그를 지정하는 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-297">지정한 스타일의 레이아웃과 문자 형식을 구현하는 특성이 포함된 태그 요소의 여는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-298">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드를 배경 색 또는 테두리 너비 같은 스타일을 블록 태그에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="5c520-299"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 및 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 장치 어댑터 또는 제어를 지정된 된 스타일의 문자 형식을 사용 하는 태그를 만드는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="5c520-300">에 대해 같은 값을 사용 하 여 `style` 에 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 를 해당 사용 하면 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="5c520-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> 로 지정한 요소를 여는 태그를 렌더링 하는 메서드는 `tag` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="5c520-302"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> 메서드 다음 필요한 특성 및 스타일 특성에 추가 하 여 지정 된 설정을 표시 하려면 요소의 여는 태그는 <xref:System.Web.UI.WebControls.Style> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="5c520-303">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> 의 여는 태그를 렌더링 하는 오버 로드는 `<span>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-304">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 `TextSample`에서 파생 된는 <xref:System.Web.UI.WebControls.WebControl> 클래스를 사용 하는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 적용할 방법을 <xref:System.Web.UI.WebControls.Style.ForeColor%2A> 스타일 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="5c520-305"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드는 HTML 렌더링`<span style="color:Navy;">`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="5c520-306"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드 호출을 닫습니다는 `<span>` 텍스트 렌더링 된 후에 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-307">등호(<see langword="=" />)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-308">사용 하려는 경우도 <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> 필드 대신는 <xref:System.Web.UI.HtmlTextWriter.EqualsChar> 특성 값의 여는 구분 기호를 생성할 때 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-309">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 `src` 특성 및에 대 한 해당 값의 일부는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="5c520-310">코드를 사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.EqualsChar> 필드에 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드 호출 사이 등호 (=)를 렌더링 하는 `src` 특성 및 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="5c520-311">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-312">등호(=)와 큰따옴표(")를 함께 문자열(=")로 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-313"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 및 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 특성 값의 여는 구분 기호를 생성 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="5c520-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-314">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 `border` 특성에 `<table>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="5c520-315">코드를 호출 하 여는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 특성 값 및 사용 하 여 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> 및 <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="5c520-316">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-317">지정한 레이아웃과 문자 형식을 끝내는 태그 요소의 닫는 태그를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="5c520-318">닫을 레이아웃과 형식을 지정하는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-319">지정한 레이아웃과 문자 형식을 끝내는 <see langword="&lt;span&gt;" /> 요소의 닫는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-320"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> 의 닫는 태그를 렌더링 하는 메서드는 `<span>` 해당 컨트롤의 닫는 태그 뒤 요소를 열린 요소를 닫습니다 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="5c520-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 및 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 장치 어댑터 또는 제어를 시작 하 고 지정된 된 스타일의 문자 형식을 사용 하 여 블록을 종료 하는 태그를 만드는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="5c520-322">에 대해 같은 값을 사용 하 여 `style` 에 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 를 해당 사용 하면 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-323">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 `TextSample`에서 파생 된는 <xref:System.Web.UI.WebControls.WebControl> 클래스를 사용 하는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 적용할 방법을 <xref:System.Web.UI.WebControls.Style.ForeColor%2A> 스타일 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="5c520-324"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드는 HTML 렌더링 `<span style="color:Navy;">`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="5c520-325"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드 호출을 닫습니다는 `<span>` 텍스트 렌더링 된 후에 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="5c520-326">출력 텍스트에 더 이상 적용되지 않을 레이아웃 및 서식을 지정하는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="5c520-327">지정된 스타일을 적용하는 특성을 포함하는 태그 요소의 닫는 태그를 지정하는 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="5c520-328">해당 <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 호출에 전달된 키와 일치해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-329">지정된 레이아웃 및 문자 서식을 끝낼 지정된 태그 요소의 닫는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-330"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> 메서드는 지정 된 요소의 닫는 태그를 렌더링 `tag` 컨트롤의 닫는 태그 뒤 해당 열려 있는 요소를 닫습니다 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="5c520-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 및 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 장치 어댑터 또는 제어를 시작 하 고 지정된 된 스타일의 문자 형식을 사용 하 여 블록을 종료 하는 태그를 만드는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="5c520-332">에 대해 같은 값을 사용 하 여 `style` 에 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 를 해당 사용 하면 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-333">다음 코드 예제에서는 라는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다 `TextSample`에서 파생 된는 <xref:System.Web.UI.WebControls.WebControl> 클래스를 사용 하는 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 적용할 방법을 <xref:System.Web.UI.WebControls.Style.ForeColor%2A> 스타일 텍스트 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="5c520-334"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 메서드는 HTML 렌더링 `<span style="color:Navy;">`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="5c520-335"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드 호출을 닫습니다는 `<span>` 텍스트 렌더링 된 후에 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-336">페이지나 웹 서버 컨트롤의 모든 속성에 대한 태그 및 스타일 특성을 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-337">특성 태그 요소에 렌더링 되기 전에 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="5c520-338">차례로 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드 호출의 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> 및 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> 각 특성 및 스타일을 렌더링 하기 위한 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-339">다음 코드 예제에서 파생 된 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter> 재정의 하는 클래스는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="5c520-340">를 호출할 때는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 재정의 텍스트 작성기 모든 렌더링 하는지 여부를 확인할 `<label>` 또는 `<a>` 요소:</span><span class="sxs-lookup"><span data-stu-id="5c520-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="5c520-341">경우는 `<label>` 요소 렌더링 되는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드 검사 여부는 `style` 특성 요소에 렌더링 하 고, 그렇지 않은 경우 만듭니다는 `style` 설정 하는 특성 `color: blue`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="5c520-342">경우는 `<a>` 요소 렌더링 되는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드 확인 여부는 `href` 특성에 포함 되며, 그렇지 않은 경우 추가 `href` URL로 http://www.cohowinery.com합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-343">현재 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체의 모든 버퍼를 지우고 버퍼링된 모든 데이터를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-344"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.Flush%2A> 메서드를 호출는 <xref:System.IO.TextWriter.Flush%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="5c520-345">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />를 가져올 특성이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-346">지정된 특성에 해당하는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 열거형 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-347">지정된 특성에 대한 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 열거형 값이거나, 해당 특성이 열거형의 멤버가 아닌 경우에는 잘못된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-348">경우 `attrName` 은 `null` 또는 빈 문자열 (""), 또는 하 게 형식화 된 값-1로, 특성 이름의 테이블에서 찾을 수 없는 <xref:System.Web.UI.HtmlTextWriterAttribute> 개체에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-349">파생 된 클래스를 사용 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.HtmlTextWriter> 재정의 하는 클래스는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="5c520-350">재정의 검사 하는지 여부를 `tagKey` 같은지를 <xref:System.Web.UI.HtmlTextWriterTag.Font> 것임을 나타내는 필드는 `<font>` 태그 요소 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="5c520-351">재정의 호출는 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> 있는지 여부를 확인 하는 메서드는 `<font>` 요소를 포함 한 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="5c520-352">경우는 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> 반환 `false`, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드 호출의 <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> 메서드를 정의 하는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 그 값을 설정 하 고 `30pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="5c520-353">태그 특성 이름을 가져올 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-354">지정된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 값과 관련된 태그 특성의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-355">태그 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-356"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> 빈 문자열을 반환 하는 메서드 ("") 하는 경우, `attrKey` 유효 하지 않거나 <xref:System.Web.UI.HtmlTextWriterAttribute> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-357">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> 변환 하는 메서드는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 열거형 값을 문자열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="5c520-358">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" />을 가져올 스타일 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-359">지정된 스타일에 대한 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-360">
            <paramref name="styleName" />에 해당하는 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-361"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> -1로 형식화 된 값을 반환 하는 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle> 경우 값 `styleName` 하나에 해당 하지 않는 <xref:System.Web.UI.HtmlTextWriterStyle> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-362">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 에서 파생 된 클래스에서 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-363"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 재정의 결정 여부는 `<label>` 태그 렌더링 되는 경우에 대 한 요소를 검사 및는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="5c520-364">경우는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성이 정의 되지 않았으면는 <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> 메서드 호출에서 첫 번째 매개 변수로 사용 되는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 를 추가 하려면 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성을 `<label>` 태그 요소는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성 를`red`.</span><span class="sxs-lookup"><span data-stu-id="5c520-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="5c520-365">태그 특성 이름을 가져올 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-366">지정된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값과 관련된 태그 스타일 특성 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-367">
            <paramref name="styleKey" />에 지정된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 열거형 값과 관련된 스타일 특성 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-368">경우 `styleKey` 유효 하지 않거나 <xref:System.Web.UI.HtmlTextWriterStyle> 개체는 <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> 빈 문자열을 반환 하는 메서드 ("").</span><span class="sxs-lookup"><span data-stu-id="5c520-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-369">다음 코드 예제를 확인 하는 방법을 보여 줍니다 여부는 `<label>` 요소 렌더링 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="5c520-370">검사, 여부는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 스타일 특성이 요소에 정의 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="5c520-371">특성 정의 되지 않은 경우는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 메서드는 및 <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> 메서드 변환은 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 에 전달할 문자열 표현으로 열거형 멤버는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5c520-372">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" />를 가져올 태그 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-373">지정된 태그 요소와 관련된 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 열거형 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-374">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 열거형 값이거나, <paramref name="tagName" />이 특정 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 값과 연결되어 있지 않으면 <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-375">경우 `tagName` 은 `null`, 빈 문자열 (""), 또는 태그 이름 테이블에서 찾을 수 없는 <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> 메서드가 반환 되는 <xref:System.Web.UI.HtmlTextWriterTag.Unknown> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-376">다음 코드 예제에서는 오버 로드를 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 매개 변수로 문자열을 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="5c520-377">문자열에 전달 되는 <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> 메서드를 해당 하는 변환 <xref:System.Web.UI.HtmlTextWriterTag> 열거형 멤버를 다음에 전달는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 오버 로드를는 <xref:System.Web.UI.HtmlTextWriterTag> 열거형 값을 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="5c520-378">태그 요소를 가져올 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-379">지정된 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 열거형 값과 관련된 태그 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-380">태그 요소를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-381">경우 `tagKey` 유효 하지 않거나 <xref:System.Web.UI.HtmlTextWriterTag> 값의 <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> 빈 문자열을 반환 하는 메서드 ("").</span><span class="sxs-lookup"><span data-stu-id="5c520-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-382">다음 코드 예제에서는 종결 하는 방법을 보여 줍니다.는 `<font>` 사용 하 여 요소는 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="5c520-383"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 메서드 호출의 <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> 변환 하는 메서드는 <xref:System.Web.UI.HtmlTextWriterTag.Font> 값을 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-384">각 태그 줄의 시작 부분에서 들여쓰기할 탭 위치 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-385">각 줄을 들여쓰기할 탭 위치 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-386">들여쓰기에 지정 된 문자열을 작성 하 여 수행 됩니다는 `tabString` 의 매개 변수는 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> 생성자에서 지정 된 횟수는 <xref:System.Web.UI.HtmlTextWriter.Indent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="5c520-387">경우는 <xref:System.Web.UI.HtmlTextWriter.Indent%2A> 속성이 음수 값으로 설정 되어 있으면 저장 되기 전에 0으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-388">에 할당 된 값이 증가 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.HtmlTextWriter.Indent%2A> 특성의 여는 태그에 추가 된 경우이 속성은 `<span>` 요소 및 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="5c520-389">이 들여씁니다 내에서 렌더링 되는 태그는 `<span>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-390">태그 요소의 내부 내용을 쓰는 텍스트 작성기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-391">내부 태그 내용을 쓰는 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-392">내부 태그 콘텐츠 및 태그 언어 요소의 닫는 태그 사이 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="5c520-393">경우는 <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> 속성이로 설정 되어는 <xref:System.IO.TextWriter> 개체의 인스턴스를는 <xref:System.Web.HttpWriter> 클래스가이 사실이 기록 되 고 별도 참조가 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-394">다음 코드 예제에서 파생 하는 사용자 지정 웹 서버 컨트롤을 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebControl> 재정의 하는 클래스는 <xref:System.Web.UI.Control.Render%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="5c520-395">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter> 작성 하는 클래스는 `<font>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="5c520-396">사용 하 여 요소의 여는 태그를 쓴 후는 <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> 속성의 문자열을 작성 하려면 `"<br> The time on the server:"` 의 값으로이 문자열을 연결 하 고는 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-397">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-398">태그 특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-399">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-400">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 특성이 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-401">에 할당할 값을 얻기 위해는 <xref:System.Web.UI.HtmlTextWriterAttribute> 개체를 가져오려면는 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> 대신이 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-402">다음 코드 예제에서는 재정의 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 에서 상속 되는 클래스의 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-403"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 여부 검사 재정의 `<font>` 태그 요소 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="5c520-404">재정의 호출는 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> 검사 하도록 여부는 `<font>` 요소에 포함 되어는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성.</span><span class="sxs-lookup"><span data-stu-id="5c520-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="5c520-405">그렇지 않은 경우, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드 호출의 <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> 메서드를 정의 하는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성 및 값으로 설정 `30pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-406">태그 특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-407">특성에 할당된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-408">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 지정된 태그 특성과 그 값이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-409">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 특성이 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-410">경우는 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> 메서드가 반환 `true`에 할당할 값은 <xref:System.Web.UI.HtmlTextWriterAttribute> 에 개체를 반환 하는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-411">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 태그 스타일 특성이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-412">특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-413">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 지정된 태그 스타일 특성이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-414">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 특성이 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-415">지정 된 스타일 특성으로 렌더링 되는 값을 사용는 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-416">다음 코드 예제를 확인 하는 방법을 보여 줍니다 여부는 `<label>` 요소 렌더링 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="5c520-417">그렇다면는 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> 메서드 검사 여부는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 스타일 특성이 요소에 정의 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="5c520-418">경우는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성이 정의 되지 않았으면는 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 메서드 정의 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성 및 값으로 설정 `red`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5c520-419">특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-420">스타일 특성에 할당되는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-421">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 지정된 태그 스타일 특성과 그 값이 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-422">다음에 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 메서드를 호출하는 동안 특성과 그 값이 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-423">경우는 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> 메서드가 반환 되 `true`에 할당할 값은 <xref:System.Web.UI.HtmlTextWriterStyle> 특성에 반환 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="5c520-424">확인할 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-425">
            <see langword="&lt;form&gt;" /> 태그 요소의 여는 태그에 특성을 렌더링할 수 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-426">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-427"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> 메서드 반환 `true` 모든 특성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="5c520-428">재정의 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> 의 여는 태그를 렌더링할 수 있는 특성을 제한 하는 `<form>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-429">
            <para>재정의 <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> 반환 하는 메서드 <see langword="true" /> 에 포함 될 수 있는 특성에만 <see langword="&lt;form&gt;" /> 태그에서 파생 된 클래스의 <see cref="T:System.Web.UI.HtmlTextWriter" /> 사용 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-429">
              <para>Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-430">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에서 사용하는 줄 종결자 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-431">현재 <see cref="T:System.Web.UI.HtmlTextWriter" />에서 사용한 줄 종결자 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-432">기본 줄 종결자 문자열은 캐리지 리턴, 줄 바꿈 ("\r\n") 뒤에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="5c520-433">줄 종결자 문자열 때마다 하나의 출력 스트림에 쓰기의 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="5c520-434">경우는 <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> 속성이 `null`, 기본 새 줄 문자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-435">다음 코드 예제에서 파생 된 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter> 재정의 하는 클래스는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="5c520-436">를 호출할 때는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 재정의 텍스트 작성기 모든 렌더링 하는지 여부를 확인할 `<label>` 또는 `<a>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="5c520-437">이 경우는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드 레이블에 대 한 스타일 특성 정의 되어 있는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="5c520-438">없는 스타일을 정의 하는 경우는 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 에 대 한 기본값을 설정 하는 메서드는 `style:color` 파랑 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="5c520-439"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> 메서드를 사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> 줄을 삽입 하려면 속성 태그 태그에서 중단 하 고 정의 된 다른 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-440">렌더링할 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-441">특성에 할당되는 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-442">태그 특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-443">지정된 태그 특성과 그 값이 현재 태그 요소로 렌더링될 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-444">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-445"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> 메서드는 항상 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="5c520-446"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> 재정의 페이지에는 특성을 렌더링 되는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-447">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="5c520-448">경우는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성이 렌더링 되지만 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 값이 `30pt`, <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> 호출 재정의 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드를 추가 하려면는 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성 및 값을 설정 `30pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-449">
            <para>상속 하는 경우는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 재정의할 수 클래스는 <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> 반환 하는 메서드 <see langword="false" /> 특성을 전혀 렌더링 되 고, 특정 요소에 렌더링 되 고 또는 특정 태그에 대해 렌더링 되지 않도록 하려면. 파생 된 개체를 원하지 않는 경우 등 <see cref="T:System.Web.UI.HtmlTextWriter" /> 렌더링 하는 <see langword="bgcolor" /> 특성을 <see langword="&lt;table&gt;" /> 재정의할 수 요소는 <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> 다음 다시 돌아와 <see langword="false" /> 때 <paramref name="name" /> 전달 <see langword="bgcolor" /> 및 <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> 속성 값은 <see langword="table" />합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-449">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup. For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-450">렌더링할 스타일 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-450">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-451">스타일 특성에 할당되는 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-451">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-452">스타일 특성과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-452">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-453">지정된 태그 특성과 그 값이 현재 태그 요소로 렌더링될 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-453">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-454">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-454">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-455"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> 메서드는 항상 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-455">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="5c520-456"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> 재정의 페이지에 스타일 특성을 렌더링 되는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-456">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-457">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-457">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="5c520-458">경우는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 스타일 특성이 렌더링 되지만 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 값이 `purple`, <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> 사용 하 여 재정의 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 설정 하는 메서드는 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 특성을 `purple`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-458">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-459">
            <para>상속 하는 경우는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 재정의할 수 클래스는 <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> 반환 하는 메서드 <see langword="false" /> 스타일 특성을 전혀 렌더링 되 고, 특정 요소에 렌더링 되 고 또는 특정 태그 언어에 대해 렌더링 되지 않도록 하려면. 파생 된 개체를 원하지 않는 경우 등 <see cref="T:System.Web.UI.HtmlTextWriter" /> 렌더링 하는 <see langword="color" /> 스타일 특성을 한 <see langword="&lt;p&gt;" /> 요소인을 재정의할 수 있습니다는 <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> 다음 다시 돌아와 <see langword="false" /> 때 <paramref name="name" /> 전달<see langword="color" />및 <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> 속성 값은 <see langword="p" />합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-459">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-460">렌더링할 요소의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-460">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-461">요소와 연결된 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-461">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-462">지정된 태그 요소가 요청한 페이지로 렌더링되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-462">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-463">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-463">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-464"><xref:System.Web.UI.HtmlTextWriter> 클래스에서 구현 된 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> 메서드는 항상 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-464">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="5c520-465"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> 재정의 페이지에 요소를 렌더링 되는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-465">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-466">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-466">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="5c520-467">경우는 <xref:System.Web.UI.HtmlTextWriterTag.Font> 요소 렌더링 되는 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> 사용 하 여 재정의 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> 확인할 수 있는지 여부를 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성 렌더링 되 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-467">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="5c520-468">Not, 사용 하는 경우는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 만드는 메서드를 한 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 특성 및 값을 설정 `20pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-468">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-469">
            <para>상속 하는 경우는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 재정의할 수 클래스는 <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> 반환 하는 메서드 <see langword="false" /> 태그 요소 전혀 또는 특정 태그 언어에 대 한 렌더링 되지 않도록 방지 하기 위해. 파생 된 개체를 원하지 않는 경우 등 <see cref="T:System.Web.UI.HtmlTextWriter" /> 렌더링 하는 <see langword="&lt;font&gt;" /> 요소인을 재정의할 수 있습니다는 <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> 반환 하는 메서드 <see langword="false" /> 포함 하는 페이지가 요청 된 경우는 <see langword="&lt;font&gt;" /> 요소입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-469">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-470">태그 문자 줄의 들여쓰기 수준을 나타내는 일련의 탭 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-470">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-471"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.Indent%2A> 속성을 가져올 필요한 들여쓰기에 쓰려고 탭 문자열 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-471">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="5c520-472">탭 문자열으로 지정 된 <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-472">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="5c520-473">탭 문자열이 지정 된 경우는 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 상수 (`\t`) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-473">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-474">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> 에서 파생 된 클래스의 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-474">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-475"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> 사용 하 여 항상 재정의 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 들여쓰기를 수행 하는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-475">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-476">렌더링된 요소의 목록에서 가장 최근에 저장된 태그 요소를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-476">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-477">가장 최근에 렌더링된 태그 요소가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-477">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-478">요소 별로 요소를 렌더링 된 태그 목록에 추가 됩니다는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-478">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="5c520-479"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 호출 하 여 태그 요소 목록에서 제거 된 <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-479">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c520-480">렌더링된 요소의 목록이 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-480">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="5c520-481">태그 요소의 닫는 태그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-481">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-482">태그 요소의 끝 태그를 생성할 때 이후에 사용할 지정된 태그 요소를 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-482">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-483">렌더링 된 태그 요소 목록에 요소가 추가 됩니다 때는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드 호출에서 <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-483">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="5c520-484"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드는 요소에 대 한 끝 태그를 렌더링 한 후 목록에서 태그 요소를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-484">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-485">등록할 태그 특성의 이름이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-485">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-486">특성 이름에 해당하는 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-486">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-487">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 특성을 포함하여 태그 특성을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-487">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-488">HTML 태그 언어의 미리 정의 된 특성에 대 한 호출에 의해 등록 됩니다는 <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> 메서드 때 첫 번째 <xref:System.Web.UI.HtmlTextWriter> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-488">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="5c520-489">동적 특성을 사용 하 여 등록할 수 있습니다는 <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> 때도 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-489">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="5c520-490">사용 하는 등록 테이블은 <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> 메서드는 `static`특성 모두에 적용 되므로 <xref:System.Web.UI.HtmlTextWriter> 호스트 컴퓨터에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-490">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-491">스타일 이름을 지정하는 소스 파일에서 전달된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-491">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-492">지정된 스타일에 해당하는 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-492">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-493">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 속성을 포함하여 태그 스타일 속성을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-493">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-494">HTML 태그 언어의 미리 정의 된 연계 스타일 시트 (CSS) 특성에 대 한 호출에 의해 등록 됩니다는 <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> 메서드 때 첫 번째 <xref:System.Web.UI.HtmlTextWriter> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-494">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="5c520-495">동적 스타일 특성을 사용 하 여 등록할 수 있습니다는 <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> 때도 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-495">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="5c520-496">사용 하는 등록 테이블은 <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> 메서드는 `static`특성 모두에 적용 되므로 <xref:System.Web.UI.HtmlTextWriter> 호스트 컴퓨터에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-496">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-497">HTML 태그가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-497">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="5c520-498">렌더링할 요소를 지정하는 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-498">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-499">요청하는 클라이언트로 제대로 렌더링되도록 소스 파일에서 리터럴 또는 동적으로 생성된 태그를 포함하여 태그를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-499">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-500">HTML 언어의 미리 정의 된 태그를 호출 하 여 등록 된는 <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> 메서드 때 첫 번째 <xref:System.Web.UI.HtmlTextWriter> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-500">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="5c520-501">동적 태그를 사용 하 여 등록할 수 있습니다는 <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> 때도 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-501">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="5c520-502">사용 하는 등록 테이블은 <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> 메서드는 `static`등록 태그의 모든 적용 되므로 <xref:System.Web.UI.HtmlTextWriter> 호스트 컴퓨터의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-502">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-503">태그 요소의 내용 뒤와 닫는 태그 앞에 있는 텍스트나 공백을 태그 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-503">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-504">요소의 내용 뒤에 있는 쓸 공백이나 텍스트가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-504">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-505"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> 메서드 현재 태그 요소에 자식 요소를 삽입 하려는 경우 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-505">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-506">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> 에서 파생 된 클래스에서 메서드는 <xref:System.Web.UI.HtmlTextWriter> 을 확인 하려면 클래스 여부는 `<label>` 요소 렌더링 되 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-506">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="5c520-507">이 경우는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> 닫는 태그를 삽입 하는 재정의 `<font>` 닫는 태그 바로 앞 요소는 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-507">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="5c520-508">이외의 다른 요소가 `<label>` 렌더링 되는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> 기본 메서드가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-508">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-509">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스에서 구현 된 <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> 메서드 반환 <see langword="null" />합니다. 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> 텍스트나 자 요소 콘텐츠 뒤, 닫는 태그 앞 간격을 작성 하려는 경우.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-509">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-510">태그 요소의 닫는 태그 뒤에 있는 공백이나 텍스트를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-511">요소의 닫는 태그 뒤에 있는 쓸 공백이나 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-511">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-512"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> 메서드 요소 태그 추가 닫는 태그를 렌더링 하려는 경우 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-513">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> 클래스에서 파생 있는지 여부를 확인 하는 <xref:System.Web.UI.HtmlTextWriter> 렌더링 하는 클래스는 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="5c520-514">이 경우는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> 닫는 태그를 삽입 하는 재정의 `<font>` 요소 바로 뒤의 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="5c520-515">없는 경우는 `<label>` 요소는 <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> 기본 메서드가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-516">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스에서 구현 된 <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> 메서드 반환 <see langword="null" />합니다. 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> 텍스트나 요소의 닫는 태그 뒤 간격을 작성 하려는 경우.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-516">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-517">태그 요소의 내용 앞과 여는 태그 뒤에 있는 텍스트나 공백을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-517">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-518">요소의 내용 앞에 있는 쓸 텍스트나 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-518">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="5c520-519">
            <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />는 재정의되지 않으면 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-519">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-520"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> 메서드 내부 태그 하기 전에 현재 태그 요소에 자식 요소를 삽입 하려는 경우 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-520">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-521">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> 클래스에서 파생 있는지 여부를 확인 하는 <xref:System.Web.UI.HtmlTextWriter> 클래스 렌더링 되기 직전에 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-521">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="5c520-522">이 경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> 의 여는 태그를 삽입 하는 재정의 `<font>` 의 여는 태그 바로 다음 요소는 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-522">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="5c520-523">없는 경우는 `<label>` 요소는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> 기본 메서드가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-523">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-524">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스에서 구현 된 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> 메서드 반환 <see langword="null" />합니다. 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> 를 텍스트나 여는 태그 뒤 요소 콘텐츠 앞 공백을 작성 하려는 경우.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-524">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-525">태그 요소의 여는 태그 앞에 있는 텍스트나 공백을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-525">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c520-526">태그 요소의 여는 태그 앞에 있는 쓸 텍스트나 공백입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-526">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="5c520-527">재정의되지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-527">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-528"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 메서드를 의도 한 요소의 여는 태그 앞 추가 태그 렌더링 하려는 경우 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-528">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-529">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 에서 파생 된 클래스 지 여부를 결정 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스 렌더링 되기 직전에 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-529">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="5c520-530">이 경우는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 의 여는 태그를 삽입 하는 재정의 `<font>` 요소 바로 앞의 `<label>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-530">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="5c520-531">렌더링 하는 경우는 `<label>` 요소는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 기본 메서드가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-531">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-532">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스에서 구현 된 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> 메서드 반환 <see langword="null" />합니다. 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> 텍스트 또는 요소 열기 태그 앞 간격을 작성 하려는 경우.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-532">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-533">태그 요소의 여는 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-533">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5c520-534">여는 태그를 렌더링할 태그 요소 이름을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-534">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-535">지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-535">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-536">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 의 재정의 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> 태그 요소 중 하나가 아닌 경우 메서드는 <xref:System.Web.UI.HtmlTextWriterTag> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-536">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="5c520-537">사용 하 여 태그 요소를 생성 하는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드, 첫 번째 호출에서 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 및 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 요소 특성이 나 요소의 여는 태그에서 표시 하는 스타일 특성을 지정 하는 데 필요한 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-537">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="5c520-538">내부 태그를 생성 한 후 호출 된 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 닫는 태그를 생성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-538">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-539">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 비 표준의 여는 태그를 렌더링 하는 사용자 지정 컨트롤에서 `MyTag` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-539">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="5c520-540">코드 예제에서는 다음 호출에서 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 내부 태그를 차례로 호출을 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드는 요소를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-540">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="5c520-541">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-541">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="5c520-542">렌더링할 태그 요소의 여는 태그를 정의하는 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-542">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-543">지정된 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 열거형 값과 관련된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-543">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-544">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 오버 로드는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> 태그 요소 중 하나 이며 알려진된 형식인 경우 메서드는 <xref:System.Web.UI.HtmlTextWriterTag> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-544">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="5c520-545">사용 하 여 태그 요소를 생성 하는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드, 첫 번째 호출에서 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 및 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> 요소 특성이 나 요소의 여는 태그에서 표시 하는 스타일 특성을 지정 하는 데 필요한 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-545">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="5c520-546">내부 태그를 생성 한 후 호출 된 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 닫는 태그를 생성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-546">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-547">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 의 여는 태그를 출력 하는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-547">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="5c520-548">특성으로 요소에 추가 되는 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 메서드 여에 포함 됩니다 `<img>` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-548">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="5c520-549"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드를 사용 하 여를 닫는 태그를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-549">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="5c520-550">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-550">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-551">태그 요소의 끝 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-551">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-552">호출의 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 후 메서드는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 오버 로드를 호출한 태그와 닫는 태그 (내부 태그) 요소 간의 모든 콘텐츠가 렌더링 된 후입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-552">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-553">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 둘 다 후 메서드는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 여는 태그를 생성 하는 메서드 및 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 및 사용자 지정 의닫는태그사이내부태그를렌더링하는메서드`MyTag` 요소를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-553">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="5c520-554">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-554">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-555">태그의 공백과 자체 닫는 슬래시 기호(/)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-555">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-556"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> 필드는 자체 닫는 태그 요소에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-556">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="5c520-557">예:</span><span class="sxs-lookup"><span data-stu-id="5c520-557">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-558">자체적으로 닫는 태그 요소의 닫는 슬래시 기호와 닫는 꺾쇠 괄호(/&gt;)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-558">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-559"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 자체적으로 닫는 태그 요소를 생성할 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-560">다음 코드 예제에서는 사용자 지정 값을 렌더링 하는 방법을 보여 줍니다. `FileName` 따옴표 뒤 속성과 나타내는 문자는 <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-560">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="5c520-561">코드 예제에서는 호출은 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드와 전달은 <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 필드 변수로 매개 변수 인수는 요소를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-561">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="5c520-562">이 코드 예제에서는 렌더링 된 `FileName` 속성 값 및 다음 태그:</span><span class="sxs-lookup"><span data-stu-id="5c520-562">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-563">세미콜론(;)을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-563">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-564">전달 된 <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> 필드에서 매개 변수 인수로 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드 호출에서 사용자 지정 컨트롤 또는 어댑터 세미콜론을 렌더링 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="5c520-564">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-565">다음 코드 예제에서는 수동으로 일련의 태그 요소에는 스타일을 렌더링 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-565">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="5c520-566">사용 하 여 코드 예제는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 렌더링 하려면 `font-size` 및 `border-style` 스타일 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-566">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="5c520-567"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar> 필드의 매개 변수로 사용 되는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 의 값을 구분 하는 메서드는 `font-size` 특성의 시작 부분에서는 `border-style` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-567">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="5c520-568">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-568">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-569">아포스트로피(')를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-569">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-570">사용 된 <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> 아포스트로피를 렌더링 해야 하는 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-570">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-571">슬래시 기호(/)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-571">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-572">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.SlashChar> URL을 작성 하는 경우 슬래시를 렌더링 하는 필드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-572">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="5c520-573"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.SlashChar> 태그 요소의 닫는 태그를 작성할 때 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-573">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-574">다음 코드 예제에서는 수동으로 렌더링 하는 방법을 보여 줍니다.는 `src` 특성에는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-574">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="5c520-575">사용 하 여 코드 예제는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.SlashChar> 에 적용 되는 경로에 슬래시를 렌더링 하는 매개 변수로 필드 표시는 `src` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-575">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="5c520-576">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-576">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-577">공백( ) 문자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-577">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-578"><xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 및 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 요소와 특성 간의 구분 기호를 쓸 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-578">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-579">이 섹션에서는 두 개의 코드 예를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-579">This section provides two code examples.</span></span> <span data-ttu-id="5c520-580">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-580">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="5c520-581">두 번째 배열을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-581">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="5c520-582">이러한 코드 예제에 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-582">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="5c520-583">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Char> 배열을 포함 하는 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-583">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="5c520-584">다음 코드 예제에서는 배열에서에서 만든 이전 코드 예제에서는 매개 변수로 호출할 때 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-584">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-585">스타일 특성을 값으로 설정하는 데 사용되는 콜론(<see langword=":" />) 문자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-585">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-586"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> 스타일 이름 및 값을 구분 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-586">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-587">다음 코드 예제에서는 렌더링 하는 방법을 보여 줍니다.는 `FontWeight` 특성 및 값의 `bold` 요소의 여는 태그에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-587">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="5c520-588">사용 하 여 코드 예제는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> 필드 각 스타일 특성의 값을 설정 하는 문자를 렌더링 하는 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-588">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="5c520-589">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-589">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-590">지정된 태그 요소의 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-590">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-591">여는 태그를 렌더링하는 태그 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-591">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-592"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A> 속성에서 상속 된 클래스에만 사용 되는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-592">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-593">읽거나 설정 해야 합니다는 <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> 속성에 대 한 호출 에서만에서 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드; 일정 한 값으로 설정 된 유일한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-593">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-594">다음 코드 예제에서는 재정의 된 버전을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> 에서 파생 되는 클래스의 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-594">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-595">값이 사용 하는 <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> 속성 사용자 지정을 사용 하 여 서버 컨트롤 지 여부를 결정 <xref:System.Web.UI.HtmlTextWriter> 렌더링 하는 개체는 `<label>` 태그 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-595">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="5c520-596">인 경우는 `<font>` 인 요소는 `color` 특성이로 설정 `red` 형식이 수정에 반환 되는 `<label>` 요소의 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-596">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c520-597">속성 값이 설정될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-597">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-598">태그의 여는 꺾쇠 괄호(&lt;)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-598">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-599"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, 및 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 태그를 쓸 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-599">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-600">다음 코드 예제에서는 렌더링의 여는 태그의 첫 번째 문자는 `<table>` 요소 이름 가진 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-600">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="5c520-601">사용 하 여 코드 예제는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> 필드를 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-601">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="5c520-602">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-602">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-603">렌더링되는 태그 요소의 태그 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-603">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c520-604">렌더링되는 태그 요소의 태그 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-604">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-605"><xref:System.Web.UI.HtmlTextWriter.TagName%2A> 속성에서 상속 된 클래스에만 사용 되는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-605">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-606">읽거나 설정 해야 합니다는 <xref:System.Web.UI.HtmlTextWriter.TagName%2A> 속성 에서만 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드 호출; 일정 한 값으로 설정 된 유일한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-606">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-607">다음 코드 예제에서는 재정의 된 버전을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 에서 파생 되는 클래스의 메서드는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-607">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="5c520-608">코드 예제에서는 요소를 렌더링 하 인지 확인 한 `<label>` 호출 하 여 요소는 <xref:System.String.Compare%2A?displayProperty=nameWithType> 메서드를 통과 하는 <xref:System.Web.UI.HtmlTextWriter.TagName%2A> 속성 값 및 문자열을 `"label"`, 매개 변수 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-608">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="5c520-609">경우는 `<label>` 요소에 대 한 정보를 렌더링할 수의 여는 태그는는 `<font>` 요소와는 `color` 특성이로 설정 `red`, 하기 전에 렌더링 되는 `<label>` 요소의 여는 태그 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-609">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="5c520-610">렌더링 하는 요소가 되지 않은 경우는 `<label>` 요소, 버전, 기본 클래스의는 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-610">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-611">태그의 닫는 꺾쇠 괄호(&gt;)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-611">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-612"><xref:System.Web.UI.HtmlTextWriter.TagRightChar> 필드가 사용 되는 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, 및 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 태그를 쓸 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-612">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-613">다음 코드 예제에서는 닫는 태그를 렌더링 하는 방법을 보여 줍니다.는 `<table>` 호출의 오버 로드 하 여 요소는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-613">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="5c520-614">코드 예제에서는 렌더링 되는 태그의 마지막 문자를 사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> 필드를 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-614">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="5c520-615">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-615">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-616">보류 중인 탭 공백과 함께 지정된 데이터 형식을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-616">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-617">출력 스트림에 쓸 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-617">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-618">보류 중인 탭 공백과 함께 부울 값의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-618">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-619"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-619">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-620">출력 스트림에 쓸 유니코드 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-620">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-621">보류 중인 탭 공백과 함께 유니코드 문자의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-621">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-622"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-623">다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 의 여는 태그를 발생 하는 `<img>` 사용 하 여 요소는 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-623">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="5c520-624">이 코드 예제에 다음 태그를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-624">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c520-625">출력 스트림에 쓸 유니코드 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-625">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-626">보류 중인 탭 공백과 함께 유니코드 문자 배열의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-626">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-627"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-627">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-628">이 섹션에서는 두 개의 코드 예를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-628">This section provides two code examples.</span></span> <span data-ttu-id="5c520-629">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-629">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="5c520-630">두 번째 배열을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-630">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="5c520-631">이러한 코드 예제에 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-631">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="5c520-632">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. `hello world`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-632">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="5c520-633">배열에 포함 되는 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드 두 단어 사이 공백을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-633">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="5c520-634">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 렌더링 하는 메서드는 `hello world` 이 예제 코드를 포함 하는 컨트롤은 페이지에 포함 되 면 페이지에 앞의 코드 예제에서 만든 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-634">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-635">출력 스트림에 쓸 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-635">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-636">보류 중인 탭 공백과 함께 배정밀도 부동 소수점 숫자의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-636">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-637"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-637">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-638">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Double.MaxValue?displayProperty=nameWithType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-638">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="5c520-639">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-639">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-640">출력 스트림에 쓸 32바이트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-640">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-641">보류 중인 탭 공백과 함께 32바이트 부호 있는 정수의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-641">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-642"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-642">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-643">출력 스트림에 쓸 64바이트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-643">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-644">보류 중인 탭 공백과 함께 64바이트 부호 있는 정수의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-644">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-645"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-646">출력 스트림에 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-646">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-647">보류 중인 탭 공백과 함께 개체의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-647">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-648"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-649">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-649">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5c520-650">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-650">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="5c520-651">값은 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="5c520-651">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-652">출력 스트림에 쓸 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-652">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-653">보류 중인 탭 공백과 함께 단정밀도 부동 소수점 숫자의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-653">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-654"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-654">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-655">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Single.Epsilon?displayProperty=nameWithType> 가능한 가장 작은 값은 필드의는 <xref:System.Single> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-655">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="5c520-656">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-656">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="5c520-657">출력 스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-657">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-658">보류 중인 탭 공백과 함께 지정된 문자열을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-658">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-659"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-659">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-660">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 태그와 닫는 태그의 사용자 지정 태그 요소 간에 문자열을 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-660">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="5c520-661">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-661">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-662">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-662">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5c520-663">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-663">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-664">
            <see cref="M:System.String.Format(System.String,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 보류 중인 탭 공백과 함께 탭 문자열과 형식이 지정된 문자열을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-664">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-665"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-665">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-666">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 값으로 형식이 지정 된 문자열을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-666">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-667">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-667">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="5c520-668">형식을 지정할 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-668">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-669">보류 중인 탭 공백과 함께 개체 배열의 텍스트 표현이 포함된 형식이 지정된 문자열을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-669">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="5c520-670">이 메서드에서는 <see cref="M:System.String.Format(System.String,System.Object[])" /> 메서드와 동일한 의미 체계를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-670">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-671"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-671">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-672">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-672">This section contains two code examples.</span></span> <span data-ttu-id="5c520-673">첫 번째 형식이 지정 된 문자열과 있는 배열의 내용을 렌더링 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-673">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="5c520-674">두 번째 배열을 선언 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-674">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="5c520-675">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 서식이 지정 된 문자열과 라는 개체 배열의 내용을 렌더링 하는 메서드 `curPriceTime`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-675">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="5c520-676">첫 번째 멤버를 렌더링 하기 전에 배열의 두 번째 멤버를 렌더링 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-676">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="5c520-677">다음 코드 예제에서는 선언는 `curPriceTime` 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-677">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c520-678">출력 스트림에 쓸 텍스트가 포함된 문자의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-678">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c520-679">쓰기를 시작할 배열의 인덱스 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-679">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c520-680">출력 스트림에 쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-680">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-681">보류 중인 탭 공백과 함께 유니코드 문자 하위 배열의 텍스트 표현을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-681">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-682"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-682">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-683">이 섹션에서는 두 개의 코드 예를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-683">This section provides two code examples.</span></span> <span data-ttu-id="5c520-684">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-684">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="5c520-685">두 번째 배열을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-685">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="5c520-686">이러한 코드 예제에 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-686">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="5c520-687">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. `hello world`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-687">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="5c520-688">배열에 포함 되는 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드 두 단어 사이 공백을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-688">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="5c520-689">다음 부분 코드 예제를 사용 하 여는 `index` 및 `count` 의 매개 변수는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 메서드 앞의 예에서 만든 배열의 처음 5 개 문자를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-689">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-690">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-690">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5c520-691">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-691">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5c520-692">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-692">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-693">보류 중인 탭 공백과 함께 두 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-693">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="5c520-694">이 메서드에서는 <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 메서드와 동일한 의미 체계를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-694">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-695"><xref:System.Web.UI.HtmlTextWriter.Write%2A> 모든는 보류 중인를 탭 한 다음 호출에서는 발생 하는 메서드는 <xref:System.IO.TextWriter.Write%2A> 기본 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-695">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-696">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.Write%2A> 값 및 서식이 지정 된 문자열을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 및 <xref:System.DateTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-696">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-697">태그 특성과 그 값을  출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-697">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-698">출력 스트림에 쓸 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-698">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-699">특성에 할당된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-699">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-700">지정된 태그 특성과 값을  출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-700">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-701">사용 된 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드를 태그 특성과 해당 값을 인코딩하지 않고 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-701">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="5c520-702"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드 큰따옴표 (")로 묶인 특성 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-702">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="5c520-703">경우 `value` 은 `null`, <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드 특성 이름만 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-703">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-704">다음 코드 예제에서는 렌더링 된 `<img>` 메서드의 두 오버 로드는 요소는 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-704">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="5c520-705">코드 예제에서는 다음 프로세스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-705">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="5c520-706">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 요소의 여는 문자를 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-706">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="5c520-707">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> 오버 로드는 쓰기는 `alt` 특성 및 값을는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-707">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="5c520-708">호출의 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 오버 로드를 사용자 지정 렌더링 `myattribute` 특성의 값으로 `No "encoding" required`, 다음 설정 `fEncode` 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-708">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="5c520-709">요소의 여는 태그를 닫고 다음 호출에서 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 을 닫는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-709">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="5c520-710">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-710">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-711">
            <para>파생된 클래스에서 재정의할 수 있습니다는 <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> 메서드 특성 및 해당 값을 작성 하기 위한 사용자 지정 규칙을 정의 합니다. 허용 되는 코드를 작성할 수는 예를 들어는 <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> 메서드가 빈 값을 사용 하 여 특성을 작성할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-711">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-712">출력 스트림에 쓸 태그 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-712">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-713">특성에 할당된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-713">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="5c520-714">특성 및 할당된 값을 인코드하면 <see langword="true" />이고, 인코드하지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-714">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-715">지정된 태그 특성과 값을 출력 스트림에 쓰고, 지정된 경우 인코드된 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-715">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-716">사용 된 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드를 태그 특성과 해당 값 또는 인코딩하지 않고 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-716">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="5c520-717"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드는 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 인코딩을 수행 하기 위해 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-717">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="5c520-718"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드 큰따옴표 (")로 묶인 특성 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-718">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="5c520-719">경우 `value` 은 `null`, <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드 특성 이름만 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-719">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-720">다음 코드 예제에서는 렌더링 된 `<img>` 메서드의 두 오버 로드는 요소는 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-720">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="5c520-721">코드 예제에서는 다음 프로세스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-721">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="5c520-722">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 요소의 여는 문자를 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-722">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="5c520-723">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> 오버 로드는 쓰기는 `alt` 특성 및 값을는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-723">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="5c520-724">호출의 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 오버 로드를 사용자 지정 렌더링 `myattribute` 특성의 값으로 `No "encoding" required`, 다음 설정 `fEncode` 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-724">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="5c520-725">요소의 여는 태그를 닫고 다음 호출에서 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 을 닫는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-725">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="5c520-726">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-726">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c520-727">
            <para>파생된 클래스에서 재정의할 수 있습니다는 <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> 메서드 특성 및 해당 값을 작성 하기 위한 사용자 지정 규칙을 정의 합니다. 허용 되는 코드를 작성할 수는 예를 들어는 <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> 메서드가 빈 값을 사용 하 여 특성을 작성할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-727">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5c520-728">여는 태그를 쓸 태그 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-728">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-729">탭 공백과 지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-729">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-730"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 메서드에서 태그 요소의 여는 태그의 닫는 꺾쇠 괄호 (>)를 기록 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-730">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="5c520-731">이 특성은 요소의 여는 태그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-731">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="5c520-732">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> 상수를 호출할 때 여는 태그를 닫습니다는 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-732">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="5c520-733">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 사용 하 여 메서드는 <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 자체 닫는 태그 요소를 작성 하는 경우에 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-733">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="5c520-734"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 태그 또는 특성에서 매핑을 허용 하지 않으며 각 요청에 대해 동일한 방법으로 태그 요소를 렌더링 하는 사용자 지정 서버 컨트롤에서 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-734">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-735">다음 코드 예제에서는 렌더링 된 `<img>` 메서드의 두 오버 로드는 요소는 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-735">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="5c520-736">코드 예제에서는 다음 프로세스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-736">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="5c520-737">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 요소의 여는 문자를 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-737">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="5c520-738">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> 오버 로드는 쓰기는 `alt` 특성 및 값을는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-738">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="5c520-739">호출의 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> 오버 로드를 사용자 지정 렌더링 `myattribute` 특성의 값으로 `No "encoding" required`, 다음 설정 `fEncode` 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-739">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="5c520-740">요소의 여는 태그를 닫고 다음 호출에서 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 을 닫는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-740">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="5c520-741">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-741">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-742">
            <see langword="&lt;br /&gt;" /> 태그 요소를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-742">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-743">사용 하 여 <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> 줄을 렌더링 하는 방법은 사용자 지정 컨트롤 또는 어댑터 태그를 분리 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-743">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="5c520-744"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> 메서드 사이 공백을 작성는 `br` 및 `/` HTML의 향상 된 호환성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-744">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-745">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> 작성 하는 메서드는 `<br />` 요소 후 요청 하는 브라우저를는 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 메서드 작성 한 인코딩된 `&lt;custID&gt; &amp; &lt;invoice#&gt;` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-745">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="5c520-746">인코드하고 출력 스트림에 작성할 텍스트 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-746">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-747">요청하는 장치에 대해 지정된 텍스트를 인코드한 후 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-747">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-748">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 메서드 꺾쇠 괄호를 포함 하는 문자열 (\< 또는 >) 또는 앰퍼샌드 (&).</span><span class="sxs-lookup"><span data-stu-id="5c520-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="5c520-749"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 메서드는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 인코딩을 수행 하는 메서드도 유니코드 문자를 변환 하 고 `00A0` 를 `&nbsp;`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-749">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-750">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 인코딩된 태그를 작성 하는 메서드 `&lt;custID&gt; &amp; &lt;invoice#&gt;` 출력 스트림에 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-750">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="5c520-751"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> 메서드 쓰기 `<br />`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-751">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c520-752">
            <paramref name="text" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-752">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="5c520-753">인코드하고 출력 스트림에 작성할 URL 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-753">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-754">지정된 URL을 인코드하고 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-754">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="5c520-755">URL에 매개 변수가 포함될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-755">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-756"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> 메서드에 문자열을 인코딩합니다는 `url` URL 인코딩용 사양에 따라 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-756">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="5c520-757">물음표 (?) 구분 기호를 수행 하는 매개 변수는 인코딩되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-757">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-758">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> 메서드는 다음과 같은 출력을 생성 하는 메시지:</span><span class="sxs-lookup"><span data-stu-id="5c520-758">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="5c520-759">인코딩하고 출력 스트림에 쓸 URL 매개 변수 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-759">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-760">요청하는 장치에 맞게 지정된 URL 매개 변수를 인코딩한 다음 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-760">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-761">URL의 매개 변수 부분에 있는 공백은 더하기 기호 (+)으로 인코딩되고 등호 (=)로 인코딩됩니다. `%3d`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-761">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-762">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> 메서드는 다음과 같은 출력을 생성 하는 메시지:</span><span class="sxs-lookup"><span data-stu-id="5c520-762">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5c520-763">닫는 태그를 쓸 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-763">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-764">탭 공백과 지정된 태그 요소의 닫는 태그를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-764">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-765">와 달리는 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 메서드는 요소 끝 태그는 해당 여는 태그와 일치 하는 논리 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-765">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-766">다음 코드 예제에서는 렌더링 된 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-766">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="5c520-767">코드 예제에서는 다음 프로세스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-767">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="5c520-768">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 요소의 여는 문자를 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-768">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="5c520-769">두 오버 로드를 호출는 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> 특성을 작성 하는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-769">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="5c520-770">호출 된 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> 을 닫는 메서드는 `<img>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-770">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5c520-771">출력 스트림에 쓸 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-771">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-772">탭 공백과 지정된 태그 요소의 여는 태그를 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-772">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-773"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> 메서드 자동으로 작성 닫는 꺾쇠 괄호 (>)은 요소의 여는 태그와 달리는 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> 메서드를 닫는 꺾쇠 괄호를 기록 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-773">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="5c520-774">사용 하 여 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> 특성이 없는 태그 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-774">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-775">오버로드된 매개 변수에서 지정한 대로 <see cref="T:System.Web.UI.HtmlTextWriter" /> 출력 스트림에 데이터를 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-775">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="5c520-776">이 메서드의 모든 버전은 출력 스트림에 보류 중인 탭 공백을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-776">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-777">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-777">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-778"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-778">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c520-779">줄 종결자 문자열을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-779">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-780">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-780">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-781">자세한 내용은 <xref:System.IO.TextWriter.WriteLine%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5c520-781">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-782">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 뒤에 줄을 삽입 하는 메서드는 `<img>` 요소가 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-782">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-783">출력 스트림에 쓸 부울입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-783">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-784">출력 스트림에 보류 중인 탭 공백과 부울 값의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-784">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-785">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-786"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-786">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-787">출력 스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-787">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-788">출력 스트림에 보류 중인 탭 공백과 유니코드 문자를 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-788">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-789">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-790"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-790">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c520-791">출력 스트림에 쓸 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-791">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-792">출력 스트림에 보류 중인 탭 공백과 유니코드 문자 배열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-792">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-793">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-793">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-794"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-794">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-795">이 섹션에서는 두 개의 코드 예를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-795">This section provides two code examples.</span></span> <span data-ttu-id="5c520-796">첫 번째 배열을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-796">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="5c520-797">두 번째 배열을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-797">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="5c520-798">이러한 코드 예제에 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-798">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="5c520-799">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. `hello world`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-799">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="5c520-800">배열에 포함 되는 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드 두 단어 사이 공백을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-800">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="5c520-801">다음 코드 예제에서는 렌더링 되는 `hello world` 문자 배열을 사용 하 여 앞의 예제에서 만든는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-801">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-802">출력 스트림에 쓸 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-802">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-803">출력 스트림에 보류 중인 탭 공백과 배정밀도 부동 소수점 숫자의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-803">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-804">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-804">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-805"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-805">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-806">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Double.MaxValue?displayProperty=nameWithType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-806">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="5c520-807">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-807">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-808">출력 스트림에 쓸 32바이트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-808">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-809">출력 스트림에 보류 중인 탭 공백과 32바이트 부호 있는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-809">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-810">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-810">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-811"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-811">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-812">출력 스트림에 쓸 64바이트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-812">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-813">출력 스트림에 보류 중인 탭 공백과 64바이트 부호 있는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-813">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-814">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-814">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-815"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-815">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-816">출력 스트림에 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-816">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-817">출력 스트림에 보류 중인 탭 공백과 개체의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-817">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-818">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-818">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-819"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-819">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-820">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 속성 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-820">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-821">출력 스트림에 쓸 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-821">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-822">출력 스트림에 보류 중인 탭 공백과 단정밀도 부동 소수점 숫자의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-822">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-823">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-824"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-825">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 의 값을 렌더링 하는 메서드는 <xref:System.Single.Epsilon?displayProperty=nameWithType> 가능한 가장 작은 값은 필드의는 <xref:System.Single> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="5c520-826">이 코드 예제에서는 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-826">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="5c520-827">출력 스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-827">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-828">출력 스트림에 보류 중인 탭 공백과 텍스트 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-828">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-829">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-829">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-830"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-830">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c520-831">출력 스트림에 쓸 4바이트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-831">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-832">출력 스트림에 보류 중인 탭 공백과 4바이트 부호 없는 정수의 텍스트 표현을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-832">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-833">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-833">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-834"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-834">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-835">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-835">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5c520-836">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-836">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-837">출력 스트림에 보류 중인 탭 공백과 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-837">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-838">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-839"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드와 동일한 의미 체계를 사용 하 여는 <xref:System.String.Format%28System.String%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-839">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="5c520-840"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-840">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-841">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 값으로 형식이 지정 된 문자열을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-841">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-842">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-842">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="5c520-843">형식을 지정할 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-843">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-844">출력 스트림에 보류 중인 탭 공백과 개체 배열의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-844">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-845">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-845">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-846"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드와 동일한 의미 체계를 사용 하 여는 <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-846">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="5c520-847"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-847">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-848">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-848">This section contains two code examples.</span></span> <span data-ttu-id="5c520-849">첫 번째 문자열과 출력 스트림에 배열 렌더링 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-849">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="5c520-850">두 번째 배열을 선언 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-850">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="5c520-851">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 서식이 지정 된 문자열과 출력 스트림에 개체 배열의 내용을 렌더링 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-851">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="5c520-852">다음 코드 예제에서는 앞의 코드 예제에서 렌더링 된 개체 배열을 선언 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-852">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c520-853">출력 스트림에 쓸 텍스트가 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-853">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c520-854">쓰기를 시작할 문자 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-854">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c520-855">출력 스트림에 쓸 배열의 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-855">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-856">출력 스트림에 보류 중인 탭 공백과 유니코드 문자의 하위 배열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-856">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-857">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-857">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-858"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-858">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-859">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-859">This section contains two code examples.</span></span> <span data-ttu-id="5c520-860">첫 번째 문자 배열을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-860">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="5c520-861">두 번째 배열을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-861">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="5c520-862">이러한 코드 예제에 다음 태그를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-862">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="5c520-863">다음 코드 예제에서는 라는 문자 배열을 만드는 방법을 보여 줍니다. `hello world`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-863">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="5c520-864">배열에 포함 되는 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> 필드 두 단어 사이 공백을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-864">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="5c520-865">다음 코드 예제에서는 `index` 및 `count` 의 매개 변수는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드 이전 코드 예제에서 만든 배열의 처음 5 개 문자를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-865">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5c520-866">0개 이상의 형식 항목을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-866">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5c520-867">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-867">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5c520-868">서식을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-868">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-869">출력 스트림에 보류 중인 탭 공백과 두 개체의 텍스트 표현이 포함된 형식이 지정된 문자열을 쓴 다음 줄 종결자 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-869">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-870">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-870">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-871"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 메서드와 동일한 의미 체계를 사용 하 여는 <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-871">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="5c520-872"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-872">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c520-873">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 값 및 서식이 지정 된 문자열을 렌더링 하는 메서드는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 속성 및 <xref:System.DateTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-873">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="5c520-874">출력 스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-874">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-875">문자열과 줄 종결자 문자열을 차례로 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-875">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="5c520-876">이 메서드는 지정된 탭 공백을 무시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-876">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-877">사용 하 여는 <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> 메서드 보다는 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> 탭 공백이 렌더링된 된 문자열 보다 먼저 렌더링 하지 않을 때 메서드 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-877">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="5c520-878">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="5c520-878">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="5c520-879"><xref:System.IO.TextWriter.WriteLine%2A> 기본 메서드 쓰는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-879">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c520-880">스타일 특성과 그 값을  출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-880">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-881">출력 스트림에 쓸 스타일 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-881">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-882">스타일 특성에 할당되는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-882">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-883">지정된 스타일 특성을 출력 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-883">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-884"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> 메서드는 다음과 같은 형태로 스타일 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-884">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="5c520-885">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="5c520-885">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5c520-886">출력 스트림에 쓸 스타일 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-886">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5c520-887">스타일 특성에 할당되는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-887">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="5c520-888">스타일 특성과 그 할당 값을 인코딩하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-888">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-889">지정된 스타일 특성과 값을 출력 스트림에 쓰고 지정된 경우 값을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-889">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-890"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> 메서드는 다음과 같은 형태로 스타일 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-890">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="5c520-891">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="5c520-891">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="5c520-892"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드 인코딩하는 데 사용 되는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-892">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="5c520-893">인코딩하고 출력 스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-893">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="5c520-894">URL 매개 변수 섹션의 일부로 문자열을 인코딩하면 <see langword="true" />이고, URL 경로 섹션의 일부로 문자열을 인코딩하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-894">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c520-895">지정된 문자열을 URL 요구 사항에 따라 인코딩하여 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c520-895">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c520-896"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> 메서드 URL 구분 기호로 간주 될 수 있는 문자를 인코딩합니다 (의 설정에 종속 `argument`) 형식의 문자열로 `%xx`ASCII 코드를 보다 작은 128 고, 그러지 않으면, `%uxxxx`여기서 `x` 는 16 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c520-896">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="5c520-897"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> 및 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> 메서드 사용은 <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> 유틸리티 메서드로 메서드.</span><span class="sxs-lookup"><span data-stu-id="5c520-897">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>