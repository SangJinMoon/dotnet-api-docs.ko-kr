<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa663-101">뷰 상태를 로드할 수 없거나 그 유효성을 검사할 수 없을 때 throw되는 예외를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-101">Represents the exception that is thrown when the view state cannot be loaded or validated.</span></span> <span data-ttu-id="fa663-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-103">페이지 보기 상태 정보를 로드 하는 경우 예외가 발생 하는 경우 페이지를 만듭니다는 <xref:System.Web.UI.ViewStateException> 내에서 내부 예외가로 전달 하 고 개체는 <xref:System.Web.HttpException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-103">If an exception occurs when the page loads the view-state information, the page creates a <xref:System.Web.UI.ViewStateException> object and passes it as an inner exception within an <xref:System.Web.HttpException> exception.</span></span> <span data-ttu-id="fa663-104"><xref:System.Web.HttpException> 예외는 응용 프로그램에서 처리를 다시 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-104">The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.</span></span>  
  
 <span data-ttu-id="fa663-105"><xref:System.Web.UI.ViewStateException> 예외에 대 한 정보를 저장 하는 클래스는 <xref:System.Web.UI.ViewStateException.Message%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-105">The <xref:System.Web.UI.ViewStateException> class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property.</span></span> <span data-ttu-id="fa663-106">요청에 있는 경우 액세스할 수 있는 권한이 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성을 하면 <xref:System.Web.UI.ViewStateException.Message%2A> 속성에서 반환 된 값이 포함 된 <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, 및 <xref:System.Web.UI.ViewStateException.Path%2A> 속성입니다. 그렇지 않은 경우는 <xref:System.Web.UI.ViewStateException.Message%2A> 속성 일반 뷰 상태 오류 메시지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-106">If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.</span></span>  
  
 <span data-ttu-id="fa663-107">뷰 상태 예외는 메시지 인증 코드 (MAC) 유효성 검사 오류의 결과일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-107">A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</span></span> <span data-ttu-id="fa663-108">경우 페이지 특성이 `enableViewStateMac` 로 설정 된 `true`, 뷰 상태 정보는 MAC 식별자로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-108">If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier.</span></span> <span data-ttu-id="fa663-109">뷰 상태 정보는 서버에 게시 되 면 페이지는 것은 사용자가 변경 되지 않았음을 확인 인코딩을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-109">When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</span></span> <span data-ttu-id="fa663-110">페이지 MAC 인코딩 뷰 상태 정보를 확인할 수 없습니다, 예외를 throw 한 <xref:System.Web.HttpException> 사용 하 여 예외는 <xref:System.Web.UI.ViewStateException> 개체를 내부 예외로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-110">If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span>  
  
 <span data-ttu-id="fa663-111">보내고 받을 때 뷰 상태 정보에 성공 하려면 MAC 유효성 검사를 위해 동일한 키로 해시 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-111">For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</span></span> <span data-ttu-id="fa663-112">웹 팜 내에서 각 서버에서 컴퓨터 키를 공용 키로 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-112">Within a Web farm, the machine key on each server should be set to a common key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa663-113">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <xref:System.Collections.ICollection> 속성 설정의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-113">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="fa663-114"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> 메서드가 throw 할 수는 <xref:System.Web.HttpException> 예외를 포함 하는 <xref:System.Web.UI.ViewStateException> 내부 예외로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-114">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="fa663-115">예제에서는 어떻게 catch 할 수 있습니다는 <xref:System.Web.HttpException> 예외에서 속성을 검색 하 고는 <xref:System.Web.UI.ViewStateException> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-115">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa663-116"><see cref="T:System.Web.UI.ViewStateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-116">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="fa663-117">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-117">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="fa663-118">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-118">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="fa663-119">serialize된 데이터를 사용하여 <see cref="T:System.Web.UI.ViewStateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-119">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-120">클라이언트가 현재 서버에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-120">Gets a value indicating whether the client is currently connected to the server.</span></span></summary>
        <value>
          <span data-ttu-id="fa663-121">클라이언트가 아직 서버에 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-121"><see langword="true" /> if the client is still connected to the server; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-122">호출할 때와 같은 값을 반환 하는이 속성은 <xref:System.Web.HttpResponse.IsClientConnected%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-122">This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa663-123">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <xref:System.Collections.ICollection> 속성 설정의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-123">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="fa663-124"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> 메서드가 throw 할 수는 <xref:System.Web.HttpException> 예외를 포함 하는 <xref:System.Web.UI.ViewStateException> 내부 예외로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-124">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="fa663-125">예제에서는 어떻게 catch 할 수 있습니다는 <xref:System.Web.HttpException> 예외에서 속성을 검색 하 고는 <xref:System.Web.UI.ViewStateException> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-125">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-126">뷰 상태 예외를 발생시킨 HTTP 요청에 대한 디버깅 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-126">Gets debugging information about the HTTP request that resulted in a view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-127">예외 관련 정보가 있는 형식 메시지가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-127">A <see cref="T:System.String" /> containing the formatted message with information about the exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-128">요청에 서버 변수를 액세스할 수 있는 권한이 없으면이 속성 일반 뷰 상태 오류 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-128">If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</span></span> <span data-ttu-id="fa663-129">요청 서버 변수를 액세스할 수 있는 권한이 없는 경우는 <xref:System.Web.UI.ViewStateException.Message%2A> 속성에서 반환 된 값이 포함 된 <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, 및 <xref:System.Web.UI.ViewStateException.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-129">If the request does have permission to access server variables, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-130">뷰 상태 예외를 발생시킨 HTTP 요청의 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-130">Gets the path of the HTTP request that resulted in a view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-131">요청의 경로가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-131">A <see cref="T:System.String" /> containing the path from the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-132">와 동일한 값을 반환 하는이 속성은 `PATH_INFO` 에서 변수는 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-132">This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="fa663-133">호스트 이름 뒤에 오는 경로 일부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-133">It returns the portion of the path after the host name.</span></span> <span data-ttu-id="fa663-134">예를 들어 URL에에서 http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> /virdir/page.html을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-134">For example, in the URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> would return /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa663-135">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <xref:System.Collections.ICollection> 속성 설정의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-135">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="fa663-136"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> 메서드가 throw 할 수는 <xref:System.Web.HttpException> 예외를 포함 하는 <xref:System.Web.UI.ViewStateException> 내부 예외로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-136">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="fa663-137">예제에서는 어떻게 catch 할 수 있습니다는 <xref:System.Web.HttpException> 예외에서 속성을 검색 하 고는 <xref:System.Web.UI.ViewStateException> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-137">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-138">읽을 때 뷰 상태 예외를 발생시킨 뷰 상태 문자열의 내용을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-138">Gets the contents of the view-state string that, when read, caused the view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-139">뷰 상태 예외를 발생시킨 뷰 상태 값이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-139">A <see cref="T:System.String" /> containing the view-state values that caused the view-state exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-140">뷰 상태 예외가 발생한 페이지로 연결되는 페이지 URL을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-140">Gets the URL of the page that linked to the page where the view-state exception occurred.</span></span></summary>
        <value><span data-ttu-id="fa663-141">HTTP 리퍼러가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-141">A <see cref="T:System.String" /> containing the HTTP referrer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-142">와 동일한 값을 반환 하는이 속성은 `HTTP_REFERER` 에서 변수는 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-142">This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="fa663-143">값은 빈 문자열 ("")의 페이지에 연결 된 이전 요청이 없을 경우.</span><span class="sxs-lookup"><span data-stu-id="fa663-143">The value is an empty string ("") if no previous request linked to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa663-144">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <xref:System.Collections.ICollection> 속성 설정의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-144">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="fa663-145"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> 메서드가 throw 할 수는 <xref:System.Web.HttpException> 예외를 포함 하는 <xref:System.Web.UI.ViewStateException> 내부 예외로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-145">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="fa663-146">예제에서는 어떻게 catch 할 수 있습니다는 <xref:System.Web.HttpException> 예외에서 속성을 검색 하 고는 <xref:System.Web.UI.ViewStateException> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-146">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-147">뷰 상태 예외를 발생시킨 HTTP 요청의 IP 주소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-147">Gets the IP address of the HTTP request that resulted in a view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-148">클라이언트의 원격 IP 주소가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-148">A <see cref="T:System.String" /> containing the remote IP address of the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-149">와 동일한 값을 반환 하는이 속성은 `REMOTE_ADDR` 에서 변수는 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-149">This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-150">뷰 상태 예외를 발생시킨 HTTP 요청의 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-150">Gets the port number of the HTTP request that resulted in a view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-151">원격 포트 번호가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-151">A <see cref="T:System.String" /> containing the remote port number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-152">와 동일한 값을 반환 하는이 속성은 `REMOTE_PORT` 에서 변수는 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-152">This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa663-153">뷰 상태 예외를 발생시킨 HTTP 요청의 브라우저 종류를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-153">Gets the browser type of the HTTP request that resulted in a view-state exception.</span></span></summary>
        <value><span data-ttu-id="fa663-154">일반적으로 브라우저 종류에 해당하는 사용자 에이전트가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-154">A <see cref="T:System.String" /> containing the user agent, which is typically the browser type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa663-155">와 동일한 값을 반환 하는이 속성은 `HTTP_USER_AGENT` 에서 변수는 <xref:System.Web.HttpRequest.ServerVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-155">This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa663-156">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <xref:System.Collections.ICollection> 속성 설정의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-156">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="fa663-157"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> 메서드가 throw 할 수는 <xref:System.Web.HttpException> 예외를 포함 하는 <xref:System.Web.UI.ViewStateException> 내부 예외로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-157">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="fa663-158">예제에서는 어떻게 catch 할 수 있습니다는 <xref:System.Web.HttpException> 예외에서 속성을 검색 하 고는 <xref:System.Web.UI.ViewStateException> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa663-158">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>