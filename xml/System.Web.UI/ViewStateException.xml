<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewStateException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a96557c46b0c067684a9680f548bb1037bc62c76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96557c46b0c067684a9680f548bb1037bc62c76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>Represents the exception that is thrown when the view state cannot be loaded or validated.</source>
          <target state="translated">뷰 상태를 로드할 수 없거나 그 유효성을 검사할 수 없을 때 throw되는 예외를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If an exception occurs when the page loads the view-state information, the page creates a <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object and passes it as an inner exception within an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">페이지 보기 상태 정보를 로드 하는 경우 예외가 발생 하는 경우 페이지를 만듭니다는 <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내에서 내부 예외가로 전달 하 고 개체는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is re-thrown to be handled by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외는 응용 프로그램에서 처리를 다시 throw 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> class stores information about the exception in the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 예외에 대 한 정보를 저장 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the request has permission to access the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property, then the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties; otherwise, the <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains a generic view-state error message.</source>
          <target state="translated">요청에 있는 경우 액세스할 수 있는 권한이 <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성을 하면 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> 속성에서 반환 된 값이 포함 된 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, 및 <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> 속성입니다. 그렇지 않은 경우는 <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> 속성 일반 뷰 상태 오류 메시지를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</source>
          <target state="translated">뷰 상태 예외는 메시지 인증 코드 (MAC) 유효성 검사 오류의 결과일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page attribute <ph id="ph1">`enableViewStateMac`</ph> is set to <ph id="ph2">`true`</ph>, view-state information is encoded with a MAC identifier.</source>
          <target state="translated">경우 페이지 특성이 <ph id="ph1">`enableViewStateMac`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 뷰 상태 정보는 MAC 식별자로 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</source>
          <target state="translated">뷰 상태 정보는 서버에 게시 되 면 페이지는 것은 사용자가 변경 되지 않았음을 확인 인코딩을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page cannot validate the MAC encoding on the view-state information, it will throw an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception with the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">페이지 MAC 인코딩 뷰 상태 정보를 확인할 수 없습니다, 예외를 throw 한 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 사용 하 여 예외는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체를 내부 예외로 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</source>
          <target state="translated">보내고 받을 때 뷰 상태 정보에 성공 하려면 MAC 유효성 검사를 위해 동일한 키로 해시 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>Within a Web farm, the machine key on each server should be set to a common key.</source>
          <target state="translated">웹 팜 내에서 각 서버에서 컴퓨터 키를 공용 키로 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> 메서드가 throw 할 수는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내부 예외로 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">예제에서는 어떻게 catch 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외에서 속성을 검색 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>Gets a value indicating whether the client is currently connected to the server.</source>
          <target state="translated">클라이언트가 현재 서버에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is still connected to the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 아직 서버에 연결되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>This property returns the same value as calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property.</source>
          <target state="translated">호출할 때와 같은 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> 메서드가 throw 할 수는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내부 예외로 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">예제에서는 어떻게 catch 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외에서 속성을 검색 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Message">
          <source>Gets debugging information about the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 HTTP 요청에 대한 디버깅 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the formatted message with information about the exception.</source>
          <target state="translated">예외 관련 정보가 있는 형식 메시지가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</source>
          <target state="translated">요청에 서버 변수를 액세스할 수 있는 권한이 없으면이 속성 일반 뷰 상태 오류 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does have permission to access server variables, the <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties.</source>
          <target state="translated">요청 서버 변수를 액세스할 수 있는 권한이 없는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> 속성에서 반환 된 값이 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Path">
          <source>Gets the path of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 HTTP 요청의 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the path from the request.</source>
          <target state="translated">요청의 경로가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>This property returns the same value as the <ph id="ph1">`PATH_INFO`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">와 동일한 값을 반환 하는이 속성은 <ph id="ph1">`PATH_INFO`</ph> 에서 변수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>It returns the portion of the path after the host name.</source>
          <target state="translated">호스트 이름 뒤에 오는 경로 일부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>For example, in the URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> would return /virdir/page.html.</source>
          <target state="translated">예를 들어 URL에에서 <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> /virdir/page.html을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> 메서드가 throw 할 수는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내부 예외로 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">예제에서는 어떻게 catch 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외에서 속성을 검색 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>Gets the contents of the view-state string that, when read, caused the view-state exception.</source>
          <target state="translated">읽을 때 뷰 상태 예외를 발생시킨 뷰 상태 문자열의 내용을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the view-state values that caused the view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 뷰 상태 값이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>Gets the URL of the page that linked to the page where the view-state exception occurred.</source>
          <target state="translated">뷰 상태 예외가 발생한 페이지로 연결되는 페이지 URL을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the HTTP referrer.</source>
          <target state="translated">HTTP 리퍼러가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_REFERER`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">와 동일한 값을 반환 하는이 속성은 <ph id="ph1">`HTTP_REFERER`</ph> 에서 변수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The value is an empty string ("") if no previous request linked to the page.</source>
          <target state="translated">값은 빈 문자열 ("")의 페이지에 연결 된 이전 요청이 없을 경우.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> 메서드가 throw 할 수는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내부 예외로 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">예제에서는 어떻게 catch 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외에서 속성을 검색 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>Gets the IP address of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 HTTP 요청의 IP 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote IP address of the client.</source>
          <target state="translated">클라이언트의 원격 IP 주소가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_ADDR`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">와 동일한 값을 반환 하는이 속성은 <ph id="ph1">`REMOTE_ADDR`</ph> 에서 변수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>Gets the port number of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 HTTP 요청의 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote port number.</source>
          <target state="translated">원격 포트 번호가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_PORT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">와 동일한 값을 반환 하는이 속성은 <ph id="ph1">`REMOTE_PORT`</ph> 에서 변수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>Gets the browser type of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">뷰 상태 예외를 발생시킨 HTTP 요청의 브라우저 종류를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the user agent, which is typically the browser type.</source>
          <target state="translated">일반적으로 브라우저 종류에 해당하는 사용자 에이전트가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_USER_AGENT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">와 동일한 값을 반환 하는이 속성은 <ph id="ph1">`HTTP_USER_AGENT`</ph> 에서 변수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">다음 코드 예제는 base64 인코딩된 문자열을 deserialize 하 고 반환 하는 메서드를 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> 메서드가 throw 할 수는 <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> 예외를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 내부 예외로 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">예제에서는 어떻게 catch 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외에서 속성을 검색 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>