<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8557652b4b165aa49213450463eba1ffb0a2f7de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ceed-101">속성을 다른 속성 아래 또는 소유 형식 아래의 경로로 설명하기 위한 데이터 구조를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ceed-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span>
      </span>
      <span data-ttu-id="5ceed-102">속성 경로는 개체에 대한 데이터 바인딩 및 애니메이션에 대한 스토리보드 및 타임라인에서 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ceed-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ceed-103">이 클래스는 문자열을 포함 <xref:System.Windows.PropertyPath.Path%2A>, 종속성 속성의 목록과 <xref:System.Windows.PropertyPath.PathParameters%2A> 문자열로 <xref:System.Windows.PropertyPath.Path%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="5ceed-104"><xref:System.Windows.PropertyPath> 동작의 두 가지 모드를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="5ceed-105">**소스 모드** 다른 작업에 대 한 원본으로 사용 되는 속성에 대 한 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="5ceed-106">이 모드에서 사용 되는 <xref:System.Windows.Data.Binding> 데이터 바인딩을 지 원하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="5ceed-107">**대상 모드** 대상 속성으로 설정할 수 있는 속성에 대 한 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="5ceed-108">이 모드는 스토리 보드 및 타임 라인 setter 지원 하기 위해 애니메이션에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="5ceed-109">예를 들어, `Background.Opacity` 2 단계 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="5ceed-110">이 경로 의미: 먼저 찾을 `Background` 개체의 속성 값 개체를 가져오는 `Background` 속성로 설정 되 고 다음 값을 가져올는 `Opacity` 해당 개체의 속성을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5ceed-111">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="5ceed-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5ceed-112">XAML 값</span><span class="sxs-lookup"><span data-stu-id="5ceed-112">XAML Values</span></span>  
 <span data-ttu-id="5ceed-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="5ceed-113">*propertyPath*</span></span>  
 <span data-ttu-id="5ceed-114">단순 또는 복합 속성 경로 이거나으로 평가 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="5ceed-115">설정에 대 한 구문은 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 다양 한 건 복잡 하 고 별도 항목에 설명 된 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ceed-116">
            <see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-116">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="5ceed-117">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 속성 또는 단일 종속성 속성에 대한 경로를 설명하는 속성 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-117">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ceed-118">
            <see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-118">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ceed-119">이 생성자에는 바인딩에 대 한 또는 스토리 보드 대상에 대 한 대상 모드 단일 단계 속성 경로 대 한 소스 모드 속성 경로 사용 여부에 따라 완전히 다른 두 개의 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-119">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="5ceed-120">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 된 바인딩, 소스 모드에서 `parameter` 속성 이름을 나타내는 문자열 또는 속성에 "단계별" 경로 설명 하는 문자열 수는 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 원본으로 사용 중인 개체의 개체 모델 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-120">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="5ceed-121">바인딩 속성 경로 "단계"를 식별 하는 문자는 점 (.).</span><span class="sxs-lookup"><span data-stu-id="5ceed-121">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="5ceed-122">인덱서 참조 (여러 인덱서 및 형식 구분 포함)도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-122">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="5ceed-123">구체적으로 사용 되는 문자열의 구문은 대 한 자세한 내용은 <xref:System.Windows.Data.Binding> 개체, 참조 <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-123">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5ceed-124">바인딩 소스로 사용 되는 속성에는 종속성 속성 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-124">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="5ceed-125">바인딩이 양방향으로 업데이트 하는 경우 참조 된 속성이 읽기 / 쓰기 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-125">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="5ceed-126">바인딩 대상 종속성 속성으로 않았는지 참고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-126">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="5ceed-127">자세한 내용은 참조 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-127">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="5ceed-128">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상에 대 한 단계씩 경로 대 한 대상 모드에 `parameter` 형식으로 제공 일반적으로 <xref:System.Windows.DependencyProperty>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-128">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="5ceed-129">문자열을 지정할 수도 있습니다는 <xref:System.Windows.DependencyProperty.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-129">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="5ceed-130">둘 중 하나를 string으로 내부적으로 저장 되므로 동일한 결과를 평가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-130">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="5ceed-131">제공 된 <xref:System.Windows.DependencyProperty> 통해 문자열로 변환 <xref:System.Windows.Markup.DependencyPropertyConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-131">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="5ceed-132"><xref:System.Windows.Markup.DependencyPropertyConverter> 지정할 수 있도록 정규화 된 이름 형식 종속성 속성에 대 한 지원는 *typeName*.* propertyName* 정규화 된 종속성 속성 이름 문자열에는 <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> 코드에서 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-132">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="5ceed-133">종속성 속성 식별자의 정규화 된 경로 복잡 한 경로 다른 개념입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-133">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="5ceed-134">복합 경로 <xref:System.Windows.PropertyPath> 와 대신 만들 수는 <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-134">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="5ceed-135">
            <see cref="P:System.Windows.PropertyPath.Path" />를 토큰화된 형식으로 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-135">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span>
          </span>
        </param>
        <param name="pathParameters">
          <span data-ttu-id="5ceed-136">
            <see cref="P:System.Windows.PropertyPath.PathParameters" />를 설정하는 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-136">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ceed-137">제공된 경로 지정 토큰 문자열 및 매개 변수를 사용하여 <see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다. </span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-137">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ceed-138">일반적으로이 서명을 대상 모드에만 사용 <xref:System.Windows.PropertyPath> 복잡 한 경로를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-138">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="5ceed-139">이 생성자 `params` 에 대 한는 `pathParameters` 생성자 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-139">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="5ceed-140">따라서의 내용을 지정할 수 있습니다 `pathParameters` 일련의 쉼표로 구분 된 생성자 인수를 채우는 배열 차원 하며 다음을 채울 필요 하지 않고 배열에는 `pathParameters` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-140">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="5ceed-141">각 항목을 지정한 다음 유형 중 하나 여야 합니다: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-141">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="5ceed-142">매개 변수 요구 사항에 대 한 자세한 내용은 참조 하십시오. <xref:System.Windows.PropertyPath.Path%2A> 및 <xref:System.Windows.PropertyPath.PathParameters%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-142">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ceed-143">경로를 설명하는 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-143">Gets or sets the string that describes the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ceed-144">경로를 설명하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-144">The string that describes the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ceed-145">이 속성에 포함 된 문자열 인지 여부에 따라 3 개의 완전히 다른 의미를 가집니다는 <xref:System.Windows.PropertyPath> 또는 복잡 한 스토리 보드 대상에 대 한 대상 모드 단일 단계 속성 경로 대 한 바인딩에 대 한 소스 모드 속성 경로에 사용 되 고 스토리 보드 대상에 대 한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-145">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="5ceed-146">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 된 바인딩, 소스 모드에서 <xref:System.Windows.PropertyPath.Path%2A> 속성 이름을 나타내는 문자열 또는 속성에 "단계별" 경로 설명 하는 문자열 수는 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 원본으로 사용 중인 개체의 개체 모델 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-146">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="5ceed-147">바인딩 속성 경로 "단계"를 식별 하는 문자는 점 (.).</span><span class="sxs-lookup"><span data-stu-id="5ceed-147">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="5ceed-148">인덱서 참조 (여러 인덱서 및 형식 구분 포함)도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-148">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="5ceed-149">구체적으로 사용 되는 문자열의 구문은 대 한 자세한 내용은 <xref:System.Windows.Data.Binding> 개체, 참조 <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-149">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5ceed-150">바인딩 소스로 사용 되는 속성에는 종속성 속성 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-150">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="5ceed-151">바인딩이 양방향으로 업데이트 하는 경우 속성 소스 읽기 / 쓰기 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-151">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="5ceed-152">바인딩 대상 종속성 속성으로 않았는지 참고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-152">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="5ceed-153">자세한 내용은 참조 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-153">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="5ceed-154">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상에 대 한 단계씩 경로 대 한 대상 모드에 <xref:System.Windows.PropertyPath> 문자열 해당는 *typeName*.* propertyName* 정규화 된 종속성 속성 이름 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-154">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="5ceed-155">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상에 대 한 복잡 한 경로 대 한 <xref:System.Windows.PropertyPath.Path%2A> 는 토큰화 된 문자열 형식에 지정 된 다양 한 개체의 관계를 설명 하는 <xref:System.Windows.PropertyPath.PathParameters%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-155">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="5ceed-156">배열의 각 항목은 괄호로 묶인 항목에 대 한 배열 인덱스에서이 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-156">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="5ceed-157">예를 들어 배열의 첫 번째 항목을 지정 하는 문자열 토큰은 `(0)`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-157">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="5ceed-158">항목 (경로에 "단계") 간의 관계는 점 (.)으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-158">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="5ceed-159">점 앞으로 속성은 첫 번째 단계는 경로 뒤의 속성은 두 번째 단계 및 (두를 지정할 수)에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-159">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="5ceed-160">체인에서 마지막 단계는 항상 되는 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-160">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="5ceed-161">컬렉션 속성 내에서 대괄호의 내부 인덱스와는 인덱서 구문을 사용 하 여 액세스 하는 ([및]).</span><span class="sxs-lookup"><span data-stu-id="5ceed-161">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="5ceed-162">인덱서가 속성을 나타내는 토큰에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-162">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="5ceed-163">예를 들어 다음은 해당 속성의 컬렉션 내에서 두 번째 항목을 지정 하는 첫 번째 단계에서 토큰 조합 사용 하는 2 단계 경로: `(0)[1].(1)` 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-163">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="5ceed-164">체인에서 마지막 속성에는 인덱서를 사용할 수 없습니다. 실제 수집 위치에 애니메이션을 적용할 수 없습니다, 그리고 해당 개체의 속성에 애니메이션을 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-164">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="5ceed-165">경로 문자열에 대 한는 <xref:System.Windows.PropertyPath> 은 일반적으로 생성자를 통해 설정:는 <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> 바인딩 또는 단일 단계 storyboard 대상에 대 한 서명은 <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> multi-step storyboard 대상에 대 한 서명입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-165">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="5ceed-166">**XAML:** 사용 하는 경우는 <xref:System.Windows.PropertyPath> 속성 참조를 설명 하기 위해 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]특성 값을 지정 하는 문자열은 형식 변환기에서 먼저 처리 된 것으로, (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="5ceed-166">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="5ceed-167">이 형식 변환기에서 다음 문자열을 처리 하 고에 따라 캐스트 연산자 구문 중 하나를 호출 됩니다는 <xref:System.Windows.PropertyPath> 생성자 서명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-167">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="5ceed-168">특성 값을 처리 하는 형식 변환기를 통해이 간접 참조는 일반적으로 사용 하는 방법을 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]를 선언 하는 대신 한 <xref:System.Windows.PropertyPath> 개체 요소를 같은 특성을 특정 값을 다음 적용 <xref:System.Windows.PropertyPath.Path%2A> 및 <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ceed-168">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="5ceed-169">자세한 내용은 참조 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-169">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="5ceed-170">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="5ceed-170">XAML Text Usage</span></span>  
 <span data-ttu-id="5ceed-171">멤버는 <xref:System.Windows.PropertyPath> 형식을 직접에서 일반적으로 설정 되지 않은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-171">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="5ceed-172">설명 부분을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5ceed-172">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ceed-173">경로가 인덱싱된 매개 변수를 참조할 때 사용할 매개 변수 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-173">Gets the list of parameters to use when the path refers to indexed parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ceed-174">매개 변수 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ceed-174">The parameter list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ceed-175">에 대 한 속성을 <xref:System.Windows.PropertyPath> 일반적으로 생성자를 통해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-175">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="5ceed-176">설정에 대 한 <xref:System.Windows.PropertyPath.PathParameters%2A>, <xref:System.Windows.PropertyPath.%23ctor%2A> 생성자 사용 하는 것이 편리한 때문에 `pathParameters` 생성자 인수로 지정 된 `params`, 즉를 만들거나 생성에 대 한 배열을 차원 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-176">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="5ceed-177">배열의 각 멤버를 추가 매개 변수로 지정 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-177">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="5ceed-178">최종 속성 대상이 되는 경우는 <xref:System.Windows.Freezable> 입력 값은 복제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-178">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="5ceed-179">자세한 내용은 참조 [적기](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-179">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="5ceed-180">속성 체인의 실제 평가 스토리 보드 애니메이션 메커니즘에 의해 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-180">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="5ceed-181">에 <xref:System.Windows.PropertyPath> 수준에서 유효성을 검사 하지 경로 단계가 전혀 연결 되도록 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-181">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="5ceed-182">예를 들어, 속성 경로 생성할 수 있습니다 <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> 첫 번째 단계로, 및 <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> 두 번째 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-182">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="5ceed-183">이러한 속성 경로 오류가 실제로 적용 한 대상으로 하는 경우 브러시 입력 해당 채우기 <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> 없는 <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-183">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5ceed-184">잘못 된 속성 경로 자동으로 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-184">Invalid property paths fail silently.</span></span> <span data-ttu-id="5ceed-185">자세한 내용은 [스토리보드 개요](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5ceed-185">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="5ceed-186">**XAML:** 사용 하는 경우는 <xref:System.Windows.PropertyPath> 속성 참조를 설명 하기 위해 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]특성 값을 지정 하는 문자열은 형식 변환기에서 먼저 처리 된 것으로, (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="5ceed-186">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="5ceed-187">이 형식 변환기에서 다음 문자열을 처리 하 고에 따라 캐스트 연산자 구문 중 하나를 호출 됩니다는 <xref:System.Windows.PropertyPath> 생성자 서명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-187">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="5ceed-188">특성 값을 처리 하는 형식 변환기를 통해이 간접 참조는 일반적으로 사용 하는 방법을 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]를 선언 하는 대신 한 <xref:System.Windows.PropertyPath> 개체 요소를 같은 특성을 특정 값을 다음 적용 <xref:System.Windows.PropertyPath.Path%2A> 및 <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ceed-188">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="5ceed-189">자세한 내용은 참조 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-189">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="5ceed-190">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="5ceed-190">XAML Text Usage</span></span>  
 <span data-ttu-id="5ceed-191">멤버는 <xref:System.Windows.PropertyPath> 형식을 직접에서 일반적으로 설정 되지 않은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="5ceed-191">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="5ceed-192">설명 부분을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5ceed-192">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>