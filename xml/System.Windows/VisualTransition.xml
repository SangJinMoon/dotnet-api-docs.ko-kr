<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a68eaadc906142e1be7033bb40118231a62ef1a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>컨트롤이 한 상태에서 다른 상태로 변환될 때 발생하는 시각적 동작을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 하 여 상태 간 전환 될 때 컨트롤의 시각적 동작을 지정할 수 있습니다 <xref:System.Windows.VisualTransition> 개체입니다. 만들 때 한 <xref:System.Windows.VisualTransition>, 다음 중 하나 이상을 지정 합니다.  
  
-   설정 하 여 발생 하는 상태 간 전환 하는 데 걸리는 시간은 <xref:System.Windows.VisualTransition.GeneratedDuration%2A> 속성입니다.  
  
-   컨트롤의 모양 설정 하 여 전환의 시간에 발생 하는 추가 변경은 <xref:System.Windows.VisualTransition.Storyboard%2A> 속성입니다.  
  
-   경우는 <xref:System.Windows.VisualTransition> 설정 하 여 적용 되는 <xref:System.Windows.VisualTransition.To%2A> 및 <xref:System.Windows.VisualTransition.From%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.VisualTransition> 하는 컨트롤에서 마우스를 이동할 컨트롤의 테두리 1.5 초 내에서 파랑으로 노랑, 검정으로 차례로 변경 되도록 지정 합니다. 전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualTransition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>변환 전의 <see cref="T:System.Windows.VisualState" /> 이름을 가져오거나 설정합니다.</summary>
        <value>변환 전의 <see cref="T:System.Windows.VisualState" /> 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A> 속성은 선택 사항입니다. A <xref:System.Windows.VisualTransition> 특정 상태에만 적용 하도록 제한할 수 또는 적용할 수 있습니다 언제 든 지 상태 간의 컨트롤 전환 합니다. 시간을 제한할는 <xref:System.Windows.VisualTransition> 설정 하 여 적용 되는 <xref:System.Windows.VisualTransition.To%2A> 및 <xref:System.Windows.VisualTransition.From%2A> 속성입니다. 다음 표에서는 최대한의 제한에서 최소한의 제한까지 제한 수준에 대해 설명합니다.  
  
|제한 유형|From 값|To 값|  
|-------------------------|-------------------|-----------------|  
|지정된 상태에서 지정된 다른 상태로 전환|이름을 <xref:System.Windows.VisualState>|이름을 <xref:System.Windows.VisualState>|  
|임의의 상태에서 지정된 상태로 전환|설정 안 함|이름을 <xref:System.Windows.VisualState>|  
|지정된 상태에서 임의의 상태로 전환|이름을 <xref:System.Windows.VisualState>|설정 안 함|  
|임의의 상태에서 임의의 다른 상태로 전환|설정 안 함|설정 안 함|  
  
 여러 개 있을 수 <xref:System.Windows.VisualTransition> 개체에 <xref:System.Windows.VisualStateGroup> 동일한 상태를 참조 하는 없지만 이전 표에서 지정 된 순서로 사용할 됩니다.  
  
 상속 되는 새 클래스를 만들어이 동작을 변경할 수 <xref:System.Windows.VisualStateManager> 재정의 <xref:System.Windows.VisualStateManager.GoToStateCore%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Windows.VisualTransition> 개체입니다. 컨트롤에서 전환 하는 경우는 `Pressed` 상태는 `MouseOver` 상태는 <xref:System.Windows.VisualTransition> 가 모두 <xref:System.Windows.VisualTransition.From%2A> 및 <xref:System.Windows.VisualTransition.To%2A> 집합이 사용 됩니다. 컨트롤이 `Pressed`가 아닌 상태에서 `MouseOver` 상태로 전환될 때는 다른 상태가 사용됩니다.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>한 상태에서 다른 상태로 전환하는 데 소요되는 시간을 가져오거나 설정합니다.</summary>
        <value>한 상태에서 다른 상태로 전환하는 데 소요되는 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전환의 소요 시간을 설정 하 여 지정할 수는 <xref:System.Windows.VisualTransition.GeneratedDuration%2A> 속성입니다. 설정 하는 경우는 <xref:System.Windows.VisualTransition.GeneratedDuration%2A> 속성, 전환이 발생 하는 데 걸리는 시간을 지정 하는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 컨트롤 다루지는 1/2 초를 사용 한다고 지정는 `MouseOver` 상태입니다. 전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>상태를 전환하는 데 사용되는 사용자 지정 수학 공식을 가져오거나 설정합니다.</summary>
        <value>상태를 전환하는 데 사용되는 사용자 지정 수학 공식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다는 <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> 전환이 발생 하는 방법을 지정 하려면 속성입니다. 예를 들어 가속 또는 전환 감속 하는 감속/가속 함수를 지정할 수 있습니다. 자세한 내용은 참조 [감속/가속 함수](~/docs/framework/wpf/graphics-multimedia/easing-functions.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Windows.VisualTransition> 일으키는 <xref:System.Windows.Shapes.Rectangle> 위에서 마우스 단추를 누를 경우 세로로 이동 하는 <xref:System.Windows.Controls.Canvas>합니다. 예제에서는 <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> 속성을 한 <xref:System.Windows.Media.Animation.BounceEase> 개체가 <xref:System.Windows.Shapes.Rectangle> 대상에 도달할 경우 바운스되에 게 표시 합니다. <xref:System.Windows.VisualTransition> 단추를 놓을 때 사용 되는 다른 <xref:System.Windows.Media.Animation.BounceEase> 개체가 <xref:System.Windows.Shapes.Rectangle> 를 원래 위치로 반환 하기 전에 바운스 하도록 합니다.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 다음 예제에 대 한 이벤트 처리기는 <xref:System.Windows.UIElement3D.MouseDown> 및 <xref:System.Windows.UIElement.MouseUp> 이벤트입니다. 호출 된 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 변경 하려면 메서드는 <xref:System.Windows.VisualState> 캔버스의 합니다.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>변환이 일어날 때 발생하는 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 가져오거나 설정합니다.</summary>
        <value>변환이 일어날 때 발생하는 <see cref="T:System.Windows.Media.Animation.Storyboard" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.VisualTransition> 포함 한 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.Storyboard> 언제 든 지 실행는 <xref:System.Windows.VisualTransition> 적용 됩니다. 예를 들어의 테두리는 <xref:System.Windows.Controls.Button> 색을 변경 하려면 외부로 마우스를 이동할 때, 만들 수 있습니다는 <xref:System.Windows.VisualTransition> 올려진는 <xref:System.Windows.Media.Animation.Storyboard> 단추의 배경을 변경 하는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.VisualTransition> 하는 컨트롤에서 마우스를 이동할 컨트롤의 테두리 1.5 초 내에서 파랑으로 노랑, 검정으로 차례로 변경 되도록 지정 합니다. 전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>변환 후의 <see cref="T:System.Windows.VisualState" /> 이름을 가져오거나 설정합니다.</summary>
        <value>전환할 <see cref="T:System.Windows.VisualState" />의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A> 속성은 선택 사항입니다. A <xref:System.Windows.VisualTransition> 특정 상태에만 적용 하도록 제한할 수 또는 적용할 수 있습니다 언제 든 지 상태 간의 컨트롤 전환 합니다. 시간을 제한할는 <xref:System.Windows.VisualTransition> 설정 하 여 적용 되는 <xref:System.Windows.VisualTransition.To%2A> 및 <xref:System.Windows.VisualTransition.From%2A> 속성입니다. 다음 표에서는 최대한의 제한에서 최소한의 제한까지 제한 수준에 대해 설명합니다.  
  
|제한 유형|From 값|To 값|  
|-------------------------|-------------------|-----------------|  
|지정된 상태에서 지정된 다른 상태로 전환|이름을 <xref:System.Windows.VisualState>|이름을 <xref:System.Windows.VisualState>|  
|임의의 상태에서 지정된 상태로 전환|설정 안 함|이름을 <xref:System.Windows.VisualState>|  
|지정된 상태에서 임의의 상태로 전환|이름을 <xref:System.Windows.VisualState>|설정 안 함|  
|임의의 상태에서 임의의 다른 상태로 전환|설정 안 함|설정 안 함|  
  
 여러 개 있을 수 <xref:System.Windows.VisualTransition> 개체에 <xref:System.Windows.VisualStateGroup> 동일한 상태를 참조 하는 없지만 이전 표에서 지정 된 순서로 사용할 됩니다.  
  
 상속 되는 새 클래스를 만들어이 동작을 변경할 수 <xref:System.Windows.VisualStateManager> 재정의 <xref:System.Windows.VisualStateManager.GoToStateCore%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Windows.VisualTransition> 개체입니다. 컨트롤에서 전환 하는 경우는 `Pressed` 상태는 `MouseOver` 상태는 <xref:System.Windows.VisualTransition> 가 모두 <xref:System.Windows.VisualTransition.From%2A> 및 <xref:System.Windows.VisualTransition.To%2A> 집합이 사용 됩니다. 컨트롤이 `Pressed`가 아닌 상태에서 `MouseOver` 상태로 전환될 때는 다른 상태가 사용됩니다.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>