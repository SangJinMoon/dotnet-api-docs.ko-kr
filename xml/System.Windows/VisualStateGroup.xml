<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7dbb5-101">함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체와 상태를 전환하는 데 사용되는 <see cref="T:System.Windows.VisualTransition" /> 개체를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-101">Contains mutually exclusive <see cref="T:System.Windows.VisualState" /> objects and <see cref="T:System.Windows.VisualTransition" /> objects that are used to move from one state to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dbb5-102">각 <xref:System.Windows.VisualStateGroup> 의 컬렉션을 포함 <xref:System.Windows.VisualState> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-102">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="7dbb5-103">A <xref:System.Windows.VisualState> 의 컬렉션을 포함 <xref:System.Windows.Media.Animation.Storyboard> 컨트롤이 특정 상태에 있을 때 컨트롤의 모양을 변경 하는 방법을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-103">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state.</span></span> <span data-ttu-id="7dbb5-104">예를 들어 한 <xref:System.Windows.Controls.Button> 를 누를 때 보다 눌려질 때 약간 다른 모양을 갖도록 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-104">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="7dbb5-105">두 개의 상태는 <xref:System.Windows.Controls.Button> 정의 누르면 해당 (`"Pressed"`) 때 및 (`"Normal"`).</span><span class="sxs-lookup"><span data-stu-id="7dbb5-105">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span>  
  
 <span data-ttu-id="7dbb5-106">추가한 <xref:System.Windows.VisualState> 설정 하 여 컨트롤에는 `VisualStateManager.VisualStateGroups` 컨트롤에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-106">You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="7dbb5-107">동일한 서로 함께 사용할 수 없는 상태를 추가할 수 <xref:System.Windows.VisualStateGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-107">You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="7dbb5-108">예를 들어는 <xref:System.Windows.Controls.CheckBox> 에 두 개의 <xref:System.Windows.VisualStateGroup> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-108">For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects.</span></span> <span data-ttu-id="7dbb5-109">상태를 포함 하나 `Normal`, `MouseOver`, `Pressed`, 및 `Disabled`합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-109">One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`.</span></span> <span data-ttu-id="7dbb5-110">다른 상태를 포함 `Checked`, `UnChecked`, 및 `Indeterminate`합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-110">The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`.</span></span> <span data-ttu-id="7dbb5-111"><xref:System.Windows.Controls.CheckBox> 상태에 있을 수 `MouseOver` 및 `UnChecked` 같은 시간에 하지만에 있을 수 없습니다는 `MouseOver` 및 `Pressed` 동시에 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-111">The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.</span></span>  
  
 <span data-ttu-id="7dbb5-112">추가할 수는 있지만 <xref:System.Windows.VisualState> 다른 시각적 동작의 다시 정의할 수 있도록 특히 유용한 방법은 개체를 요소는 <xref:System.Windows.Controls.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-112">Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="7dbb5-113">사용 하는 사용자 지정 컨트롤을 만드는 경우는 <xref:System.Windows.Controls.ControlTemplate>, 추가 하 여 컨트롤이 있을 수 있는 상태를 지정할 수는 <xref:System.Windows.TemplateVisualStateAttribute> 클래스 정의에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-113">If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="7dbb5-114">그런 다음 모든 사용자에 게 새 <xref:System.Windows.Controls.ControlTemplate> 컨트롤을 추가할 수에 대 한 <xref:System.Windows.VisualState> 서식 파일에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-114">Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template.</span></span> <span data-ttu-id="7dbb5-115"><xref:System.Windows.TemplateVisualStateAttribute> 컨트롤 상태를 노출 하려면 Expression Blend 등 디자이너 도구를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-115">The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states.</span></span> <span data-ttu-id="7dbb5-116">같은 상태 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 같은 속해 <xref:System.Windows.VisualStateGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-116">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="7dbb5-117">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.VisualStateGroup> 개체에 <xref:System.Windows.Controls.ControlTemplate>, 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-117">For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="7dbb5-118">만드는 방법에 대 한 자세한 내용은 사용 하는 컨트롤에 대 한는 <xref:System.Windows.VisualStateManager>, 참조 [모양을 사용자 지정할 수는 컨트롤이 올려진 만드는](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-118">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 <span data-ttu-id="7dbb5-119"><xref:System.Windows.VisualStateGroup.Transitions%2A> 속성 포함 <xref:System.Windows.VisualTransition> 제어 전환 사이 된다고 알리는 때 적용 되는 개체에 정의 된는 <xref:System.Windows.VisualStateGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-119">The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7dbb5-120">다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-120">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="7dbb5-121">도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-121">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="7dbb5-122"><xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-122">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7dbb5-123"><see cref="T:System.Windows.VisualStateGroup" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-123">Initializes a new instance of the <see cref="T:System.Windows.VisualStateGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-124">컨트롤에 현재 적용되는 <see cref="T:System.Windows.VisualState" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-124">Gets the <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</span></span></summary>
        <value><span data-ttu-id="7dbb5-125">컨트롤에 현재 적용되는 <see cref="T:System.Windows.VisualState" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-125">The <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-126">컨트롤이 다른 상태로 전환된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-126">Occurs after a control transitions to a different state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dbb5-127">이 이벤트 발생 후 새 상태로 전환 되는 컨트롤 및 <xref:System.Windows.VisualStateGroup.CurrentStateChanging> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-127">This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-128">컨트롤이 다른 상태로 전환되기 시작할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-128">Occurs when a control starts transitioning to a different state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dbb5-129">이벤트는 컨트롤 상태를 전환 시작 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-129">The event occurs when the control begins to transition states.</span></span> <span data-ttu-id="7dbb5-130">경우는 <xref:System.Windows.VisualTransition> 적용 된 상태 변경에이 이벤트 발생 전환을 시작할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-130">If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins.</span></span> <span data-ttu-id="7dbb5-131">경우는 <xref:System.Windows.VisualTransition> 를 적용 하지 않으면이 이벤트가 발생 하기 전에 컨트롤에서 새 상태로 전환 후의 <xref:System.Windows.VisualStateGroup.CurrentStateChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-131">If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-132"><see cref="T:System.Windows.VisualStateGroup" />의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-132">Gets or sets the name of the <see cref="T:System.Windows.VisualStateGroup" />.</span></span></summary>
        <value><span data-ttu-id="7dbb5-133"><see cref="T:System.Windows.VisualStateGroup" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-133">The name of the <see cref="T:System.Windows.VisualStateGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dbb5-134">컨트롤 작성자를 추가 하 여 컨트롤에 적용할 수 있습니다 상태를 지정할는 <xref:System.Windows.TemplateVisualStateAttribute> 클래스 정의에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-134">Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="7dbb5-135">같은 상태 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 같은 속해 <xref:System.Windows.VisualStateGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-135">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="7dbb5-136">설정의 <xref:System.Windows.VisualStateGroup.Name%2A> 의 <xref:System.Windows.VisualStateGroup> 의 값에는 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-136">Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7dbb5-137">다음 예제에서는 두 개의 <xref:System.Windows.VisualStateGroup> 명명 된 개체 `CommonStates` 및 `FocusStates`합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-137">The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`.</span></span> <span data-ttu-id="7dbb5-138">컨트롤을 각각 정확히 하나의 상태에서 수 <xref:System.Windows.VisualStateGroup> 항상 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-138">The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times.</span></span> <span data-ttu-id="7dbb5-139">전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-139">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-140">함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-140">Gets the collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</span></span></summary>
        <value><span data-ttu-id="7dbb5-141">함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-141">The collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7dbb5-142">다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-142">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="7dbb5-143">도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-143">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="7dbb5-144"><xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-144">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dbb5-145"><see cref="T:System.Windows.VisualTransition" /> 개체의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-145">Gets the collection of <see cref="T:System.Windows.VisualTransition" /> objects.</span></span></summary>
        <value><span data-ttu-id="7dbb5-146"><see cref="T:System.Windows.VisualTransition" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-146">The collection of <see cref="T:System.Windows.VisualTransition" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dbb5-147"><xref:System.Windows.VisualTransition> 개체 <xref:System.Windows.VisualStateGroup.Transitions%2A> 간의 제어 전환에 정의 된 상태 때 적용 되는 <xref:System.Windows.VisualStateGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-147">The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7dbb5-148">다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-148">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="7dbb5-149">도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-149">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="7dbb5-150"><xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dbb5-150">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>