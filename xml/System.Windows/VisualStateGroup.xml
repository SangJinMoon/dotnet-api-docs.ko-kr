<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37dd82615833a78bcd8b0c8e454422707b57531e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체와 상태를 전환하는 데 사용되는 <see cref="T:System.Windows.VisualTransition" /> 개체를 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.Windows.VisualStateGroup> 의 컬렉션을 포함 <xref:System.Windows.VisualState> 개체입니다. A <xref:System.Windows.VisualState> 의 컬렉션을 포함 <xref:System.Windows.Media.Animation.Storyboard> 컨트롤이 특정 상태에 있을 때 컨트롤의 모양을 변경 하는 방법을 지정 하는 개체입니다. 예를 들어 한 <xref:System.Windows.Controls.Button> 를 누를 때 보다 눌려질 때 약간 다른 모양을 갖도록 수 있습니다. 두 개의 상태는 <xref:System.Windows.Controls.Button> 정의 누르면 해당 (`"Pressed"`) 때 및 (`"Normal"`).  
  
 추가한 <xref:System.Windows.VisualState> 설정 하 여 컨트롤에는 `VisualStateManager.VisualStateGroups` 컨트롤에 연결 합니다. 동일한 서로 함께 사용할 수 없는 상태를 추가할 수 <xref:System.Windows.VisualStateGroup>합니다. 예를 들어는 <xref:System.Windows.Controls.CheckBox> 에 두 개의 <xref:System.Windows.VisualStateGroup> 개체입니다. 상태를 포함 하나 `Normal`, `MouseOver`, `Pressed`, 및 `Disabled`합니다. 다른 상태를 포함 `Checked`, `UnChecked`, 및 `Indeterminate`합니다. <xref:System.Windows.Controls.CheckBox> 상태에 있을 수 `MouseOver` 및 `UnChecked` 같은 시간에 하지만에 있을 수 없습니다는 `MouseOver` 및 `Pressed` 동시에 상태입니다.  
  
 추가할 수는 있지만 <xref:System.Windows.VisualState> 다른 시각적 동작의 다시 정의할 수 있도록 특히 유용한 방법은 개체를 요소는 <xref:System.Windows.Controls.Control>합니다. 사용 하는 사용자 지정 컨트롤을 만드는 경우는 <xref:System.Windows.Controls.ControlTemplate>, 추가 하 여 컨트롤이 있을 수 있는 상태를 지정할 수는 <xref:System.Windows.TemplateVisualStateAttribute> 클래스 정의에 있습니다. 그런 다음 모든 사용자에 게 새 <xref:System.Windows.Controls.ControlTemplate> 컨트롤을 추가할 수에 대 한 <xref:System.Windows.VisualState> 서식 파일에는 개체입니다. <xref:System.Windows.TemplateVisualStateAttribute> 컨트롤 상태를 노출 하려면 Expression Blend 등 디자이너 도구를 사용 합니다. 같은 상태 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 같은 속해 <xref:System.Windows.VisualStateGroup>합니다.  
  
 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.VisualStateGroup> 개체에 <xref:System.Windows.Controls.ControlTemplate>, 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다. 만드는 방법에 대 한 자세한 내용은 사용 하는 컨트롤에 대 한는 <xref:System.Windows.VisualStateManager>, 참조 [모양을 사용자 지정할 수는 컨트롤이 올려진 만드는](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)합니다.  
  
 <xref:System.Windows.VisualStateGroup.Transitions%2A> 속성 포함 <xref:System.Windows.VisualTransition> 제어 전환 사이 된다고 알리는 때 적용 되는 개체에 정의 된는 <xref:System.Windows.VisualStateGroup>합니다.  
  
   
  
## Examples  
 다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다. 도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다. <xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualStateGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 현재 적용되는 <see cref="T:System.Windows.VisualState" />를 가져옵니다.</summary>
        <value>컨트롤에 현재 적용되는 <see cref="T:System.Windows.VisualState" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 다른 상태로 전환된 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트 발생 후 새 상태로 전환 되는 컨트롤 및 <xref:System.Windows.VisualStateGroup.CurrentStateChanging> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 다른 상태로 전환되기 시작할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트는 컨트롤 상태를 전환 시작 될 때 발생 합니다. 경우는 <xref:System.Windows.VisualTransition> 적용 된 상태 변경에이 이벤트 발생 전환을 시작할 때입니다. 경우는 <xref:System.Windows.VisualTransition> 를 적용 하지 않으면이 이벤트가 발생 하기 전에 컨트롤에서 새 상태로 전환 후의 <xref:System.Windows.VisualStateGroup.CurrentStateChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualStateGroup" />의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.VisualStateGroup" />의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 작성자를 추가 하 여 컨트롤에 적용할 수 있습니다 상태를 지정할는 <xref:System.Windows.TemplateVisualStateAttribute> 클래스 정의에 있습니다. 같은 상태 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 같은 속해 <xref:System.Windows.VisualStateGroup>합니다. 설정의 <xref:System.Windows.VisualStateGroup.Name%2A> 의 <xref:System.Windows.VisualStateGroup> 의 값에는 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Windows.VisualStateGroup> 명명 된 개체 `CommonStates` 및 `FocusStates`합니다. 컨트롤을 각각 정확히 하나의 상태에서 수 <xref:System.Windows.VisualStateGroup> 항상 합니다. 전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>함께 사용할 수 없는 <see cref="T:System.Windows.VisualState" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다. 도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다. <xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualTransition" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.VisualTransition" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition> 개체 <xref:System.Windows.VisualStateGroup.Transitions%2A> 간의 제어 전환에 정의 된 상태 때 적용 되는 <xref:System.Windows.VisualStateGroup>합니다.  
  
   
  
## Examples  
 다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다. 도 포함 되어는 <xref:System.Windows.VisualStateGroup> 라는 `CommonStates`, 정의 하는 `MouseOver` 및 `Normal` 상태입니다. <xref:System.Windows.VisualStateGroup> 역시는 <xref:System.Windows.VisualTransition> 에 대 한 0.5 초가 걸리는 있는지를 지정 하는 <xref:System.Windows.Controls.Grid> 위로 마우스 포인터를 이동할 때 녹색에서 빨간색으로 변경 하려면는 <xref:System.Windows.Controls.Button>합니다.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>