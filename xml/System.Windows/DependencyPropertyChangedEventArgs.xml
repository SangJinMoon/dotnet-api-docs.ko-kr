<Type Name="DependencyPropertyChangedEventArgs" FullName="System.Windows.DependencyPropertyChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="840f1b77f0e3528c43e12653ee199d6199ef1109" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DependencyPropertyChangedEventArgs extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Structure DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public value class DependencyPropertyChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8546a-101">다양한 속성 변경 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8546a-101">Provides data for various property changed events.</span>
      </span>
      <span data-ttu-id="8546a-102">일반적으로 이러한 이벤트는 읽기 전용 종속성 속성 값에서 유효한 값이 변경된 내용을 보고합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8546a-102">Typically these events report effective value changes in the value of a read-only dependency property.</span>
      </span>
      <span data-ttu-id="8546a-103">
        <see cref="T:System.Windows.PropertyChangedCallback" /> 구현의 일부로도 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8546a-103">Another usage is as part of a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-104">사용 하는 이벤트는 <xref:System.Windows.DependencyPropertyChangedEventArgs> 이벤트 데이터에 대 한 클래스 및 <xref:System.Windows.DependencyPropertyChangedEventHandler> 메서드 구현에서는 처리기는 일반적으로 명명 패턴을 따를 `Is*Changed`, 일반적으로 구현 됩니다 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 이벤트 없이 <xref:System.Windows.RoutedEvent> 백업 (않습니다 라우트된 이벤트).</span><span class="sxs-lookup"><span data-stu-id="8546a-104">The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events).</span></span> <span data-ttu-id="8546a-105">일부 클래스 메서드 "를 처리 하는" 그렇지 않으면 처리와 같은 속성 변경을 통해 상태 변경을 보고 하는 이벤트 공개 되지 않았을 <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, 또한 사용 하 여는 <xref:System.Windows.DependencyPropertyChangedEventArgs> 이벤트 데이터에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-105">Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.</span></span>  
  
 <span data-ttu-id="8546a-106">에 대 한 시나리오 <xref:System.Windows.PropertyChangedCallback> 속성의 속성 시스템 계산에서 제공 하는 보고서 이전 및 새 값에 대 한 인수를 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-106">The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property.</span></span> <span data-ttu-id="8546a-107">이전 및 새 값을 처리 하는 콜백은 중요 하지 않은 값 변경에 응답 하지 않도록 선택 하는 등의 이러한 값에 따라 특수 한 처리를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-107">A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8546a-108">다음 예제에서는 <xref:System.Windows.DependencyPropertyChangedEventArgs> 클래스의 컨텍스트에서 <xref:System.Windows.PropertyChangedCallback> 도 이벤트를 정의 하는 사용자 지정 클래스의 특정 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-108">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="8546a-109">콜백 하며 이전 결과 속성 시스템에서 새 값으로 전달 되 <xref:System.Windows.DependencyPropertyChangedEventArgs>, 이러한 다양 한 이벤트 인수 클래스도 가져오며 <xref:System.Windows.RoutedPropertyChangedEventArgs%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-109">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="8546a-110">새 인수 다음에 의해 정의 되며 사용자 지정 클래스에 의해 발생 "재정의" 이벤트에 대 한 데이터와 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-110">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyChangedEventArgs(System::Windows::DependencyProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="8546a-111">변경된 종속성 속성의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-111">The identifier for the dependency property that changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="8546a-112">관련 이벤트에서 보고한 변경 또는 상태 변경 이전의 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-112">The value of the property before the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="8546a-113">관련 이벤트에서 보고한 변경 또는 상태 변경 이후의 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-113">The value of the property after the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8546a-114">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-114">Initializes a new instance of the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-115">종속성 속성 변경 내용을 보고 하는 사용자 지정 이벤트의 구현자는 이벤트가 발생할 때 변경의 특성을 사용 하 여 이벤트 데이터를 채우기 위한이 생성자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-115">Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8546a-116">제공된 개체가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 해당하는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-116">Returns whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8546a-117">현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />과 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-117">The object to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8546a-118">제공된 개체가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 해당하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-118">Determines whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8546a-119">제공된 개체가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-119">
              <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-120">이 구현은 내부 속성을 포함 하는 모든 속성의 값 동등성에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-120">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (args As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="8546a-121">현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 비교할 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8546a-122">제공된 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 해당하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-122">Determines whether the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8546a-123">제공된 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-123">
              <see langword="true" /> if the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-124">이 구현은 내부 속성을 포함 하는 모든 속성의 값 동등성에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-124">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8546a-125">이 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />의 해시 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-125">Gets a hash code  for this <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8546a-126">부호 있는 32비트 정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-126">A signed 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public object NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8546a-127">변경 후의 속성 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-127">Gets the value of the property after the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8546a-128">변경 후의 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-128">The property value after the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-129">항상 제공 된 값의 형식을 보고 되는 종속성 속성의 형식으로 캐스팅할 수 있는 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-129">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8546a-130">다음 예제에서는 <xref:System.Windows.DependencyPropertyChangedEventArgs> 클래스의 컨텍스트에서 <xref:System.Windows.PropertyChangedCallback> 도 이벤트를 정의 하는 사용자 지정 클래스의 특정 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-130">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="8546a-131">콜백 하며 이전 결과 속성 시스템에서 새 값으로 전달 되 <xref:System.Windows.DependencyPropertyChangedEventArgs>, 이러한 다양 한 이벤트 인수 클래스도 가져오며 <xref:System.Windows.RoutedPropertyChangedEventArgs%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-131">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="8546a-132">새 인수 다음에 의해 정의 되며 사용자 지정 클래스에 의해 발생 "재정의" 이벤트에 대 한 데이터와 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-132">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public object OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OldValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8546a-133">변경 전의 속성 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-133">Gets the value of the property before the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8546a-134">변경 전의 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-134">The property value before the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-135">항상 제공 된 값의 형식을 보고 되는 종속성 속성의 형식으로 캐스팅할 수 있는 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-135">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8546a-136">다음 예제에서는 <xref:System.Windows.DependencyPropertyChangedEventArgs> 클래스의 컨텍스트에서 <xref:System.Windows.PropertyChangedCallback> 도 이벤트를 정의 하는 사용자 지정 클래스의 특정 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-136">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="8546a-137">콜백 하며 이전 결과 속성 시스템에서 새 값으로 전달 되 <xref:System.Windows.DependencyPropertyChangedEventArgs>, 이러한 다양 한 이벤트 인수 클래스도 가져오며 <xref:System.Windows.RoutedPropertyChangedEventArgs%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-137">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="8546a-138">새 인수 다음에 의해 정의 되며 사용자 지정 클래스에 의해 발생 "재정의" 이벤트에 대 한 데이터와 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-138">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="8546a-139">비교할 첫 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-139">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="8546a-140">비교할 두 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-140">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8546a-141">지정된 두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 개체의 값이 같은지를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-141">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8546a-142">두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 인스턴스가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-142">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-143">구현에서와 같은 논리 사용 <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-143">The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="8546a-144">비교할 첫 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-144">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="8546a-145">비교할 두 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-145">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8546a-146">지정된 두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 개체가 다른지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-146">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8546a-147">두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 인스턴스가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-147">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-148">구현에서는와 같은 논리 부정을 반환 <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-148">The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8546a-149">값이 변경된 종속성 속성의 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-149">Gets the identifier for the dependency property where the value change occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8546a-150">값이 변경된 종속성 속성의 식별자 필드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8546a-150">The identifier field of the dependency property where the value change occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8546a-151">이 속성은 공통 내에서 사용 하는 경우 관련 <xref:System.Windows.PropertyChangedCallback> 여러 속성에 대해 등록 된 및 속성이 변경 되는 콜백을 호출한 명확 하 게 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-151">This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</span></span> <span data-ttu-id="8546a-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> 있기 때문에 일반적으로 1:1 대응 속성 및 이벤트 보고 하는 속성 변경을 일반적으로 이벤트를 발생 시킬와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</span></span> <span data-ttu-id="8546a-153">발생 한 이벤트 속성을 변경 하는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8546a-153">The event that was raised is itself the indication of which property changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>