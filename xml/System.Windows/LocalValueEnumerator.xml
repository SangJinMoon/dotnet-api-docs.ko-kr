<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LocalValueEnumerator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56ec629675688af65632301370015ffad0f9568c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ec629675688af65632301370015ffad0f9568c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.LocalValueEnumerator">
          <source>Provides enumeration support for the local values of any dependency properties that exist on a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>에 있는 종속성 속성의 로컬 값에 대해 열거형을 지원합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>A <bpt id="p1">*</bpt>local value<ept id="p1">*</ept> is a value for a dependency property that was set directly on a dependency property, by calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>, or more typically by using the set accessor of a <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> property wrapper that calls <ph id="ph3">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> internally.</source>
          <target state="translated">A <bpt id="p1">*</bpt>로컬 값<ept id="p1">*</ept> 호출 하 여 종속성 속성에 직접 설정 하는 종속성 속성에 대 한 값은 <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>, 또는의 set 접근자를 사용 하 여 보다 일반적인 방법으로 <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> 입니다 <ph id="ph3">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> 내부적으로 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</source>
          <target state="translated">로컬 값이 아닌 다른 속성 시스템 행렬식에는 스타일을 통해 설정 된 값 또는 종속성 속성의 기본값이 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>종속성 속성 값 우선 순위<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> is returned by the <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> method and implements the <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> 메서드 및 구현 하는 <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>A public <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> constructor does not exist; therefore, you must call <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> to obtain an instance of this class.</source>
          <target state="translated">공용 <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> 생성자가 없습니다; 따라서 호출 해야 <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> 이 클래스의 인스턴스를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>Do not modify local values (by calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph>) while enumerating local values.</source>
          <target state="translated">로컬 값을 수정 하지 마십시오 (호출 하 여 <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph>) 동안 로컬 값을 열거 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> implementations.</source>
          <target state="translated">변경 하거나 선택 취소 열거자가 반환 되는 속성에 따라 속성 값 변경 또는 지우기 작업 무효화 하지 않는 열거자 컬렉션 대부분의 경우 처럼 <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>Also, the enumerator view is a snapshot.</source>
          <target state="translated">또한 열거자 뷰는 스냅숏입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</source>
          <target state="translated">컬렉션에 대 한 변경 스레드로부터 안전 하 게 보장 되지 않으며 잠금이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>Other threads still have free access to the local values from a context other than the enumerator.</source>
          <target state="translated">다른 스레드가 여전히 액세스할 수 있으며 무료 로컬 값으로 열거자 이외의 컨텍스트에서</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</source>
          <target state="translated">이 유형을 사용 클래스에 작업을 설정한 경우이 속성의 값을 로컬 값에서 가져왔는지 여부가 중요 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEnumerator">
          <source>For example, use this type in an <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementation, or where you want to query the metadata on all locally set properties.</source>
          <target state="translated">예를 들어에서이 형식을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> 구현에서 메타 데이터를 쿼리하여 모든 로컬로 하려는 속성 또는 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEnumerator.Count">
          <source>Gets the number of items that are represented in the collection.</source>
          <target state="translated">컬렉션에 표현된 항목 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">컬렉션의 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.Count">
          <source>This property is not a defined member of <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> but is provided as a convenience.</source>
          <target state="translated">이 속성의 정의 된 구성원이 아닙니다. <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> 아니지만 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEnumerator.Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">컬렉션의 현재 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> in the collection.</source>
          <target state="translated">컬렉션의 현재 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.Current">
          <source>This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</source>
          <target state="translated">일반적으로 액세스 가능한이 버전의 속성 생성 시 사용 되는 컬렉션의 스냅숏을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>과 비교할 <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
          <source>Determines whether the provided <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> is equivalent to this <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>가 이 <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>와 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="true" /&gt;</ph>가 현재<ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>와 같으면 <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> 이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
          <source>This implementation supports reference equality only.</source>
          <target state="translated">이 구현은 참조 일치만을 지원합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.GetHashCode">
          <source>Returns a hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.GetHashCode">
          <source>A 32-bit integer hash code.</source>
          <target state="translated">32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">열거자를 컬렉션의 다음 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">열거자가 다음 요소로 이동한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이(가) 반환되고, 컬렉션의 끝을 지난 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이(가) 반환됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>Compares whether two specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> objects are the same.</source>
          <target state="translated">지정된 두 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> 개체가 같은지 비교합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj1" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> is equal to the <ph id="ph4">&lt;paramref name="obj2" /&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj1" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="obj2" /&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph>와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>This implementation supports reference equality only.</source>
          <target state="translated">이 구현은 참조 일치만을 지원합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>Compares two specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> objects to determine whether they are not the same.</source>
          <target state="translated">지정된 두 <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> 개체를 비교하여 다른지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instances are not equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인스턴스가 서로 다르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
          <source>This implementation supports reference equality only.</source>
          <target state="translated">이 구현은 참조 일치만을 지원합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
          <source>For a description of this members, see <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
          <source>The current element in the collection.</source>
          <target state="translated">컬렉션의 현재 요소입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>