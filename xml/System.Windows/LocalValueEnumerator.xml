<Type Name="LocalValueEnumerator" FullName="System.Windows.LocalValueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bdf828bf4c7e352d7c7b4f9768e5d6f618baf253" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39737889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LocalValueEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEnumerator extends System.ValueType implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type LocalValueEnumerator = struct&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="36144-101">
        <see cref="T:System.Windows.DependencyObject" />에 있는 종속성 속성의 로컬 값에 대해 열거형을 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36144-101">Provides enumeration support for the local values of any dependency properties that exist on a <see cref="T:System.Windows.DependencyObject" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-102">A *로컬 값* 호출 하 여 종속성 속성에 직접 설정 하는 종속성 속성에 대 한 값은 <xref:System.Windows.DependencyObject.SetValue%2A>, 또는의 set 접근자를 사용 하 여 일반적으로 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 속성 래퍼를 호출 하는 <xref:System.Windows.DependencyObject.SetValue%2A> 내부적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-102">A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally.</span></span> <span data-ttu-id="36144-103">로컬 값이 아닌 다른 속성 시스템 행렬식의 예로 스타일을 통해 설정 된 값 또는 종속성 속성의 기본값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="36144-103">Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</span></span> <span data-ttu-id="36144-104">자세한 내용은 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="36144-104">For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="36144-105"><xref:System.Windows.LocalValueEnumerator> 에서 반환 되는 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> 메서드를 구현 합니다 <xref:System.Collections.IEnumerator> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="36144-105">A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface.</span></span> <span data-ttu-id="36144-106">공용 <xref:System.Windows.LocalValueEnumerator> 생성자가 없습니다; 호출 해야 하므로 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> 이 클래스의 인스턴스를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-106">A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.</span></span>  
  
 <span data-ttu-id="36144-107">로컬 값을 수정 하지 마십시오 (호출한 <xref:System.Windows.DependencyObject.SetValue%2A> 또는 <xref:System.Windows.DependencyObject.ClearValue%2A>) 로컬 값을 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="36144-107">Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values.</span></span> <span data-ttu-id="36144-108">변경한 경우 명확 열거자가 반환 되는 속성을 기반으로 하는 속성 값을 변경 또는 지우기 작업 무효화 하지 않는 열거자 컬렉션을 대부분의 경우 처럼 <xref:System.Collections.IEnumerator> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-108">If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations.</span></span> <span data-ttu-id="36144-109">또한 열거자 뷰의 스냅숏입니다.</span><span class="sxs-lookup"><span data-stu-id="36144-109">Also, the enumerator view is a snapshot.</span></span> <span data-ttu-id="36144-110">컬렉션에 대 한 변경 스레드로부터 안전 하 게 보장 되지 않으며 잠금이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="36144-110">A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</span></span> <span data-ttu-id="36144-111">다른 스레드가 계속 무료로 액세스할 로컬 값 열거자 이외의 컨텍스트에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-111">Other threads still have free access to the local values from a context other than the enumerator.</span></span>  
  
 <span data-ttu-id="36144-112">이 유형을 사용 클래스에 작업을 해야 하는 경우 로컬 값에서 속성의 값이 반환 되었는지 여부를 알아야 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-112">Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</span></span> <span data-ttu-id="36144-113">예를 들어에서이 형식을 사용 하 여는 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> 구현 또는 속성을 설정 하는 메타 데이터를 쿼리하여 모든 로컬로 하려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-113">For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.LocalValueEnumerator.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36144-114">컬렉션에 표현된 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-114">Gets the number of items that are represented in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36144-115">컬렉션의 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-115">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-116">이 속성은 정의 된 멤버의 <xref:System.Collections.IEnumerator> 아니지만 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="36144-116">This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LocalValueEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As LocalValueEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LocalValueEntry Current { System::Windows::LocalValueEntry get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.LocalValueEntry" Usage="System.Windows.LocalValueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36144-117">컬렉션의 현재 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-117">Gets the current element in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36144-118">컬렉션의 현재 <see cref="T:System.Windows.LocalValueEntry" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-118">The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-119">일반적으로 액세스 가능한이 버전의 속성을 만들 때 수행 되는 컬렉션의 스냅숏으로 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-119">This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="localValueEnumerator.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36144-120">현재 <see cref="T:System.Windows.LocalValueEnumerator" />과 비교할 <see cref="T:System.Windows.LocalValueEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-120">The <see cref="T:System.Windows.LocalValueEnumerator" /> to compare with the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36144-121">제공된 <see cref="T:System.Windows.LocalValueEnumerator" />가 이 <see cref="T:System.Windows.LocalValueEnumerator" />와 같은지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-121">Determines whether the provided <see cref="T:System.Windows.LocalValueEnumerator" /> is equivalent to this <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36144-122">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.LocalValueEnumerator" />와 같으면 <see cref="T:System.Windows.LocalValueEnumerator" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-122">
              <see langword="true" /> if the specified <see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the current <see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-123">이 구현은 참조 일치만을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-123">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="localValueEnumerator.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36144-124">현재 <see cref="T:System.Windows.LocalValueEnumerator" />의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-124">Returns a hash code for the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36144-125">32비트 정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-125">A 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="localValueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36144-126">열거자를 컬렉션의 다음 요소로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-126">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36144-127">열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-127">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.LocalValueEnumerator * System.Windows.LocalValueEnumerator -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="36144-128">비교할 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-128">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="36144-129">비교할 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-129">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36144-130">지정된 두 <see cref="T:System.Windows.LocalValueEnumerator" /> 개체가 같은지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-130">Compares whether two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects are the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36144-131">
            <paramref name="obj1" />
            <see cref="T:System.Windows.LocalValueEnumerator" />가 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-131">
              <see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-132">이 구현은 참조 일치만을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-132">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.LocalValueEnumerator * System.Windows.LocalValueEnumerator -&gt; bool" Usage="System.Windows.LocalValueEnumerator.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="36144-133">비교할 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-133">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="36144-134">비교할 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-134">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36144-135">지정된 두 <see cref="T:System.Windows.LocalValueEnumerator" /> 개체를 비교하여 다른지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-135">Compares two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects to determine whether they are not the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36144-136">인스턴스가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-136">
              <see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-137">이 구현은 참조 일치만을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="36144-137">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="localValueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36144-138">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-138">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36144-139">이 멤버에 대한 설명은 <see cref="P:System.Collections.IEnumerator.Current" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-139">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36144-140">컬렉션의 현재 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36144-140">The current element in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36144-141">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="36144-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36144-142"><xref:System.Windows.LocalValueEnumerator> 인스턴스가 <xref:System.Collections.IEnumerator> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="36144-142">It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.LocalValueEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>