<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e8934-101">상호 운용 시나리오의 일부로 다른 기술의 콘텐츠를 전달하는 추상 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8934-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span>
      </span>
      <span data-ttu-id="e8934-102">또한 이 클래스에서는 이러한 소스는 물론 기본 시각적 계층 표시 아키텍처로 작업하는 데 필요한 정적 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8934-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="e8934-103">이 클래스에서 파생 됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8934-103">to derive from this class.</span>
      </span>
      <span data-ttu-id="e8934-104">연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="e8934-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8934-105">파생 클래스의 생성자에서 호출될 때 기본 클래스 값의 초기화를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-105">Provides initialization for base class values when called by the constructor of a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8934-106">
            <see cref="T:System.Windows.PresentationSource" /> 파생 클래스 인스턴스를 알려진 표시 소스 목록에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-107">이 메서드를 나타내는 추적 해야 하는 파생된 클래스에서 호출 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e8934-108">처리기를 추가할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-108">The element to add the handler to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e8934-109">추가할 처리기 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-109">The hander implementation to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8934-110">
            <see langword="SourceChanged" /> 이벤트에 대한 처리기를 제공된 요소에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-111">이 이벤트에 대 한 구문 블록의 상태, 불구 하 고는 허용 되지 않습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 연결 된 속성의 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="e8934-112">에 대 한 처리기를 추가 하려고 해서는 안 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], 처리기 코드에만 역할을 표시 하는 데 호스트 하는 개체에 배치 해야 하 고 (<xref:System.Windows.PresentationSource> ) 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="e8934-113">이러한 처리기 개체를 초기화 하는 동안에 연결 해야 하 고 Dispose 메서드 또는 해당 개체를 정리에서 명시적으로 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="e8934-114">이 이벤트에 배치할 것을 고려해 야이 처리 하는 일반적인 응용 프로그램 시나리오에서 요소의 상대적으로 적은 수로 인해 일반 라우트된 이벤트의 동작과에서 다른 특별 한 제한 사항이이 값은 라우트된 이벤트를 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="e8934-115">사용할 수 없습니다는 <xref:System.Windows.UIElement> 또는 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> 처리기를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="e8934-116">사용 해야 <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="e8934-117">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` 및 `-=` 이벤트 처리기 구문과 관련된 특정 처리기 구문은 지원 되지 않으며, 이벤트 자체 public로 노출 되지 않으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-117">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="e8934-118">만 <xref:System.Windows.PresentationSource> 유틸리티 메서드를 직접 추가 및 제거는 처리기 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="e8934-119">클래스 처리기 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-119">Class handlers are not allowed.</span></span> <span data-ttu-id="e8934-120">특히, 호출할 수 없습니다 <xref:System.Windows.EventManager.RegisterClassHandler%2A> 클래스 생성자에서이 이벤트에 대 한 식별자는 공용 식별자 필드에 SourceChanged 대 한 존재 하지만 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="e8934-121">처리기 중 하나는 처리 된 것으로 인수를 표시 하려고 하는 경우에 등록 된 모든 처리기는 SourceChanged 이벤트를 받게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e8934-122">호출 하거나이 메서드를 구현 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-122">to call or implement this method.</span>
          </span>
          <span data-ttu-id="e8934-123">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8934-124">
            <see cref="E:System.Windows.PresentationSource.ContentRendered" /> 이벤트에 대한 수신기 목록을 <see langword="null" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8934-125">소스에 제공되는 표시에 대한 표시 대상을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-125">Gets the visual target for the visuals being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8934-126">표시 대상(<see cref="T:System.Windows.Media.CompositionTarget" /> 파생 클래스의 인스턴스)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-127">반환 되는이 속성의 구현이 필요로 <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e8934-128">파생된 클래스는 형식 고유의 가치를 제공 하려면이 속성을 숨겨 선택할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8934-128">Derived classes can choose to shadow this property to offer a type-specific value.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8934-129">콘텐츠가 렌더링되고 상호 작용할 준비가 되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-129">Occurs when content is rendered and ready for user interaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8934-130">소스 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-130">Returns a list of sources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8934-131">약한 참조 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-131">A list of weak references.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-132">와 함께 추가 된 원본 목록의 읽기 전용, 스레드로부터 안전한 복사본을 통해 열거자를 반환된 된 목록 지원 <xref:System.Windows.PresentationSource.AddSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="e8934-133">열거자는 목록에는 작동 하지 않는 약한 참조를 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e8934-134">가져올 원본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-134">to get sources.</span>
          </span>
          <span data-ttu-id="e8934-135">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="e8934-136">소스를 찾을 <see cref="T:System.Windows.DependencyObject" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8934-137">지정된 <see cref="T:System.Windows.DependencyObject" />이 제공되는 소스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8934-138">종속성 개체가 제공되는 <see cref="T:System.Windows.PresentationSource" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e8934-139">호출 하거나이 메서드를 구현 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-139">to call or implement this method.</span>
          </span>
          <span data-ttu-id="e8934-140">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="e8934-141">소스를 찾을 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8934-142">지정된 <see cref="T:System.Windows.Media.Visual" />이 제공되는 소스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8934-143">표시가 제공되는 <see cref="T:System.Windows.PresentationSource" />이거나, <paramref name="visual" />이 삭제되었으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8934-144">
            <paramref name="visual" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-144">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e8934-145">호출 하거나이 메서드를 구현 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-145">to call or implement this method.</span>
          </span>
          <span data-ttu-id="e8934-146">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8934-147">파생 클래스에서 재정의할 때 지정된 소스의 표시 대상을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-147">When overridden in a derived class, returns a visual target for the given source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8934-148">표시를 렌더링하기 위한 대상인 <see cref="T:System.Windows.Media.CompositionTarget" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e8934-149">이 메서드는 값을 선언를 재정의 하는 <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> 읽기 전용 속성은 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8934-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span>
            </span>
            <span data-ttu-id="e8934-150">특정 형식의 인스턴스를 반환 하는 재정의 해야는 <see cref="T:System.Windows.Media.CompositionTarget" /> 상호 운용 시나리오에 사용 되는 클래스 유형을 파생 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8934-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8934-151">파생 클래스에서 재정의된 경우 개체가 삭제되는지 여부를 선언하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8934-152">개체가 삭제되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-152">
              <see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e8934-153">파생된 클래스 구현이 필요한 <see cref="T:System.IDisposable" /> 또는 동일한 동작을 제공 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8934-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8934-154">
            <see cref="T:System.Windows.PresentationSource" /> 파생 클래스 인스턴스를 알려진 표시 소스 목록에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e8934-155">처리기를 제거할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-155">The element to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e8934-156">제거할 처리기 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-156">The handler implementation to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8934-157">지정된 요소에서 <see langword="SourceChanged" /> 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-158">이 이벤트에 배치할 것을 고려해 야이 처리 하는 일반적인 응용 프로그램 시나리오에서 요소의 상대적으로 적은 수로 인해 일반 라우트된 이벤트의 동작과에서 다른 특별 한 제한 사항이이 값은 라우트된 이벤트를 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="e8934-159">사용할 수 없습니다는 <xref:System.Windows.UIElement> 또는 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> 처리기를 제거 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8934-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="e8934-160">사용 해야 <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="e8934-161">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` 및 `-=` 이벤트 처리기 구문과 다른 특정 처리기 구문은 지원 되지 않으며, 이벤트 자체 public로 노출 되지 않으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-161">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="e8934-162">만 <xref:System.Windows.PresentationSource> 유틸리티 메서드를 직접 추가 및 제거는 처리기 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">
          <span data-ttu-id="e8934-163">이전 루트 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <param name="newRoot">
          <span data-ttu-id="e8934-164">새 루트 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8934-165">루트 <see cref="T:System.Windows.Media.Visual" />이 변경된 알림을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8934-166">파생된 클래스 나타내기 위해이 메서드는 루트를 호출 해야 <xref:System.Windows.Media.Visual> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="e8934-167">지정한 루트 시각적 개체에서 발생 하는 두 개의 개체 수명 이벤트를 이러한 루트 표시는 하는 경우에이 메서드를 호출 하면 <xref:System.Windows.FrameworkElement> 파생 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="e8934-168">이전 루트 표시를 발생 시킵니다는 <xref:System.Windows.FrameworkElement.Unloaded> 이벤트 및 해당 요소 트리를 아래쪽으로 각 자식 요소에이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="e8934-169">새 루트 표시를 발생 시킵니다는 <xref:System.Windows.FrameworkElement.Loaded> 이벤트 및 해당 요소 트리를 아래쪽으로 각 자식 요소에이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8934-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8934-170">파생 클래스에서 재정의되는 경우 소스에 제공되는 루트 표시를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8934-171">루트 표시입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-171">The root visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e8934-172">속성을 재정의 하려면 (<see langword="InheritanceDemand" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-172">to override the property (<see langword="InheritanceDemand" />).</span>
          </span>
          <span data-ttu-id="e8934-173">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8934-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>