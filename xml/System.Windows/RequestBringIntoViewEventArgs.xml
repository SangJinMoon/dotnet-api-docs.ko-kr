<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RequestBringIntoViewEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54d1a9c14ed9171240e8980e9efc8a43107b009dc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d1a9c14ed9171240e8980e9efc8a43107b009dc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> routed event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> 라우트된 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> event is raised by elements when you call <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> from that element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> 이벤트는 요소에 의해 호출 하는 경우 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> 해당 요소에서 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Generally, this routed event is not handled by the source.</source>
          <target state="translated">일반적으로이 라우트된 이벤트 원본에 의해 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.</source>
          <target state="translated">스크롤 가능한 영역 또는 클립 콘텐츠 이벤트를 처리 하지 않도록 하는 비슷한 개념을 구현 하지 않는 중간 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <ph id="ph1">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 이벤트는 스크롤 가능한 영역을 구현 하거나 그렇지 않은 경우 지정 하는 부모 요소에 버블 허용할지 <ph id="ph1">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Such parent elements typically provide class handling for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.</source>
          <target state="translated">같은 부모 요소에 대 한 클래스 처리 일반적으로 제공 된 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> 은 필요한 렌더링 논리는 수행 됩니다 클립 영역 내에서 지정된 된 요소에서 요청할 때마다 발생 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Content elements can cause the event to be raised by their content hosts (through calling <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</ph> and raising <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> from the content host).</source>
          <target state="translated">콘텐츠 요소는 이벤트를 콘텐츠 호스트에 의해 발생 될 수 있습니다 (호출을 통해 <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</ph> 및 발생 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> 는 콘텐츠 호스트에서).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Similarly, you can request logical tree elements to be brought into view with the helper method <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">마찬가지로, 논리적 트리 도우미 메서드로 보기에 맞게 수정할 수 요소를 요청할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> implements a related but different method <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 관련 하지만 서로 다른 메서드를 구현 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The generic handler to call in a type-specific way.</source>
          <target state="translated">형식별 방식으로 호출하는 제네릭 처리기입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The target to call the handler on.</source>
          <target state="translated">처리기가 호출되는 대상입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>Invokes event handlers in a type-specific way, which can increase event system efficiency.</source>
          <target state="translated">형식별 방식으로 이벤트 처리기를 호출하여 이벤트 시스템의 효율성을 높입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>This implementation casts the generic handler as a <ph id="ph1">&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;</ph> and then invokes it.</source>
          <target state="translated">이 구현에서는 제네릭 처리기로 캐스팅 한 <ph id="ph1">&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;</ph> 한 다음 호출 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>For details on this implementation pattern and the reasons for it, see <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">이 구현 패턴 및는 이유에 대 한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> 및 <bpt id="p1">[</bpt>라우트된 이벤트 개요<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>Gets the object that should be made visible in response to the event.</source>
          <target state="translated">이벤트에 대한 응답으로 표시할 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>The object that called <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView" /&gt;</ph>를 호출한 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>This object is typically the same object as returned by <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">반환 된이 개체는 일반적으로 동일한 개체 <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>Gets the rectangular region in the object's coordinate space which should be made visible.</source>
          <target state="translated">개체의 좌표 공간에서 표시할 사각형 영역을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>The requested rectangular space.</source>
          <target state="translated">요청된 사각형 공간입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>If the signature of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> that was invoked to raise the event didn't specify a target rectangle, this property may be the <ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> value of the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">하는 경우의 서명을 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> 호출 되어 이벤트를 발생 시킬 대상 사각형을 지정 하지 않은 경우이 속성 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 의 값은 <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> 구조입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>