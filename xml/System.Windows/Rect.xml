<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="389a6c402545d432e5980a30b5d72f7c6b055010" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52377154" /></Metadata><TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="41b7b-101">사각형의 너비, 높이 및 위치를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-101">Describes the width, height, and location of a rectangle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="41b7b-102">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="41b7b-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="41b7b-103">XAML 값</span><span class="sxs-lookup"><span data-stu-id="41b7b-103">XAML Values</span></span>  
 <span data-ttu-id="41b7b-104">*x*</span><span class="sxs-lookup"><span data-stu-id="41b7b-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="41b7b-105">사각형의 왼쪽의 x 좌표 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="41b7b-106">*y*</span><span class="sxs-lookup"><span data-stu-id="41b7b-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="41b7b-107">사각형의 위쪽의 y 좌표 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="41b7b-108">*width*</span><span class="sxs-lookup"><span data-stu-id="41b7b-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="41b7b-109">나타내는 음수가 아닌 값을 <xref:System.Windows.Rect.Width%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="41b7b-110">*height*</span><span class="sxs-lookup"><span data-stu-id="41b7b-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="41b7b-111">나타내는 음수가 아닌 값을 <xref:System.Windows.Rect.Height%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-112">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-113">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-114">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-115"><see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="41b7b-116">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-117">지정된 크기를 가지며 위치가 (0,0)인 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-118">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="41b7b-119">새 사각형에 들어 있어야 하는 첫 번째 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-119">The first point that the new rectangle must contain.</span></span></param>
        <param name="point2"><span data-ttu-id="41b7b-120">새 사각형에 들어 있어야 하는 두 번째 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-120">The second point that the new rectangle must contain.</span></span></param>
        <summary><span data-ttu-id="41b7b-121">지정된 두 지점을 정확히 포함할 수 있는 크기의 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-122">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="41b7b-123">사각형의 왼쪽 위 모퉁이 위치를 지정하는 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-123">A point that specifies the location of the top-left corner of the rectangle.</span></span></param>
        <param name="size"><span data-ttu-id="41b7b-124">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-125">지정된 왼쪽 위 모퉁이 좌표 및 지정된 너비와 높이를 갖는 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-126">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="41b7b-127">사각형에 들어 있어야 하는 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-127">The first point the rectangle must contain.</span></span></param>
        <param name="vector"><span data-ttu-id="41b7b-128">지정된 지점에 대한 오프셋 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-128">The amount to offset the specified point.</span></span> <span data-ttu-id="41b7b-129">결과 사각형은 두 지점을 정확히 포함할 수 있는 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-129">The resulting rectangle will be exactly large enough to contain both points.</span></span></param>
        <summary><span data-ttu-id="41b7b-130">지정된 지점 및 지정된 지점과 지정된 벡터의 합을 정확히 포함할 수 있는 크기의 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-131">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="41b7b-132">사각형의 왼쪽 위 모퉁이의 X 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-132">The x-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="41b7b-133">사각형의 왼쪽 위 모퉁이의 y 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-133">The y-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="41b7b-134">사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-134">The width of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="41b7b-135">사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-135">The height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-136">지정된 x좌표, y좌표, 너비 및 높이를 갖는 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-137">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="41b7b-138"><paramref name="width" />가 음의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-138"><paramref name="width" /> is a negative value.</span></span>  
  
<span data-ttu-id="41b7b-139">또는</span><span class="sxs-lookup"><span data-stu-id="41b7b-139">-or-</span></span> 
 <span data-ttu-id="41b7b-140"><paramref name="height" />가 음의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-140"><paramref name="height" /> is a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-141">사각형 아래쪽의 y축 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-141">Gets the y-axis value of the bottom of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-142">사각형 아래쪽의 y축 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-142">The y-axis value of the bottom of the rectangle.</span></span> <span data-ttu-id="41b7b-143">사각형이 비어 있으면 값이 <see cref="F:System.Double.NegativeInfinity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-144">사각형 아래쪽의 y 축 값의 합계와 같은지를 <xref:System.Windows.Rect.Y%2A> 고 <xref:System.Windows.Rect.Height%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-145">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-146">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-147">사각형의 왼쪽 아래 모퉁이 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-147">Gets the position of the bottom-left corner of the rectangle</span></span></summary>
        <value><span data-ttu-id="41b7b-148">사각형의 왼쪽 아래 모퉁이 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-148">The position of the bottom-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-149">사각형의 왼쪽 아래 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>하십시오 <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="41b7b-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-150">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-151">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-152">사각형의 오른쪽 아래 모퉁이 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-152">Gets the position of the bottom-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-153">사각형의 오른쪽 아래 모퉁이 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-153">The position of the bottom-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-154">사각형의 오른쪽 아래 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>하십시오 <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="41b7b-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-155">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-156">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-157">지정된 지점 또는 사각형이 사각형에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-157">Indicates whether the rectangle contains the specified point or rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="41b7b-158">확인할 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-158">The point to check.</span></span></param>
        <summary><span data-ttu-id="41b7b-159">지정된 지점이 사각형에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-159">Indicates whether the rectangle contains the specified point.</span></span></summary>
        <returns><span data-ttu-id="41b7b-160">지정된 지점이 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-160"><see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-161">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> 사각형에 지정 된 경우를 결정 하는 방법 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-162">확인할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-162">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="41b7b-163">지정된 사각형이 사각형에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-163">Indicates whether the rectangle contains the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-164"><paramref name="rect" /> 전체가 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-164"><see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-165">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> 하나의 사각형만 다른 사각형에 포함 된 경우를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="41b7b-166">확인할 지점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-166">The x-coordinate of the point to check.</span></span></param>
        <param name="y"><span data-ttu-id="41b7b-167">확인할 지점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-167">The y-coordinate of the point to check.</span></span></param>
        <summary><span data-ttu-id="41b7b-168">지정된 x좌표와 y좌표가 사각형에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span></span></summary>
        <returns><span data-ttu-id="41b7b-169">(<paramref name="x" />, <paramref name="y" />)가 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-169"><see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-170">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> 사각형을 지정 된 x 좌표 및 y 좌표에서 지정 된 지점에 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-171">위치와 넓이가 없는 사각형을 나타내는 특수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-171">Gets a special value that represents a rectangle with no position or area.</span></span></summary>
        <value><span data-ttu-id="41b7b-172"><see cref="P:System.Windows.Rect.X" /> 및 <see cref="P:System.Windows.Rect.Y" /> 속성 값이 <see cref="F:System.Double.PositiveInfinity" />이고 <see cref="P:System.Windows.Rect.Width" /> 및 <see cref="P:System.Windows.Rect.Height" /> 속성 값이 <see cref="F:System.Double.NegativeInfinity" />인 빈 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-173">빈 사각형을 포함 하는 산술 계산을 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="41b7b-174">때문에 둘 다 <xref:System.Windows.Rect.X%2A> 고 <xref:System.Windows.Rect.Y%2A> 는 무한 값이 작업은 이러한 작업에 의해 손상 심각 하 게 프로세서.</span><span class="sxs-lookup"><span data-stu-id="41b7b-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="41b7b-175">이러한 값을 포함 하는 비교에는 응용 프로그램 성능 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-176">두 사각형이 서로 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-176">Indicates whether two rectangles are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="41b7b-177">현재 사각형과 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-177">The object to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-178">지정된 개체가 현재 사각형과 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-178">Indicates whether the specified object is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-179"><paramref name="o" />가 <see cref="T:System.Windows.Rect" />이고 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 현재 사각형과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-179"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-180">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="41b7b-181">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41b7b-182">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="41b7b-183">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-184">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Object%29> 사각형을 지정된 된 개체와 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="41b7b-185">현재 사각형과 비교할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-185">The rectangle to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-186">지정된 사각형이 현재 사각형과 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-186">Indicates whether the specified rectangle is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-187">지정된 사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 현재 사각형과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-187"><see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-188">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="41b7b-189">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41b7b-190">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="41b7b-191">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-192">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> 사각형으로 지정 된 사각형와 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="41b7b-193">비교할 첫 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-193">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="41b7b-194">비교할 두 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-194">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="41b7b-195">지정된 사각형이 서로 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-195">Indicates whether the specified rectangles are equal.</span></span></summary>
        <returns><span data-ttu-id="41b7b-196">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-196"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-197">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="41b7b-198">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41b7b-199">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="41b7b-200">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-201">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> 하나의 사각형만 다른 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41b7b-202">사각형에 대한 해시 코드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-202">Creates a hash code for the rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-203">현재 <see cref="T:System.Windows.Rect" /> 구조체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-204">이 메서드를 사용 하 여 해시 코드를 만듭니다는 <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>를 <xref:System.Windows.Rect.Width%2A>, 및 <xref:System.Windows.Rect.Height%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-205">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.GetHashCode%2A> 의 해시 코드를 가져오는 메서드를 <xref:System.Windows.Rect>입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-206">사각형의 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-206">Gets or sets the height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-207">사각형의 높이를 나타내는 양수입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-207">A positive number that represents the height of the rectangle.</span></span> <span data-ttu-id="41b7b-208">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-208">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-209">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형에는 <xref:System.Windows.Rect.Height%2A> 의 <xref:System.Double.NegativeInfinity>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="41b7b-210">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형은 읽기 전용으로 해당 <xref:System.Windows.Rect.Height%2A> 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-211">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-212">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-213">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="41b7b-214"><see cref="P:System.Windows.Rect.Height" />가 음수 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-214"><see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-215"><see cref="P:System.Windows.Rect.Height" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-215"><see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-216">사각형을 지정된 크기만큼 확장하거나 축소한 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="41b7b-217">사각형을 확장할 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-217">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="41b7b-218"><see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Width" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Left" /> 및 <see cref="P:System.Windows.Rect.Right" /> 속성을 늘릴 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="41b7b-219"><see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Height" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Top" /> 및 <see cref="P:System.Windows.Rect.Bottom" /> 속성을 늘릴 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="41b7b-220">지정된 <see cref="T:System.Windows.Size" />를 사용하여 모든 방향으로 사각형을 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-221"><xref:System.Windows.Rect.Width%2A> 씩 증가 됩니다 결과 사각형의 두 번 합니다 <xref:System.Windows.Size.Width%2A> 지정 된 <xref:System.Windows.Size> 팽창 된 사각형의 왼쪽과 오른쪽에 모두 있으므로 구조체.</span><span class="sxs-lookup"><span data-stu-id="41b7b-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="41b7b-222">마찬가지로 합니다 <xref:System.Windows.Rect.Height%2A> 결과 사각형의 씩 증가 됩니다 두 번 합니다 <xref:System.Windows.Size.Height%2A> 지정 된 <xref:System.Windows.Size> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-223">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> 메서드 사각형의 크기를 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-224"><see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="41b7b-225">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="41b7b-226">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-227">사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-228"><xref:System.Windows.Rect.Width%2A> 의 결과 사각형 증가 하거나 사각형의 왼쪽과 오른쪽에 모두 적용 되기 때문에 두 번 지정 된 너비 오프셋으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="41b7b-229">마찬가지로,는 <xref:System.Windows.Rect.Height%2A> 의 결과 사각형 증가 하거나 감소 하 여 지정 된 높이 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="41b7b-230">지정 된 너비와 높이가 현재 다른 사각형을 축소 하는 경우 <xref:System.Windows.Rect.Width%2A> 또는 <xref:System.Windows.Rect.Height%2A>-음수 영역을 사각형을 제공-사각형 되는 <xref:System.Windows.Rect.Empty%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-231">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-232"><see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-233">수정할 <see cref="T:System.Windows.Rect" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="size"><span data-ttu-id="41b7b-234">사각형을 확장할 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-234">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="41b7b-235"><see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Width" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Left" /> 및 <see cref="P:System.Windows.Rect.Right" /> 속성을 늘릴 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="41b7b-236"><see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Height" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Top" /> 및 <see cref="P:System.Windows.Rect.Bottom" /> 속성을 늘릴 크기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="41b7b-237">지정된 사각형을 지정된 <see cref="T:System.Windows.Size" />만큼 모든 방향으로 확장하여 만들어지는 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <returns><span data-ttu-id="41b7b-238">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-238">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-239"><xref:System.Windows.Rect.Width%2A> 씩 증가 됩니다 결과 사각형의 두 번 합니다 <xref:System.Windows.Size.Width%2A> 지정 된 <xref:System.Windows.Size> 팽창 된 사각형의 왼쪽과 오른쪽에 모두 있으므로 구조체.</span><span class="sxs-lookup"><span data-stu-id="41b7b-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="41b7b-240">마찬가지로 합니다 <xref:System.Windows.Rect.Height%2A> 결과 사각형의 씩 증가 됩니다 두 번 합니다 <xref:System.Windows.Size.Height%2A> 지정 된 <xref:System.Windows.Size> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-241">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-242"><paramref name="rect" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-242"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-243">수정할 <see cref="T:System.Windows.Rect" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="width"><span data-ttu-id="41b7b-244">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="41b7b-245">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-246">지정된 사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소한 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span></span></summary>
        <returns><span data-ttu-id="41b7b-247">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-247">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-248"><xref:System.Windows.Rect.Width%2A> 의 결과 사각형 증가 하거나 사각형의 왼쪽과 오른쪽에 모두 적용 되기 때문에 두 번 지정 된 너비 오프셋으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="41b7b-249">마찬가지로,는 <xref:System.Windows.Rect.Height%2A> 의 결과 사각형 증가 하거나 감소 하 여 지정 된 높이 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="41b7b-250">지정 된 너비 또는 높이 한정자 현재 다른 사각형을 축소 하는 경우 <xref:System.Windows.Rect.Width%2A> 또는 <xref:System.Windows.Rect.Height%2A>-음수 영역을 사각형 제공-이 메서드는 반환 <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-251">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-252"><paramref name="rect" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-252"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-253">두 사각형이 겹치는 부분을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-253">Finds the intersection of two rectangles.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-254">현재 사각형과 겹치는 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-254">The rectangle to intersect with the current rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-255">현재 사각형과 지정된 사각형이 겹치는 부분을 찾아 결과를 현재 사각형으로 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-256">교차 부분이 있으면 현재 사각형이 <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-257">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> 두 사각형이 겹치는 부분을 찾고 사각형으로 결과 저장 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="41b7b-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="41b7b-258">비교할 첫 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-258">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="41b7b-259">비교할 두 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-259">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="41b7b-260">지정된 사각형이 겹치는 부분을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-260">Returns the intersection of the specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="41b7b-261">두 사각형이 겹치는 부분이거나, 겹치는 부분이 없으면 <see cref="P:System.Windows.Rect.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-262">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> 메서드 두 사각형이 겹치는 부분을 찾으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-263">확인할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-263">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="41b7b-264">지정된 사각형이 현재 사각형과 겹치는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-264">Indicates whether the specified rectangle intersects with the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-265">지정된 사각형이 현재 사각형과 겹치면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-265"><see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-266">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.IntersectsWith%2A> 두 개의 사각형의 교차 하는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-267">사각형이 <see cref="P:System.Windows.Rect.Empty" /> 사각형인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-268">사각형이 <see cref="P:System.Windows.Rect.Empty" /> 사각형이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-268"><see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-269">면적이 0;에 대 한 테스트를이 속성을 사용 하지 마십시오 면적이 0 인 사각형 반드시는 <xref:System.Windows.Rect.Empty%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="41b7b-270">자세한 내용은 <xref:System.Windows.Rect.Empty%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="41b7b-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-271">사각형 왼쪽의 x축 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-271">Gets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-272">사각형 왼쪽의 x축 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-272">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-273">시작은이 속성은 <xref:System.Windows.Rect.X%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-274">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-275">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-276">사각형의 왼쪽 위 모퉁이 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-276">Gets or sets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-277">사각형의 왼쪽 위 모퉁이 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-277">The position of the top-left corner of the rectangle.</span></span> <span data-ttu-id="41b7b-278">기본값은 (0, 0)입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-278">The default is (0, 0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-279">사각형의 왼쪽 위 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="41b7b-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-280">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-281">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-282">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-283"><see cref="P:System.Windows.Rect.Location" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-283"><see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-284">사각형을 지정된 거리만큼 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-284">Moves a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector"><span data-ttu-id="41b7b-285">사각형을 이동할 가로 및 세로 거리를 지정하는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-286">사각형을 지정된 벡터만큼 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-286">Moves the rectangle by the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-287">빈 사각형에서이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="41b7b-288">호출 하는 <xref:System.Windows.Rect.Offset%2A> 메서드는 변경할 수 있는 경우에 효과가 있습니다 합니다 <xref:System.Windows.Rect.X%2A> 및 <xref:System.Windows.Rect.Y%2A> 속성을 직접.</span><span class="sxs-lookup"><span data-stu-id="41b7b-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="41b7b-289">때문에 <xref:System.Windows.Rect> 값 형식인를 참조 하는 경우는 <xref:System.Windows.Rect> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="41b7b-290">변경 하려는 경우 <xref:System.Windows.Rect.X%2A> 또는 <xref:System.Windows.Rect.Y%2A> 속성 또는 인덱서에서 참조에서 컴파일러 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="41b7b-291">마찬가지로, 호출 <xref:System.Windows.Rect.Offset%2A> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="41b7b-292">값을 변경 하려는 경우는 <xref:System.Windows.Rect> 속성 또는 인덱서를으로 참조 되는, 새 <xref:System.Windows.Rect>, 해당 필드를 수정 하 고 할당을 <xref:System.Windows.Rect> 속성 또는 인덱서를 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-293">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-294"><see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="41b7b-295">사각형을 가로 방향으로 이동할 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-295">The amount to move the rectangle horizontally.</span></span></param>
        <param name="offsetY"><span data-ttu-id="41b7b-296">사각형을 세로 방향으로 이동할 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-296">The amount to move the rectangle vertically.</span></span></param>
        <summary><span data-ttu-id="41b7b-297">사각형을 지정된 가로 및 세로 거리만큼 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-297">Moves the rectangle by the specified horizontal and vertical amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-298">빈 사각형에서이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="41b7b-299">호출 하는 <xref:System.Windows.Rect.Offset%2A> 메서드는 변경할 수 있는 경우에 효과가 있습니다 합니다 <xref:System.Windows.Rect.X%2A> 및 <xref:System.Windows.Rect.Y%2A> 속성을 직접.</span><span class="sxs-lookup"><span data-stu-id="41b7b-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="41b7b-300">때문에 <xref:System.Windows.Rect> 값 형식인를 참조 하는 경우는 <xref:System.Windows.Rect> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="41b7b-301">변경 하려는 경우 <xref:System.Windows.Rect.X%2A> 또는 <xref:System.Windows.Rect.Y%2A> 속성 또는 인덱서에서 참조에서 컴파일러 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="41b7b-302">마찬가지로, 호출 <xref:System.Windows.Rect.Offset%2A> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="41b7b-303">값을 변경 하려는 경우는 <xref:System.Windows.Rect> 속성 또는 인덱서를으로 참조 되는, 새 <xref:System.Windows.Rect>, 해당 필드를 수정 하 고 할당을 <xref:System.Windows.Rect> 속성 또는 인덱서를 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-304">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-305"><see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-306">원래 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-306">The original rectangle.</span></span></param>
        <param name="offsetVector"><span data-ttu-id="41b7b-307">새 사각형의 가로 및 세로 오프셋을 지정하는 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-308">지정된 사각형에서 지정된 벡터만큼 오프셋된 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span></span></summary>
        <returns><span data-ttu-id="41b7b-309">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-309">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-310">빈 사각형을 사용 하 여이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-311">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-312"><paramref name="rect" />가 <see cref="P:System.Windows.Rect.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-312"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-313">이동할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-313">The rectangle to move.</span></span></param>
        <param name="offsetX"><span data-ttu-id="41b7b-314">새 사각형의 가로 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-314">The horizontal offset for the new rectangle.</span></span></param>
        <param name="offsetY"><span data-ttu-id="41b7b-315">새 사각형의 세로 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-315">The vertical offset for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="41b7b-316">지정된 사각형에서 지정된 가로 및 세로 거리만큼 오프셋된 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span></span></summary>
        <returns><span data-ttu-id="41b7b-317">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-317">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-318">빈 사각형을 사용 하 여이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-319">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-320"><paramref name="rect" />가 <see cref="P:System.Windows.Rect.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-320"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="41b7b-321">비교할 첫 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-321">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="41b7b-322">비교할 두 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-322">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="41b7b-323">두 사각형이 정확히 같은지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-323">Compares two rectangles for exact equality.</span></span></summary>
        <returns><span data-ttu-id="41b7b-324">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-324"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-325">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="41b7b-326">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41b7b-327">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="41b7b-328">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="41b7b-329">이 연산자에 대 한 해당 메서드는 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="41b7b-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="41b7b-330">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.op_Equality%2A> 경우 두 사각형이 정확히 같은지 확인 하는 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="41b7b-331">비교할 첫 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-331">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="41b7b-332">비교할 두 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-332">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="41b7b-333">두 사각형이 다른지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-333">Compares two rectangles for inequality.</span></span></summary>
        <returns><span data-ttu-id="41b7b-334">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-334"><see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-335">이 작업은 개체가 같지 않은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="41b7b-336">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41b7b-337">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="41b7b-338">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="41b7b-339">이 연산자에 대 한 해당 메서드는 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="41b7b-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="41b7b-340">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.op_Inequality%2A> 경우 두 사각형이 정확히 같은지 확인 하는 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="41b7b-341">사각형의 문자열 표현이며 "x, y, 너비, 높이" 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-341">The string representation of the rectangle, in the form "x, y, width, height".</span></span></param>
        <summary><span data-ttu-id="41b7b-342">지정된 문자열 표현을 사용하여 새 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-342">Creates a new rectangle from the specified string representation.</span></span></summary>
        <returns><span data-ttu-id="41b7b-343">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-343">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-344">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Parse%2A> 에 사각형의 문자열 표현으로 변환 하는 메서드를 <xref:System.Windows.Rect> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-345">사각형 오른쪽의 x축 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-345">Gets the x-axis value of the right side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-346">사각형 오른쪽의 x축 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-346">The x-axis value of the right side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-347">사각형의 오른쪽의 x 축 값의 합계와 같은지를 <xref:System.Windows.Rect.X%2A> 고 <xref:System.Windows.Rect.Width%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-348">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-349">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="41b7b-350">x 방향 배율 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-350">The scale factor in the x-direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="41b7b-351">y 방향 배율 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-351">The scale factor in the y-direction.</span></span></param>
        <summary><span data-ttu-id="41b7b-352">현재 사각형의 크기에 지정된 x 및 y 값을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-352">Multiplies the size of the current rectangle by the specified x and y values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-353">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Scale%2A> 메서드를 지정 된 양만큼 사각형의 높이 너비를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-354">사각형의 너비와 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-354">Gets or sets the width and height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-355">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-356">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-357">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-358">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-359"><see cref="P:System.Windows.Rect.Size" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-359"><see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="41b7b-360">사용할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-360">The format to use.</span></span>  
  
<span data-ttu-id="41b7b-361">또는</span><span class="sxs-lookup"><span data-stu-id="41b7b-361">-or-</span></span> 
<span data-ttu-id="41b7b-362"><see cref="T:System.IFormattable" /> 구현의 형식에 대해 정의된 기본 형식을 사용하려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="41b7b-363">값의 형식을 지정하는 데 사용할 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-363">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="41b7b-364">또는</span><span class="sxs-lookup"><span data-stu-id="41b7b-364">-or-</span></span> 
<span data-ttu-id="41b7b-365">운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="41b7b-366">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-366">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="41b7b-367">사각형의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-367">A string representation of the rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-368">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="41b7b-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="41b7b-369"><xref:System.Windows.Rect> 인스턴스가 <xref:System.IFormattable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-370">사각형 위쪽의 y축 좌표를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-370">Gets the y-axis position of the top of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-371">사각형 위쪽의 y축 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-371">The y-axis position of the top of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-372">시작은이 속성은 <xref:System.Windows.Rect.Y%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-373">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-374">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-375">사각형의 왼쪽 위 모퉁이 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-375">Gets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-376">사각형의 왼쪽 위 모퉁이 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-376">The position of the top-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-377">사각형의 왼쪽 위 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="41b7b-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-378">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-379">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-380">사각형의 오른쪽 위 모퉁이 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-380">Gets the position of the top-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-381">사각형의 오른쪽 위 모퉁이 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-381">The position of the top-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-382">사각형의 오른쪽 위 모서리의 위치가 같으면 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="41b7b-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-383">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-384">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-385">사각형의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-385">Returns a string representation of the rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41b7b-386">사각형의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-386">Returns a string representation of the rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-387">현재 사각형의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-387">A string representation of the current rectangle.</span></span> <span data-ttu-id="41b7b-388">문자열의 형식은 "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />"입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-389">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.ToString> 의 문자열 표현을 가져오는 방법은 <xref:System.Windows.Rect> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="41b7b-390">문화권별 형식 지정 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-390">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="41b7b-391">지정된 형식 공급자를 사용하여 사각형의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-391">Returns a string representation of the rectangle by using the specified format provider.</span></span></summary>
        <returns><span data-ttu-id="41b7b-392">지정된 형식 공급자에 따라 결정된 현재 사각형의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-392">A string representation of the current rectangle that is determined by the specified format provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-393">지정된 매트릭스를 사용하여 사각형을 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-393">Transforms a rectangle by using the specified matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="41b7b-394">적용할 변환을 지정하는 매트릭스입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-394">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="41b7b-395">지정된 매트릭스를 적용하여 사각형을 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-395">Transforms the rectangle by applying the specified matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-396">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> 변환 하는 메서드를 <xref:System.Windows.Rect> 구조를 사용 하 여를 <xref:System.Windows.Media.Matrix>입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-397">변환의 기준이 되는 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-397">A rectangle that is the basis for the transformation.</span></span></param>
        <param name="matrix"><span data-ttu-id="41b7b-398">적용할 변환을 지정하는 매트릭스입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-398">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="41b7b-399">지정된 사각형에 지정된 매트릭스를 적용하여 만들어진 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="41b7b-400">작업 결과로 만들어지는 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-400">The rectangle that results from the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-401">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> 메서드를 새 <xref:System.Windows.Rect> 구조를 적용 하는 <xref:System.Windows.Media.Matrix> 기존 사각형에.</span><span class="sxs-lookup"><span data-stu-id="41b7b-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41b7b-402">지정된 사각형과 지정된 지점 또는 두 번째 사각형을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="41b7b-403">포함할 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-403">The point to include.</span></span></param>
        <summary><span data-ttu-id="41b7b-404">지정된 지점을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-404">Expands the current rectangle exactly enough to contain the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-405">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Union%28System.Windows.Point%29> 메서드를 포함 하도록 현재 사각형을 정확히 확장을 지정 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-406">포함할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-406">The rectangle to include.</span></span></param>
        <summary><span data-ttu-id="41b7b-407">지정된 사각형을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-408">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> 확장 현재 사각형을 정확히 지정된 된 사각형을 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="41b7b-409">포함할 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-409">The rectangle to include.</span></span></param>
        <param name="point"><span data-ttu-id="41b7b-410">포함할 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-410">The point to include.</span></span></param>
        <summary><span data-ttu-id="41b7b-411">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span></span></summary>
        <returns><span data-ttu-id="41b7b-412">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-413">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> 메서드는 지정 된 사각형을 포함 하는 데 있는 큰 사각형을 만듭니다 및 지정 된 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="41b7b-414">포함할 첫 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-414">The first rectangle to include.</span></span></param>
        <param name="rect2"><span data-ttu-id="41b7b-415">포함할 두 번째 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-415">The second rectangle to include.</span></span></param>
        <summary><span data-ttu-id="41b7b-416">지정된 두 사각형을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="41b7b-417">결과 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-417">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41b7b-418">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> 메서드는 지정 된 두 사각형을 포함 하는 데 있는 큰 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-419">사각형의 너비를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-419">Gets or sets the width of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-420">사각형의 너비를 나타내는 양수입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-420">A positive number that represents the width of the rectangle.</span></span> <span data-ttu-id="41b7b-421">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-421">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-422">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형에는 <xref:System.Windows.Rect.Width%2A> 의 <xref:System.Double.NegativeInfinity>합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="41b7b-423">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형은 읽기 전용으로 해당 <xref:System.Windows.Rect.Width%2A> 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-424">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-425">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-426">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="41b7b-427"><see cref="P:System.Windows.Rect.Width" />가 음수 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="41b7b-427"><see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-428"><see cref="P:System.Windows.Rect.Width" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-428"><see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-429">사각형 왼쪽의 x축 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-429">Gets or sets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-430">사각형 왼쪽의 x축 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-430">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-431">시작은이 속성은 <xref:System.Windows.Rect.Left%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-432">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-433">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-434">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-435"><see cref="P:System.Windows.Rect.X" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-435"><see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b7b-436">사각형 위쪽의 y축 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-436">Gets or sets the y-axis value of the top side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="41b7b-437">사각형 위쪽의 y축 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-437">The y-axis value of the top side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b7b-438">시작은이 속성은 <xref:System.Windows.Rect.Top%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b7b-439">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="41b7b-440">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="41b7b-441">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41b7b-442"><see cref="P:System.Windows.Rect.Y" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="41b7b-442"><see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>