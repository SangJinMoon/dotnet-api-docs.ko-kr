<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Rect.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf7d1387ee03ec7cae439135fbd676179308311f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf7d1387ee03ec7cae439135fbd676179308311f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Describes the width, height, and location of a rectangle.</source>
          <target state="translated">사각형의 너비, 높이 및 위치를 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>x<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The x-coordinate location of the left side of the rectangle.</source>
          <target state="translated">사각형의 왼쪽의 x-좌표 위치입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>y<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The y-coordinate location of the top side of the rectangle.</source>
          <target state="translated">사각형의 위쪽 가장자리의 y-좌표 위치입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>width<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>width<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">나타내는 음수가 아닌 값의 <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 사각형의 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>height<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>height<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">나타내는 음수가 아닌 값의 <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 사각형의 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">사각형의 너비와 높이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is of the specified size and is located at (0,0).</source>
          <target state="translated">지정된 크기를 가지며 위치가 (0,0)인 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 를 사용 하 여 구조는 <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The first point that the new rectangle must contain.</source>
          <target state="translated">새 사각형에 들어 있어야 하는 첫 번째 지점입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The second point that the new rectangle must contain.</source>
          <target state="translated">새 사각형에 들어 있어야 하는 두 번째 지점입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the two specified points.</source>
          <target state="translated">지정된 두 지점을 정확히 포함할 수 있는 크기의 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 를 사용 하 여 구조는 <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A point that specifies the location of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 위치를 지정하는 지점입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">사각형의 너비와 높이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified top-left corner location and the specified width and height.</source>
          <target state="translated">지정된 왼쪽 위 모퉁이 좌표 및 지정된 너비와 높이를 갖는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 를 사용 하 여 구조는 <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The first point the rectangle must contain.</source>
          <target state="translated">사각형에 들어 있어야 하는 지점입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The amount to offset the specified point.</source>
          <target state="translated">지정된 지점에 대한 오프셋 거리입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The resulting rectangle will be exactly large enough to contain both points.</source>
          <target state="translated">결과 사각형은 두 지점을 정확히 포함할 수 있는 크기입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</source>
          <target state="translated">지정된 지점 및 지정된 지점과 지정된 벡터의 합을 정확히 포함할 수 있는 크기의 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 를 사용 하 여 구조는 <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The x-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이의 X 좌표입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The y-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이의 y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The width of the rectangle.</source>
          <target state="translated">사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The height of the rectangle.</source>
          <target state="translated">사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified x-coordinate, y-coordinate, width, and height.</source>
          <target state="translated">지정된 x좌표, y좌표, 너비 및 높이를 갖는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 를 사용 하 여 구조는 <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph>가 음의 값입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph>가 음의 값입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Bottom">
          <source>Gets the y-axis value of the bottom of the rectangle.</source>
          <target state="translated">사각형 아래쪽의 y축 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle.</source>
          <target state="translated">사각형 아래쪽의 y축 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>If the rectangle is empty, the value is <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> .</source>
          <target state="translated">사각형이 비어 있으면 값이 <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties.</source>
          <target state="translated">사각형의 아래쪽의 y 축 값의 합계와 같은지는 <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomLeft">
          <source>Gets the position of the bottom-left corner of the rectangle</source>
          <target state="translated">사각형의 왼쪽 아래 모퉁이 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 아래 모퉁이 위치입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">사각형의 왼쪽 아래 모퉁이의 위치는 같지 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph3"> + </ph> <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomRight">
          <source>Gets the position of the bottom-right corner of the rectangle.</source>
          <target state="translated">사각형의 오른쪽 아래 모퉁이 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle.</source>
          <target state="translated">사각형의 오른쪽 아래 모퉁이 위치입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">사각형의 오른쪽 아래 모서리의 위치는 같지 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph5"> + </ph> <ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether the rectangle contains the specified point or rectangle.</source>
          <target state="translated">지정된 지점 또는 사각형이 사각형에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The point to check.</source>
          <target state="translated">확인할 지점입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>Indicates whether the rectangle contains the specified point.</source>
          <target state="translated">지정된 지점이 사각형에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle contains the specified point; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 사각형에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph> method to determine if the rectangle contains the specified <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph> 사각형에 지정 된 경우를 확인할 수 있는 방법은 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">확인할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>Indicates whether the rectangle contains the specified rectangle.</source>
          <target state="translated">지정된 사각형이 사각형에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> is entirely contained by the rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="rect" /&gt;</ph> 전체가 사각형에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph> method to determine if one rectangle is contained by another rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph> 하나의 사각형만 다른 사각형에 포함 되어 있으면 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The x-coordinate of the point to check.</source>
          <target state="translated">확인할 지점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The y-coordinate of the point to check.</source>
          <target state="translated">확인할 지점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</source>
          <target state="translated">지정된 x좌표와 y좌표가 사각형에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if (<ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>) is contained by the rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">(<ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>)가 사각형에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph> 메서드를 사각형 x 좌표와 y 좌표에 지정한 지점 인스턴스가 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Empty">
          <source>Gets a special value that represents a rectangle with no position or area.</source>
          <target state="translated">위치와 넓이가 없는 사각형을 나타내는 특수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>The empty rectangle, which has <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> property values of <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, and has <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> property values of <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>이고 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> 및 <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> 속성 값이 <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>인 빈 사각형입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Avoid mathematical computations involving empty rectangles.</source>
          <target state="translated">연산 과정을 빈 사각형을 포함 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Because both <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> are infinite values, processor operations are severely impaired by these operations.</source>
          <target state="translated">때문에 둘 다 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 는 무한 값 이며 프로세서 작업 이러한 작업에 손상을 입힐 심각 하 게 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Comparisons involving these values will not affect application performance.</source>
          <target state="translated">이러한 값을 포함 하는 비교에는 응용 프로그램 성능 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether two rectangles are equal.</source>
          <target state="translated">두 사각형이 서로 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The object to compare to the current rectangle.</source>
          <target state="translated">현재 사각형과 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Indicates whether the specified object is equal to the current rectangle.</source>
          <target state="translated">지정된 개체가 현재 사각형과 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> and has the same <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="o" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>이고 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 및 <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 값이 현재 사각형과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>This operation tests for object equality.</source>
          <target state="translated">이 작업 개체 같은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">이 비교의 두 인스턴스 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 같은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">설명 하는 사각형의 위치와 크기 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값에 연산을 수행 하는 경우에 정밀도 떨어질 수, 논리적으로 동일한 두 개의 값 비교 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph> method to determine if a rectangle is equal to a specified object.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph> 사각형 지정된 된 개체와 같은지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The rectangle to compare to the current rectangle.</source>
          <target state="translated">현재 사각형과 비교할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle is equal to the current rectangle.</source>
          <target state="translated">지정된 사각형이 현재 사각형과 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle has the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 사각형의 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 값이 현재 사각형과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">이 작업 개체 같은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">이 비교의 두 인스턴스 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 같은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">설명 하는 사각형의 위치와 크기 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값에 연산을 수행 하는 경우에 정밀도 떨어질 수, 논리적으로 동일한 두 개의 값 비교 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph> method to determine if a rectangle is equal to a specified rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph> 사각형 같은지 여부 지정된 된 사각형을 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">비교할 첫 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">비교할 두 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Indicates whether the specified rectangles are equal.</source>
          <target state="translated">지정된 사각형이 서로 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사각형의 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 값이 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">이 작업 개체 같은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">이 비교의 두 인스턴스 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 같은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">설명 하는 사각형의 위치와 크기 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값에 연산을 수행 하는 경우에 정밀도 떨어질 수, 논리적으로 동일한 두 개의 값 비교 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to determine if one rectangle is equal to another.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> 하나의 사각형만 다른 같은지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>Creates a hash code for the rectangle.</source>
          <target state="translated">사각형에 대한 해시 코드를 만듭니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>This method creates a hash code by using the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> property values.</source>
          <target state="translated">이 메서드를 사용 하 여 해시 코드를 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph> method to get the hash code of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph> 의 해시 코드를 가져오는 메서드를 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source>Gets or sets the height of the rectangle.</source>
          <target state="translated">사각형의 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>A positive number that represents the height of the rectangle.</source>
          <target state="translated">사각형의 높이를 나타내는 양수입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형에는 <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형 읽기 전용입니다; 해당 <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>가 음수 값으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</source>
          <target state="translated">사각형을 지정된 크기만큼 확장하거나 축소한 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">사각형을 확장할 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체의 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> 속성은 사각형의 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> 속성을 늘릴 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체의 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> 속성은 사각형의 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> 속성을 늘릴 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Expands the rectangle by using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>를 사용하여 모든 방향으로 사각형을 확장합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 결과 사각형의 만큼 증가 두 번는 <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> 지정 된 <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> 사각형의 왼쪽과 오른쪽에 모두 확장은 때문에 구성 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 결과 사각형의 만큼 증가 두 번의 <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> 는 지정 된 <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph> method to increase the size of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph> 메서드 사각형의 크기를 늘리세요.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 대해 이 메서드를 호출한 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</source>
          <target state="translated">사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 의 결과 사각형 늘어나거나 두 번 지정 된 너비 오프셋 하 여 사각형의 왼쪽과 오른쪽에 둘 다에 적용 되기 때문입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 의 결과 사각형 부하가 증가 되거나 지정 된 높이 두 배 감소 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>If the specified width or height shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—the rectangle becomes the <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">현재만 지정 된 너비 또는 높이 축소 사각형 <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>-사각형 축소 제공-사각형 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph> 메서드 사각형의 크기를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 대해 이 메서드를 호출한 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">수정할 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">사각형을 확장할 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체의 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> 속성은 사각형의 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> 속성을 늘릴 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체의 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> 속성은 사각형의 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> 속성을 늘릴 크기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Returns the rectangle that results from expanding the specified rectangle by the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">지정된 사각형을 지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>만큼 모든 방향으로 확장하여 만들어지는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 결과 사각형의 만큼 증가 두 번는 <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> 지정 된 <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> 사각형의 왼쪽과 오른쪽에 모두 확장은 때문에 구성 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 결과 사각형의 만큼 증가 두 번의 <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> 는 지정 된 <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph> 메서드 사각형의 크기를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">수정할 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</source>
          <target state="translated">지정된 사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소한 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 의 결과 사각형 늘어나거나 두 번 지정 된 너비 오프셋 하 여 사각형의 왼쪽과 오른쪽에 둘 다에 적용 되기 때문입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> 의 결과 사각형 부하가 증가 되거나 지정 된 높이 두 배 감소 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>If the specified width or height modifiers shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—this method returns <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정된 된 너비 또는 높이 한정자 현재 이상 사각형을 축소 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>-사각형 축소 부여-이 메서드가 반환 <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> 메서드 사각형의 크기를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Finds the intersection of two rectangles.</source>
          <target state="translated">두 사각형이 겹치는 부분을 찾습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The rectangle to intersect with the current rectangle.</source>
          <target state="translated">현재 사각형과 겹치는 사각형입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</source>
          <target state="translated">현재 사각형과 지정된 사각형이 겹치는 부분을 찾아 결과를 현재 사각형으로 저장합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>If no intersection exists, the current rectangle becomes <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">겹치는 부분이 없으면 현재 사각형이 <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles and store the result as a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph> 메서드를 두 개의 사각형의 교차 부분을 찾아서 직사각형으로 결과 저장 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">비교할 첫 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">비교할 두 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>Returns the intersection of the specified rectangles.</source>
          <target state="translated">지정된 사각형이 겹치는 부분을 반환합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The intersection of the two rectangles, or <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> if no intersection exists.</source>
          <target state="translated">두 사각형이 겹치는 부분이거나, 겹치는 부분이 없으면 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> 메서드를 두 개의 사각형의 교집합을 찾습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">확인할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle intersects with the current rectangle.</source>
          <target state="translated">지정된 사각형이 현재 사각형과 겹치는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle intersects with the current rectangle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 사각형이 현재 사각형과 겹치면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph> method to determine if two rectangles intersect.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph> 메서드를 두 개의 사각형의 교차 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.IsEmpty">
          <source>Gets a value that indicates whether the rectangle is the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">사각형이 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle is the <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사각형이 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">0 개 영역;에 대 한 테스트 하려면이 속성을 사용 하지 마십시오 0 사각형 반드시 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Left">
          <source>Gets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">사각형 왼쪽의 x축 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">사각형 왼쪽의 x축 값입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> property.</source>
          <target state="translated">이 속성을 가져오는 하는 것은 가져오는 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source>Gets or sets the position of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 위치입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The default is (0, 0).</source>
          <target state="translated">기본값은 (0, 0)입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이의 위치는 같지 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Moves a rectangle by the specified amount.</source>
          <target state="translated">사각형을 지정된 거리만큼 이동합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical amounts to move the rectangle.</source>
          <target state="translated">사각형을 이동할 가로 및 세로 거리를 지정하는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Moves the rectangle by the specified vector.</source>
          <target state="translated">사각형을 지정된 벡터만큼 이동합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">빈 사각형에이 메서드를 호출 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">호출 하 여 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> 메서드만 영향을 미칠 변경할 수 있는 경우는 <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 속성을 직접 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 값 형식인를 참조 하는 경우는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻게 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">변경 하려는 경우 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 속성 또는 인덱서 참조에서 컴파일러 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">마찬가지로, 호출 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">값을 변경 하려는 경우는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 속성 또는 인덱서 참조 되는, 새 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, 해당 필드를 수정 하 고 그런 다음 할당할는 <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> 속성 또는 인덱서를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph> 메서드 사각형의 위치를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 대해 이 메서드를 호출한 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle horizontally.</source>
          <target state="translated">사각형을 가로 방향으로 이동할 거리입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle vertically.</source>
          <target state="translated">사각형을 세로 방향으로 이동할 거리입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Moves the rectangle by the specified horizontal and vertical amounts.</source>
          <target state="translated">사각형을 지정된 가로 및 세로 거리만큼 이동합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">빈 사각형에이 메서드를 호출 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">호출 하 여 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> 메서드만 영향을 미칠 변경할 수 있는 경우는 <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 속성을 직접 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 값 형식인를 참조 하는 경우는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻게 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">변경 하려는 경우 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 속성 또는 인덱서 참조에서 컴파일러 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">마찬가지로, 호출 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">값을 변경 하려는 경우는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 속성 또는 인덱서 참조 되는, 새 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, 해당 필드를 수정 하 고 그런 다음 할당할는 <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> 속성 또는 인덱서를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph> 메서드 사각형의 위치를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 대해 이 메서드를 호출한 경우</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The original rectangle.</source>
          <target state="translated">원래 사각형입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical offsets for the new rectangle.</source>
          <target state="translated">새 사각형의 가로 및 세로 오프셋을 지정하는 벡터입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified vector.</source>
          <target state="translated">지정된 사각형에서 지정된 벡터만큼 오프셋된 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">빈 사각형이이 메서드를 호출할 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph> 메서드 사각형의 위치를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The rectangle to move.</source>
          <target state="translated">이동할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The horizontal offset for the new rectangle.</source>
          <target state="translated">새 사각형의 가로 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The vertical offset for the new rectangle.</source>
          <target state="translated">새 사각형의 세로 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</source>
          <target state="translated">지정된 사각형에서 지정된 가로 및 세로 거리만큼 오프셋된 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">빈 사각형이이 메서드를 호출할 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> 메서드 사각형의 위치를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">비교할 첫 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">비교할 두 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for exact equality.</source>
          <target state="translated">두 사각형이 정확히 같은지 비교합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사각형의 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 값이 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">이 작업 개체 같은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">이 비교의 두 인스턴스 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 같은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">설명 하는 사각형의 위치와 크기 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값에 연산을 수행 하는 경우에 정밀도 떨어질 수, 논리적으로 동일한 두 개의 값 비교 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph> operator to determine if two rectangles are exactly equal.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph> 경우 두 개의 사각형 정확히 같은지 확인 하는 연산자입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">비교할 첫 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">비교할 두 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for inequality.</source>
          <target state="translated">두 사각형이 다른지 비교합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles do not have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사각형의 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 값이 서로 같지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object inequality.</source>
          <target state="translated">이 작업은 개체가 같지 않은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">이 비교의 두 인스턴스 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> 같은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">설명 하는 사각형의 위치와 크기 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값에 연산을 수행 하는 경우에 정밀도 떨어질 수, 논리적으로 동일한 두 개의 값 비교 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph> operator to determine if two rectangles are not exactly equal.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph> 경우 두 개의 사각형 정확히 같은지 확인 하는 연산자입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The string representation of the rectangle, in the form "x, y, width, height".</source>
          <target state="translated">사각형의 문자열 표현이며 "x, y, 너비, 높이" 형식입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>Creates a new rectangle from the specified string representation.</source>
          <target state="translated">지정된 문자열 표현을 사용하여 새 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph> method to convert a string representation of a rectangle into a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph> 에 사각형의 문자열 표현으로 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Right">
          <source>Gets the x-axis value of the right side of the rectangle.</source>
          <target state="translated">사각형 오른쪽의 x축 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle.</source>
          <target state="translated">사각형 오른쪽의 x축 값입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> properties.</source>
          <target state="translated">사각형의 오른쪽의 x 축 값의 합계와 같은지는 <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the x-direction.</source>
          <target state="translated">x 방향 배율 인수입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the y-direction.</source>
          <target state="translated">y 방향 배율 인수입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>Multiplies the size of the current rectangle by the specified x and y values.</source>
          <target state="translated">현재 사각형의 크기에 지정된 x 및 y 값을 곱합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph> method to multiply the width and height of a rectangle by the specified amount.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph> 메서드를 지정 된 크기는 사각형의 높이 너비를 곱합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source>Gets or sets the width and height of the rectangle.</source>
          <target state="translated">사각형의 너비와 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">사각형의 너비와 높이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The format to use.</source>
          <target state="translated">사용할 형식입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> 구현의 형식에 정의된 기본 형식을 사용하기 위한 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The provider to use to format the value.</source>
          <target state="translated">값의 형식을 지정하는 데 사용할 공급자입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated">운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>Formats the value of the current instance using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string representation of the rectangle.</source>
          <target state="translated">사각형의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Top">
          <source>Gets the y-axis position of the top of the rectangle.</source>
          <target state="translated">사각형 위쪽의 y축 좌표를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The y-axis position of the top of the rectangle.</source>
          <target state="translated">사각형 위쪽의 y축 좌표입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> property.</source>
          <target state="translated">이 속성을 가져오는 하는 것은 가져오는 <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopLeft">
          <source>Gets the position of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 위치입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이의 위치는 같지 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopRight">
          <source>Gets the position of the top-right corner of the rectangle.</source>
          <target state="translated">사각형의 오른쪽 위 모퉁이 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle.</source>
          <target state="translated">사각형의 오른쪽 위 모퉁이 위치입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">사각형의 오른쪽 위 모퉁이의 위치는 같지 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">사각형의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">사각형의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>A string representation of the current rectangle.</source>
          <target state="translated">현재 사각형의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>The string has the following form: "<ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>".</source>
          <target state="translated">문자열의 형식은 "<ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.ToString">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph> method to get a string representation of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph> 의 문자열 표현을 가져올 메서드를 한 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Culture-specific formatting information.</source>
          <target state="translated">문화권별 형식 지정 정보입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Returns a string representation of the rectangle by using the specified format provider.</source>
          <target state="translated">지정된 형식 공급자를 사용하여 사각형의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>A string representation of the current rectangle that is determined by the specified format provider.</source>
          <target state="translated">지정된 형식 공급자에 따라 결정된 현재 사각형의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Transforms a rectangle by using the specified matrix.</source>
          <target state="translated">지정된 매트릭스를 사용하여 사각형을 변환합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">적용할 변환을 지정하는 매트릭스입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>Transforms the rectangle by applying the specified matrix.</source>
          <target state="translated">지정된 매트릭스를 적용하여 사각형을 변환합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph> method to transform a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure by using a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 구조를 사용 하 여는 <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A rectangle that is the basis for the transformation.</source>
          <target state="translated">변환의 기준이 되는 사각형입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">적용할 변환을 지정하는 매트릭스입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>Returns the rectangle that results from applying the specified matrix to the specified rectangle.</source>
          <target state="translated">지정된 사각형에 지정된 매트릭스를 적용하여 만들어진 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The rectangle that results from the operation.</source>
          <target state="translated">작업 결과로 만들어지는 사각형입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure that results from applying a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph> to an existing rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph> 만드는 새 메서드를 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 구조를 적용 하는 <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph> 기존 사각형에 있습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</source>
          <target state="translated">지정된 사각형과 지정된 지점 또는 두 번째 사각형을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">포함할 지점입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>Expands the current rectangle exactly enough to contain the specified point.</source>
          <target state="translated">지정된 지점을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph> method to expand the current rectangle exactly enough to contain a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph> 현재 사각형을 포함할 수 있을 만큼 정확 하 게 확장 하는 메서드는 지정 된 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The rectangle to include.</source>
          <target state="translated">포함할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>Expands the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">지정된 사각형을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph> method to expand the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph> 현재 사각형 정확히 크기로 확장 하는 지정 된 사각형을 포함 하는 메서드.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The rectangle to include.</source>
          <target state="translated">포함할 사각형입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">포함할 지점입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</source>
          <target state="translated">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</source>
          <target state="translated">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph> 지정 된 사각형을 포함할 수 있는 큰 사각형을 만드는 방법 및 주어진 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to include.</source>
          <target state="translated">포함할 첫 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to include.</source>
          <target state="translated">포함할 두 번째 사각형입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>Creates a rectangle that is exactly large enough to contain the two specified rectangles.</source>
          <target state="translated">지정된 두 사각형을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The resulting rectangle.</source>
          <target state="translated">결과 사각형입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to create a rectangle that is exactly large enough to contain two given rectangles.</source>
          <target state="translated">다음 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> 메서드를 두 개의 지정 된 사각형을 포함할 수 있는 큰 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source>Gets or sets the width of the rectangle.</source>
          <target state="translated">사각형의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>A positive number that represents the width of the rectangle.</source>
          <target state="translated">사각형의 너비를 나타내는 양수입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형에는 <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 사각형 읽기 전용입니다; 해당 <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>가 음수 값으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source>Gets or sets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">사각형 왼쪽의 x축 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">사각형 왼쪽의 x축 값입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> property.</source>
          <target state="translated">이 속성을 가져오는 하는 것은 가져오는 <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source>Gets or sets the y-axis value of the top side of the rectangle.</source>
          <target state="translated">사각형 위쪽의 y축 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The y-axis value of the top side of the rectangle.</source>
          <target state="translated">사각형 위쪽의 y축 값입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> property.</source>
          <target state="translated">이 속성을 가져오는 하는 것은 가져오는 <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾고에 정보를 렌더링 하는 방법도 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 사각형 아래의 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>는 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 사각형에 설정됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>