<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87c056618a8f3bab5eb7ae058e6ab8511f4e023e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51284-101">Describes the width, height, and location of a rectangle.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51284-101">Describes the width, height, and location of a rectangle.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="51284-102">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="51284-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51284-103">XAML 값</span><span class="sxs-lookup"><span data-stu-id="51284-103">XAML Values</span></span>  
 <span data-ttu-id="51284-104">*x*</span><span class="sxs-lookup"><span data-stu-id="51284-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="51284-105">사각형의 왼쪽의 x 좌표 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="51284-106">*y*</span><span class="sxs-lookup"><span data-stu-id="51284-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="51284-107">사각형의 위쪽의 y 좌표 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="51284-108">*width*</span><span class="sxs-lookup"><span data-stu-id="51284-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="51284-109">나타내는 음수가 아닌 값을 <xref:System.Windows.Rect.Width%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="51284-110">*height*</span><span class="sxs-lookup"><span data-stu-id="51284-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="51284-111">나타내는 음수가 아닌 값을 <xref:System.Windows.Rect.Height%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-112">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-113">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-114">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="51284-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-118">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="51284-119">The first point that the new rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-119">The first point that the new rectangle must contain.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="51284-120">The second point that the new rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-120">The second point that the new rectangle must contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-122">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="51284-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="51284-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-126">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="51284-127">The first point the rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-127">The first point the rectangle must contain.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="51284-128">The amount to offset the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-128">The amount to offset the specified point.</span>
          </span>
          <span data-ttu-id="51284-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-131">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="51284-132">The x-coordinate of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-132">The x-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="51284-133">The y-coordinate of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-133">The y-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="51284-134">The width of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-134">The width of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="51284-135">The height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-135">The height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-137">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.Windows.Rect> 를 사용 하 여 구조를 <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51284-138">
            <paramref name="width" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-138">
              <paramref name="width" /> is a negative value.</span>
          </span>
          <span data-ttu-id="51284-139">-or-  <paramref name="height" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-139">-or-  <paramref name="height" /> is a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-140">Gets the y-axis value of the bottom of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-140">Gets the y-axis value of the bottom of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-141">사각형 아래쪽의 y 축 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-141">The y-axis value of the bottom of the rectangle.</span>
          </span>
          <span data-ttu-id="51284-142">값이 빈 사각형의 면 <see cref="F:System.Double.NegativeInfinity" /> 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-142">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-143">사각형 아래쪽의 y 축 값의 합계와 같은지를 <xref:System.Windows.Rect.Y%2A> 고 <xref:System.Windows.Rect.Height%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-143">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-144">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-144">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-145">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-145">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-146">Gets the position of the bottom-left corner of the rectangle</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-146">Gets the position of the bottom-left corner of the rectangle</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-147">사각형의 왼쪽 아래 모퉁이의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-147">The position of the bottom-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-148">사각형의 왼쪽 아래 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>하십시오 <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="51284-148">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-149">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-149">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-150">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-150">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-151">Gets the position of the bottom-right corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-151">Gets the position of the bottom-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-152">사각형의 오른쪽 아래 모퉁이의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-152">The position of the bottom-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-153">사각형의 오른쪽 아래 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>하십시오 <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="51284-153">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-154">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-154">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-155">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-155">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-156">Indicates whether the rectangle contains the specified point or rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-156">Indicates whether the rectangle contains the specified point or rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="51284-157">The point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-157">The point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-158">Indicates whether the rectangle contains the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-158">Indicates whether the rectangle contains the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-159">
            <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-159">
              <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-160">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> 사각형에 지정 된 경우를 결정 하는 방법 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-160">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-161">The rectangle to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-161">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-162">Indicates whether the rectangle contains the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-162">Indicates whether the rectangle contains the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-163">
            <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-163">
              <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-164">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> 하나의 사각형만 다른 사각형에 포함 된 경우를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-164">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="51284-165">The x-coordinate of the point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-165">The x-coordinate of the point to check.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="51284-166">The y-coordinate of the point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-166">The y-coordinate of the point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-167">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-167">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-168">
            <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-168">
              <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-169">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> 사각형을 지정 된 x 좌표 및 y 좌표에서 지정 된 지점에 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-169">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-170">Gets a special value that represents a rectangle with no position or area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-170">Gets a special value that represents a rectangle with no position or area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-171">비어 있는 사각형 <see cref="P:System.Windows.Rect.X" /> 및 <see cref="P:System.Windows.Rect.Y" /> 속성 값이 <see cref="F:System.Double.PositiveInfinity" />, 있고 <see cref="P:System.Windows.Rect.Width" /> 및 <see cref="P:System.Windows.Rect.Height" /> 의 속성 값 <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-171">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-172">빈 사각형을 포함 하는 산술 계산을 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-172">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="51284-173">때문에 둘 다 <xref:System.Windows.Rect.X%2A> 고 <xref:System.Windows.Rect.Y%2A> 는 무한 값이 작업은 이러한 작업에 의해 손상 심각 하 게 프로세서.</span><span class="sxs-lookup"><span data-stu-id="51284-173">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="51284-174">이러한 값을 포함 하는 비교에는 응용 프로그램 성능 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-174">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-175">Indicates whether two rectangles are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-175">Indicates whether two rectangles are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="51284-176">The object to compare to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-176">The object to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-177">Indicates whether the specified object is equal to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-177">Indicates whether the specified object is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-178">
            <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-178">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-179">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-179">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="51284-180">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51284-180">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51284-181">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-181">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="51284-182">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-182">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-183">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Object%29> 사각형을 지정된 된 개체와 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-183">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="51284-184">The rectangle to compare to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-184">The rectangle to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-185">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-185">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-186">
            <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-186">
              <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-187">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-187">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="51284-188">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51284-188">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51284-189">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-189">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="51284-190">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-190">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-191">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> 사각형으로 지정 된 사각형와 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-191">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="51284-192">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-192">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="51284-193">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-193">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-194">Indicates whether the specified rectangles are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-194">Indicates whether the specified rectangles are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-195">
            <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-195">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-196">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-196">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="51284-197">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51284-197">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51284-198">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-198">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="51284-199">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-199">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-200">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> 하나의 사각형만 다른 같은지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-200">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51284-201">Creates a hash code for the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-201">Creates a hash code for the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-202">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-202">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-203">이 메서드를 사용 하 여 해시 코드를 만듭니다는 <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>를 <xref:System.Windows.Rect.Width%2A>, 및 <xref:System.Windows.Rect.Height%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-203">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-204">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.GetHashCode%2A> 의 해시 코드를 가져오는 메서드를 <xref:System.Windows.Rect>입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-204">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-205">Gets or sets the height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-205">Gets or sets the height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-206">사각형의 높이 나타내는 양수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-206">A positive number that represents the height of the rectangle.</span>
          </span>
          <span data-ttu-id="51284-207">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-207">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-208">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형에는 <xref:System.Windows.Rect.Height%2A> 의 <xref:System.Double.NegativeInfinity>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-208">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="51284-209">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형은 읽기 전용으로 해당 <xref:System.Windows.Rect.Height%2A> 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-209">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-210">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-210">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-211">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-211">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-212">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-212">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51284-213">
            <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-213">
              <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-214">
            <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-214">
              <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-215">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-215">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="51284-216">Specifies the amount to expand the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-216">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="51284-217">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-217">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="51284-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-219">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-219">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-220"><xref:System.Windows.Rect.Width%2A> 씩 증가 됩니다 결과 사각형의 두 번 합니다 <xref:System.Windows.Size.Width%2A> 지정 된 <xref:System.Windows.Size> 팽창 된 사각형의 왼쪽과 오른쪽에 모두 있으므로 구조체.</span><span class="sxs-lookup"><span data-stu-id="51284-220">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="51284-221">마찬가지로 합니다 <xref:System.Windows.Rect.Height%2A> 결과 사각형의 씩 증가 됩니다 두 번 합니다 <xref:System.Windows.Size.Height%2A> 지정 된 <xref:System.Windows.Size> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-221">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-222">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> 메서드 사각형의 크기를 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="51284-222">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-223">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-223">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="51284-224">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-224">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="51284-225">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-225">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-226">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-226">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-227"><xref:System.Windows.Rect.Width%2A> 의 결과 사각형 증가 하거나 사각형의 왼쪽과 오른쪽에 모두 적용 되기 때문에 두 번 지정 된 너비 오프셋으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-227">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="51284-228">마찬가지로,는 <xref:System.Windows.Rect.Height%2A> 의 결과 사각형 증가 하거나 감소 하 여 지정 된 높이 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-228">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="51284-229">지정 된 너비와 높이가 현재 다른 사각형을 축소 하는 경우 <xref:System.Windows.Rect.Width%2A> 또는 <xref:System.Windows.Rect.Height%2A>-음수 영역을 사각형을 제공-사각형 되는 <xref:System.Windows.Rect.Empty%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-229">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-230">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-230">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-231">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-231">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-232">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-232">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="51284-233">Specifies the amount to expand the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-233">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="51284-234">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-234">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="51284-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-236">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-236">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-237">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-237">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-238"><xref:System.Windows.Rect.Width%2A> 씩 증가 됩니다 결과 사각형의 두 번 합니다 <xref:System.Windows.Size.Width%2A> 지정 된 <xref:System.Windows.Size> 팽창 된 사각형의 왼쪽과 오른쪽에 모두 있으므로 구조체.</span><span class="sxs-lookup"><span data-stu-id="51284-238">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="51284-239">마찬가지로 합니다 <xref:System.Windows.Rect.Height%2A> 결과 사각형의 씩 증가 됩니다 두 번 합니다 <xref:System.Windows.Size.Height%2A> 지정 된 <xref:System.Windows.Size> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-239">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-240">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-240">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-241">
            <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-241">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-242">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-242">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="51284-243">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-243">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="51284-244">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-244">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-245">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-245">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-246">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-246">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-247"><xref:System.Windows.Rect.Width%2A> 의 결과 사각형 증가 하거나 사각형의 왼쪽과 오른쪽에 모두 적용 되기 때문에 두 번 지정 된 너비 오프셋으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-247">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="51284-248">마찬가지로,는 <xref:System.Windows.Rect.Height%2A> 의 결과 사각형 증가 하거나 감소 하 여 지정 된 높이 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-248">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="51284-249">지정 된 너비 또는 높이 한정자 현재 다른 사각형을 축소 하는 경우 <xref:System.Windows.Rect.Width%2A> 또는 <xref:System.Windows.Rect.Height%2A>-음수 영역을 사각형 제공-이 메서드는 반환 <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-249">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-250">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> 사각형의 크기를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-250">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-251">
            <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-251">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-252">Finds the intersection of two rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-252">Finds the intersection of two rectangles.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-253">The rectangle to intersect with the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-253">The rectangle to intersect with the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-254">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-254">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-255">교차 부분이 있으면 현재 사각형이 <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-255">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-256">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> 두 사각형이 겹치는 부분을 찾고 사각형으로 결과 저장 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="51284-256">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="51284-257">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-257">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="51284-258">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-258">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-259">Returns the intersection of the specified rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-259">Returns the intersection of the specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-260">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-260">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-261">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> 메서드 두 사각형이 겹치는 부분을 찾으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-261">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-262">The rectangle to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-262">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-263">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-263">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-264">
            <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-264">
              <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-265">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.IntersectsWith%2A> 두 개의 사각형의 교차 하는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-265">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-266">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-266">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-267">
            <see langword="true" /> 사각형의 면을 <see cref="P:System.Windows.Rect.Empty" /> 사각형 고, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-267">
              <see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-268">면적이 0;에 대 한 테스트를이 속성을 사용 하지 마십시오 면적이 0 인 사각형 반드시는 <xref:System.Windows.Rect.Empty%2A> 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-268">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="51284-269">자세한 내용은 <xref:System.Windows.Rect.Empty%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="51284-269">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-270">Gets the x-axis value of the left side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-270">Gets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-271">사각형의 왼쪽의 x 축 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-271">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-272">시작은이 속성은 <xref:System.Windows.Rect.X%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-272">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-273">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-273">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-274">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-274">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-275">Gets or sets the position of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-275">Gets or sets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-276">사각형의 왼쪽 위 모퉁이의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-276">The position of the top-left corner of the rectangle.</span>
          </span>
          <span data-ttu-id="51284-277">기본값은 (0, 0)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-277">The default is (0, 0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-278">사각형의 왼쪽 위 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="51284-278">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-279">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-279">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-280">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-280">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-281">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-281">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-282">
            <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-282">
              <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-283">Moves a rectangle by the specified amount.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-283">Moves a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector">
          <span data-ttu-id="51284-284">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-284">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-285">Moves the rectangle by the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-285">Moves the rectangle by the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-286">빈 사각형에서이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-286">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="51284-287">호출 하는 <xref:System.Windows.Rect.Offset%2A> 메서드는 변경할 수 있는 경우에 효과가 있습니다 합니다 <xref:System.Windows.Rect.X%2A> 및 <xref:System.Windows.Rect.Y%2A> 속성을 직접.</span><span class="sxs-lookup"><span data-stu-id="51284-287">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="51284-288">때문에 <xref:System.Windows.Rect> 값 형식인를 참조 하는 경우는 <xref:System.Windows.Rect> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-288">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="51284-289">변경 하려는 경우 <xref:System.Windows.Rect.X%2A> 또는 <xref:System.Windows.Rect.Y%2A> 속성 또는 인덱서에서 참조에서 컴파일러 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-289">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="51284-290">마찬가지로, 호출 <xref:System.Windows.Rect.Offset%2A> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-290">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="51284-291">값을 변경 하려는 경우는 <xref:System.Windows.Rect> 속성 또는 인덱서를으로 참조 되는, 새 <xref:System.Windows.Rect>, 해당 필드를 수정 하 고 할당을 <xref:System.Windows.Rect> 속성 또는 인덱서를 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-291">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-292">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-292">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-293">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-293">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="51284-294">The amount to move the rectangle horizontally.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-294">The amount to move the rectangle horizontally.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="51284-295">The amount to move the rectangle vertically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-295">The amount to move the rectangle vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-296">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-296">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-297">빈 사각형에서이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-297">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="51284-298">호출 하는 <xref:System.Windows.Rect.Offset%2A> 메서드는 변경할 수 있는 경우에 효과가 있습니다 합니다 <xref:System.Windows.Rect.X%2A> 및 <xref:System.Windows.Rect.Y%2A> 속성을 직접.</span><span class="sxs-lookup"><span data-stu-id="51284-298">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="51284-299">때문에 <xref:System.Windows.Rect> 값 형식인를 참조 하는 경우는 <xref:System.Windows.Rect> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-299">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="51284-300">변경 하려는 경우 <xref:System.Windows.Rect.X%2A> 또는 <xref:System.Windows.Rect.Y%2A> 속성 또는 인덱서에서 참조에서 컴파일러 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-300">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="51284-301">마찬가지로, 호출 <xref:System.Windows.Rect.Offset%2A> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-301">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="51284-302">값을 변경 하려는 경우는 <xref:System.Windows.Rect> 속성 또는 인덱서를으로 참조 되는, 새 <xref:System.Windows.Rect>, 해당 필드를 수정 하 고 할당을 <xref:System.Windows.Rect> 속성 또는 인덱서를 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-302">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-303">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-303">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-304">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-304">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-305">The original rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-305">The original rectangle.</span>
          </span>
        </param>
        <param name="offsetVector">
          <span data-ttu-id="51284-306">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-306">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-307">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-307">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-308">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-308">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-309">빈 사각형을 사용 하 여이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-309">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-310">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-310">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-311">
            <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-311">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-312">The rectangle to move.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-312">The rectangle to move.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="51284-313">The horizontal offset for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-313">The horizontal offset for the new rectangle.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="51284-314">The vertical offset for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-314">The vertical offset for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-315">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-315">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-316">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-316">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-317">빈 사각형을 사용 하 여이 메서드를 호출 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-317">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-318">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> 사각형의 위치를 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-318">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-319">
            <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-319">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="51284-320">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-320">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="51284-321">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-321">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-322">Compares two rectangles for exact equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-322">Compares two rectangles for exact equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-323">
            <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-323">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-324">이 작업 개체 같은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-324">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="51284-325">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51284-325">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51284-326">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-326">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="51284-327">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-327">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="51284-328">이 연산자에 대 한 해당 메서드는 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51284-328">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51284-329">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.op_Equality%2A> 경우 두 사각형이 정확히 같은지 확인 하는 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-329">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="51284-330">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-330">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="51284-331">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-331">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-332">Compares two rectangles for inequality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-332">Compares two rectangles for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-333">
            <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-333">
              <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-334">이 작업은 개체가 같지 않은지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-334">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="51284-335">이 비교에서 두 인스턴스의 <xref:System.Double.NaN?displayProperty=nameWithType> 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51284-335">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51284-336">사각형의 위치 및 크기에서 설명한 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-336">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="51284-337">때문에 <xref:System.Double> 값에 연산을 수행 하는 경우 정밀도 떨어질 수, 논리적으로 동일한 두 값 간의 비교 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-337">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="51284-338">이 연산자에 대 한 해당 메서드는 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51284-338">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51284-339">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.op_Inequality%2A> 경우 두 사각형이 정확히 같은지 확인 하는 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-339">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="51284-340">The string representation of the rectangle, in the form "x, y, width, height".</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-340">The string representation of the rectangle, in the form "x, y, width, height".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-341">Creates a new rectangle from the specified string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-341">Creates a new rectangle from the specified string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-342">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-342">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-343">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Parse%2A> 에 사각형의 문자열 표현으로 변환 하는 메서드를 <xref:System.Windows.Rect> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-343">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-344">Gets the x-axis value of the right side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-344">Gets the x-axis value of the right side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-345">사각형의 오른쪽의 x 축 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-345">The x-axis value of the right side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-346">사각형의 오른쪽의 x 축 값의 합계와 같은지를 <xref:System.Windows.Rect.X%2A> 고 <xref:System.Windows.Rect.Width%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-346">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-347">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-347">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-348">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-348">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="51284-349">The scale factor in the x-direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-349">The scale factor in the x-direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="51284-350">The scale factor in the y-direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-350">The scale factor in the y-direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-351">Multiplies the size of the current rectangle by the specified x and y values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-351">Multiplies the size of the current rectangle by the specified x and y values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-352">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Scale%2A> 메서드를 지정 된 양만큼 사각형의 높이 너비를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-352">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-353">Gets or sets the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-353">Gets or sets the width and height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-354">
            <see cref="T:System.Windows.Size" /> 사각형의 높이 너비를 지정 하는 구조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-354">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-355">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-355">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-356">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-356">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-357">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-357">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-358">
            <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-358">
              <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="51284-359">The format to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-359">The format to use.</span>
          </span>
          <span data-ttu-id="51284-360">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-360">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="51284-361">The provider to use to format the value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-361">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="51284-362">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-362">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-363">Formats the value of the current instance using the specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-363">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-364">A string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-364">A string representation of the rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-365">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="51284-365">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="51284-366"><xref:System.Windows.Rect> 인스턴스가 <xref:System.IFormattable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-366">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-367">Gets the y-axis position of the top of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-367">Gets the y-axis position of the top of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-368">사각형 위쪽의 y 축 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-368">The y-axis position of the top of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-369">시작은이 속성은 <xref:System.Windows.Rect.Y%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-369">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-370">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-370">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-371">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-371">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-372">Gets the position of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-372">Gets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-373">사각형의 왼쪽 위 모퉁이의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-373">The position of the top-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-374">사각형의 왼쪽 위 모퉁이의 위치가 같으면 (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="51284-374">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-375">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-375">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-376">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-376">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-377">Gets the position of the top-right corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-377">Gets the position of the top-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-378">사각형의 오른쪽 위 모서리의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-378">The position of the top-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-379">사각형의 오른쪽 위 모서리의 위치가 같으면 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="51284-379">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-380">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-380">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-381">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-381">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-382">Returns a string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-382">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51284-383">Returns a string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-383">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-384">A string representation of the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-384">A string representation of the current rectangle.</span>
          </span>
          <span data-ttu-id="51284-385">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-385">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-386">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.ToString> 의 문자열 표현을 가져오는 방법은 <xref:System.Windows.Rect> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-386">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="51284-387">Culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-387">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-388">Returns a string representation of the rectangle by using the specified format provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-388">Returns a string representation of the rectangle by using the specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-389">A string representation of the current rectangle that is determined by the specified format provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-389">A string representation of the current rectangle that is determined by the specified format provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-390">Transforms a rectangle by using the specified matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-390">Transforms a rectangle by using the specified matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="51284-391">A matrix that specifies the transformation to apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-391">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-392">Transforms the rectangle by applying the specified matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-392">Transforms the rectangle by applying the specified matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-393">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> 변환 하는 메서드를 <xref:System.Windows.Rect> 구조를 사용 하 여를 <xref:System.Windows.Media.Matrix>입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-393">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-394">A rectangle that is the basis for the transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-394">A rectangle that is the basis for the transformation.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="51284-395">A matrix that specifies the transformation to apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-395">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-396">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-396">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-397">The rectangle that results from the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-397">The rectangle that results from the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-398">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> 메서드를 새 <xref:System.Windows.Rect> 구조를 적용 하는 <xref:System.Windows.Media.Matrix> 기존 사각형에.</span><span class="sxs-lookup"><span data-stu-id="51284-398">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51284-399">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-399">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="51284-400">The point to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-400">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-401">Expands the current rectangle exactly enough to contain the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-401">Expands the current rectangle exactly enough to contain the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-402">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Union%28System.Windows.Point%29> 메서드를 포함 하도록 현재 사각형을 정확히 확장을 지정 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-402">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-403">The rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-403">The rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-404">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-404">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-405">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> 확장 현재 사각형을 정확히 지정된 된 사각형을 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="51284-406">The rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-406">The rectangle to include.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="51284-407">The point to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-407">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-408">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-408">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-409">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-409">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-410">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> 메서드는 지정 된 사각형을 포함 하는 데 있는 큰 사각형을 만듭니다 및 지정 된 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-410">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="51284-411">The first rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-411">The first rectangle to include.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="51284-412">The second rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-412">The second rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51284-413">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-413">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51284-414">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-414">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51284-415">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> 메서드는 지정 된 두 사각형을 포함 하는 데 있는 큰 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="51284-415">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-416">Gets or sets the width of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-416">Gets or sets the width of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-417">사각형의 너비를 나타내는 양수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-417">A positive number that represents the width of the rectangle.</span>
          </span>
          <span data-ttu-id="51284-418">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-418">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-419">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형에는 <xref:System.Windows.Rect.Width%2A> 의 <xref:System.Double.NegativeInfinity>합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-419">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="51284-420">합니다 <xref:System.Windows.Rect.Empty%2A> 사각형은 읽기 전용으로 해당 <xref:System.Windows.Rect.Width%2A> 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="51284-420">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-421">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-421">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-422">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-422">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-423">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-423">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51284-424">
            <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-424">
              <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-425">
            <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-425">
              <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-426">Gets or sets the x-axis value of the left side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-426">Gets or sets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-427">사각형의 왼쪽의 x 축 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-427">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-428">시작은이 속성은 <xref:System.Windows.Rect.Left%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-428">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-429">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-429">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-430">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-430">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-431">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-431">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-432">
            <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-432">
              <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51284-433">Gets or sets the y-axis value of the top side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-433">Gets or sets the y-axis value of the top side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51284-434">사각형의 위쪽의 y 축 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-434">The y-axis value of the top side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51284-435">시작은이 속성은 <xref:System.Windows.Rect.Top%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-435">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51284-436">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Rect> 차원 및 XAML을 사용 하 여 사각형의 위치를 지정 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51284-436">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="51284-437">다음 예제에서는 코드를 사용 하 여 사각형을 만들고 페이지에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="51284-437">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="51284-438">이 예제에서는 새 사각형에 대 한 크기 및 좌표 정보를 찾아의 정보를 렌더링 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox> 사각형 아래의 합니다.</span><span class="sxs-lookup"><span data-stu-id="51284-438">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51284-439">
            <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51284-439">
              <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>