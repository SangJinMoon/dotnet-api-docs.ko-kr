<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9525f3beca110230ccc72de0151ebde05f618040" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9b0ff-101">라우트된 이벤트에서 따르는 경로에 대한 컨테이너를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b0ff-101">Represents the container for the route to be followed by a routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0ff-102">이 클래스는 유효한 해당 <xref:System.Windows.RoutedEvent>, 해당 이벤트에 대 한 경로를 참조 하는 대상 개체 및 이벤트 처리기 목록 쌍의 정렬된 된 목록을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b0ff-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="9b0ff-103"><xref:System.Windows.EventRoute> 목록에 새 항목 추가 지원 하며 목록에서 처리기에 대 한 호출 해야 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9b0ff-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="9b0ff-104">대부분의 일반 작업에 대 한 처리기를 추가 하기 위한 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 이벤트는이 클래스와 작업을 필요 하지 않습니다 (예를 들어 <xref:System.Windows.EventManager> 클래스 처리를 추가 하거나 기존 처리기 이벤트에 대 한 쿼리 하는 방법).</span><span class="sxs-lookup"><span data-stu-id="9b0ff-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="9b0ff-105">이 클래스는 요소는 자식 요소 또는 요소를 추가 하거나 기본 계산 된 경로에서 요소를 제거할 수 있도록 하는 부모 요소에 대 한 특정 기술 하는 경우에 주로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b0ff-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="9b0ff-106">이 이벤트 경로에 연결할 NULL이 아닌 이벤트 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-106">The non-NULL event identifier to be associated with this event route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0ff-107">
            <see cref="T:System.Windows.EventRoute" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9b0ff-108">경로에 처리기를 추가할 대상 개체를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-108">Specifies the target object of which the handler is to be added to the route.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="9b0ff-109">경로에 추가할 처리기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-109">Specifies the handler to be added to the route.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="9b0ff-110">이미 처리된 이벤트를 수신기에서 감지할지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-110">Indicates whether or not the listener detects events that have already been handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0ff-111">지정된 대상에 대한 지정된 처리기를 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-111">Adds the specified handler for the specified target to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0ff-112">특정 대상 인스턴스에 대 한 처리기를 두 번 추가 하는 오류가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="9b0ff-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="9b0ff-113">이 경우 처리기를 두 번 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9b0ff-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0ff-114">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에서 최상위 요소를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0ff-115">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 있는 최상위 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-115">The top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0ff-116">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에서 최상위 요소의 소스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0ff-117">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 있는 최상위 요소의 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0ff-118">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에서 최상위 노드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0ff-119">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 있는 최상위 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-119">The top-most node on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="9b0ff-120">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 있는 최상위 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-120">The top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="9b0ff-121">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 있는 최상위 요소의 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0ff-122">두 개의 논리적 트리가 분기하는 이벤트 라우트 스택에 최상위 노드를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0ff-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>