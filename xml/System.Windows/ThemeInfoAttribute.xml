<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThemeInfoAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d93fc9e8dd578f8c00c713bb17e37af3c91b6011.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d93fc9e8dd578f8c00c713bb17e37af3c91b6011</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ThemeInfoAttribute">
          <source>Specifies the location in which theme dictionaries are stored for an assembly.</source>
          <target state="translated">어셈블리에 대해 테마 사전이 저장되는 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>This attribute is used at the assembly level to indicate which theme resource dictionaries are being declared by an assembly for its defined controls, and where the resource dictionaries are located.</source>
          <target state="translated">이 특성은 어셈블리 수준에서 테마 리소스 사전의 정의 된 컨트롤에 대 한 어셈블리에 의해 선언 되 고 리소스 사전은 위치 나타내기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>For example, if you do not provide theme-specific resource dictionaries, and your <ph id="ph1">`generic.xaml`</ph> that supplies resource definitions for all resource lookups is compiled into the same assembly in which the assembly's control class definitions exist, you would apply the following attribution in the <ph id="ph2">`AssemblyInfo.cs`</ph> for the assembly project:</source>
          <target state="translated">예를 들어, 테마별 리소스 사전 제공 하지 않는 경우 하였고 <ph id="ph1">`generic.xaml`</ph> 것에 모든 리소스 조회에 대 한 공급 장치 리소스 정의 어셈블리의 컨트롤 클래스 정의가 존재 하는 동일한 어셈블리에 컴파일됩니다, 다음 특성을 적용 된 <ph id="ph2">`AssemblyInfo.cs`</ph> 어셈블리 프로젝트에 대 한:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>In addition to <ph id="ph1">&lt;xref:System.Windows.ThemeInfoAttribute&gt;</ph> application, your project and assembly must have additional characteristics in order for the resource dictionaries to be usable by the WPF theming system.</source>
          <target state="translated">외에 <ph id="ph1">&lt;xref:System.Windows.ThemeInfoAttribute&gt;</ph> 응용 프로그램, 프로젝트 및 어셈블리에 WPF 테마 설정 시스템에서 사용할 수 있도록 하려면 리소스 사전에 대 한 추가 특징이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>If you declare <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph>, then the referenced resource dictionary should be placed within a <ph id="ph2">`themes`</ph> directory in the assembly structure.</source>
          <target state="translated">선언 하는 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph>, 내 참조 된 리소스 사전에 위치 해야 합니다는 <ph id="ph2">`themes`</ph> 디렉터리에서 어셈블리 구조입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>If you declare <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation%2A&gt;</ph>, then the names of the XAML files are expected to conform to the XAML file naming scheme <ph id="ph3">`themes\&lt;Theme Name&gt;.&lt;Theme Color&gt;.xaml`</ph>.</source>
          <target state="translated">선언 하는 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph> 에 대 한 <ph id="ph2">&lt;xref:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation%2A&gt;</ph>, XAML 파일 이름 지정 체계를 따르도록 XAML 파일의 이름은 필요 다음 <ph id="ph3">`themes\&lt;Theme Name&gt;.&lt;Theme Color&gt;.xaml`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>For example, the following is a list of theme files that support a variety of possible WPF theming scenarios on clients:</source>
          <target state="translated">예를 들어 다음은 가능한 WPF 테마 시나리오의 다양 한 클라이언트에서 지 원하는 테마 파일의 목록입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>If you declare <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.ExternalAssembly&gt;</ph>, then the external assembly names are expected to conform to a naming scheme, and each assembly for each theme should be built using the same key information.</source>
          <target state="translated">선언 하는 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionaryLocation.ExternalAssembly&gt;</ph>, 외부 어셈블리 이름은 이름 지정 체계를 따르도록 것으로 예상 되는 다음 및 동일한 키 정보를 사용 하 여 각 테마에 대 한 각 어셈블리를 빌드해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ThemeInfoAttribute">
          <source>For more information about how to create and use theme resource dictionaries, see "Defining Resources at the Theme Level" section of the topic <bpt id="p1">[</bpt>Control Authoring Overview<ept id="p1">](~/docs/framework/wpf/controls/control-authoring-overview.md)</ept>.</source>
          <target state="translated">만들고 리소스 사전은 테마를 사용 하는 방법에 대 한 자세한 내용은 "정의 리소스에는 테마 수준"을 참조 하십시오. 항목의 섹션 <bpt id="p1">[</bpt>컨트롤 제작 개요<ept id="p1">](~/docs/framework/wpf/controls/control-authoring-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>The location of theme-specific resources.</source>
          <target state="translated">테마별 리소스의 위치입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>The location of generic, not theme-specific, resources.</source>
          <target state="translated">테마별이 아닌 제네릭 리소스의 위치입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.ThemeInfoAttribute" /&gt;</ph> class and creates an attribute that defines theme dictionary locations for types in an assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ThemeInfoAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 어셈블리의 형식에 대해 테마 사전 위치를 정의하는 특성을 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>When the <ph id="ph1">`themeDictionaryLocation`</ph> is <ph id="ph2">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph>, you can include files such as Luna.NormalColor.xaml.</source>
          <target state="translated">경우는 <ph id="ph1">`themeDictionaryLocation`</ph> 은 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionaryLocation.SourceAssembly&gt;</ph>, Luna.NormalColor.xaml 같은 파일을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>These names are defined by the system theme files, which include the following.</source>
          <target state="translated">이러한 이름은 다음과 같은 시스템 테마 파일에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Classic – "Classic" Windows 9x/2000 look on Windows XP.</source>
          <target state="translated">기본 – 9 "클래식" Windows x / 2000 Windows XP에서 찾습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Luna.NormalColor - Default blue theme on Windows XP.</source>
          <target state="translated">Luna.NormalColor-Windows XP에서 파란색 기본 테마입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Luna.Homestead – Olive theme on Windows XP.</source>
          <target state="translated">Luna.Homestead – Windows XP에서 황록색 테마입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Luna.Metallic – Silver theme on Windows XP.</source>
          <target state="translated">Luna.Metallic – Windows XP에서 은색 테마입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Royale.NormalColor – Default theme on Windows XP Media Center Edition.</source>
          <target state="translated">Royale.NormalColor – Windows XP Media Center Edition에는 기본 테마입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
          <source>Aero.NormalColor – Default theme on Windows Vista</source>
          <target state="translated">Aero.NormalColor – Windows Vista에서 기본 테마</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
          <source>The location of generic, not theme specific, resources.</source>
          <target state="translated">테마별이 아닌 제네릭 리소스의 위치</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionaryLocation" /&gt;</ph> of the generic <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionaryLocation" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
          <source>The location of theme specific resources.</source>
          <target state="translated">테마별 리소스의 위치</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionaryLocation" /&gt;</ph> of the theme specific <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">테마별 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionaryLocation" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>