<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b5f3549c198dd578dd928a5bc7b4f2e8ca6d4f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36457399" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RoutedEventHandler = delegate of obj * RoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">이벤트 처리기가 연결된 개체입니다.</param>
    <param name="e">이벤트 데이터입니다.</param>
    <summary>모든 라우트된 이벤트에 공통된 데이터 외에 특정 이벤트 데이터가 없는 다양한 라우트된 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.RoutedEventHandler> 대리자는 이벤트 데이터에 이벤트 관련 정보를 보고 하지 않는 모든 라우트된 이벤트에 대해 사용 됩니다. 이러한 많은 라우트된 이벤트의; 두드러진 예로 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 및 <xref:System.Windows.FrameworkElement.Loaded>합니다.  
  
 가장 중요 한 차이점와 일반 라우트된 이벤트에 대 한 처리기를 작성할 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 는 이벤트는 `sender` 이벤트 (처리기가 연결 되 고 호출 요소)의 소스를 반드시 것으로 간주 될 수 없습니다 이벤트입니다. 소스는 이벤트 데이터에 속성으로 보고 됩니다 (<xref:System.Windows.RoutedEventArgs.Source%2A>). 에 차이가 `sender` 및 <xref:System.Windows.RoutedEventArgs.Source%2A> 라우트된 이벤트가 요소 트리를 통해 탐색 하는 동안 여러 요소에 라우팅되는 이벤트의 결과입니다.  
  
 사용할 수 있습니다 `sender` 또는 <xref:System.Windows.RoutedEventArgs.Source%2A> 개체에 대 한 참조에에서 관심이 있는 의도적으로 직접 또는 버블링 라우트된 이벤트의 라우팅 동작 및 처리 하려는 경우 라우트된 이벤트를 먼저 발생 하는 요소입니다. 이 경우에는 `sender` 및 <xref:System.Windows.RoutedEventArgs.Source%2A> 가 같은 개체입니다.  
  
 라우트된 이벤트의 기본 기능을 활용 하 여 처리기를 적절 하 게 작성 하려는 경우 이벤트 처리기를 작성할 때 작업을 수행 하는 이벤트 데이터의 두 가지 가장 중요 한 속성은 <xref:System.Windows.RoutedEventArgs.Source%2A> 및 <xref:System.Windows.RoutedEventArgs.Handled%2A>합니다.  
  
 입력된 이벤트의 특정 조합 및 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 컨트롤 클래스, 이벤트를 발생 하는 요소를 처리할 수 있는 첫 번째 요소 않습니다. 입력된 이벤트의 이벤트의 미리 보기 버전 다음 요소 트리의 루트를가지고 첫 번째 기회에 설정할 수 <xref:System.Windows.RoutedEventArgs.Handled%2A> 를 `true` 공유 이벤트 데이터에서 입력된 이벤트가 해당 경로에서 나머지 요소에 보고 되는 방식 영향을 미칠 수 있습니다. 미리 보기 처리 동작에는 특정 라우트된 이벤트에는 없는 모양을 제공할 수는 예상 대로 발생 합니다. 자세한 내용은 참조 [미리 보기 이벤트](~/docs/framework/wpf/advanced/preview-events.md) 및 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>