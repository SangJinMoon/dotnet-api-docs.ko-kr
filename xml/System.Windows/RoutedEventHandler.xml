<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f037eff3257aa909616e955a85ec3f875a97652" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37490691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RoutedEventHandler = delegate of obj * RoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="d487c-101">이벤트 처리기가 연결된 개체입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d487c-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="d487c-102">이벤트 데이터입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d487c-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="d487c-103">모든 라우트된 이벤트에 공통된 데이터 외에 특정 이벤트 데이터가 없는 다양한 라우트된 이벤트를 처리하는 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d487c-103">Represents the method that will handle various routed events that do not have specific event data beyond the data that is common for all routed events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d487c-104"><xref:System.Windows.RoutedEventHandler> 대리자는 이벤트 데이터의 이벤트 관련 정보를 보고 하지 않는 모든 라우트된 이벤트에 대해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-104">The <xref:System.Windows.RoutedEventHandler> delegate is used for any routed event that does not report event-specific information in the event data.</span></span> <span data-ttu-id="d487c-105">이러한 많은 라우트된 이벤트의; 두드러진 예로 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 고 <xref:System.Windows.FrameworkElement.Loaded>입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-105">There are many such routed events; prominent examples include <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded>.</span></span>  
  
 <span data-ttu-id="d487c-106">가장 중요 한 차이와 일반 라우트된 이벤트에 대 한 처리기를 작성 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 는 이벤트를 `sender` 이벤트 (처리기가 연결 되 고 호출 요소)의 원본으로 사용할 반드시 고려해 야 수 없습니다. 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-106">The most noteworthy difference between writing a handler for a routed event as opposed to a general [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event is that the `sender` of the event (the element where the handler is attached and invoked) cannot be considered to necessarily be the source of the event.</span></span> <span data-ttu-id="d487c-107">원본 이벤트 데이터의 속성으로 보고 됩니다 (<xref:System.Windows.RoutedEventArgs.Source%2A>).</span><span class="sxs-lookup"><span data-stu-id="d487c-107">The source is reported as a property in the event data (<xref:System.Windows.RoutedEventArgs.Source%2A>).</span></span> <span data-ttu-id="d487c-108">에 차이가 `sender` 및 <xref:System.Windows.RoutedEventArgs.Source%2A> 결과 요소 트리를 통해 라우트된 이벤트의 통과 하는 동안 다른 요소로 라우트되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-108">A difference between `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> is the result of the event being routed to different elements, during the traversal of the routed event through an element tree.</span></span>  
  
 <span data-ttu-id="d487c-109">사용할 수 있습니다 `sender` 또는 <xref:System.Windows.RoutedEventArgs.Source%2A> 개체에 대 한 참조 관심 의도적으로 직접 또는 버블링 라우트된 이벤트의 라우팅 동작을 처리 하려는 경우 라우트된 이벤트를 먼저 이벤트가 발생 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-109">You can use either `sender` or <xref:System.Windows.RoutedEventArgs.Source%2A> for an object reference if you are deliberately not interested in the routing behavior of a direct or bubbling routed event and you only intend to handle routed events on the elements where they are first raised.</span></span> <span data-ttu-id="d487c-110">이 경우 `sender` 고 <xref:System.Windows.RoutedEventArgs.Source%2A> 가 같은 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-110">In this circumstance, `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> are the same object.</span></span>  
  
 <span data-ttu-id="d487c-111">라우트된 이벤트의 기본 기능을 활용 하 여 처리기를 적절 하 게 작성 하려는 경우 이벤트 처리기를 작성 하는 경우 호환 되는 이벤트 데이터의 두 가지 가장 중요 한 속성은 <xref:System.Windows.RoutedEventArgs.Source%2A> 고 <xref:System.Windows.RoutedEventArgs.Handled%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-111">If you do intend to take advantage of the inherent features of routed events and write your handlers accordingly, the two most important properties of the event data that you will work with when writing event handlers are <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.Handled%2A>.</span></span>  
  
 <span data-ttu-id="d487c-112">입력된 이벤트의 특정 조합 및 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 컨트롤 클래스의 이벤트를 발생 시키는 요소를 처리할 수 있는 첫 번째 요소가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-112">For certain combinations of input events and [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control classes, the element that raises the event is not the first element that has the opportunity to handle it.</span></span> <span data-ttu-id="d487c-113">입력된 이벤트에 이벤트의 미리 보기 버전 항목이 없으면 요소 트리의 루트를 첫 번째 기회에 설정할 수 있습니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 에 `true` 공유 된 이벤트 데이터에서 및 입력된 이벤트가 해당 이벤트 경로의 나머지 요소에 보고 되는 방법에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-113">If the input event has a Preview version of the event, then the root of the element tree has first opportunity, can set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true` in the shared event data, and can influence how the input event is reported to remaining elements in its event route.</span></span> <span data-ttu-id="d487c-114">예상 대로 발생 하는 미리 보기 처리 동작에는 특정 라우트된 이벤트에는 없는 모양을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-114">The Preview handling behavior can give the appearance that a particular routed event is not raised as expected.</span></span> <span data-ttu-id="d487c-115">자세한 내용은 [미리 보기 이벤트](~/docs/framework/wpf/advanced/preview-events.md) 하 고 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d487c-115">For more information, see [Preview Events](~/docs/framework/wpf/advanced/preview-events.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>