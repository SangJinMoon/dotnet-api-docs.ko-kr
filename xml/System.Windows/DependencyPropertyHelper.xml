<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="612d2-101">종속성 속성의 유효 값에 대한 속성 시스템 원본을 보고하는 단일 도우미 메서드(<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />)를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-101">Provides a single helper method (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) that reports the property system source for the effective value of a dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="612d2-102">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 속성 시스템은 상당히 복잡 하며 방법에서 다양 한 된 설정 된 값 결정 우선 순위에 따라 입력 될 수 있는 값을 미리 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-102">The[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence.</span></span> <span data-ttu-id="612d2-103">런타임에 사용자 설정에서 종속성 속성 값 시스템에 어떤 참가자 를호출할때확보하는값을설정하는정확히알고에게유용할수또는이러한원본컴파일된태그에서런타임코드에서잠재적으로제공하기때문에<xref:System.Windows.DependencyObject.GetValue%2A>런타임에 해당 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-103">Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling <xref:System.Windows.DependencyObject.GetValue%2A> at run-time on that property.</span></span> <span data-ttu-id="612d2-104">않은 보다 값이 다른 원본에서 가져온, 응용 프로그램의 일부 측면을 조정 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-104">If the value came from a different source than you had intended, you might need to adjust some aspect of your application.</span></span> <span data-ttu-id="612d2-105">값의 소스 스타일, 테마, 로컬 값을, 애니메이션, 바인딩 또는 테마 또는 시스템 리소스를 통해 시스템 설정 등의 실행 시간 기반된 값 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-105">The value source might be a style, a theme, a local value, an animation, a binding, or a run-time based value such as system settings through themes or system resources.</span></span> <span data-ttu-id="612d2-106">자세한 내용은 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="612d2-106">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="612d2-107">보고 하는 속성에 일반적으로 개체에 대 한 속성의 특정 인스턴스가 아닌 다른 메커니즘은 속성 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-107">Another mechanism that reports on the property in general, rather than a specific instance of the property on an object, is the property metadata.</span></span> <span data-ttu-id="612d2-108">호출 하 여 속성 메타 데이터를 검색 하려면 <xref:System.Windows.DependencyProperty.GetMetadata%2A> 검사 하는 반환 된 <xref:System.Windows.PropertyMetadata> (또는 반환 되는 속성 메타 데이터는를 캐스팅할 수 있는 몇 가지 가능한 파생된 클래스 중 하나).</span><span class="sxs-lookup"><span data-stu-id="612d2-108">The property metadata is findable by calling <xref:System.Windows.DependencyProperty.GetMetadata%2A> and examining the returned <xref:System.Windows.PropertyMetadata> (or one of several possible derived classes that the returned property metadata is castable to).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="612d2-109">정보를 보고할 <c>dependencyProperty</c>를 포함하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-109">The element that contains the <c>dependencyProperty</c> to report information for.</span></span></param>
        <param name="dependencyProperty"><span data-ttu-id="612d2-110">정보를 보고할 종속성 속성의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-110">The identifier for the dependency property to report information for.</span></span></param>
        <summary><span data-ttu-id="612d2-111">특정 <see cref="T:System.Windows.DependencyObject" />에서 지정된 종속성 속성의 다양한 메타데이터 및 속성 시스템 특성을 보고하는 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-111">Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <returns><span data-ttu-id="612d2-112">구체적인 정보를 보고하는 <see cref="T:System.Windows.ValueSource" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-112">A <see cref="T:System.Windows.ValueSource" /> structure that reports the specific information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="612d2-113">런타임에 속성 값 결정 참가자는 속성에 영향을 줄 수 있도록 컨텍스트에서이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-113">You should call this method in a context such that late participants in property value determination are able to act on a property.</span></span> <span data-ttu-id="612d2-114">예를 들어, 바인딩이 활성화 되지 않고 속성에 요소 트리에 있는 모든 참가 요소가 로드 되 고 비동기 바인딩이, 전파 되 고 바인딩 소스 개체에 연결 되어 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-114">For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected.</span></span> <span data-ttu-id="612d2-115">마찬가지로, 모든 필수 테마 사전을 포함 한 리소스 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-115">Similarly, resources including all necessary theme dictionaries should be available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate"><span data-ttu-id="612d2-116">템플릿 인스턴스에 속하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-116">An element that belongs to a template instance.</span></span></param>
        <param name="dependencyProperty"><span data-ttu-id="612d2-117">종속성 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-117">A dependency property.</span></span> </param>
        <summary><span data-ttu-id="612d2-118">지정한 요소가 변경 내용에 따라 런타임에 변경될 수 있는 지정한 속성의 값을 정의하는 템플릿의 인스턴스에 속하는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-118">Indicates whether a specified element belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere.</span></span></summary>
        <returns>
          <span data-ttu-id="612d2-119"><paramref name="elementInTemplate" />이 변경 내용에 따라 런타임에 변경될 수 있는 지정한 속성의 값을 정의하는 템플릿의 인스턴스에 속하는 경우 <see langword="true" />이고, 그러지 않는 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-119"><see langword="true" /> if <paramref name="elementInTemplate" /> belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="612d2-120">다른 곳에서 변경 내용에 따라 런타임에 변경 될 수 있는 값의 예는가 설정한 값 <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> 및 <xref:System.Windows.DynamicResourceExtension> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-120">Examples of values that may change at runtime based on changes elsewhere are values set by <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> and <xref:System.Windows.DynamicResourceExtension> objects.</span></span>

<span data-ttu-id="612d2-121">이 메서드는 보다 자세한 경우에는 정보 제공 위치의 값은 <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> 속성은 <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-121">This method provides more detailed information in cases where the value of the <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> property is <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.</span></span>
<span data-ttu-id="612d2-122">정보는 주로 진단 도구를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="612d2-122">The information is primarily of use to diagnostic tools.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>