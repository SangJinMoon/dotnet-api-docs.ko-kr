<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContentOperations.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a6532e801eb2d62227a3070b7d17b60ad63da6c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6532e801eb2d62227a3070b7d17b60ad63da6c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ContentOperations">
          <source>Provides static utility methods for getting or setting the position of a <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> in an element tree.</source>
          <target state="translated">요소 트리에서 <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>의 위치를 가져오거나 설정하기 위한 정적 유틸리티 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ContentOperations">
          <source>For most content element scenarios, the property <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> should be used instead of members of <ph id="ph2">&lt;xref:System.Windows.ContentOperations&gt;</ph>, if <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> is available.</source>
          <target state="translated">대부분의 콘텐츠 요소 시나리오에서 속성에 대 한 <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> 의 멤버 대신 사용 해야 <ph id="ph2">&lt;xref:System.Windows.ContentOperations&gt;</ph>경우 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> ´ ï ´ 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> to get the parent from.</source>
          <target state="translated">부모 요소를 가져올 <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source>Gets the parent element of the specified <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>의 부모 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source>The parent element in the current tree.</source>
          <target state="translated">현재 트리의 부모 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source>Most practical <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> derived classes in <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> are also a <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class.</source>
          <target state="translated">대부분의 실제 <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> 에서 파생 된 클래스가 <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 도 한 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> 클래스를 파생 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source>For these classes, the <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> property should be used instead.</source>
          <target state="translated">이러한 클래스는 <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> 속성을 대신 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> returns the parent element in the logical tree, which might not be the same element as returned by <ph id="ph2">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> 논리적 트리의 않을 수도 있는 동일한 요소에서 반환 된 부모 요소를 반환 합니다. <ph id="ph2">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
          <source><ph id="ph1">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph> exists specifically to correct for certain architectural issues whereby a <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> class that is not also a <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> exists in a tree that is not strictly speaking either the logical tree or the visual tree.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph> 그에 따라 특정 아키텍처 관련 문제를 해결 하기 위해 존재는 <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> 은 아닌 클래스는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> 하지 않은 엄밀히 논리 트리 또는 시각적 트리의 트리에 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> to reparent.</source>
          <target state="translated">부모를 재지정할 <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,System.Windows.DependencyObject)">
          <source>The new parent element.</source>
          <target state="translated">새 부모 요소입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,System.Windows.DependencyObject)">
          <source>Sets the parent element of the provided <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>의 부모 요소를 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,System.Windows.DependencyObject)">
          <source>Use this method to help define a <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> hosting and content model on a <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> class.</source>
          <target state="translated">이 메서드를 사용 하 여 정의할 수 있도록는 <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> 호스팅 및 콘텐츠 모델에는 <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase&gt;</ph> class uses this method internally to hook up its <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase.Document%2A&gt;</ph> content property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase&gt;</ph> 클래스이 방법을 사용 하 여이 내부적으로 연결의 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase.Document%2A&gt;</ph> 콘텐츠 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>