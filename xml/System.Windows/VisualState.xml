<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="028b84ccb16bb801d733d7684e85cd793fc21aec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2450c-101">특정 상태에 있는 컨트롤의 시각적 모양을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2450c-101">Represents the visual appearance of the control when it is in a specific state.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2450c-102">A <xref:System.Windows.VisualState> 특정 상태에 있을 때 컨트롤의 모양을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-102">A <xref:System.Windows.VisualState> specifies how the control looks when it is in a certain state.</span></span> <span data-ttu-id="2450c-103">예를 들어, 한 <xref:System.Windows.Controls.Button> 는 누른 테두리 수 정상 보다 다른 색입니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-103">For example, when a <xref:System.Windows.Controls.Button> is pressed, its border might be a different color than normal.</span></span>  <span data-ttu-id="2450c-104"><xref:System.Windows.VisualState> 클래스에는 <xref:System.Windows.VisualState.Storyboard%2A> 컨트롤의 모양을 변경 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-104">The <xref:System.Windows.VisualState> class has a <xref:System.Windows.VisualState.Storyboard%2A> property that changes the appearance of the control.</span></span> <span data-ttu-id="2450c-105">컨트롤에 지정 된 상태로 전환 하는 경우는 <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 속성에는 <xref:System.Windows.VisualState.Storyboard%2A> 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-105">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="2450c-106">컨트롤의 상태가 종료 하는 경우는 <xref:System.Windows.VisualState.Storyboard%2A> 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-106">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
 <span data-ttu-id="2450c-107"><xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> 속성 포함 <xref:System.Windows.VisualState> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-107">The <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> property contains <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="2450c-108"><xref:System.Windows.VisualStateGroup> 개체에 추가 됩니다는 <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> 연결 된 속성에 정의 되는에 <xref:System.Windows.FrameworkElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-108"><xref:System.Windows.VisualStateGroup> objects are added to the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> attached property, which is defined on the on a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="2450c-109">추가할 수 있습니다 <xref:System.Windows.VisualState> 개체를 하나 <xref:System.Windows.FrameworkElement>, 하지만 일반적으로에 사용 되는 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-109">You can add <xref:System.Windows.VisualState> objects to any <xref:System.Windows.FrameworkElement>, but they are typically are used in a <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="2450c-110">만드는 방법에 대 한 내용은 <xref:System.Windows.Controls.ControlTemplate> 및 <xref:System.Windows.VisualState> 기존 컨트롤에 대 한 개체 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-110">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="2450c-111">사용 하는 예제에 대 한 <xref:System.Windows.VisualState> 외부의 개체는 <xref:System.Windows.Controls.ControlTemplate>, 참조는 <xref:System.Windows.VisualStateManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-111">For an example of using <xref:System.Windows.VisualState> objects outside of a <xref:System.Windows.Controls.ControlTemplate>, see the <xref:System.Windows.VisualStateManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2450c-112">다음 예제에서는 한 <xref:System.Windows.VisualStateGroup> 에 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.Button> 호출 `CommonStates` 추가 <xref:System.Windows.VisualState> 개체의 상태에 대 한 `Normal`, `Pressed`, 및 `MouseOver`합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-112">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="2450c-113"><xref:System.Windows.Controls.Button> 이라는 상태의 정의 `Disabled` 에 `CommonStates` <xref:System.Windows.VisualStateGroup>, 하지만 예제에서는 간단한 설명을 위해 생략 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-113">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="2450c-114">전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-114">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2450c-115">
            <see cref="T:System.Windows.VisualState" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-115">Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2450c-116">
            <see cref="T:System.Windows.VisualState" />의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-116">Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2450c-117">
            <see cref="T:System.Windows.VisualState" />의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-117">The name of the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2450c-118">시각적 상태 요소를 전달 하 여 입력 해야 지정는 <xref:System.Windows.VisualState.Name%2A> 의 <xref:System.Windows.VisualState> 에 <xref:System.Windows.VisualStateManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-118">You specify which visual state an element should enter by passing the <xref:System.Windows.VisualState.Name%2A> of the <xref:System.Windows.VisualState> to the <xref:System.Windows.VisualStateManager>.</span></span>  
  
 <span data-ttu-id="2450c-119">경우는 <xref:System.Windows.Controls.Control> 사용 하 여는 <xref:System.Windows.VisualStateManager> 에 <xref:System.Windows.Controls.ControlTemplate>, 컨트롤 작성자를 지정 해야 <xref:System.Windows.VisualState> 컨트롤이 예상에서 찾을 개체의 <xref:System.Windows.Controls.ControlTemplate> 배치 하 여는 <xref:System.Windows.TemplateVisualStateAttribute> 는 클래스 서명에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-119">When a <xref:System.Windows.Controls.Control> uses the <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.ControlTemplate>, the control author should specify which <xref:System.Windows.VisualState> objects the control expects to find in its <xref:System.Windows.Controls.ControlTemplate> by putting the <xref:System.Windows.TemplateVisualStateAttribute> on its class signature.</span></span> <span data-ttu-id="2450c-120"><xref:System.Windows.Controls.ControlTemplate> 작성자는 새 정의 <xref:System.Windows.VisualState> 개체 집합과 <xref:System.Windows.VisualState.Name%2A> 속성에 지정 된 값을는 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-120"><xref:System.Windows.Controls.ControlTemplate> authors define new <xref:System.Windows.VisualState> objects and set the <xref:System.Windows.VisualState.Name%2A> property to the value specified by the <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2450c-121">에 포함 된 컨트롤에 대 한 시각적 상태의 이름을 찾으려면 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], 참조 [컨트롤 스타일 및 템플릿](~/docs/framework/wpf/controls/control-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-121">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="2450c-122">만드는 방법에 대 한 내용은 <xref:System.Windows.Controls.ControlTemplate> 및 <xref:System.Windows.VisualState> 기존 컨트롤에 대 한 개체 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-122">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2450c-123">다음 예제에서는 한 <xref:System.Windows.VisualStateGroup> 에 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.Button> 호출 `CommonStates` 추가 <xref:System.Windows.VisualState> 개체의 상태에 대 한 `Normal`, `Pressed`, 및 `MouseOver`합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-123">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="2450c-124"><xref:System.Windows.Controls.Button> 이라는 상태의 정의 `Disabled` 에 `CommonStates` <xref:System.Windows.VisualStateGroup>, 하지만 예제에서는 간단한 설명을 위해 생략 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-124">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="2450c-125">전체 예제를 보려면 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-125">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2450c-126">컨트롤이 <see cref="T:System.Windows.Media.Animation.Storyboard" />가 나타내는 상태일 때 컨트롤의 모양을 정의하는 <see cref="T:System.Windows.VisualState" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-126">Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2450c-127">컨트롤이 <see cref="T:System.Windows.VisualState" />가 나타내는 상태일 때 컨트롤의 모양을 정의하는 스토리보드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-127">A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
          <span data-ttu-id="2450c-128">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2450c-128">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2450c-129">컨트롤에 지정 된 상태로 전환 하는 경우는 <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 속성에는 <xref:System.Windows.VisualState.Storyboard%2A> 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-129">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="2450c-130">컨트롤의 상태가 종료 하는 경우는 <xref:System.Windows.VisualState.Storyboard%2A> 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-130">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2450c-131">다음 예제에서는 간단한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.Button> 하나 포함 된 <xref:System.Windows.Controls.Grid>합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-131">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span>  <span data-ttu-id="2450c-132"><xref:System.Windows.VisualState> 호출 `MouseOver` 의 색을 변경 하는 스토리 보드에는 <xref:System.Windows.Controls.Grid> 를 통해 사용자가 마우스 빨강으로 녹색에서는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-132">The <xref:System.Windows.VisualState> called `MouseOver` has a Storyboard that changes the color of the <xref:System.Windows.Controls.Grid> from green to red when the user puts the mouse over the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="2450c-133"><xref:System.Windows.VisualState> 호출 `Normal` 포함 되어 있는 단추 밖으로 마우스를 이동할 때의 <xref:System.Windows.Controls.Grid> 녹색으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2450c-133">The <xref:System.Windows.VisualState> called `Normal` is included so that when the user moves the mouse off the button, the <xref:System.Windows.Controls.Grid> returns to green.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>