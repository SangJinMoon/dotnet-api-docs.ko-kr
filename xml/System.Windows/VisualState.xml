<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualState.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5028b84ccb16bb801d733d7684e85cd793fc21aec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">028b84ccb16bb801d733d7684e85cd793fc21aec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.VisualState">
          <source>Represents the visual appearance of the control when it is in a specific state.</source>
          <target state="translated">특정 상태에 있는 컨트롤의 시각적 모양을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>A <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> specifies how the control looks when it is in a certain state.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 특정 상태에 있을 때 컨트롤의 모양을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>For example, when a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is pressed, its border might be a different color than normal.</source>
          <target state="translated">예를 들어, 한 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 는 누른 테두리 수 정상 보다 다른 색입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> class has a <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> property that changes the appearance of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 클래스에는 <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> 컨트롤의 모양을 변경 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>When the control enters the state that is specified by the <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> begins.</source>
          <target state="translated">컨트롤에 지정 된 상태로 전환 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> 시작 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>When the control exits the state, the <ph id="ph1">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> stops.</source>
          <target state="translated">컨트롤의 상태가 종료 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> 중지 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType&gt;</ph> property contains <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType&gt;</ph> 속성 포함 <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source><ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> objects are added to the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType&gt;</ph> attached property, which is defined on the on a <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> 개체에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType&gt;</ph> 연결 된 속성에 정의 되는에 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>You can add <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objects to any <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, but they are typically are used in a <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
          <target state="translated">추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 개체를 하나 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, 하지만 일반적으로에 사용 되는 <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Controls.Control&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>For information about how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects for existing controls, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">만드는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> 기존 컨트롤에 대 한 개체 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>For an example of using <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objects outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> class.</source>
          <target state="translated">사용 하는 예제에 대 한 <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 외부의 개체는 <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, 참조는 <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`CommonStates`</ph> and adds <ph id="ph5">&lt;xref:System.Windows.VisualState&gt;</ph> objects for the states, <ph id="ph6">`Normal`</ph>, <ph id="ph7">`Pressed`</ph>, and <ph id="ph8">`MouseOver`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`CommonStates`</ph> 추가 <ph id="ph5">&lt;xref:System.Windows.VisualState&gt;</ph> 개체의 상태에 대 한 <ph id="ph6">`Normal`</ph>, <ph id="ph7">`Pressed`</ph>, 및 <ph id="ph8">`MouseOver`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> also defines a state called <ph id="ph2">`Disabled`</ph> that is in the <ph id="ph3">`CommonStates`</ph><ph id="ph4">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>, but the example omits it for brevity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 이라는 상태의 정의 <ph id="ph2">`Disabled`</ph> 에 <ph id="ph3">`CommonStates`</ph> <ph id="ph4">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>, 하지만 예제에서는 간단한 설명을 위해 생략 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualState">
          <source>For the entire example, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">전체 예제를 보려면 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualState.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.VisualState.Name">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>You specify which visual state an element should enter by passing the <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph>.</source>
          <target state="translated">시각적 상태 요소를 전달 하 여 입력 해야 지정는 <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, the control author should specify which <ph id="ph4">&lt;xref:System.Windows.VisualState&gt;</ph> objects the control expects to find in its <ph id="ph5">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> by putting the <ph id="ph6">&lt;xref:System.Windows.TemplateVisualStateAttribute&gt;</ph> on its class signature.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, 컨트롤 작성자를 지정 해야 <ph id="ph4">&lt;xref:System.Windows.VisualState&gt;</ph> 컨트롤이 예상에서 찾을 개체의 <ph id="ph5">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 배치 하 여는 <ph id="ph6">&lt;xref:System.Windows.TemplateVisualStateAttribute&gt;</ph> 는 클래스 서명에 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> authors define new <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects and set the <ph id="ph3">&lt;xref:System.Windows.VisualState.Name%2A&gt;</ph> property to the value specified by the <ph id="ph4">&lt;xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 작성자는 새 정의 <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> 개체 집합과 <ph id="ph3">&lt;xref:System.Windows.VisualState.Name%2A&gt;</ph> 속성에 지정 된 값을는 <ph id="ph4">&lt;xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>To find the names of the visual states for the controls that are included with <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id="p1">[</bpt>Control Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.</source>
          <target state="translated">에 포함 된 컨트롤에 대 한 시각적 상태의 이름을 찾으려면 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>컨트롤 스타일 및 템플릿<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>For information about how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects for existing controls, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">만드는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> 기존 컨트롤에 대 한 개체 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`CommonStates`</ph> and adds <ph id="ph5">&lt;xref:System.Windows.VisualState&gt;</ph> objects for the states, <ph id="ph6">`Normal`</ph>, <ph id="ph7">`Pressed`</ph>, and <ph id="ph8">`MouseOver`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`CommonStates`</ph> 추가 <ph id="ph5">&lt;xref:System.Windows.VisualState&gt;</ph> 개체의 상태에 대 한 <ph id="ph6">`Normal`</ph>, <ph id="ph7">`Pressed`</ph>, 및 <ph id="ph8">`MouseOver`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> also defines a state called <ph id="ph2">`Disabled`</ph> that is in the <ph id="ph3">`CommonStates`</ph><ph id="ph4">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>, but the example omits it for brevity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 이라는 상태의 정의 <ph id="ph2">`Disabled`</ph> 에 <ph id="ph3">`CommonStates`</ph> <ph id="ph4">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>, 하지만 예제에서는 간단한 설명을 위해 생략 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Name">
          <source>For the entire example, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">전체 예제를 보려면 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.VisualState.Storyboard">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> that defines the appearance of the control when it is in the state that is represented by the <ph id="ph2">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>가 나타내는 상태일 때 컨트롤의 모양을 정의하는 <ph id="ph2">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>A storyboard that defines the appearance of the control when it is in the state that is represented by the <ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 <ph id="ph1">&lt;see cref="T:System.Windows.VisualState" /&gt;</ph>가 나타내는 상태일 때 컨트롤의 모양을 정의하는 스토리보드입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>When the control enters the state that is specified by the <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> begins.</source>
          <target state="translated">컨트롤에 지정 된 상태로 전환 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> 시작 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>When the control exits the state, the <ph id="ph1">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> stops.</source>
          <target state="translated">컨트롤의 상태가 종료 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.VisualState.Storyboard%2A&gt;</ph> 중지 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> that contains one <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 간단한 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> 하나 포함 된 <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> called <ph id="ph2">`MouseOver`</ph> has a Storyboard that changes the color of the <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> from green to red when the user puts the mouse over the <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 호출 <ph id="ph2">`MouseOver`</ph> 의 색을 변경 하는 스토리 보드에는 <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> 를 통해 사용자가 마우스 빨강으로 녹색에서는 <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.VisualState.Storyboard">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> called <ph id="ph2">`Normal`</ph> is included so that when the user moves the mouse off the button, the <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> returns to green.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> 호출 <ph id="ph2">`Normal`</ph> 포함 되어 있는 단추 밖으로 마우스를 이동할 때의 <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> 녹색으로 반환 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>