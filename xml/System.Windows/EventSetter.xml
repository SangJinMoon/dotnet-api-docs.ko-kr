<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f1abeae481be679a4c632b9e1b904e5a0a9369e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36460431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <TypeSignature Language="F#" Value="type EventSetter = class&#xA;    inherit SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>스타일에서 이벤트 setter를 나타냅니다. 이벤트 setter는 이벤트에 대한 응답으로 지정된 이벤트 처리기를 호출합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 모든 요소에 적용 되는 라우트된 이벤트에 대 한 응답으로 지정 된 이벤트 처리기를 호출 하는 이벤트 setter는 <xref:System.Windows.Style> 인스턴스 처리기 각 개별 요소에 연결 하는 대신 합니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
 이벤트 setter는 이벤트는 라우트된 이벤트를 선언할 수 있습니다. 버블링, 이벤트 또는 이벤트 터널링 직접 라우팅 전략 라우트된 이벤트에 대 한 이벤트 setter를 선언할 수 있습니다.  
  
 인스턴스는 <xref:System.Windows.EventSetter> 클래스를 통해 일반적으로 만들어진 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]스타일 내에서 개체 요소를 통해 정의 된 대로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다. <xref:System.Windows.EventSetter> 코드에서 인스턴스화될 수 있습니다.  
  
 테마 리소스 사전에 포함 된 스타일에서 이벤트 setter는 사용할 수 없습니다. 이 계정이 기 때문에 런타임 시 테마 리소스 사전을 느슨한 [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] 파일을 선택한 포함 하지 않는 범위 정의 코드 숨김 처리기를 정의 하는 관련 있을 수 있습니다.  
  
 이벤트에 대 한 클래스 처리기 뒤와 인스턴스 처리기 이벤트 setter를 통해 연결 된 처리기가 호출 됩니다. 결과적으로, 클래스 처리기 또는 인스턴스 처리기는 인수에서 이벤트를 처리를 표시할 경우 다음 한 이벤트 setter가 선언 하는 처리기가 호출 되지 이벤트 setter를 명시적으로 설정 하지 않는 한 <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`합니다.  
  
 이벤트 setter에서 가져올 수도 있습니다 <xref:System.Windows.Style.BasedOn%2A> 스타일입니다. 로 지정 된 스타일에서 이벤트 setter 처리기 <xref:System.Windows.Style.BasedOn%2A> 후 즉시 스타일에 대 한 처리기가 호출 됩니다.  
  
 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다. 트리거 (<xref:System.Windows.TriggerBase> 및 파생 클래스) 지원 하지 않는 <xref:System.Windows.EventSetter>합니다.  
  
   
  
## Examples  
 다음 예에서는 설정 단일 <xref:System.Windows.EventSetter> 페이지 수준 스타일 내에서.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 다음은 예제에서는 이벤트 처리기.  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.EventSetter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.EventSetter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventSetter : System.Windows.RoutedEvent * Delegate -&gt; System.Windows.EventSetter" Usage="new System.Windows.EventSetter (routedEvent, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <see cref="T:System.Windows.EventSetter" />에서 응답하는 특정 라우트된 이벤트입니다.</param>
        <param name="handler">이 setter에서 할당할 처리기입니다.</param>
        <summary>제공된 이벤트 및 처리기 매개 변수를 사용하여 <see cref="T:System.Windows.EventSetter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 서명을 하는 경우 일반적으로 사용 됩니다 만들기 하는 <xref:System.Windows.EventSetter> 코드 숨김 만들려고 하거나 코드를 한 <xref:System.Windows.EventSetter> 전에 사용 하도록 기존 스타일을 보완 하 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Event : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventSetter.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.EventSetter" />에서 응답하는 특정 라우트된 이벤트를 가져오거나 설정합니다.</summary>
        <value>라우트된 이벤트의 식별자 필드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 포함 된 스타일이 속성이 설정할 수 없습니다는 <xref:System.Windows.EventSetter> 사용 중에서 이므로 봉인 합니다. 코드에서이 속성을 설정 하는 경우 사용 중인 스타일의 가능성은 값을 확인 합니다.는 <xref:System.Windows.SetterBase.IsSealed%2A> 속성에는 <xref:System.Windows.EventSetter> 설정 하려고 하기 전에 인스턴스 <xref:System.Windows.EventSetter.Event%2A>합니다.  
  
   
  
## Examples  
 다음 예에서는 <xref:System.Windows.EventSetter.Event%2A> 속성의 일부로 <xref:System.Windows.EventSetter> 태그 스타일에서입니다.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">봉인된 <see cref="T:System.Windows.EventSetter" />에서 이 속성을 설정하려고 시도한 경우</exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HandledEventsToo : bool with get, set" Usage="System.Windows.EventSetter.HandledEventsToo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트 데이터에서 이벤트가 처리된 것으로 표시된 경우에도 setter에 할당된 처리기를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>처리기를 호출해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  설정의 <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> 이벤트 처리기가 호출 하는 방법의 특징 점에 유의 지정할 수 있는 방법은 임을 코드에서 항상 수행 해야 <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> 인스턴스에 할당 하는 이벤트 처리기를 정의 하는 경우 직접에 이벤트에서 명명 된 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 구문입니다. 이 값을 설정 하지만 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 결과 컴파일 타임 오류를 생성 하지 않습니다 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 스타일을 사용할 때에 런타임 예외를 생성 합니다.  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 이 속성에서 사용할 수 해야 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다. 설명 부분을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Delegate with get, set" Usage="System.Windows.EventSetter.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setter의 라우트된 이벤트에 대한 처리기 참조를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Windows.EventSetter" />에 의해 연결되는 처리기에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 <xref:System.Windows.EventSetter.Handler%2A> 속성의 일부로 <xref:System.Windows.EventSetter> 태그 스타일에서입니다.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>