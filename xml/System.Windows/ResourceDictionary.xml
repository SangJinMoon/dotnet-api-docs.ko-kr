<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceDictionary.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5030bac97d9532fe4934de58549ae114d1dd41214.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">030bac97d9532fe4934de58549ae114d1dd41214</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ResourceDictionary">
          <source>Provides a hash table / dictionary implementation that contains WPF resources used by components and other elements of a WPF application.</source>
          <target state="translated">구성 요소 및 WPF 응용 프로그램의 기타 요소에서 사용하는 WPF 리소스를 포함하는 해시 테이블/사전 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>The items in a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> are not immediately processed when application code is loaded by a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> loader.</source>
          <target state="translated">항목에는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 응용 프로그램 코드를 로드할 때 즉시 처리 되지 않습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 로더 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> persists as an object, and the individual values are processed only when they are specifically requested.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 는 개체로 유지 되 고 개별 값에 명시적으로 요청 될 경우에 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class is not derived from <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스에서 파생 되지 않은 <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class implements <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> but relies on a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> internally.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스 구현 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 에 의존 하지만 <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> 내부적으로 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class is typically an implicit collection element that is the object element value of several <ph id="ph3">`Resources`</ph> properties, when given in property element syntax.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스는 일반적으로 일부의 개체 요소 값은 암시적 컬렉션 요소 <ph id="ph3">`Resources`</ph> 속성, 속성 요소 구문에 지정 된 경우.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>For details on implicit collections in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id="p1">[</bpt>XAML Syntax In Detail<ept id="p1">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>.</source>
          <target state="translated">암시적 컬렉션에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>XAML 구문에서 세부<ept id="p1">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>An exception is when you want to specify a merged dictionary; for details, see <bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.</source>
          <target state="translated">예외는 병합 된 사전;를 지정 하려는 경우 자세한 내용은 참조 <bpt id="p1">[</bpt>자세한<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Another possible <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage is to declare a resource dictionary as a discrete <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file, and either load it at run time with <ph id="ph3">&lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;</ph> or include it in a (full-trust) project as a resource or loose file.</source>
          <target state="translated">가능한 다른 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 사용법은 단일 리소스 사전을 선언 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 파일을 로드 하거나 실행 시 <ph id="ph3">&lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;</ph> 또는 리소스 또는 느슨한 파일 (완전 신뢰) 프로젝트에 포함 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> can be declared as an object element, serving as the root element of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 의 루트 요소 역할을 수행 하는 object 요소로 선언할 수 있습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>You must map the appropriate XML namespace values (default for the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> namespace and typically <ph id="ph2">`x:`</ph> for the <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> namespace) onto the <ph id="ph4">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> element if you plan to use it as the root element.</source>
          <target state="translated">적절 한 XML 네임 스페이스 값을 매핑해야 합니다 (에 대 한 기본는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 네임 스페이스 및 일반적으로 <ph id="ph2">`x:`</ph> 에 대 한는 <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 네임 스페이스)에 <ph id="ph4">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 요소 루트 요소로 사용 하려는 경우.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Then you can add child elements that define the resources, each with an  value.</source>
          <target state="translated">다음 값을 가진 각 리소스를 정의 하는 자식 요소를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>XAML Implicit Collection Usage</source>
          <target state="translated">XAML 암시적 컬렉션 사용</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source><bpt id="p1">*</bpt>resourcesProperty<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>resourcesProperty<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>A property specifying a property element, where the value type of that property is <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">해당 속성의 값 형식이 인 속성 요소를 지정 하는 속성이 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Typically, this is the <ph id="ph1">`Resources`</ph> property of <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, or of <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> in an application resources case.</source>
          <target state="translated">이 일반적으로 <ph id="ph1">`Resources`</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> 응용 프로그램 리소스 사례에 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source><bpt id="p1">*</bpt>oneOrMoreResources<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreResources<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>One or more resources specified as object elements.</source>
          <target state="translated">하나 이상의 리소스 개체 요소로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ResourceDictionary">
          <source>Each resource that you specify must have an <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](~/docs/framework/xaml-services/x-key-directive.md)</ept> assigned.</source>
          <target state="translated">지정 하는 각 리소스에 있어야는 <bpt id="p1">[</bpt>X:key 지시문<ept id="p1">](~/docs/framework/xaml-services/x-key-directive.md)</ept> 할당 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>The name of the key to add.</source>
          <target state="translated">추가할 키의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>The value of the resource to add.</source>
          <target state="translated">추가할 리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>Adds a resource by key to this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 키별로 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>Attempting to add a duplicate key raises an exception.</source>
          <target state="translated">중복 키를 추가 하려고 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>Keys are always added to the base dictionary.</source>
          <target state="translated">키는 항상 기본 사전에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>Keys in <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> within the current <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> are not checked for duplication, only the base dictionary is checked for duplicates.</source>
          <target state="translated">에 키 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 현재 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 기본 사전을 중복 검사 중복 여부를 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> is locked or read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>가 읽기 전용이거나 잠겨 있는 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">같은 키를 가진 요소가 이미 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>에 있는 경우</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>Begins the initialization phase for this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 대한 초기화 단계를 시작합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>Calling this method is an indication that the contents of the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> are about to be loaded.</source>
          <target state="translated">이 메서드를 호출 하는 내용의 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>The next step in the process is to call <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph>.</source>
          <target state="translated">호출 하는 프로세스의 다음 단계는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>Do not call <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> more than once, before calling  <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph>.</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> 두 번 이상 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>Doing so will raise an exception.</source>
          <target state="translated">이렇게 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.BeginInit">
          <source>Called <ph id="ph1">&lt;see cref="M:System.Windows.ResourceDictionary.BeginInit" /&gt;</ph> more than once before <ph id="ph2">&lt;see cref="M:System.Windows.ResourceDictionary.EndInit" /&gt;</ph> was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.ResourceDictionary.BeginInit" /&gt;</ph>를 호출하기 전에 <ph id="ph2">&lt;see cref="M:System.Windows.ResourceDictionary.EndInit" /&gt;</ph>를 여러 번 호출한 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Clear">
          <source>Clears all keys (and values) in the base <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>의 모든 키 및 값을 지웁니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Clear">
          <source>This does not clear any merged dictionary items.</source>
          <target state="translated">그러나 이렇게 해도 병합된 사전 항목은 지워지지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Clear">
          <source>If you need to clear merged dictionary items, obtain the particular dictionary from <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> collection and specifically call <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Clear%2A&gt;</ph> on that <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, although typically the dictionaries are remote and you might not have access.</source>
          <target state="translated">병합 된 사전 항목의 선택을 취소 해야 할 경우 가져올에서 특정 사전 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 컬렉션과 특별히 호출 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Clear%2A&gt;</ph> 그에 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>원격 사전은 일반적으로 액세스 권한이 없을 수 있지만, 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Clear">
          <source>Alternatively, remove the entire <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> from <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> by calling Remove on the generic collection.</source>
          <target state="translated">또는 전체를 제거할 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 에서 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 제네릭 컬렉션에서 제거를 호출 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에서 찾을 수 있는 키입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">지정된 키를 갖는 요소가 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 들어 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> contains a key-value pair with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 지정한 키가 있는 키-값 쌍이 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Contains(System.Object)">
          <source>If the requested key is not in this resource dictionary, the resource lookup logic will also check the merged dictionaries.</source>
          <target state="translated">요청된 된 키가 리소스 사전에 없는 경우 리소스 조회 논리 병합된 된 사전도 확인 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>The one-dimensional array that is the destination of the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from the <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 인스턴스에서 복사한 <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> 개체의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>The zero-based index of <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> where copying begins.</source>
          <target state="translated">복사가 시작되는 <bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> at the specified index.</source>
          <target state="translated">지정한 인덱스에서 1차원 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 엔트리를 복사합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>This copies only the base dictionary.</source>
          <target state="translated">이 기본 사전만 복사합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
          <source>The result array will have no <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> if it is reconstituted to be a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> again.</source>
          <target state="translated">결과 배열은 아무런 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 되도록 다시 구성 될 경우는 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 다시 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Count">
          <source>Gets the number of entries in the base <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 있는 항목의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Count">
          <source>The current number of entries in the base dictionary.</source>
          <target state="translated">기본 사전의 현재 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.DeferrableContent">
          <source>Gets or sets the deferrable content for this resource dictionary.</source>
          <target state="translated">이 리소스 사전의 지연 가능한 콘텐츠를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.DeferrableContent">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.EndInit">
          <source>Ends the initialization phase, and invalidates the previous tree such that all changes made to keys during the initialization phase can be accounted for.</source>
          <target state="translated">초기화 단계를 종료하고 초기화 단계 도중 키에 대해 수행한 모든 변경 내용을 고려할 수 있도록 이전 트리를 무효화합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.EndInit">
          <source><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph> follow a transaction model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph> 트랜잭션 모델을 따릅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.EndInit">
          <source><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> marks the dictionary uninitialized and <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph> marks it initialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.BeginInit%2A&gt;</ph> 사전을 초기화 되지 않은 표시 및 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.EndInit%2A&gt;</ph> 초기화 되 고 표시 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.FindName(System.String)">
          <source>The name identifier for the object being requested.</source>
          <target state="translated">요청되는 개체의 이름 식별자입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.FindName(System.String)">
          <source>Not supported by this Dictionary implementation.</source>
          <target state="translated">이 사전 구현에서는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.FindName(System.String)">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.FindName(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class does not support registering by name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스 이름으로 등록을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.FindName(System.String)">
          <source>It uses keys instead.</source>
          <target state="translated">대신 키를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that can be used to iterate through the <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>를 반복하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.GetEnumerator">
          <source>A specialized enumerator for the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>의 특수 열거자입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.GetEnumerator">
          <source>The iterator is for the base dictionary only.</source>
          <target state="translated">이 반복기는 기본 사전입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
          <source>Gets or sets a value that indicates whether the invalidations fired by the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> object cause <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContentPresenter" /&gt;</ph> objects to reevaluate their choice of template.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> 개체에 의해 발생한 무효화로 인해 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContentPresenter" /&gt;</ph> 개체에서 템플릿 선택을 다시 계산하는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
          <source>The invalidations happen when an implicit data template resource changes.</source>
          <target state="translated">암시적 데이터 템플릿 리소스가 변경되면 무효화가 발생합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the invalidations cause <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContentPresenter" /&gt;</ph> objects to reevaluate their choice of template; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">무효화로 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContentPresenter" /&gt;</ph> 개체에서 템플릿 선택을 다시 계산하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않은 경우 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.IsFixedSize">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> is fixed-size.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>의 크기가 고정되어 있는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the hash table is fixed-size; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해시 테이블의 크기가 고정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.IsFixedSize">
          <source>The default implementation returns the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> default, which is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">기본 구현은 반환 하는 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 기본값 즉, <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.IsReadOnly">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>가 읽기 전용인지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the hash table is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해시 테이블이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.IsReadOnly">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> default, which is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 속성은 반환 된 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 기본값 즉, <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>The desired key to get or set.</source>
          <target state="translated">가져오거나 설정할 원하는 키입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>Gets or sets the value associated with the given key.</source>
          <target state="translated">지정한 키와 연결된 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>Value of the key.</source>
          <target state="translated">키의 값입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>If the requested key is not in this resource dictionary, the framework resource system will also check the merged dictionaries.</source>
          <target state="translated">요청된 된 키가 리소스 사전에 없는 경우 프레임 워크 리소스 시스템 병합된 된 사전도 확인 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>Checking a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> by item or index is not generally the preferred way to retrieve resources.</source>
          <target state="translated">검사는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 항목이 나 인덱스 별로 않습니다 일반적으로 리소스를 검색 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>You should instead call methods that are capable of participating in the full resource lookup process and look up resources by their keys, and that can find the resources in applications or themes.</source>
          <target state="translated">대신 전체 리소스 조회 프로세스에 참가 하 고 해당 키를 기준으로 리소스를 조회 하 고 응용 프로그램 또는 테마에서 리소스를 찾을 수 있는 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> is such a method, and is present on any <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> 이러한 메서드는 및에 존재 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>Otherwise your attempt to find the resource does not match the true run-time behavior.</source>
          <target state="translated">그렇지 않으면 리소스를 찾을 수 시도할 때 실제 런타임 동작은 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>However, obtaining resources directly from an individual dictionary might be appropriate if you are retrieving resources from a known <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> location, and are doing so to avoid the possible performance and scope implications of run-time key lookup.</source>
          <target state="translated">그러나 리소스는 개별 사전에서 직접 얻을 수 있습니다는 알려진에서 리소스를 검색 하는 경우 적절 한 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 위치 되며 런타임에 키 조회의 가능한 성능 및 범위 의미를 방지 하려는 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>You do not use indexers to define collection members in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">인덱서 정의의 컬렉션 멤버를 사용 하지 않는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>Instead, you create child elements in markup.</source>
          <target state="translated">대신, 자식 요소 만듭니다 태그에서.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>The child elements are either child elements of <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, or of a property element where the property type is <ph id="ph2">`ResourceDictionary`</ph>.</source>
          <target state="translated">자식 요소는의 자식 요소 이거나 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, 또는 속성 형식이 속성 요소의 <ph id="ph2">`ResourceDictionary`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Item(System.Object)">
          <source>For details, see the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage sections in <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 사용 섹션 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>Gets a collection of all keys contained in this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 포함된 모든 키의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>The collection of all keys.</source>
          <target state="translated">모든 키의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>This property exists because it is required by <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>, but <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Keys%2A&gt;</ph> generally is not useful for most <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> scenarios.</source>
          <target state="translated">이 속성이 필요 하기 때문에 문제가 발생 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>, 하지만 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Keys%2A&gt;</ph> 대부분 유용 하지 않습니다 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>The returned keys do not include keys within the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>.</source>
          <target state="translated">반환 되는 키 내에서 키를 포함 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>Also the keys collection is a snapshot of the keys in the base dictionary.</source>
          <target state="translated">또한 키 컬렉션은 기본 사전에 키의 스냅숏입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Keys">
          <source>If you subsequently make changes to this <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, a stored <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Keys%2A&gt;</ph> will not reflect the changes.</source>
          <target state="translated">이후에이를 변경 하는 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, 저장 한 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Keys%2A&gt;</ph> 변경 내용이 반영 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Gets a collection of the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> dictionaries that constitute the various resource dictionaries in the merged dictionaries.</source>
          <target state="translated">병합된 사전에서 다양한 리소스 사전을 구성하는 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> 사전의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>The collection of merged dictionaries.</source>
          <target state="translated">병합된 사전의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Dictionaries are merged by adding a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> to the generic collection referenced by <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>.</source>
          <target state="translated">사전 추가 하 여 병합 된 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 참조 하는 제네릭 컬렉션을 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>A merged <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> does not have resource elements defined within it in markup.</source>
          <target state="translated">병합 된 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 태그에서 내에 정의 된 요소에는 없습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Instead, the merged dictionary is a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> with no markup child elements defined (or with no elements added through code), but with a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> specified for <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph>.</source>
          <target state="translated">대신, 병합 된 사전이 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 태그 자식 요소나 정의 된 또는 (코드를 통해 추가 요소 없이)로 <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> 에 대해 지정 된 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> designation enables the merged dictionary to come from an external source, such as a separate resource assembly that ships with the application, "loose <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>", or a specific localization or global resources assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 지정 응용 프로그램을 함께 제공 되는 별도 리소스 어셈블리 등의 외부 소스에서 온 것으로 병합된 사전을 사용 하면 "느슨한 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>", 또는 특정 지역화 또는 전역 리소스 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Specifying resource elements within a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> that has <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> specified is not supported.</source>
          <target state="translated">내에서 리소스 요소를 지정 하는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 올려진 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 지정 된 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Lookup behavior within the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> collection will search the last-added <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> first, and the search stops as soon as a requested key is found.</source>
          <target state="translated">내에서 조회 동작에서 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 컬렉션은 마지막으로 추가 된 검색 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 첫 번째, 및 요청 된 키가 발견 되는 즉시 검색 중지 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>Duplicate keys across the collection of merged dictionaries are not illegal.</source>
          <target state="translated">병합 된 사전 컬렉션에서 중복 키가 잘못 되었습니다. 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>For more information on merged dictionary behavior, see <bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.</source>
          <target state="translated">병합 된 사전 동작에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>병합 된 리소스 사전을<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML 속성 요소 사용</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source><bpt id="p1">*</bpt>oneOrMoreResourceDictionaries<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreResourceDictionaries<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>One or more <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> object elements.</source>
          <target state="translated">하나 이상의 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 개체 요소입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>A <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> used for <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> does not have collection content, and specifies a <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> attribute that references the complete <ph id="ph4">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> remotely.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 에 사용 되는 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 컬렉션 콘텐츠를 포함 하지 않는 하 고 지정 된 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 전체 참조 하는 특성 <ph id="ph4">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 원격으로 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.MergedDictionaries">
          <source>The following example specifies two <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> elements to be merged into the primary <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개의 지정 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 요소를 사용 하는 주에 병합할 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
          <source>The key of the resource to get.</source>
          <target state="translated">가져올 리소스의 키입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
          <source>The value of the requested resource.</source>
          <target state="translated">요청한 리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the resource can be saved and used later; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">리소스를 저장했다가 나중에 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> receives a request for a resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>가 리소스에 대한 요청을 수신하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>Not supported.</source>
          <target state="translated">지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>Not supported.</source>
          <target state="translated">지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>Not supported by this Dictionary implementation.</source>
          <target state="translated">이 사전 구현에서는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class does not support registering by name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스 이름으로 등록을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>It uses keys instead.</source>
          <target state="translated">대신 키를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>The XAML namescope methods are implemented as inoperative versions in <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> to make it clear that XAML names do not apply to resources.</source>
          <target state="translated">XAML 이름 범위 메서드가 구현 됩니다 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 명확히 해당 XAML 이름 리소스에 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>Calling this method will cause a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> to be thrown.</source>
          <target state="translated">이 메서드는 발생 하는 호출을 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
          <source>In all cases when this method is called.</source>
          <target state="translated">이 메서드가 호출되는 모든 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>Key of the entry to remove.</source>
          <target state="translated">제거할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>Removes the entry with the specified key from the base dictionary.</source>
          <target state="translated">기본 사전에서 지정한 키가 있는 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 지정된 키를 가진 요소가 포함 되지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 그대로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>No exception is raised.</source>
          <target state="translated">예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>This method does not remove keys from the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 키를 제거 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>You must obtain the specific <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> from the collection to remove those keys, but that might not be possible because you are typically accessing such a dictionary remotely.</source>
          <target state="translated">특정 얻어야 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 해당 키를 제거 하려면 컬렉션에서 있지만 있는 하지 못할 수도 있습니다는 해당 사전을 원격으로 액세스 일반적으로 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> is locked or read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>가 읽기 전용이거나 잠겨 있는 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Source">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> to load resources from.</source>
          <target state="translated">리소스를 로드할 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>The source location of an external resource dictionary.</source>
          <target state="translated">외부 리소스 사전의 원본 위치입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>Typically, <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> is specified as a Pack URI, which references the location of a resource dictionary that is included as a noncompiled Resource or Content build action by your application building project.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 응용 프로그램 빌드 프로젝트도 컴파일되지 않은 리소스 또는 콘텐츠 빌드 작업으로 포함 된 리소스 사전의 위치를 참조 하는 Pack URI로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>For details on the Pack URI format, see <bpt id="p1">[</bpt>Pack URIs in WPF<ept id="p1">](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)</ept>.</source>
          <target state="translated">Pack URI 형식에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>WPF의 Pack Uri<ept id="p1">](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>Generally, the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> property is set only for a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> that is specified for the <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> property (either as a property element in <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, or as a <ph id="ph5">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> item of the collection in code).</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 에 대해서만 속성은 한 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 에 지정 된는 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph> 속성 (둘 중 하나에 속성 요소로 <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>로 <ph id="ph5">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 코드에서 컬렉션의 항목).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>In this context, setting the value for <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> will merge the dictionary contents found at the supplied <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> into the current <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">이 컨텍스트에서 값을 설정 하면 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.Source%2A&gt;</ph> 에 제공 된 사전 내용이 병합 됩니다 <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> 현재 <ph id="ph3">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>Any load failures will cause an exception to be thrown.</source>
          <target state="translated">모든 부하 오류를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Source">
          <source>The following example specifies two <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> elements to be merged into the primary <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개의 지정 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 요소를 사용 하는 주에 병합할 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>A zero-based <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that receives the copied items from the <ph id="ph2">&lt;see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /&gt;</ph>에서 복사된 항목을 수신하는 0부터 시작하는 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The first position in the specified <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> to receive the copied contents.</source>
          <target state="translated">복사한 내용을 받도록 지정된 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>의 첫째 위치입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.IsSynchronized" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.IsSynchronized" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to <ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Windows.Markup.IUriContext.BaseUri" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Windows.Markup.IUriContext.BaseUri" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
          <source>The base <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the current context.</source>
          <target state="translated">현재 컨텍스트의 기본 <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
          <source>Not supported.</source>
          <target state="translated">지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
          <source>Not supported by this Dictionary implementation.</source>
          <target state="translated">이 사전 구현에서는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> class does not support registering by name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 클래스 이름으로 등록을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
          <source>It uses keys instead.</source>
          <target state="translated">대신 키를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
          <source>Calling this method does nothing.</source>
          <target state="translated">이 메서드를 호출 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.ResourceDictionary.Values">
          <source>Gets a collection of all values associated with keys contained in this <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph>에 포함된 키와 연결된 모든 값의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Values">
          <source>The collection of all values.</source>
          <target state="translated">모든 값의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Values">
          <source>This property exists because it is required by <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>, but generally is not useful for most <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> scenarios.</source>
          <target state="translated">이 속성이 필요 하기 때문에 문제가 발생 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>, 일반적으로 대부분 유용 하지 않습니다 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Values">
          <source>The returned values do not include values within the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>.</source>
          <target state="translated">반환 된 값 내에서 값을 포함 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary.MergedDictionaries%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Values">
          <source>Also the collection is a snapshot of the values in the base dictionary.</source>
          <target state="translated">또한 컬렉션은 기본 사전에 있는 값의 스냅숏입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ResourceDictionary.Values">
          <source>If you subsequently make changes to this <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, a stored <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Values%2A&gt;</ph> will not reflect the changes.</source>
          <target state="translated">이후에이를 변경 하는 경우 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, 저장 한 <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Values%2A&gt;</ph> 변경 내용이 반영 되지 것입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>