<Type Name="Vector" FullName="System.Windows.Vector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0522150d9c8bcdfd327e98c386e59efd9c8e18b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Vector : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Vector extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Vector" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Vector : IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.VectorConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.VectorValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b7428-101">2차원 공간의 변위를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7428-101">Represents a displacement in 2-D space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-102">A <xref:System.Windows.Point> 고정된 위치를 나타내는 반면 <xref:System.Windows.Vector> 방향과 (예를 들어 개발 속도 또는 가속) 크기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-102">A <xref:System.Windows.Point> represents a fixed position, but a <xref:System.Windows.Vector> represents a direction and a magnitude (for example, velocity or acceleration).</span></span> <span data-ttu-id="b7428-103">따라서 선 세그먼트의 끝점은 포인트 있지만 차이가 vector 해당 즉, 방향 및 길이 선 세그먼트 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-103">Thus, the endpoints of a line segment are points but their difference is a vector; that is, the direction and length of that line segment.</span></span>  
  
 <span data-ttu-id="b7428-104">Xaml에서는 사이의 구분 기호는 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 값은 <xref:System.Windows.Vector> 쉼표 또는 공백이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-104">In XAML, the delimiter between the <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> values of a <xref:System.Windows.Vector> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="b7428-105">일부 문화권 소수점 구분 기호로 마침표 대신로 쉼표 문자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-105">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="b7428-106">고정 문화권에 대 한 처리 하는 XAML 대부분 XAML 프로세서 구현에서 EN-US로 기본값을 소수 구분 기호로 마침표 속해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-106">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="b7428-107">지정 하는 경우 소수 구분 기호로 쉼표 문자를 사용 하면 안 한 <xref:System.Windows.Vector> XAML에서 문자열 형식 변환의 충돌은 때문에 <xref:System.Windows.Vector> 특성 값에는 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-107">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Vector> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Vector> attribute value into the <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Vector"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b7428-108">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="b7428-108">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_Vector"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b7428-109">XAML 값</span><span class="sxs-lookup"><span data-stu-id="b7428-109">XAML Values</span></span>  
 <span data-ttu-id="b7428-110">*x*</span><span class="sxs-lookup"><span data-stu-id="b7428-110">*x*</span></span>  
 <span data-ttu-id="b7428-111">벡터의 X 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-111">The vector's X component.</span></span> <span data-ttu-id="b7428-112">자세한 내용은 <xref:System.Windows.Vector.X%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b7428-112">For more information, see the <xref:System.Windows.Vector.X%2A> property.</span></span>  
  
 <span data-ttu-id="b7428-113">*y*</span><span class="sxs-lookup"><span data-stu-id="b7428-113">*y*</span></span>  
 <span data-ttu-id="b7428-114">벡터의 Y 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-114">The vector's Y component.</span></span> <span data-ttu-id="b7428-115">자세한 내용은 <xref:System.Windows.Vector.Y%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b7428-115">For more information, see the <xref:System.Windows.Vector.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-116">다음 예제에서는 두 개의 추가 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-116">The following example shows how to add two <xref:System.Windows.Vector> structures.</span></span>  
  
 [!code-csharp[VectorSample#10](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorSample/CSharp/Window1.xaml.cs#10)]
 [!code-vb[VectorSample#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorSample/visualbasic/window1.xaml.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Windows.Vector.Add" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(double x, double y);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="b7428-117">새 <see cref="P:System.Windows.Vector.X" />의 <see cref="T:System.Windows.Vector" /> 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-117">The <see cref="P:System.Windows.Vector.X" />-offset of the new <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="b7428-118">새 <see cref="P:System.Windows.Vector.Y" />의 <see cref="T:System.Windows.Vector" /> 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-118">The <see cref="P:System.Windows.Vector.Y" />-offset of the new <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-119">
            <see cref="T:System.Windows.Vector" /> 구조체의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-119">Initializes a new instance of the <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-120">다음 예제에서는 두 벡터를 만들고 함께 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-120">The following example shows how to create two vectors and add them together.</span></span>  
  
 [!code-csharp[VectorExamples_snip#AddTwoVectorsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#addtwovectorsexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-121">벡터를 점이나 다른 벡터에 더합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-121">Adds a vector to a point or to another vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Vector vector, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Vector vector, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Vector vector, System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-122">지정된 점을 변환할 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-122">The amount to translate the specified point.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="b7428-123">변환할 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-123">The point to translate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-124">지정된 벡터에 따라 지정된 점을 변환하고 결과 점을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-124">Translates the specified point by the specified vector and returns the resulting point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-125">
            <paramref name="point" />에 따라 <paramref name="vector" />를 변환한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-125">The result of translating <paramref name="point" /> by <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-126">다음 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 구조체는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-126">The following example shows how to use this method to add a <xref:System.Windows.Point> structure to a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Vector.Add" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Add (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Add(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (vector1 As Vector, vector2 As Vector) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Add(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-127">더할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-127">The first vector to add.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-128">더할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-128">The second vector to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-129">두 벡터를 더한 결과를 <see cref="T:System.Windows.Vector" /> 구조체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-129">Adds two vectors and returns the result as a <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-130">
            <paramref name="vector1" />와 <paramref name="vector2" />의 합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-130">The sum of <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-131">다음 예제에서는 두 개의 추가 하려면이 메서드를 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-131">The following example shows how to use this method to add two <xref:System.Windows.Vector> structures.</span></span>  
  
 [!code-csharp[VectorExamples_snip#AddTwoVectorsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#addtwovectorsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Vector.Add" />
      </Docs>
    </Member>
    <Member MemberName="AngleBetween">
      <MemberSignature Language="C#" Value="public static double AngleBetween (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 AngleBetween(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AngleBetween (vector1 As Vector, vector2 As Vector) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double AngleBetween(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-132">계산할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-132">The first vector to evaluate.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-133">계산할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-133">The second vector to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-134">지정된 두 벡터 사이의 각도를 도 단위로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-134">Retrieves the angle, expressed in degrees, between the two specified vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-135">
            <paramref name="vector1" />과 <paramref name="vector2" /> 사이의 각도(도 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-135">The angle, in degrees, between <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-136">다음 예제에서는이 메서드를 사용 하 여 두 각도를 가져오는 방법을 보여 줍니다. <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-136">The following example shows how to use this method to get the angle between two <xref:System.Windows.Vector> structures.</span></span>  
  
 [!code-csharp[VectorExamples_snip#AngleBetweenExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#anglebetweenexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossProduct">
      <MemberSignature Language="C#" Value="public static double CrossProduct (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CrossProduct(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CrossProduct (vector1 As Vector, vector2 As Vector) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CrossProduct(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-137">계산할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-137">The first vector to evaluate.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-138">계산할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-138">The second vector to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-139">두 벡터의 외적을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-139">Calculates the cross product of two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-140">
            <paramref name="vector1" />과 <paramref name="vector2" />의 외적입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-140">The cross product of <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
          <span data-ttu-id="b7428-141">다음 수식을 통해 외적이 계산됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-141">The following formula is used to calculate the cross product:</span>
          </span>
          <span data-ttu-id="b7428-142">
            <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-142">
              <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-143">다음 예제에서는 두 개의 외적을 계산 하려면이 메서드를 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-143">The following example shows how to use this method to calculate the cross product of two <xref:System.Windows.Vector> structures.</span></span>  
  
 [!code-csharp[VectorExamples_snip#CrossProductExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#crossproductexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public static double Determinant (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Determinant(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Determinant (vector1 As Vector, vector2 As Vector) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Determinant(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-144">계산할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-144">The first vector to evaluate.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-145">계산할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-145">The second vector to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-146">두 벡터의 행렬식을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-146">Calculates the determinant of two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-147">
            <paramref name="vector1" />과 <paramref name="vector2" />의 행렬식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-147">The determinant of <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-148">다음 예제에서는 두 개의의 행렬식을 계산 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-148">The following example shows how to calculate the determinant of two <xref:System.Windows.Vector> structures.</span></span>  
  
 [!code-csharp[VectorExamples_snip#DeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#determinantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Divide (System.Windows.Vector vector, double scalar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Divide(valuetype System.Windows.Vector vector, float64 scalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Divide(System::Windows::Vector vector, double scalar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="scalar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-149">나눌 벡터 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-149">The vector structure to divide.</span>
          </span>
        </param>
        <param name="scalar">
          <span data-ttu-id="b7428-150">
            <c>벡터</c>를 나눌 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-150">The amount by which <c>vector</c> is divided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-151">지정된 벡터를 지정된 스칼라로 나눈 결과를 <see cref="T:System.Windows.Vector" />로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-151">Divides the specified vector by the specified scalar and returns the result as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-152">
            <paramref name="vector" />를 <paramref name="scalar" />로 나눈 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-152">The result of dividing <paramref name="vector" /> by <paramref name="scalar" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-153">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 는 스칼라입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-153">The following example shows how to use this method to divide a <xref:System.Windows.Vector> by a scalar.</span></span>  
  
 [!code-csharp[VectorExamples_snip#DivideExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#divideexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-154">두 벡터가 같은지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-154">Compares two vectors for equality.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-155">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-155">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-156">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Double> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-156">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="b7428-157">비교할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-157">The vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-158">지정된 <see cref="T:System.Object" /> 가 <see cref="T:System.Windows.Vector" /> 구조체인지 확인하고, 벡터 구조체이면 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같은지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-158">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Vector" /> structure and, if it is, whether it has the same <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values as this vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-159">
            <paramref name="o" />가 <see cref="T:System.Windows.Vector" />이고 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-159">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Vector" /> and has the same <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values as this vector; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-160">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-160">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-161">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Vector> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-161">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Windows.Vector> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-162">다음 예제에서는이 메서드를 사용 하 여 확인 하는 방법을 보여 줍니다 여부는 <xref:System.Windows.Vector> 및 <xref:System.Object> 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-162">The following example shows how to use this method to check whether a <xref:System.Windows.Vector> and an <xref:System.Object> are equal.</span></span>  
  
 [!code-csharp[VectorExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Vector value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Vector value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Equals(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Vector) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Vector value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7428-163">이 벡터와 비교할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-163">The vector to compare with this vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-164">두 벡터가 같은지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-164">Compares two vectors for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-165">
            <paramref name="value" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-165">
              <see langword="true" /> if <paramref name="value" /> has the same <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values as this vector; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-166">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-166">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-167">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Vector> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-167">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Windows.Vector> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-168">다음 예제에서는이 메서드를 사용 하 여 두 여부를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조체가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-168">The following example shows how to use this method to check whether two <xref:System.Windows.Vector> structures are equal.</span></span>  
  
 [!code-csharp[VectorExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (vector1 As Vector, vector2 As Vector) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-169">비교할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-169">The first vector to compare.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-170">비교할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-170">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-171">지정된 두 벡터가 서로 같은지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-171">Compares the two specified vectors for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-172">
            <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-172">
              <see langword="true" /> if t he <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> components of <paramref name="vector1" /> and <paramref name="vector2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-173">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-173">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-174">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Double> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-174">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-175">다음 예제에서는이 메서드를 사용 하 여 두 여부를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조체가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-175">The following example shows how to use this method to check whether two <xref:System.Windows.Vector> structures are equal.</span></span>  
  
 [!code-csharp[VectorExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7428-176">이 벡터에 대한 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-176">Returns the hash code for this vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-177">이 인스턴스의 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-177">The hash code for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-178">해시 코드를 가져오는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-178">The following example shows how to get the hash code of a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public double Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Vector.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Length { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-179">이 벡터의 길이를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-179">Gets the length of this vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7428-180">이 벡터의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-180">The length of this vector.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-181">벡터의 길이 크기가 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-181">The length of a vector is sometimes referred to as the magnitude.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-182">다음 예제에서는 벡터의 길이를 가져오는이 속성을 사용 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-182">The following example shows how use this property to get the length of a vector.</span></span>  
  
 [!code-csharp[VectorExamples_snip#LengthExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#lengthexample)]
 [!code-vb[VectorExamples_snip#LengthExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#lengthexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthSquared">
      <MemberSignature Language="C#" Value="public double LengthSquared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LengthSquared" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Vector.LengthSquared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthSquared As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LengthSquared { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-183">이 벡터 길이의 제곱을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-183">Gets the square of the length of this vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7428-184">이 벡터 <see cref="P:System.Windows.Vector.Length" />의 제곱입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-184">The square of the <see cref="P:System.Windows.Vector.Length" /> of this vector.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-185">벡터의 길이 크기 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-185">The length of a vector is sometimes referred to as its magnitude.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-186">다음 예제에서는이 속성을 사용 하 여 벡터 길이 제곱을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-186">The following example shows how to use this property to get the square of the length of a vector.</span></span>  
  
 [!code-csharp[VectorExamples_snip#LengthSquaredExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#lengthsquaredexample)]
 [!code-vb[VectorExamples_snip#LengthSquaredExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#lengthsquaredexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-187">지정된 벡터에 지정된 <see cref="T:System.Double" />, <see cref="T:System.Windows.Media.Matrix" />또는 <see cref="T:System.Windows.Vector" />를 곱한 결과를 <see cref="T:System.Windows.Vector" /> 또는 <see cref="T:System.Double" />로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-187">Multiplies the specified vector by the specified <see cref="T:System.Double" />, <see cref="T:System.Windows.Media.Matrix" />, or <see cref="T:System.Windows.Vector" /> and returns the result as a <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Double" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Multiply (double scalar, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Multiply(float64 scalar, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Multiply(double scalar, System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalar" Type="System.Double" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="scalar">
          <span data-ttu-id="b7428-188">곱할 스칼라입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-188">The scalar to multiply.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="b7428-189">곱할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-189">The vector to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-190">지정된 스칼라에 지정된 벡터를 곱한 결과 <see cref="T:System.Windows.Vector" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-190">Multiplies the specified scalar by the specified vector and returns the resulting <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-191">
            <paramref name="scalar" />와 <paramref name="vector" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-191">The result of multiplying <paramref name="scalar" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-192">Scalar를이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-192">The following example shows how to use this method to multiply a scalar by a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#MultiplyVectorByScalarExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#multiplyvectorbyscalarexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Multiply (System.Windows.Vector vector, double scalar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Multiply(valuetype System.Windows.Vector vector, float64 scalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Multiply(System::Windows::Vector vector, double scalar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="scalar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-193">곱할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-193">The vector to multiply.</span>
          </span>
        </param>
        <param name="scalar">
          <span data-ttu-id="b7428-194">곱할 스칼라입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-194">The scalar to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-195">지정된 벡터에 지정된 스칼라를 곱한 결과 <see cref="T:System.Windows.Vector" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-195">Multiplies the specified vector by the specified scalar and returns the resulting <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-196">
            <paramref name="vector" />와 <paramref name="scalar" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-196">The result of multiplying <paramref name="vector" /> and <paramref name="scalar" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-197">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 는 스칼라입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-197">The following example shows how to use this method to multiply a <xref:System.Windows.Vector> by a scalar.</span></span>  
  
 [!code-csharp[VectorExamples_snip#MultiplyVectorByScalarExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#multiplyvectorbyscalarexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Multiply (System.Windows.Vector vector, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Multiply(valuetype System.Windows.Vector vector, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Multiply(System::Windows::Vector vector, System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-198">변환할 벡터 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-198">The vector structure to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="b7428-199">
            <c>벡터</c>에 적용할 변환입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-199">The transformation to apply to <c>vector</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-200">지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 사용하여 지정된 벡터의 좌표 공간을 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-200">Transforms the coordinate space of the specified vector using the specified <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-201">
            <paramref name="vector" />를 <paramref name="matrix" />에 따라 변환한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-201">The result of transforming <paramref name="vector" /> by <paramref name="matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-202">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 여는 <xref:System.Windows.Media.Matrix>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-202">The following example shows how to use this method to multiply a <xref:System.Windows.Vector> by a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#MultiplyVectorByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#multiplyvectorbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static double Multiply (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Multiply(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (vector1 As Vector, vector2 As Vector) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Multiply(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-203">곱할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-203">The first vector to multiply.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-204">곱할 두 번째 벡터 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-204">The second vector structure to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-205">지정된 두 벡터의 내적을 계산한 결과를 <see cref="T:System.Double" />로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-205">Calculates the dot product of the two specified vectors and returns the result as a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-206">다음 수식에 따라 계산된 <paramref name="vector1" />과 <paramref name="vector2" />의 스칼라 내적이 들어 있는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-206">A <see cref="T:System.Double" /> containing the scalar dot product of <paramref name="vector1" /> and <paramref name="vector2" />, which is calculated using the following formula:</span>
          </span>
          <span data-ttu-id="b7428-207">
            <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-207">
              <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-208">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 여는 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-208">The following example shows how to use this method to multiply a <xref:System.Windows.Vector> by a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#GetDotProductExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#getdotproductexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public void Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Negate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Negate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7428-209">이 벡터를 반전합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-209">Negates this vector.</span>
          </span>
          <span data-ttu-id="b7428-210">벡터의 크기는 전과 동일하지만 방향은 반대가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-210">The vector has the same magnitude as before, but its direction is now opposite.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-211">다음 예제에서는 벡터를 부정 하이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-211">The following example shows how to use this method to negate a vector.</span></span>  
  
 [!code-csharp[VectorExamples_snip#NegateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#negateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Normalize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7428-212">이 벡터를 정규화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-212">Normalizes this vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-213">정규화 된 벡터는 방향은 그대로 유지 되지만 해당 <xref:System.Windows.Vector.Length%2A> 는 1입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-213">A normalized vector maintains its direction but its <xref:System.Windows.Vector.Length%2A> becomes 1.</span></span> <span data-ttu-id="b7428-214">결과 벡터 단위 벡터를 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-214">The resulting vector is often called a unit vector.</span></span> <span data-ttu-id="b7428-215">고유 벡터 ´ 벡터 <xref:System.Windows.Vector.Length%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-215">A vector is normalized by dividing the vector by its own <xref:System.Windows.Vector.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-216">다음 예제에서는 벡터 정규화 하려면이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-216">The following example shows how to use this method to normalize a vector.</span></span>  
  
 [!code-csharp[VectorExamples_snip#NormalizeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#normalizeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-217">벡터를 점이나 다른 벡터에 더합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-217">Adds a vector to a point or to another vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Vector vector, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Vector vector, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Vector vector, System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-218">
            <c>지점</c>을 변환하는 데 사용되는 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-218">The vector used to translate <c>point</c>.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="b7428-219">변환할 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-219">The point to translate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-220">지정된 벡터에 따라 점을 변환하고 결과 점을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-220">Translates a point by the specified vector and returns the resulting point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-221">
            <paramref name="point" />에 따라 <paramref name="vector" />를 변환한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-221">The result of translating <paramref name="point" /> by <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-222">이 연산자 (+)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Point> 구조체는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-222">The following example shows how to use this operator (+) to translate a <xref:System.Windows.Point> structure to a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedAdditionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedadditionoperatorexample2)]
 [!code-vb[VectorExamples_snip#OverloadedAdditionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedadditionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Vector.Add" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator + (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Addition(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (vector1 As Vector, vector2 As Vector) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator +(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-223">더할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-223">The first vector to add.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-224">더할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-224">The second vector to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-225">두 벡터를 더한 결과를 벡터로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-225">Adds two vectors and returns the result as a vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-226">
            <paramref name="vector1" />와 <paramref name="vector2" />의 합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-226">The sum of <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-227">다음 예제에서는 두 개의 추가 하려면이 연산자 (+)를 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조 및 반환 된 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-227">The following example shows how to use this operator (+) to add two <xref:System.Windows.Vector> structures and return a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedAdditionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedadditionoperatorexample1)]
 [!code-vb[VectorExamples_snip#OverloadedAdditionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedadditionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Vector.Add" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator / (System.Windows.Vector vector, double scalar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Division(valuetype System.Windows.Vector vector, float64 scalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator /(System::Windows::Vector vector, double scalar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="scalar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-228">나눌 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-228">The vector to divide.</span>
          </span>
        </param>
        <param name="scalar">
          <span data-ttu-id="b7428-229">
            <c>벡터</c>를 나눌 스칼라입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-229">The scalar by which <c>vector</c> will be divided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-230">지정된 벡터를 지정된 스칼라로 나누고 결과 벡터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-230">Divides the specified vector by the specified scalar and returns the resulting vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-231">
            <paramref name="vector" />를 <paramref name="scalar" />로 나눈 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-231">The result of dividing <paramref name="vector" /> by <paramref name="scalar" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-232">이 연산자 (/)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 는 스칼라 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-232">The following example shows how to use this operator (/) to divide a <xref:System.Windows.Vector> structure by a scalar.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedDivisionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadeddivisionoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedDivisionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadeddivisionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (vector1 As Vector, vector2 As Vector) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-233">비교할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-233">The first vector to compare.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-234">비교할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-234">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-235">두 벡터가 같은지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-235">Compares two vectors for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-236">
            <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-236">
              <see langword="true" /> if the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> components of <paramref name="vector1" /> and <paramref name="vector2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-237">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-237">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-238">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Vector> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-238">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Windows.Vector> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-239">다음 예제에서는이 연산자 (=)를 사용 하 여 두 개의 여부를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Vector> 구조체가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-239">The following example shows how to use this operator (==) to check whether two <xref:System.Windows.Vector> structures are equal.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Vector.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-240">벡터를 <see cref="T:System.Windows.Size" /> 또는 <see cref="T:System.Windows.Point" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-240">Converts a vector into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Point (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Point(System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-241">변환할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-241">The vector to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-242">이 벡터의 <see cref="T:System.Windows.Point" /> 및 <see cref="P:System.Windows.Vector.X" /> 값을 사용하여 <see cref="P:System.Windows.Vector.Y" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-242">Creates a <see cref="T:System.Windows.Point" /> with the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of this vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-243">
            <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표 값이 <paramref name="vector" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 오프셋 값과 같은 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-243">A point with <see cref="P:System.Windows.Point.X" />- and <see cref="P:System.Windows.Point.Y" />-coordinate values equal to the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> offset values of <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-244">변환 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 에 <xref:System.Windows.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-244">The following example shows how to convert a <xref:System.Windows.Vector> into a <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedExplicitOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedexplicitoperatorexample2)]
 [!code-vb[VectorExamples_snip#OverloadedExplicitOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedexplicitoperatorexample2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-245">변환할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-245">The vector to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-246">이 벡터의 오프셋을 사용하여 <see cref="T:System.Windows.Size" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-246">Creates a <see cref="T:System.Windows.Size" /> from the offsets of this vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-247">
            <see cref="T:System.Windows.Size" />가 이 벡터의 <see cref="P:System.Windows.Size.Width" /> 속성의 절대값과 같고 <see cref="P:System.Windows.Vector.X" />가 이 벡터의 <see cref="P:System.Windows.Size.Height" /> 속성의 절대값과 같은 <see cref="P:System.Windows.Vector.Y" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-247">A <see cref="T:System.Windows.Size" /> with a <see cref="P:System.Windows.Size.Width" /> equal to the absolute value of this vector's <see cref="P:System.Windows.Vector.X" /> property and a <see cref="P:System.Windows.Size.Height" /> equal to the absolute value of this vector's <see cref="P:System.Windows.Vector.Y" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-248">명시적으로 변환 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 에 <xref:System.Windows.Size>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-248">The following example shows how to explicitly convert a <xref:System.Windows.Vector> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedExplicitOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedexplicitoperatorexample1)]
 [!code-vb[VectorExamples_snip#OverloadedExplicitOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedexplicitoperatorexample1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (vector1 As Vector, vector2 As Vector) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-249">비교할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-249">The first vector to compare.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-250">비교할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-250">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-251">두 벡터가 서로 다른지 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-251">Compares two vectors for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-252">
            <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-252">
              <see langword="true" /> if the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> components of <paramref name="vector1" /> and <paramref name="vector2" /> are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7428-253">벡터의 <xref:System.Windows.Vector.X%2A> 및 <xref:System.Windows.Vector.Y%2A> 속성을 사용 하 여 설명 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-253">A vector's <xref:System.Windows.Vector.X%2A> and <xref:System.Windows.Vector.Y%2A> properties are described using <xref:System.Double> values.</span></span> <span data-ttu-id="b7428-254">때문에 값을 한 <xref:System.Double> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Vector> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-254">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Windows.Vector> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7428-255">다음 예제에서는이 연산자를 사용 하는 방법을 보여 줍니다 (! =) 두 여부를 확인 하려면 <xref:System.Windows.Vector> 구조체가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-255">The following example shows how to use this operator (!=) to check whether two <xref:System.Windows.Vector> structures are not equal.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Multiply">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-256">지정된 <see cref="T:System.Windows.Vector" />에 지정된 <see cref="T:System.Double" />, <see cref="T:System.Windows.Media.Matrix" />또는 <see cref="T:System.Windows.Vector" />를 곱한 결과를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-256">Multiplies the specified <see cref="T:System.Windows.Vector" /> by the specified <see cref="T:System.Double" />, <see cref="T:System.Windows.Media.Matrix" />, or <see cref="T:System.Windows.Vector" /> and returns the result.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator * (double scalar, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Multiply(float64 scalar, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator *(double scalar, System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalar" Type="System.Double" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="scalar">
          <span data-ttu-id="b7428-257">곱할 스칼라입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-257">The scalar to multiply.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="b7428-258">곱할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-258">The vector to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-259">지정된 스칼라에 지정된 벡터를 곱한 결과 벡터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-259">Multiplies the specified scalar by the specified vector and returns the resulting vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-260">
            <paramref name="scalar" />와 <paramref name="vector" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-260">The result of multiplying <paramref name="scalar" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-261">다음 예제에서이 연산자 (\*)는 스칼라를 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-261">The following example shows how to use this operator (\*) to multiply a scalar by a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedMultiplicationOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedmultiplicationoperatorexample2)]
 [!code-vb[VectorExamples_snip#OverloadedMultiplicationOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedmultiplicationoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator * (System.Windows.Vector vector, double scalar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Multiply(valuetype System.Windows.Vector vector, float64 scalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator *(System::Windows::Vector vector, double scalar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="scalar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-262">곱할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-262">The vector to multiply.</span>
          </span>
        </param>
        <param name="scalar">
          <span data-ttu-id="b7428-263">곱할 스칼라입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-263">The scalar to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-264">지정된 벡터에 지정된 스칼라를 곱한 결과 벡터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-264">Multiplies the specified vector by the specified scalar and returns the resulting vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-265">
            <paramref name="vector" />와 <paramref name="scalar" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-265">The result of multiplying <paramref name="vector" /> and <paramref name="scalar" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-266">이 연산자 (\*)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 는 스칼라 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-266">The following example shows how to use this operator (\*) to multiply a <xref:System.Windows.Vector> structure by a scalar.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedMultiplicationOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedmultiplicationoperatorexample1)]
 [!code-vb[VectorExamples_snip#OverloadedMultiplicationOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedmultiplicationoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator * (System.Windows.Vector vector, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Multiply(valuetype System.Windows.Vector vector, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator *(System::Windows::Vector vector, System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-267">변형할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-267">The vector to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="b7428-268">
            <c>벡터</c>에 적용할 변환입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-268">The transformation to apply to <c>vector</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-269">지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 사용하여 지정된 벡터의 좌표 공간을 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-269">Transforms the coordinate space of the specified vector using the specified <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-270">
            <paramref name="vector" />를 <paramref name="matrix" />에 따라 변환한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-270">The result of transforming <paramref name="vector" /> by <paramref name="matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-271">이 연산자 (\*)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 구조체는 <xref:System.Windows.Media.Matrix> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-271">The following example shows how to use this operator (\*) to multiply a <xref:System.Windows.Vector> structure by a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedMultiplyVectorByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedmultiplyvectorbymatrixoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedMultiplyVectorByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedmultiplyvectorbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static double operator * (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Multiply(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (vector1 As Vector, vector2 As Vector) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double operator *(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-272">곱할 첫 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-272">The first vector to multiply.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-273">곱할 두 번째 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-273">The second vector to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-274">지정된 두 벡터 구조체의 내적을 계산한 결과를 <see cref="T:System.Double" />로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-274">Calculates the dot product of the two specified vector structures and returns the result as a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-275">다음 수식에 따라 계산된 <paramref name="vector1" />과 <paramref name="vector2" />의 스칼라 내적이 들어 있는 <see cref="T:System.Double" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-275">Returns a <see cref="T:System.Double" /> containing the scalar dot product of <paramref name="vector1" /> and <paramref name="vector2" />, which is calculated using the following formula:</span>
          </span>
          <span data-ttu-id="b7428-276">
            <c>vector1.X * vector2.X + vector1.Y * vector2.Y</c>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-276">
              <c>vector1.X * vector2.X + vector1.Y * vector2.Y</c>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-277">이 연산자 (\*)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 구조체는 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-277">The following example shows how to use this operator (\*) to multiply a <xref:System.Windows.Vector> structure by a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedOperatorGetDotProductExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedoperatorgetdotproductexample)]
 [!code-vb[VectorExamples_snip#OverloadedOperatorGetDotProductExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedoperatorgetdotproductexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (vector1 As Vector, vector2 As Vector) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-278">
            <c>vector2</c>를 빼는 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-278">The vector from which <c>vector2</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-279">
            <c>vector1</c>에서 뺄 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-279">The vector to subtract from <c>vector1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-280">벡터를 서로 뺍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-280">Subtracts one specified vector from another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-281">
            <paramref name="vector1" />와 <paramref name="vector2" />의 차이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-281">The difference between <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-282">이 연산자 (-)를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 에서 구조체는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-282">The following example shows how to use this operator (-) to subtract a <xref:System.Windows.Vector> structure from a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedSubtractionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadedsubtractionoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedSubtractionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadedsubtractionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_UnaryNegation(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="b7428-283">부정할 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-283">The vector to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-284">지정된 벡터를 부정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-284">Negates the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-285">
            <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 <paramref name="vector" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값과 반대 방향인 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-285">A vector with <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values opposite of the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-286">무효화 하기 위해이 부정 연산자를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-286">The following example shows how to use this negation operator to negate a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#OverloadedNegationOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#overloadednegationoperatorexample)]
 [!code-vb[VectorExamples_snip#OverloadedNegationOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#overloadednegationoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.Negate" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Parse(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="b7428-287">벡터에 대한 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-287">The string representation of the vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-288">벡터의 문자열 표현을 해당 <see cref="T:System.Windows.Vector" /> 구조체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-288">Converts a string representation of a vector into the equivalent <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-289">해당 <see cref="T:System.Windows.Vector" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-289">The equivalent <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-290">벡터의 문자열 표현으로 변환 하려면이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-290">The following example shows how to use this method to convert a string representation of a vector into a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#parseexample)]
 [!code-vb[VectorExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Vector vector1, System.Windows.Vector vector2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Vector vector1, valuetype System.Windows.Vector vector2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (vector1 As Vector, vector2 As Vector) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Vector vector1, System::Windows::Vector vector2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector1" Type="System.Windows.Vector" />
        <Parameter Name="vector2" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector1">
          <span data-ttu-id="b7428-291">
            <c>vector2</c>를 빼는 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-291">The vector from which <c>vector2</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector2">
          <span data-ttu-id="b7428-292">
            <c>vector1</c>에서 뺄 벡터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-292">The vector to subtract from <c>vector1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-293">지정된 벡터에서 지정된 다른 벡터를 뺍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-293">Subtracts the specified vector from another specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-294">
            <paramref name="vector1" />와 <paramref name="vector2" />의 차이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-294">The difference between <paramref name="vector1" /> and <paramref name="vector2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-295">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector> 에서 구조체는 <xref:System.Windows.Vector> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-295">The following example shows how to use this method to subtract a <xref:System.Windows.Vector> structure from a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[VectorExamples_snip#SubtractExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#subtractexample)]
 [!code-vb[VectorExamples_snip#SubtractExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#subtractexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b7428-296">사용할 형식을 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-296">The string specifying the format to use.</span>
          </span>
          <span data-ttu-id="b7428-297">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-297">-or-</span>
          </span>
          <span data-ttu-id="b7428-298">
            <see cref="T:System.IFormattable" /> 구현 형식에 대해 정의된 기본 형식을 사용하기 위한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-298">
              <see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b7428-299">값의 형식을 지정하는 데 사용할 <see langword="IFormatProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-299">The <see langword="IFormatProvider" /> to use to format the value.</span>
          </span>
          <span data-ttu-id="b7428-300">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-300">-or-</span>
          </span>
          <span data-ttu-id="b7428-301">운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-301">
              <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-302">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-302">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="b7428-303">이 멤버에 대한 설명은 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-303">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-304">지정된 형식의 현재 인스턴스 값이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-304">A string containing the value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-305">이 <see cref="T:System.Windows.Vector" /> 구조체의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-305">Returns the string representation of this <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7428-306">이 <see cref="T:System.Windows.Vector" /> 구조체의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-306">Returns the string representation of this <see cref="T:System.Windows.Vector" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-307">이 <see cref="P:System.Windows.Vector.X" />의 <see cref="P:System.Windows.Vector.Y" /> 및 <see cref="T:System.Windows.Vector" /> 값을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-307">A string that represents the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of this <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-308">문자열 표현을 가져올이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Vector>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-308">The following example shows how to use this method to get a string representation of a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[VectorExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#tostringexample)]
 [!code-vb[VectorExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Vector.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b7428-309">문화권별 형식 지정 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-309">The culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7428-310">지정된 형식 정보를 사용하여 이 <see cref="T:System.Windows.Vector" /> 구조체의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-310">Returns the string representation of this <see cref="T:System.Windows.Vector" /> structure with the specified formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7428-311">이 <see cref="P:System.Windows.Vector.X" />의 <see cref="P:System.Windows.Vector.Y" /> 및 <see cref="T:System.Windows.Vector" /> 값을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-311">A string that represents the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of this <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Vector.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-312">이 벡터의 <see cref="P:System.Windows.Vector.X" /> 구성 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-312">Gets or sets the <see cref="P:System.Windows.Vector.X" /> component of this vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7428-313">이 벡터의 <see cref="P:System.Windows.Vector.X" /> 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-313">The <see cref="P:System.Windows.Vector.X" /> component of this vector.</span>
          </span>
          <span data-ttu-id="b7428-314">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-314">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-315">다음 예제에서는 두 개를 선택 하는 방법을 보여 줍니다. <xref:System.Windows.Vector> 같음에 대 한 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-315">The following example shows how to check two <xref:System.Windows.Vector> structures for equality.</span></span>  
  
 [!code-csharp[VectorExamples_snip#VectorEqualityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#vectorequalityexample)]
 [!code-vb[VectorExamples_snip#VectorEqualityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#vectorequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Vector.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Vector.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7428-316">이 벡터의 <see cref="P:System.Windows.Vector.Y" /> 구성 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-316">Gets or sets the <see cref="P:System.Windows.Vector.Y" /> component of this vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7428-317">이 벡터의 <see cref="P:System.Windows.Vector.Y" /> 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-317">The <see cref="P:System.Windows.Vector.Y" /> component of this vector.</span>
          </span>
          <span data-ttu-id="b7428-318">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7428-318">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7428-319">다음 예제에서는 두 개를 선택 하는 방법을 보여 줍니다. <xref:System.Windows.Vector> 같음에 대 한 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b7428-319">The following example shows how to check two <xref:System.Windows.Vector> structures for equality.</span></span>  
  
 [!code-csharp[VectorExamples_snip#VectorEqualityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/VectorExamples_snip/CSharp/VectorExample.cs#vectorequalityexample)]
 [!code-vb[VectorExamples_snip#VectorEqualityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VectorExamples_snip/visualbasic/vectorexample.vb#vectorequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Vector.X" />
      </Docs>
    </Member>
  </Members>
</Type>