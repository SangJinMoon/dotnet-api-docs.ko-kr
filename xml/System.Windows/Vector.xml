<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0522150d9c8bcdfd327e98c386e59efd9c8e18b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0522150d9c8bcdfd327e98c386e59efd9c8e18b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Represents a displacement in 2-D space.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> represents a fixed position, but a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> represents a direction and a magnitude (for example, velocity or acceleration).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> 고정된 위치를 나타내는 반면 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 방향과 (예를 들어 개발 속도 또는 가속) 크기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Thus, the endpoints of a line segment are points but their difference is a vector; that is, the direction and length of that line segment.</source>
          <target state="translated">따라서 선 세그먼트의 끝점은 포인트 있지만 차이가 vector 해당 즉, 방향 및 길이 선 세그먼트 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>In XAML, the delimiter between the <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> values of a <ph id="ph3">&lt;xref:System.Windows.Vector&gt;</ph> can be either a comma or a space.</source>
          <target state="translated">Xaml에서는 사이의 구분 기호는 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 값은 <ph id="ph3">&lt;xref:System.Windows.Vector&gt;</ph> 쉼표 또는 공백이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Some cultures might use the comma character as the decimal delimiter instead of the period character.</source>
          <target state="translated">일부 문화권 소수점 구분 기호로 마침표 대신로 쉼표 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</source>
          <target state="translated">고정 문화권에 대 한 처리 하는 XAML 대부분 XAML 프로세서 구현에서 EN-US로 기본값을 소수 구분 기호로 마침표 속해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>You should avoid using the comma character as the decimal delimiter if specifying a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> in XAML, because that will clash with the string type conversion of a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> attribute value into the <ph id="ph3">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> components.</source>
          <target state="translated">지정 하는 경우 소수 구분 기호로 쉼표 문자를 사용 하면 안 한 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> XAML에서 문자열 형식 변환의 충돌은 때문에 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 특성 값에는 <ph id="ph3">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>x<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The vector's X component.</source>
          <target state="translated">벡터의 X 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>y<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The vector's Y component.</source>
          <target state="translated">벡터의 Y 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The following example shows how to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">다음 예제에서는 두 개의 추가 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph>-offset of the new <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph>-offset of the new <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The following example shows how to create two vectors and add them together.</source>
          <target state="translated">다음 예제에서는 두 벡터를 만들고 함께 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Adds a vector to a point or to another vector.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The amount to translate the specified point.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The point to translate.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>Translates the specified point by the specified vector and returns the resulting point.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The result of translating <ph id="ph1">&lt;paramref name="point" /&gt;</ph> by <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The following example shows how to use this method to add a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure to a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> 구조체는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to add.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to add.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>Adds two vectors and returns the result as a <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The sum of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">다음 예제에서는 두 개의 추가 하려면이 메서드를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>Retrieves the angle, expressed in degrees, between the two specified vectors.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The angle, in degrees, between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to get the angle between two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하 여 두 각도를 가져오는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the cross product of two vectors.</source>
          
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The cross product of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The following formula is used to calculate the cross product:</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)<ept id="p1">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to calculate the cross product of two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">다음 예제에서는 두 개의 외적을 계산 하려면이 메서드를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the determinant of two vectors.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The determinant of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to calculate the determinant of two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">다음 예제에서는 두 개의의 행렬식을 계산 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The vector structure to divide.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The amount by which <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> is divided.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>Divides the specified vector by the specified scalar and returns the result as a <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this method to divide a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a scalar.</source>
          <target state="translated">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 는 스칼라입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Compares two vectors for equality.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>The vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is a <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure and, if it is, whether it has the same <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and has the same <ph id="ph4">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>The following example shows how to use this method to check whether a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> and an <ph id="ph2">&lt;xref:System.Object&gt;</ph> are equal.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하 여 확인 하는 방법을 보여 줍니다 여부는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 같은지 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>The vector to compare with this vector.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>Compares two vectors for equality.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has the same <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>The following example shows how to use this method to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하 여 두 여부를 확인 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares the two specified vectors for equality.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if t he <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are equal; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하 여 두 여부를 확인 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.GetHashCode">
          <source>Returns the hash code for this vector.</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.GetHashCode">
          <source>The hash code for this instance.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.GetHashCode">
          <source>The following example shows how to get the hash code of a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">해시 코드를 가져오는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.Length">
          <source>Gets the length of this vector.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The length of this vector.</source>
          <target state="translated">이 벡터의 길이입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The length of a vector is sometimes referred to as the magnitude.</source>
          <target state="translated">벡터의 길이 크기가 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The following example shows how use this property to get the length of a vector.</source>
          <target state="translated">다음 예제에서는 벡터의 길이를 가져오는이 속성을 사용 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.LengthSquared">
          <source>Gets the square of the length of this vector.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The square of the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Length" /&gt;</ph> of this vector.</source>
          <target state="translated">에 대 한 제곱 된 <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Length" /&gt;</ph> 이 벡터의 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The length of a vector is sometimes referred to as its magnitude.</source>
          <target state="translated">벡터의 길이 크기 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The following example shows how to use this property to get the square of the length of a vector.</source>
          <target state="translated">다음 예제에서는이 속성을 사용 하 여 벡터 길이 제곱을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Multiplies the specified vector by the specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and returns the result as a <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> or <ph id="ph5">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The scalar to multiply.</source>
          
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>Multiplies the specified scalar by the specified vector and returns the resulting <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The following example shows how to use this method to multiply a scalar by a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">Scalar를이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The scalar to multiply.</source>
          
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>Multiplies the specified vector by the specified scalar and returns the resulting <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a scalar.</source>
          <target state="translated">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 는 스칼라입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The vector structure to transform.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The transformation to apply to <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>Transforms the coordinate space of the specified vector using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The result of transforming <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector structure to multiply.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the dot product of the two specified vectors and returns the result as a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> containing the scalar dot product of <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph>, which is calculated using the following formula:</source>
          
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)<ept id="p1">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 여는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Negate">
          <source>Negates this vector.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Negate">
          <source>The vector has the same magnitude as before, but its direction is now opposite.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Negate">
          <source>The following example shows how to use this method to negate a vector.</source>
          <target state="translated">다음 예제에서는 벡터를 부정 하이 메서드를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Normalize">
          <source>Normalizes this vector.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>A normalized vector maintains its direction but its <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph> becomes 1.</source>
          <target state="translated">정규화 된 벡터는 방향은 그대로 유지 되지만 해당 <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph> 는 1입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>The resulting vector is often called a unit vector.</source>
          <target state="translated">결과 벡터 단위 벡터를 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>A vector is normalized by dividing the vector by its own <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph>.</source>
          <target state="translated">고유 벡터 ´ 벡터 <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>The following example shows how to use this method to normalize a vector.</source>
          <target state="translated">다음 예제에서는 벡터 정규화 하려면이 메서드를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Adds a vector to a point or to another vector.</source>
          
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The vector used to translate <bpt id="p1">&lt;c&gt;</bpt>point<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The point to translate.</source>
          
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>Translates a point by the specified vector and returns the resulting point.</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The result of translating <ph id="ph1">&lt;paramref name="point" /&gt;</ph> by <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The following example shows how to use this operator (+) to translate a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure to a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">이 연산자 (+)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> 구조체는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to add.</source>
          
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to add.</source>
          
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>Adds two vectors and returns the result as a vector.</source>
          
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The sum of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (+) to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures and return a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개의 추가 하려면이 연산자 (+)를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조 및 반환 된 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The vector to divide.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The scalar by which <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> will be divided.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>Divides the specified vector by the specified scalar and returns the resulting vector.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this operator (/) to divide a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a scalar.</source>
          <target state="translated">이 연산자 (/)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 는 스칼라 구조입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares two vectors for equality.</source>
          
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are equal; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (==) to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">다음 예제에서는이 연산자 (=)를 사용 하 여 두 개의 여부를 확인 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Converts a vector into a <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>The vector to convert.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> with the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this vector.</source>
          
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>A point with <ph id="ph1">&lt;see cref="P:System.Windows.Point.X" /&gt;</ph>- and <ph id="ph2">&lt;see cref="P:System.Windows.Point.Y" /&gt;</ph>-coordinate values equal to the <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> offset values of <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>The following example shows how to convert a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> into a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">변환 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>The vector to convert.</source>
          
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> from the offsets of this vector.</source>
          
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> with a <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> equal to the absolute value of this vector's <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> property and a <ph id="ph4">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> equal to the absolute value of this vector's <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> property.</source>
          
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>The following example shows how to explicitly convert a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> into a <ph id="ph2">&lt;xref:System.Windows.Size&gt;</ph>.</source>
          <target state="translated">명시적으로 변환 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Size&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares two vectors for inequality.</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are different; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">벡터의 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 속성을 사용 하 여 설명 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">때문에 값을 한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 산술 연산을 수행 하는, 두 개를 비교 하는 경우 정밀도 떨어질 수 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 은 논리적으로 동일한 구조를 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (!=) to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are not equal.</source>
          <target state="translated">다음 예제에서는이 연산자를 사용 하는 방법을 보여 줍니다 (! =) 두 여부를 확인 하려면 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Multiplies the specified <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and returns the result.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The scalar to multiply.</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>Multiplies the specified scalar by the specified vector and returns the resulting vector.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The following example shows how to use this operator (*) to multiply a scalar by a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">다음 예제에서이 연산자 (*)는 스칼라를 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The scalar to multiply.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>Multiplies the specified vector by the specified scalar and returns the resulting vector.</source>
          
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a scalar.</source>
          <target state="translated">이 연산자 (*)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 는 스칼라 구조입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The vector to transform.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The transformation to apply to <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>Transforms the coordinate space of the specified vector using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The result of transforming <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure.</source>
          <target state="translated">이 연산자 (*)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체는 <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to multiply.</source>
          
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the dot product of the two specified vector structures and returns the result as a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> containing the scalar dot product of <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph>, which is calculated using the following formula:</source>
          
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>vector1.X * vector2.X + vector1.Y * vector2.Y<ept id="p1">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">이 연산자 (*)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조체는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector from which <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> is subtracted.</source>
          
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector to subtract from <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>Subtracts one specified vector from another.</source>
          
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The difference between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (-) to subtract a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure from a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">이 연산자 (-)를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 에서 구조체는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>The vector to negate.</source>
          
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>Negates the specified vector.</source>
          
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>A vector with <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values opposite of the <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>The following example shows how to use this negation operator to negate a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">무효화 하기 위해이 부정 연산자를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The string representation of the vector.</source>
          
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>Converts a string representation of a vector into the equivalent <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The equivalent <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The following example shows how to use this method to convert a string representation of a vector into a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">벡터의 문자열 표현으로 변환 하려면이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector from which <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> is subtracted.</source>
          
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector to subtract from <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>Subtracts the specified vector from another specified vector.</source>
          
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The difference between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to subtract a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure from a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 에서 구조체는 <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The string specifying the format to use.</source>
          
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see langword="IFormatProvider" /&gt;</ph> to use to format the value.</source>
          
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to obtain the numeric format information from the current locale setting of the operating system.</source>
          
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string containing the value of the current instance in the specified format.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString">
          <source>A string that represents the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.ToString">
          <source>The following example shows how to use this method to get a string representation of a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">문자열 표현을 가져올이 메서드를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>The culture-specific formatting information.</source>
          
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure with the specified formatting information.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>A string that represents the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.X">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> component of this vector.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> component of this vector.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> 이 벡터의 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The following example shows how to check two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures for equality.</source>
          <target state="translated">다음 예제에서는 두 개를 선택 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 같음에 대 한 구조입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.Y">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> component of this vector.</source>
          
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> component of this vector.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> 이 벡터의 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The following example shows how to check two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures for equality.</source>
          <target state="translated">다음 예제에서는 두 개를 선택 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 같음에 대 한 구조입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>