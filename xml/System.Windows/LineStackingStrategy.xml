<Type Name="LineStackingStrategy" FullName="System.Windows.LineStackingStrategy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ff0bd4fded0de0a227321a7bee36adbbf636879" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum LineStackingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LineStackingStrategy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LineStackingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LineStackingStrategy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LineStackingStrategy" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="a2a3e-101">각 줄에 대한 줄 상자가 결정되는 메커니즘을 설명합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2a3e-101">Describes a mechanism by which a line box is determined for each line.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2a3e-102">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 속성의 텍스트 줄에 대 한 줄 상자를 만드는 하는 방법을 확인 하는 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="a2a3e-102">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="a2a3e-103">첫 번째 <xref:System.Windows.Controls.TextBlock> 에 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 최대 높이 및 두 번째 값 <xref:System.Windows.Controls.TextBlock> BlockLineHeight 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a2a3e-103">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of MaxHeight and the second <xref:System.Windows.Controls.TextBlock> has a value of BlockLineHeight.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="a2a3e-104">다음은 위 코드의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="a2a3e-104">The following illustration shows the result of the code above.</span></span>  
  
 <span data-ttu-id="a2a3e-105">![스크린 샷: LineStackingStrategy 값 비교](~/add/media/flow-linestackingstrategy.gif "스크린 샷: LineStackingStrategy 비교 값")</span><span class="sxs-lookup"><span data-stu-id="a2a3e-105">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockLineHeight">
      <MemberSignature Language="C#" Value="BlockLineHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineStackingStrategy BlockLineHeight = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineStackingStrategy.BlockLineHeight" />
      <MemberSignature Language="VB.NET" Value="BlockLineHeight" />
      <MemberSignature Language="C++ CLI" Value="BlockLineHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2a3e-106">스택 높이는 블록 요소 줄 높이 속성 값에 의해 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2a3e-106">The stack height is determined by the block element line-height property value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="MaxHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineStackingStrategy MaxHeight = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineStackingStrategy.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="MaxHeight" />
      <MemberSignature Language="C++ CLI" Value="MaxHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2a3e-107">스택 높이는 모든 인라인 요소가 제대로 정렬되어 있는 경우 해당 줄에 이러한 요소가 포함된 가장 작은 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2a3e-107">The stack height is the smallest value that containing all the inline elements on that line when those elements are properly aligned.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>