<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7f90-101">연결된 속성이 논리적 트리에서 자식 요소를 확장하는 검색 가능한 범위를 가진다고 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-101">Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7f90-102">용어의 의미 `browsable` 이 대 한 설명에서 사용 되는 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 에 대 한 설명과 유사 <xref:System.ComponentModel.BrowsableAttribute>, 하지만 연결된 된 속성에 대 한 검색 가능한 상태는 하는 방법에 대 한 속성정보[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]연결된 된 속성은 주로 때문에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 개념입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-102">The meaning of the term `browsable` as used in descriptions for this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is analogous to the descriptions given for <xref:System.ComponentModel.BrowsableAttribute>, but the browsable state for an attached property is particularly relevant to property information for [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], because an attached property is primarily a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span></span>  
  
 <span data-ttu-id="c7f90-103">때이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 연결 된 속성 get 접근자에 적용이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 연결된 된 속성은 검색 가능한 경우 연결 된 속성 소유자는 다른 요소의 부모 요소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-103">When this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied to the get accessor for an attached property, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</span></span>  
  
 <span data-ttu-id="c7f90-104">이 부모 요소를 기반으로 해석 하 여 디자이너를 사용 하 여 형식 설명자 정보를 논리적 트리에서 모든 자식 요소가이 속성을 탐색 가능 속성으로 추가 해야, [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-104">When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applied.</span></span>  
  
 <span data-ttu-id="c7f90-105">일반적으로 찾아볼 수 있음 상태 해당 기능을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-105">Generally, the browsable state parallels functionality.</span></span> <span data-ttu-id="c7f90-106">예를 들어 <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> 의 자식 요소가 있는 요소에서 검색 가능한 지정 된는 <xref:System.Windows.Controls.Canvas>때문에, <xref:System.Windows.Controls.Canvas> 의 설정 된 값 검사에 대 한 코드를 포함 <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> 자식 요소에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-106">For example, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> is designated browsable on elements that are child elements of a <xref:System.Windows.Controls.Canvas>, because <xref:System.Windows.Controls.Canvas> includes code for checking any set values of <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> on child elements.</span></span>  
  
 <span data-ttu-id="c7f90-107">이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 부모 요소 위치에 대 한 두 가지 유형의 트리 검색 모드를 지원: 단순 모드 및 심층 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-107">This  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</span></span> <span data-ttu-id="c7f90-108">단순 모드는 적용 된에 대 한 기본 모드에서는 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)],에서는 직계 부모 요소에 연결 된 속성을 탐색 속성의 소유자 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-108">The shallow mode, which is the default mode for an applied <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</span></span> <span data-ttu-id="c7f90-109">심층 모드는 사용 하 여 특성을 적용 하 여 선언 된 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 으로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-109">The deep mode is declared by applying the attribute with <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `true`.</span></span> <span data-ttu-id="c7f90-110">논리 트리를 상위 방향에는 소유자 유형 있 및 따라서 연결 된 속성을 검색 가능한 모든 자식 요소를 직접 실행만 자식 요소에만 필요 하기 때문에 심층 모드를 덜 제한적입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-110">The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree., and therefore the attached property is browsable on all child elements, not just immediate child elements.</span></span> <span data-ttu-id="c7f90-111">논리적 트리의 중간 요소를 실제 부모 요소로 보고 되지 않아야 여기서 연결 된 속성 사용에 대 한 심층 모드 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-111">The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</span></span> <span data-ttu-id="c7f90-112">암시적 컬렉션 (예를 들어는 <xref:System.Windows.Controls.UIElementCollection> 에서 암시적입니다는 <xref:System.Windows.Controls.Panel.Children%2A> 의 <xref:System.Windows.Controls.Panel>)은 부모 요소로 간주 되지 않습니다이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 트리 검색 모드를 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-112">Implicit collections (for example, the <xref:System.Windows.Controls.UIElementCollection> that is implicit in the <xref:System.Windows.Controls.Panel.Children%2A> of a <xref:System.Windows.Controls.Panel>) are not considered to be parent elements for purposes of how this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declares the tree detection mode.</span></span>  
  
 <span data-ttu-id="c7f90-113">이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 연결 된 속성 정의의 get 접근자에만 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-113">This [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] should only be applied on the get accessor of attached property definitions.</span></span> <span data-ttu-id="c7f90-114">이 적용 되지 않습니다 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] set 접근자에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-114">Do not apply this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] to the set accessor.</span></span> <span data-ttu-id="c7f90-115">탐색할 수 있도록 발송 되는 설정 작업은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 그 자식 요소에 대해서가 있는지 여부 및 true 동작을 제어 하는 부모 요소에 get 접근자의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-115">Although intuitively it is the set operation that is being made browsable for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</span></span>  
  
 <span data-ttu-id="c7f90-116">연결된 된 속성 인지 자식 요소를 검색할 수 없는 경우 연결 된 속성 값은 어떤 식으로든에서 부모 요소에서 실제로 처리은 되는지 여부</span><span class="sxs-lookup"><span data-stu-id="c7f90-116">Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</span></span> <span data-ttu-id="c7f90-117">또한는 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 값이 처리 범위가 않거나 직계 부모 요소 보다 짧기 되는지 여부입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-117">Also, the <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</span></span> <span data-ttu-id="c7f90-118">이 모든는 구현에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-118">All this is implementation specific.</span></span> <span data-ttu-id="c7f90-119">그러나이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 검색 가능한 상태가 사용 정보 및 연결된 된 속성에 대 한 기능 정보를 보고 하기 위한 가장 사용할 수 있는 메커니즘을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-119">However, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</span></span> <span data-ttu-id="c7f90-120">따라서 연결된 된 속성의 검색 가능한 상태는 자식 요소에는 연결 된 속성 값을 처리 하거나 응용 프로그램 코드에서 관련 부모 요소에 의해 해석 하는 방법의 동작과 유사 일반적으로 가정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-120">Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</span></span>  
  
 <span data-ttu-id="c7f90-121">연결된 속성 선언에 대 한 일반적인 정보를 참조 하십시오. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-121">For general information on declaring attached properties, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c7f90-122">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="c7f90-122">XAML Text Usage</span></span>  
 <span data-ttu-id="c7f90-123">이 형식의 멤버에 일반적으로 사용 되지 않는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-123">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7f90-124"><see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-124">Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7f90-125"><xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>의 기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-125">The default for <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c7f90-126">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />와 비교할 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-126">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span></span></param>
        <summary><span data-ttu-id="c7f90-127">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]이 지정된 개체와 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-127">Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="c7f90-128">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />와 같으면 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-128"><see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7f90-129">이 구현에서는이 노출 하는 설정 가능한 값 중 하나에 값이 같은지 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-129">This implementation supports value equality of the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7f90-130">이 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-130">Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span></span></summary>
        <returns><span data-ttu-id="c7f90-131">부호 없는 32비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-131">An unsigned 32-bit integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7f90-132">이 구현에서는 두 개의 가능한 해시 값이 노출 하는 설정 가능한 값 중 하나에 따라 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-132">This implementation supports two possible hash values based on the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7f90-133">이 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]이 적용된 연결된 속성에서 부모 요소를 검색하기 위해 전체 모드를 사용할지 여부를 선언하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-133">Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</span></span></summary>
        <value>
          <span data-ttu-id="c7f90-134">연결된 속성을 소유하는 부모 요소의 논리적 트리에 있는 모든 자식 요소에서 연결된 속성을 탐색할 수 있으면 <see langword="true" />이고,</span><span class="sxs-lookup"><span data-stu-id="c7f90-134"><see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</span></span> <span data-ttu-id="c7f90-135">연결된 속성을 소유하는 부모 요소의 직계 자식 요소에서만 연결된 속성을 탐색할 수 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-135"><see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</span></span> <span data-ttu-id="c7f90-136">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-136">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7f90-137">에 정의 된 연결 된 속성의 대부분 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 적용 되는 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> 의 기본값을 사용 하 여 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 으로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-137">Most of the attached properties defined by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that apply <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> do so with the default of <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `false`.</span></span>  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c7f90-138">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="c7f90-138">XAML Text Usage</span></span>  
 <span data-ttu-id="c7f90-139">이 형식의 멤버에 일반적으로 사용 되지 않는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c7f90-139">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>