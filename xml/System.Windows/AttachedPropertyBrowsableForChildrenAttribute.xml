<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttachedPropertyBrowsableForChildrenAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54dc9fb8f68016bad1012acbb1a602e35db47356c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4dc9fb8f68016bad1012acbb1a602e35db47356c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</source>
          <target state="translated">연결된 속성이 논리적 트리에서 자식 요소를 확장하는 검색 가능한 범위를 가진다고 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>The meaning of the term <ph id="ph1">`browsable`</ph> as used in descriptions for this <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is analogous to the descriptions given for <ph id="ph3">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>, but the browsable state for an attached property is particularly relevant to property information for <ph id="ph4">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, because an attached property is primarily a <ph id="ph5">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> concept.</source>
          <target state="translated">용어의 의미 <ph id="ph1">`browsable`</ph> 이 대 한 설명에서 사용 되는 <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 에 대 한 설명과 유사 <ph id="ph3">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>, 하지만 연결된 된 속성에 대 한 검색 가능한 상태는 하는 방법에 대 한 속성정보<ph id="ph4">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>연결된 된 속성은 주로 때문에 <ph id="ph5">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 개념입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>When this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is applied to the get accessor for an attached property, this  <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</source>
          <target state="translated">때이 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 연결 된 속성 get 접근자에 적용이 <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 연결된 된 속성은 검색 가능한 경우 연결 된 속성 소유자는 다른 요소의 부모 요소를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> applied.</source>
          <target state="translated">이 부모 요소를 기반으로 해석 하 여 디자이너를 사용 하 여 형식 설명자 정보를 논리적 트리에서 모든 자식 요소가이 속성을 탐색 가능 속성으로 추가 해야, <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 적용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Generally, the browsable state parallels functionality.</source>
          <target state="translated">일반적으로 찾아볼 수 있음 상태 해당 기능을 따릅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType&gt;</ph> is designated browsable on elements that are child elements of a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, because <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> includes code for checking any set values of <ph id="ph4">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType&gt;</ph> on child elements.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType&gt;</ph> 의 자식 요소가 있는 요소에서 검색 가능한 지정 된는 <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>때문에, <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> 의 설정 된 값 검사에 대 한 코드를 포함 <ph id="ph4">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType&gt;</ph> 자식 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>This  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</source>
          <target state="translated">이 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 부모 요소 위치에 대 한 두 가지 유형의 트리 검색 모드를 지원: 단순 모드 및 심층 모드입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>The shallow mode, which is the default mode for an applied <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</source>
          <target state="translated">단순 모드는 적용 된에 대 한 기본 모드에서는 <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>,에서는 직계 부모 요소에 연결 된 속성을 탐색 속성의 소유자 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>The deep mode is declared by applying the attribute with <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">심층 모드는 사용 하 여 특성을 적용 하 여 선언 된 <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> 으로 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree., and therefore the attached property is browsable on all child elements, not just immediate child elements.</source>
          <target state="translated">논리 트리를 상위 방향에는 소유자 유형 있 및 따라서 연결 된 속성을 검색 가능한 모든 자식 요소를 직접 실행만 자식 요소에만 필요 하기 때문에 심층 모드를 덜 제한적입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</source>
          <target state="translated">논리적 트리의 중간 요소를 실제 부모 요소로 보고 되지 않아야 여기서 연결 된 속성 사용에 대 한 심층 모드 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Implicit collections (for example, the <ph id="ph1">&lt;xref:System.Windows.Controls.UIElementCollection&gt;</ph> that is implicit in the <ph id="ph2">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph>) are not considered to be parent elements for purposes of how this  <ph id="ph4">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> declares the tree detection mode.</source>
          <target state="translated">암시적 컬렉션 (예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Controls.UIElementCollection&gt;</ph> 에서 암시적입니다는 <ph id="ph2">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph>)은 부모 요소로 간주 되지 않습니다이 <ph id="ph4">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 트리 검색 모드를 선언 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>This <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> should only be applied on the get accessor of attached property definitions.</source>
          <target state="translated">이 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 연결 된 속성 정의의 get 접근자에만 적용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Do not apply this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> to the set accessor.</source>
          <target state="translated">이 적용 되지 않습니다 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> set 접근자에 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Although intuitively it is the set operation that is being made browsable for <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</source>
          <target state="translated">탐색할 수 있도록 발송 되는 설정 작업은 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 그 자식 요소에 대해서가 있는지 여부 및 true 동작을 제어 하는 부모 요소에 get 접근자의 특성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</source>
          <target state="translated">연결된 된 속성 인지 자식 요소를 검색할 수 없는 경우 연결 된 속성 값은 어떤 식으로든에서 부모 요소에서 실제로 처리은 되는지 여부</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Also, the <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> 값이 처리 범위가 않거나 직계 부모 요소 보다 짧기 되는지 여부입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>All this is implementation specific.</source>
          <target state="translated">이 모든는 구현에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>However, this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</source>
          <target state="translated">그러나이 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> 검색 가능한 상태가 사용 정보 및 연결된 된 속성에 대 한 기능 정보를 보고 하기 위한 가장 사용할 수 있는 메커니즘을 보고 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</source>
          <target state="translated">따라서 연결된 된 속성의 검색 가능한 상태는 자식 요소에는 연결 된 속성 값을 처리 하거나 응용 프로그램 코드에서 관련 부모 요소에 의해 해석 하는 방법의 동작과 유사 일반적으로 가정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>For general information on declaring attached properties, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결된 속성 선언에 대 한 일반적인 정보를 참조 하십시오. <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
          <source>Members of this type are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 형식의 멤버에 일반적으로 사용 되지 않는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
          <source>The default for <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>의 기본값은 <ph id="ph2">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> to compare to the current <ph id="ph2">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph>와 비교할 <ph id="ph2">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is equal to a specified object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>이 지정된 개체와 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="true" /&gt;</ph>가 현재<ph id="ph2">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph>와 같으면 <ph id="ph3">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> 이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
          <source>This implementation supports value equality of the one possible settable value exposed by this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>.</source>
          <target state="translated">이 구현에서는이 노출 하는 설정 가능한 값 중 하나에 값이 같은지 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
          <source>An unsigned 32-bit integer value.</source>
          <target state="translated">부호 없는 32비트 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
          <source>This implementation supports two possible hash values based on the one possible settable value exposed by this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>.</source>
          <target state="translated">이 구현에서는 두 개의 가능한 해시 값이 노출 하는 설정 가능한 값 중 하나에 따라 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is applied.</source>
          <target state="translated">이 <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>이 적용된 연결된 속성에서 부모 요소를 검색하기 위해 전체 모드를 사용할지 여부를 선언하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</source>
          <target state="translated">연결된 속성을 소유하는 부모 요소의 논리적 트리에 있는 모든 자식 요소에서 연결된 속성을 탐색할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고,</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</source>
          <target state="translated">연결된 속성을 소유하는 부모 요소의 직계 자식 요소에서만 연결된 속성을 탐색할 수 있으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source>Most of the attached properties defined by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> that apply <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> do so with the default of <ph id="ph3">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> as <ph id="ph4">`false`</ph>.</source>
          <target state="translated">에 정의 된 연결 된 속성의 대부분 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 적용 되는 <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> 의 기본값을 사용 하 여 <ph id="ph3">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> 으로 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
          <source>Members of this type are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 형식의 멤버에 일반적으로 사용 되지 않는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>