<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HierarchicalDataTemplate.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de5a761355e9b24dd3935a4069c35a7ea2164a51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de5a761355e9b24dd3935a4069c35a7ea2164a51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>Represents a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> that supports <ph id="ph2">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>, such as <ph id="ph3">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph> or <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph>과 같은 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>을 지원하는 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph>을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>In the following example, <ph id="ph1">`ListLeagueList`</ph> is a list of <ph id="ph2">`League`</ph> objects.</source>
          <target state="translated">다음 예제에서 <ph id="ph1">`ListLeagueList`</ph>는 <ph id="ph2">`League`</ph> 개체 목록입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>Each <ph id="ph1">`League`</ph> object has a <ph id="ph2">`Name`</ph> and a collection of <ph id="ph3">`Division`</ph> objects.</source>
          <target state="translated">각 <ph id="ph1">`League`</ph> 개체에는 <ph id="ph2">`Name`</ph> 및 <ph id="ph3">`Division`</ph> 개체 컬렉션이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>Each <ph id="ph1">`Division`</ph> has a <ph id="ph2">`Name`</ph> and a collection of <ph id="ph3">`Team`</ph> objects, and each <ph id="ph4">`Team`</ph> object has a <ph id="ph5">`Name`</ph>.</source>
          <target state="translated">각 <ph id="ph1">`Division`</ph> 에는 <ph id="ph2">`Name`</ph> 및 <ph id="ph3">`Team`</ph> 개체 컬렉션이 포함되고 각 <ph id="ph4">`Team`</ph> 개체에는 <ph id="ph5">`Name`</ph>이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>The example shows that with the use of <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>, you can easily display list data that contains other lists.</source>
          <target state="translated">예제를 사용 하 여 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>, 다른 목록을 포함 하는 목록 데이터를 쉽게 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>The following is a screenshot of the example.</source>
          <target state="translated">예제 스크린샷은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.HierarchicalDataTemplate">
          <source><bpt id="p1">![</bpt>HierarchicalDataTemplate sample screen shot<ept id="p1">]</ept><bpt id="p2">(~/add/media/databinding-hierarchicaldatatemplate.png "</bpt>HierarchicalDataTemplate sample screen shot<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>HierarchicalDataTemplate 샘플 스크린 샷<ept id="p1">]</ept><bpt id="p2">(~/add/media/databinding-hierarchicaldatatemplate.png "</bpt>HierarchicalDataTemplate 샘플 스크린 샷<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Windows.HierarchicalDataTemplate">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.HierarchicalDataTemplate.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
          <source>The type for which this template is intended.</source>
          <target state="translated">이 템플릿을 사용할 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> class with the specified type for which the template is intended.</source>
          <target state="translated">템플릿을 사용할 지정된 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.HierarchicalDataTemplate" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
          <source>The <ph id="ph1">`dataType`</ph> parameter is either a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object or a string representing an <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> element.</source>
          <target state="translated"><ph id="ph1">`dataType`</ph> 매개 변수가 <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> 개체 또는 문자열 나타내는 <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Sources Overview<ept id="p1">](~/docs/framework/wpf/data/binding-sources-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>바인딩 소스 개요<ept id="p1">](~/docs/framework/wpf/data/binding-sources-overview.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>Gets or sets the number of alternating item containers for the child items.</source>
          <target state="translated">자식 항목에 대해 교대로 반복되는 항목 컨테이너의 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>The number of alternating item containers for the next level of items.</source>
          <target state="translated">다음 수준의 항목에 대해 교대로 반복되는 항목 컨테이너의 수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> properties enable you to specify the appearance for two or more alternating item containers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 속성을 사용 하면 두 개 이상의 교대로 반복 되는 항목 컨테이너에 대 한 모양을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>For example, you can specify alternating background colors for every third item in an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">예를 들어 모든 세 번째 항목에 대 한 대체 배경 색을 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> is assigned to each item container in the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 에서 각 항목 컨테이너에 할당 된는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> begins at 0, increments until it is <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> minus 1, and then restarts at 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 0에서 시작 될 때까지 증가, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> 1와 다음 다시 0에서 뺀 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> is 3 and there are seven items in the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, the following table lists the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> for each item.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;</ph> 은 3 이며 7 개의 항목이에 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, 다음 표에 <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 각 항목에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>Position of Item in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph></source>
          <target state="translated">항목의 위치는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> property, you are indicating that the child items should get an <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> in that range, not the item that has this <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> applied to it.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> 속성이 있음을 나타냅니다 자식 항목을 얻어야는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 이 있는 항목이 아니라 해당 범위에 <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> 적용 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> called <ph id="ph2">`aHeaderedItemsControl`</ph> uses a <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> with the <ph id="ph4">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> set, the item containers of the child items of <ph id="ph5">`aHeaderedItemsControl`</ph> will have an <ph id="ph6">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>, not the item container for <ph id="ph7">`aHeaderedItemsControl`</ph>.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> 호출 <ph id="ph2">`aHeaderedItemsControl`</ph> 사용 하 여 한 <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> 와 <ph id="ph4">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> 설정 항목 컨테이너의 자식 항목의 <ph id="ph5">`aHeaderedItemsControl`</ph> 갖습니다는 <ph id="ph6">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>에 대 한 항목 컨테이너가 아니라 <ph id="ph7">`aHeaderedItemsControl`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>There are several methods you can use to specify different appearances for the alternating item containers.</source>
          <target state="translated">교대로 반복 되는 항목 컨테이너에는 다른 모양을 지정 하는 데는 여러 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>One method is to bind properties of the items container to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">한 가지 방법은 하는 항목 컨테이너의 속성을 바인딩하는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>You can then use an <ph id="ph1">&lt;xref:System.Windows.Controls.AlternationConverter&gt;</ph> to specify which value should be applied to the item container that has a certain <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.AlternationConverter&gt;</ph> 특정 보유 하는 항목 컨테이너에 적용 해야 하는 값을 지정 하려면 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>You can also use triggers to change the value of an item container's property depending on the value of its <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">값에 따라 항목 컨테이너의 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> that is bound to data that is three levels deep, and each item is displayed in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> 된 세 가지 수준으로 데이터에 바인딩된 및 각 항목에 표시 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> objects in the first level have the same property values, the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> objects in the second level use alternating values for the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph> property, and the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> objects in the third level use alternating values for the <ph id="ph5">&lt;xref:System.Windows.Controls.TextBlock.Background%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 첫 번째 수준에 있는 개체는 동일한 속성 값이 있는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 두 번째 수준에 있는 개체에 대 한 대체 값을 사용 하 여는 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph> 속성을 및 <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 에 대 한 대체 값을 사용 하는 세 번째 수준에 있는 개체는 <ph id="ph5">&lt;xref:System.Windows.Controls.TextBlock.Background%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> for the first level, <ph id="ph2">`Level1Data`</ph>, has the <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> property set to 2, the <ph id="ph4">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> objects in the second level alternates between 0 and 1.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> 첫 번째 수준에 대 한 <ph id="ph2">`Level1Data`</ph>에 <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> 속성이 2로 설정는 <ph id="ph4">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 에 대 한는 <ph id="ph5">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> 0과 1 사이의 두 번째 수준 대체 항목에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> for the second level, <ph id="ph2">`Level2Data`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> is bound to the <ph id="ph5">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> and an <ph id="ph6">&lt;xref:System.Windows.Controls.AlternationConverter&gt;</ph> is provided to convert the <ph id="ph7">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> to an alternating <ph id="ph8">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> 두 번째 수준에 대 한 <ph id="ph2">`Level2Data`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 바인딩되는 <ph id="ph5">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Controls.AlternationConverter&gt;</ph> 변환 하는 <ph id="ph7">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph> 를 교대로 반복 되 <ph id="ph8">&lt;xref:System.Windows.Controls.TextBlock.FontStyle%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
          <source>A similar relationship exists between <ph id="ph1">`Level2Data`</ph> and <ph id="ph2">`Level3Data`</ph>:  The <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> is set to 3 on <ph id="ph4">`Level2Data`</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> in <ph id="ph6">`Level3Ddata`</ph> has its <ph id="ph7">&lt;xref:System.Windows.Controls.TextBlock.Background%2A&gt;</ph> property bound to the <ph id="ph8">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">유사한 관계 <ph id="ph1">`Level2Data`</ph> 및 <ph id="ph2">`Level3Data`</ph>:는 <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A&gt;</ph> 3으로 설정 된 <ph id="ph4">`Level2Data`</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 에 <ph id="ph6">`Level3Ddata`</ph> 에 해당 <ph id="ph7">&lt;xref:System.Windows.Controls.TextBlock.Background%2A&gt;</ph> 속성에 바인딩된는 <ph id="ph8">&lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> that is copied to each child item.</source>
          <target state="translated">각 자식 항목에 복사되는 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> that is copied to each child item.</source>
          <target state="translated">각 자식 항목에 복사되는 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;</ph> property, each item container gets a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> that has the same <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects as the <ph id="ph4">&lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;</ph>, but the properties that describe the data in the bindings, such as <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup.BindingExpressions%2A&gt;</ph>, are specific to the data for each item in the <ph id="ph7">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;</ph> 속성, 각 항목 컨테이너를 가져옵니다는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 동일한를 있는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 개체로 <ph id="ph4">&lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;</ph>, 하지만 같이 바인딩에 데이터를 설명 하는 속성 <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup.BindingExpressions%2A&gt;</ph>, 됩니다 각 항목에 대 한 데이터를 특정는 <ph id="ph7">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
          <source>You must access the item container's <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BindingGroup%2A&gt;</ph> to perform operations such as validate the data and check for errors on an item.</source>
          <target state="translated">항목 컨테이너에 액세스 해야 <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BindingGroup%2A&gt;</ph> 수행 하려면 작업 유효성 검사와 같은 데이터 및 항목에서 오류를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph> that is applied to the item container for each child item.</source>
          <target state="translated">각 자식 항목의 항목 컨테이너에 적용되는 <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph> that is applied to the item container for each child item.</source>
          <target state="translated">각 자식 항목의 항목 컨테이너에 적용되는 <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>You use this property or the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A&gt;</ph> property to set a style to affect the appearance of the elements that contain the data items.</source>
          <target state="translated">이 속성을 사용 하 여 또는 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A&gt;</ph> 속성을 데이터 항목을 포함 하는 요소의 모양을 좌우 하는 스타일을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>For example, for <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, the generated containers are <ph id="ph2">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> controls; for <ph id="ph3">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, they are <ph id="ph4">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.</source>
          <target state="translated">예: <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, 생성 된 컨테이너는 <ph id="ph2">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> 제어;에 대 한 <ph id="ph3">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, 이들은 <ph id="ph4">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> that uses one style for items in its first level and another style for items in its second level.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> 첫 번째 수준의 항목에 대 한 하나의 스타일을 사용 하 고 다른 스타일을 두 번째 수준의 항목입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>The style for the first level is set in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>.</source>
          <target state="translated">첫 번째 수준에 대 한 스타일에 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>The style for the second level is set in the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>.</source>
          <target state="translated">두 번째 수준에 대 한 스타일에 설정 되어는 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
          <source>The following example creates the data that is used in the previous example.</source>
          <target state="translated">다음 예제에서는 이전 예제에서 사용 되는 데이터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>Gets or sets custom style-selection logic for a style that can be applied to each item container.</source>
          <target state="translated">각 항목 컨테이너에 적용할 수 있는 스타일의 사용자 지정 스타일 선택 논리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.StyleSelector" /&gt;</ph> that chooses which style to use as the <ph id="ph2">&lt;see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.StyleSelector" /&gt;</ph>로 사용할 스타일을 선택하는 <ph id="ph2">&lt;see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>You use the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> property to set a style to affect the appearance of the elements that contain the data items.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> 속성을 데이터 항목을 포함 하는 요소의 모양을 좌우 하는 스타일을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>For example, for <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, the generated containers are <ph id="ph2">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> controls; for <ph id="ph3">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, they are <ph id="ph4">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.</source>
          <target state="translated">예: <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, 생성 된 컨테이너는 <ph id="ph2">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> 제어;에 대 한 <ph id="ph3">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, 이들은 <ph id="ph4">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>If you have more than one style defined and need to supply logic to choose which one to apply, then you use the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A&gt;</ph> property instead of the <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> property.</source>
          <target state="translated">둘 이상의 스타일을 정의 하 고를 적용 하려면 하나를 선택 하는 논리를 제공 해야 다음 작업을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A&gt;</ph> 속성 대신는 <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>Note that this property is ignored if the <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> property is set.</source>
          <target state="translated">있으면이 속성은 무시 됩니다는 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> that uses the <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> to choose between two styles for items in the second level of the <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph> 의 두 번째 수준에 있는 항목에 대 한 두 가지 스타일 중 하나를 선택는 <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.StyleSelector&gt;</ph> that is used in the previous example.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Controls.StyleSelector&gt;</ph> 앞의 예제에 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
          <source>The following example creates the data that is used in the previous example.</source>
          <target state="translated">다음 예제에서는 이전 예제에서 사용 되는 데이터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 나타내는 이 데이터 템플릿에 대한 바인딩을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>This is applied to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property on a generated <ph id="ph2">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> (such as a <ph id="ph3">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> or a <ph id="ph4">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph>) to indicate where to find the collection that represents the next level in the data hierarchy.</source>
          <target state="translated">이 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> 속성에는 생성 된 <ph id="ph2">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> (같은 <ph id="ph3">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph>) 데이터 계층 구조에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> type.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 내용은 참조는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>In the following example, <ph id="ph1">`ListLeagueList`</ph> is a list of <ph id="ph2">`League`</ph> objects.</source>
          <target state="translated">다음 예제에서 <ph id="ph1">`ListLeagueList`</ph>는 <ph id="ph2">`League`</ph> 개체 목록입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>Each <ph id="ph1">`League`</ph> object has a <ph id="ph2">`Name`</ph> and a collection of <ph id="ph3">`Division`</ph> objects.</source>
          <target state="translated">각 <ph id="ph1">`League`</ph> 개체에는 <ph id="ph2">`Name`</ph> 및 <ph id="ph3">`Division`</ph> 개체 컬렉션이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>Each <ph id="ph1">`Division`</ph> has a <ph id="ph2">`Name`</ph> and a collection of <ph id="ph3">`Team`</ph> objects, and each <ph id="ph4">`Team`</ph> object has a <ph id="ph5">`Name`</ph>.</source>
          <target state="translated">각 <ph id="ph1">`Division`</ph> 에는 <ph id="ph2">`Name`</ph> 및 <ph id="ph3">`Team`</ph> 개체 컬렉션이 포함되고 각 <ph id="ph4">`Team`</ph> 개체에는 <ph id="ph5">`Name`</ph>이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>The example shows that with the use of <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>, you can easily display list data that contains other lists.</source>
          <target state="translated">예제를 사용 하 여 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.HierarchicalDataTemplate&gt;</ph>, 다른 목록을 포함 하는 목록 데이터를 쉽게 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source>The following is a screenshot of the example.</source>
          <target state="translated">예제 스크린샷은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
          <source><bpt id="p1">![</bpt>HierarchicalDataTemplate sample screen shot<ept id="p1">]</ept><bpt id="p2">(~/add/media/databinding-hierarchicaldatatemplate.png "</bpt>HierarchicalDataTemplate sample screen shot<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>HierarchicalDataTemplate 샘플 스크린 샷<ept id="p1">]</ept><bpt id="p2">(~/add/media/databinding-hierarchicaldatatemplate.png "</bpt>HierarchicalDataTemplate 샘플 스크린 샷<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
          <source>Gets or sets a composite string that specifies how to format the items in the next level in the data hierarchy if they are displayed as strings.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
          <source>A composite string that specifies how to format the items in the next level of the data hierarchy if they are displayed as strings.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> to apply to the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /&gt;</ph> property on a generated <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph> (such as a <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> or a <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>), to indicate how to display items from the next level in the data hierarchy.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목을 표시하는 방법을 나타내기 위해 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /&gt;</ph> 등 생성된 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>에 있는 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> 속성에 적용할 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> to apply to the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /&gt;</ph> property on a generated <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph> (such as a <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> or a <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>), to indicate how to display items from the next level in the data hierarchy.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목을 표시하는 방법을 나타내기 위해 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /&gt;</ph> 등 생성된 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>에 있는 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> 속성에 적용할 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> to apply to the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /&gt;</ph> property on a generated <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph> (such as a <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> or a <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>), to indicate how to select a template to display items from the next level in the data hierarchy.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목을 표시하는 데 사용할 템플릿을 선택하는 방법을 나타내기 위해 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /&gt;</ph> 등 생성된 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>에 있는 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> 속성에 적용할 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> object to apply to the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /&gt;</ph> property on a generated <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph> (such as a <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> or a <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph>), to indicate how to select a template to display items from the next level in the data hierarchy.</source>
          <target state="translated">데이터 계층 구조에서 다음 수준의 항목을 표시하는 데 사용할 템플릿을 선택하는 방법을 나타내기 위해 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /&gt;</ph> 등 생성된 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.HeaderedItemsControl" /&gt;</ph>에 있는 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.MenuItem" /&gt;</ph> 속성에 적용할 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.TreeViewItem" /&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>