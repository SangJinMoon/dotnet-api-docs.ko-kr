<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="667fe03184862a5b4c23082d8ac8d3aa264c8933" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39808261" /></Metadata><TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="476ef-101"><see cref="T:System.Windows.Controls.TreeViewItem" /> 또는 <see cref="T:System.Windows.Controls.MenuItem" />과 같은 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />을 지원하는 <see cref="T:System.Windows.DataTemplate" />을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-101">Represents a <see cref="T:System.Windows.DataTemplate" /> that supports <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as <see cref="T:System.Windows.Controls.TreeViewItem" /> or <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="476ef-102">다음 예제에서 `ListLeagueList`는 `League` 개체 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-102">In the following example, `ListLeagueList` is a list of `League` objects.</span></span> <span data-ttu-id="476ef-103">각 `League` 개체에는 `Name` 및 `Division` 개체 컬렉션이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-103">Each `League` object has a `Name` and a collection of `Division` objects.</span></span> <span data-ttu-id="476ef-104">각 `Division` 에는 `Name` 및 `Team` 개체 컬렉션이 포함되고 각 `Team` 개체에는 `Name`이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-104">Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.</span></span>  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 <span data-ttu-id="476ef-105">이 예제에서는 사용 하 여 보여 줍니다 <xref:System.Windows.HierarchicalDataTemplate>, 다른 목록이 포함 된 목록 데이터를 쉽게 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-105">The example shows that with the use of <xref:System.Windows.HierarchicalDataTemplate>, you can easily display list data that contains other lists.</span></span> <span data-ttu-id="476ef-106">예제 스크린샷은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-106">The following is a screenshot of the example.</span></span>  
  
 <span data-ttu-id="476ef-107">![HierarchicalDataTemplate 샘플 스크린 샷](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate 샘플 스크린 샷")</span><span class="sxs-lookup"><span data-stu-id="476ef-107">![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate sample screen shot")</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="476ef-108"><see cref="T:System.Windows.HierarchicalDataTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-108">Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="476ef-109"><see cref="T:System.Windows.HierarchicalDataTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-109">Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType"><span data-ttu-id="476ef-110">이 템플릿을 사용할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-110">The type for which this template is intended.</span></span></param>
        <summary><span data-ttu-id="476ef-111">템플릿을 사용할 지정된 형식을 사용하여 <see cref="T:System.Windows.HierarchicalDataTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-111">Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class with the specified type for which the template is intended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-112">합니다 `dataType` 매개 변수가 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 개체나 나타내는 문자열입니다는 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-112">The `dataType` parameter is either a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object or a string representing an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] element.</span></span> <span data-ttu-id="476ef-113">자세한 내용은 [바인딩 소스 개요](~/docs/framework/wpf/data/binding-sources-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="476ef-113">For more information, see [Binding Sources Overview](~/docs/framework/wpf/data/binding-sources-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-114">자식 항목에 대해 교대로 반복되는 항목 컨테이너의 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-114">Gets or sets the number of alternating item containers for the child items.</span></span></summary>
        <value><span data-ttu-id="476ef-115">다음 수준의 항목에 대해 교대로 반복되는 항목 컨테이너의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-115">The number of alternating item containers for the next level of items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-116">합니다 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 및 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 속성을 사용 하면 두 개 이상의 교대로 반복 되는 항목 컨테이너에 대 한 모양을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-116">The <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> and <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> properties enable you to specify the appearance for two or more alternating item containers.</span></span> <span data-ttu-id="476ef-117">예를 들어, 모든 세 번째 항목에 대해 교대로 반복 되는 배경 색을 지정할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-117">For example, you can specify alternating background colors for every third item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="476ef-118"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목 컨테이너에 할당 되는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-118">The <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> is assigned to each item container in the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="476ef-119"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 0에서 시작 될 때까지 증가, <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 1이 고, 한 다음 다시 0에서 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-119"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> begins at 0, increments until it is <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, and then restarts at 0.</span></span> <span data-ttu-id="476ef-120">예를 들어, 경우 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 이 3이 고에 7 개의 항목이 있는 <xref:System.Windows.Controls.ItemsControl>, 다음 표에서 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-120">For example, if <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> is 3 and there are seven items in the <xref:System.Windows.Controls.ItemsControl>, the following table lists the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> for each item.</span></span>  
  
|<span data-ttu-id="476ef-121">항목의 위치는 <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="476ef-121">Position of Item in the <xref:System.Windows.Controls.ItemsControl></span></span>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="476ef-122">1</span><span class="sxs-lookup"><span data-stu-id="476ef-122">1</span></span>|<span data-ttu-id="476ef-123">0</span><span class="sxs-lookup"><span data-stu-id="476ef-123">0</span></span>|  
|<span data-ttu-id="476ef-124">2</span><span class="sxs-lookup"><span data-stu-id="476ef-124">2</span></span>|<span data-ttu-id="476ef-125">1</span><span class="sxs-lookup"><span data-stu-id="476ef-125">1</span></span>|  
|<span data-ttu-id="476ef-126">3</span><span class="sxs-lookup"><span data-stu-id="476ef-126">3</span></span>|<span data-ttu-id="476ef-127">2</span><span class="sxs-lookup"><span data-stu-id="476ef-127">2</span></span>|  
|<span data-ttu-id="476ef-128">4</span><span class="sxs-lookup"><span data-stu-id="476ef-128">4</span></span>|<span data-ttu-id="476ef-129">0</span><span class="sxs-lookup"><span data-stu-id="476ef-129">0</span></span>|  
|<span data-ttu-id="476ef-130">5</span><span class="sxs-lookup"><span data-stu-id="476ef-130">5</span></span>|<span data-ttu-id="476ef-131">1</span><span class="sxs-lookup"><span data-stu-id="476ef-131">1</span></span>|  
|<span data-ttu-id="476ef-132">6</span><span class="sxs-lookup"><span data-stu-id="476ef-132">6</span></span>|<span data-ttu-id="476ef-133">2</span><span class="sxs-lookup"><span data-stu-id="476ef-133">2</span></span>|  
|<span data-ttu-id="476ef-134">7</span><span class="sxs-lookup"><span data-stu-id="476ef-134">7</span></span>|<span data-ttu-id="476ef-135">0</span><span class="sxs-lookup"><span data-stu-id="476ef-135">0</span></span>|  
  
 <span data-ttu-id="476ef-136">설정 하는 경우는 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 속성인 있음을 나타냅니다 자식 항목을 가져와야는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 이 있는 항목이 아닌 해당 범위의 <xref:System.Windows.HierarchicalDataTemplate> 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-136">When you set the <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> property, you are indicating that the child items should get an <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> in that range, not the item that has this <xref:System.Windows.HierarchicalDataTemplate> applied to it.</span></span> <span data-ttu-id="476ef-137">예를 들어 경우는 <xref:System.Windows.Controls.HeaderedItemsControl> 호출 `aHeaderedItemsControl` 사용 하 여를 <xref:System.Windows.HierarchicalDataTemplate> 사용 하 여를 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 항목 컨테이너의 자식 항목을 설정 `aHeaderedItemsControl` 해야는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>에 대 한 항목 컨테이너가 아니라 `aHeaderedItemsControl`합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-137">For example, if a <xref:System.Windows.Controls.HeaderedItemsControl> called `aHeaderedItemsControl` uses a <xref:System.Windows.HierarchicalDataTemplate> with the <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> set, the item containers of the child items of `aHeaderedItemsControl` will have an <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, not the item container for `aHeaderedItemsControl`.</span></span>  
  
 <span data-ttu-id="476ef-138">교대로 반복 되는 항목 컨테이너에 대해 다른 모양을 지정 하 여 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-138">There are several methods you can use to specify different appearances for the alternating item containers.</span></span> <span data-ttu-id="476ef-139">한 가지 방법은 항목 컨테이너의 속성에 바인딩하는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-139">One method is to bind properties of the items container to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="476ef-140">사용할 수 있습니다는 <xref:System.Windows.Controls.AlternationConverter> 특정 된 항목 컨테이너에 적용 되어야 하는 값을 지정 하려면 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-140">You can then use an <xref:System.Windows.Controls.AlternationConverter> to specify which value should be applied to the item container that has a certain <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="476ef-141">값에 따라 항목 컨테이너의 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-141">You can also use triggers to change the value of an item container's property depending on the value of its <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="476ef-142">다음 예제는 <xref:System.Windows.Controls.TreeView> 세 가지 수준으로 데이터에 바인딩된 및 각 항목에 표시 됩니다는 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-142">The following example creates a <xref:System.Windows.Controls.TreeView> that is bound to data that is three levels deep, and each item is displayed in a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="476ef-143"><xref:System.Windows.Controls.TextBlock> 첫 번째 수준에 있는 개체에는 동일한 속성 값을 합니다 <xref:System.Windows.Controls.TextBlock> 교대로 반복 되는 값을 사용 하는 두 번째 수준에 있는 개체를 <xref:System.Windows.Controls.TextBlock.FontStyle%2A> 속성인 및 <xref:System.Windows.Controls.TextBlock> 교대로 반복 되는 값을 사용 하는 세 번째 수준에 있는 개체를 <xref:System.Windows.Controls.TextBlock.Background%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-143">The <xref:System.Windows.Controls.TextBlock> objects in the first level have the same property values, the <xref:System.Windows.Controls.TextBlock> objects in the second level use alternating values for the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> property, and the <xref:System.Windows.Controls.TextBlock> objects in the third level use alternating values for the <xref:System.Windows.Controls.TextBlock.Background%2A> property.</span></span>  
  
 <span data-ttu-id="476ef-144">때문에 <xref:System.Windows.HierarchicalDataTemplate> 첫 번째 수준에 대 한 `Level1Data`에 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 속성이 2로 설정 합니다 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 에 대 한는 <xref:System.Windows.Controls.TreeViewItem> 0과 1 사이의 두 번째 수준 대체에서 개체.</span><span class="sxs-lookup"><span data-stu-id="476ef-144">Because the <xref:System.Windows.HierarchicalDataTemplate> for the first level, `Level1Data`, has the <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> property set to 2, the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> for the <xref:System.Windows.Controls.TreeViewItem> objects in the second level alternates between 0 and 1.</span></span> <span data-ttu-id="476ef-145">에 <xref:System.Windows.HierarchicalDataTemplate> 두 번째 수준에 대 한 `Level2Data`, <xref:System.Windows.Controls.TextBlock.FontStyle%2A> 의 <xref:System.Windows.Controls.TextBlock> 바인딩되는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Controls.AlternationConverter> 변환 하기 위해 제공 됩니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 를 교대로 반복 되 <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="476ef-145">In the <xref:System.Windows.HierarchicalDataTemplate> for the second level, `Level2Data`, the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> of the <xref:System.Windows.Controls.TextBlock> is bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> and an <xref:System.Windows.Controls.AlternationConverter> is provided to convert the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> to an alternating <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.</span></span>  <span data-ttu-id="476ef-146">유사한 테이블 간에 관계가 `Level2Data` 및 `Level3Data`:를 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 에서 3으로 설정 됩니다 `Level2Data`, 및 <xref:System.Windows.Controls.TextBlock> 에서 `Level3Ddata` 에 해당 <xref:System.Windows.Controls.TextBlock.Background%2A> 속성에 바인딩된는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-146">A similar relationship exists between `Level2Data` and `Level3Data`:  The <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> is set to 3 on `Level2Data`, and the <xref:System.Windows.Controls.TextBlock> in `Level3Ddata` has its <xref:System.Windows.Controls.TextBlock.Background%2A> property bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-147">각 자식 항목에 복사되는 <see cref="T:System.Windows.Data.BindingGroup" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-147">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each child item.</span></span></summary>
        <value><span data-ttu-id="476ef-148">각 자식 항목에 복사되는 <see cref="T:System.Windows.Data.BindingGroup" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-148">The <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each child item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-149">설정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> 속성인 각 항목 컨테이너를 가져옵니다을 <xref:System.Windows.Data.BindingGroup> 는 동일 <xref:System.Windows.Controls.ValidationRule> 개체로 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, 하지만 같은 바인딩에 데이터를 설명 하는 속성 <xref:System.Windows.Data.BindingGroup.Items%2A> 및 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>는 각 항목에 대 한 데이터에 특정 된 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-149">When you set the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> property, each item container gets a <xref:System.Windows.Data.BindingGroup> that has the same <xref:System.Windows.Controls.ValidationRule> objects as the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, but the properties that describe the data in the bindings, such as <xref:System.Windows.Data.BindingGroup.Items%2A> and <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, are specific to the data for each item in the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="476ef-150">항목 컨테이너의 액세스 해야 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> 수행 하려면 작업 유효성 검사와 같은 데이터 및 항목에서 오류를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-150">You must access the item container's <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> to perform operations such as validate the data and check for errors on an item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-151">각 자식 항목의 항목 컨테이너에 적용되는 <see cref="T:System.Windows.Style" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-151">Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</span></span></summary>
        <value><span data-ttu-id="476ef-152">각 자식 항목의 항목 컨테이너에 적용되는 <see cref="T:System.Windows.Style" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-152">The <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-153">이 속성을 사용 또는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-153">You use this property or the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="476ef-154">예를 들어 <xref:System.Windows.Controls.TreeView>, 생성 된 컨테이너는 <xref:System.Windows.Controls.TreeViewItem> 제어;에 대 한 <xref:System.Windows.Controls.Menu>, 이들은 <xref:System.Windows.Controls.MenuItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-154">For example, for <xref:System.Windows.Controls.TreeView>, the generated containers are <xref:System.Windows.Controls.TreeViewItem> controls; for <xref:System.Windows.Controls.Menu>, they are <xref:System.Windows.Controls.MenuItem> controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="476ef-155">다음 예제에서는 <xref:System.Windows.Controls.TreeView> 첫 번째 수준의 항목에 대 한 하나의 스타일을 사용 하 고 해당 두 번째 수준에 다른 스타일에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-155">The following example creates a <xref:System.Windows.Controls.TreeView> that uses one style for items in its first level and another style for items in its second level.</span></span>  <span data-ttu-id="476ef-156">첫 번째 수준에 대 한 스타일에서 설정 됩니다는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 의 속성을 <xref:System.Windows.Controls.TreeView>입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-156">The style for the first level is set in the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property of the <xref:System.Windows.Controls.TreeView>.</span></span>  <span data-ttu-id="476ef-157">두 번째 수준에 대 한 스타일에서 설정 됩니다는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 의 속성을 <xref:System.Windows.HierarchicalDataTemplate>.</span><span class="sxs-lookup"><span data-stu-id="476ef-157">The style for the second level is set in the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> property of the <xref:System.Windows.HierarchicalDataTemplate>.</span></span>  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 <span data-ttu-id="476ef-158">다음 예제에서는 이전 예제에서 사용 되는 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-158">The following example creates the data that is used in the previous example.</span></span>  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-159">각 항목 컨테이너에 적용할 수 있는 스타일의 사용자 지정 스타일 선택 논리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-159">Gets or sets custom style-selection logic for a style that can be applied to each item container.</span></span></summary>
        <value><span data-ttu-id="476ef-160"><see cref="T:System.Windows.Controls.StyleSelector" />로 사용할 스타일을 선택하는 <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-160">A <see cref="T:System.Windows.Controls.StyleSelector" /> that chooses which style to use as the <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />.</span></span> <span data-ttu-id="476ef-161">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-161">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-162">사용 된 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-162">You use the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="476ef-163">예를 들어 <xref:System.Windows.Controls.TreeView>, 생성 된 컨테이너는 <xref:System.Windows.Controls.TreeViewItem> 제어;에 대 한 <xref:System.Windows.Controls.Menu>, 이들은 <xref:System.Windows.Controls.MenuItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-163">For example, for <xref:System.Windows.Controls.TreeView>, the generated containers are <xref:System.Windows.Controls.TreeViewItem> controls; for <xref:System.Windows.Controls.Menu>, they are <xref:System.Windows.Controls.MenuItem> controls.</span></span> <span data-ttu-id="476ef-164">사용 하는 경우 정의 된 둘 이상의 스타일을 적용 하려면 하나를 선택 하는 논리를 제공 해야 하는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> 속성 대신는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-164">If you have more than one style defined and need to supply logic to choose which one to apply, then you use the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> property instead of the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> property.</span></span> <span data-ttu-id="476ef-165">있으면이 속성은 무시 됩니다는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-165">Note that this property is ignored if the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> property is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="476ef-166">다음 예제에서는 <xref:System.Windows.Controls.TreeView> 를 사용 하는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 의 <xref:System.Windows.HierarchicalDataTemplate> 의 두 번째 수준에는 항목에 대 한 두 스타일 중에서 선택할 수는 <xref:System.Windows.Controls.TreeView>.</span><span class="sxs-lookup"><span data-stu-id="476ef-166">The following example creates a <xref:System.Windows.Controls.TreeView> that uses the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> of a <xref:System.Windows.HierarchicalDataTemplate> to choose between two styles for items in the second level of the <xref:System.Windows.Controls.TreeView>.</span></span>  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 <span data-ttu-id="476ef-167">다음 예제는 <xref:System.Windows.Controls.StyleSelector> 앞의 예제에서 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-167">The following example shows the <xref:System.Windows.Controls.StyleSelector> that is used in the previous example.</span></span>  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 <span data-ttu-id="476ef-168">다음 예제에서는 이전 예제에서 사용 되는 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-168">The following example creates the data that is used in the previous example.</span></span>  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-169">데이터 계층 구조에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 나타내는 이 데이터 템플릿에 대한 바인딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-169">Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</span></span></summary>
        <value><span data-ttu-id="476ef-170">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-170">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="476ef-171">에 적용 되는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 생성된 된 속성 <xref:System.Windows.Controls.HeaderedItemsControl> (같은 <xref:System.Windows.Controls.MenuItem> 또는 <xref:System.Windows.Controls.TreeViewItem>) 데이터 계층에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-171">This is applied to the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property on a generated <xref:System.Windows.Controls.HeaderedItemsControl> (such as a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.TreeViewItem>) to indicate where to find the collection that represents the next level in the data hierarchy.</span></span>  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="476ef-172">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="476ef-172">XAML Text Usage</span></span>  
 <span data-ttu-id="476ef-173">에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 합니다 <xref:System.Windows.Data.Binding> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-173">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see the <xref:System.Windows.Data.Binding> type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="476ef-174">다음 예제에서 `ListLeagueList`는 `League` 개체 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-174">In the following example, `ListLeagueList` is a list of `League` objects.</span></span> <span data-ttu-id="476ef-175">각 `League` 개체에는 `Name` 및 `Division` 개체 컬렉션이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-175">Each `League` object has a `Name` and a collection of `Division` objects.</span></span> <span data-ttu-id="476ef-176">각 `Division` 에는 `Name` 및 `Team` 개체 컬렉션이 포함되고 각 `Team` 개체에는 `Name`이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-176">Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.</span></span>  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 <span data-ttu-id="476ef-177">이 예제에서는 사용 하 여 보여 줍니다 <xref:System.Windows.HierarchicalDataTemplate>, 다른 목록이 포함 된 목록 데이터를 쉽게 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-177">The example shows that with the use of <xref:System.Windows.HierarchicalDataTemplate>, you can easily display list data that contains other lists.</span></span> <span data-ttu-id="476ef-178">예제 스크린샷은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-178">The following is a screenshot of the example.</span></span>  
  
 <span data-ttu-id="476ef-179">![HierarchicalDataTemplate 샘플 스크린 샷](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate 샘플 스크린 샷")</span><span class="sxs-lookup"><span data-stu-id="476ef-179">![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate sample screen shot")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-180">데이터 계층 구조에서 다음 수준의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-180">Gets or sets a composite string that specifies how to format the items in the next level in the data hierarchy if they are displayed as strings.</span></span></summary>
        <value><span data-ttu-id="476ef-181">데이터 계층 구조에서 다음 수준의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-181">A composite string that specifies how to format the items in the next level of the data hierarchy if they are displayed as strings.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-182">데이터 계층 구조에서 다음 수준의 항목을 표시하는 방법을 나타내기 위해 <see cref="T:System.Windows.DataTemplate" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 등 생성된 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />에 있는 <see cref="T:System.Windows.Controls.MenuItem" /> 속성에 적용할 <see cref="T:System.Windows.Controls.TreeViewItem" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-182">Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to display items from the next level in the data hierarchy.</span></span></summary>
        <value><span data-ttu-id="476ef-183">데이터 계층 구조에서 다음 수준의 항목을 표시하는 방법을 나타내기 위해 <see cref="T:System.Windows.DataTemplate" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 등 생성된 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />에 있는 <see cref="T:System.Windows.Controls.MenuItem" /> 속성에 적용할 <see cref="T:System.Windows.Controls.TreeViewItem" />입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-183">The <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to display items from the next level in the data hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="476ef-184">데이터 계층 구조에서 다음 수준의 항목을 표시하는 데 사용할 템플릿을 선택하는 방법을 나타내기 위해 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 등 생성된 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />에 있는 <see cref="T:System.Windows.Controls.MenuItem" /> 속성에 적용할 <see cref="T:System.Windows.Controls.TreeViewItem" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-184">Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to select a template to display items from the next level in the data hierarchy.</span></span></summary>
        <value><span data-ttu-id="476ef-185">데이터 계층 구조에서 다음 수준의 항목을 표시하는 데 사용할 템플릿을 선택하는 방법을 나타내기 위해 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 등 생성된 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />에 있는 <see cref="T:System.Windows.Controls.MenuItem" /> 속성에 적용할 <see cref="T:System.Windows.Controls.TreeViewItem" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="476ef-185">The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to select a template to display items from the next level in the data hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>