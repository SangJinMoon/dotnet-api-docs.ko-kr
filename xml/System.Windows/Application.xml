<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Application.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c1545c3fed8c624d4c35dc01867c923d75f2bd3b69e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45c3fed8c624d4c35dc01867c923d75f2bd3b69e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Application">
          <source>Encapsulates a Windows Presentation Foundation (WPF) application.</source>
          <target state="translated">WPF(Windows Presentation Foundation) 응용 프로그램을 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> is a class that encapsulates <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application-specific functionality, including the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 가 캡슐화 하는 클래스 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 을 다음을 비롯 한 응용 프로그램 관련 기능:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><bpt id="p1">**</bpt>Application Lifetime<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Deactivated&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.Exit&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Application.Startup&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>응용 프로그램 수명<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Deactivated&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.Exit&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Application.Startup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><bpt id="p1">**</bpt>Application-Scope Window, Property, and Resource Management<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.GetContentStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.GetResourceStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.LoadComponent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>응용 프로그램 범위 창, 속성 및 리소스 관리<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.GetContentStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.GetResourceStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.LoadComponent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><bpt id="p1">**</bpt>Command-Line Parameter and Exit Code Processing<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.Startup?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Exit?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>명령줄 매개 변수 및 종료 코드 처리<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.Startup?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Exit?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Navigated&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.Navigating&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.GetCookie%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>탐색<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Application.Navigated&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Application.Navigating&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Application.GetCookie%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> implements the singleton pattern to provide shared access to its window, property, and resource scope services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 해당 창, 속성 및 리소스 범위 서비스에 대 한 공유 액세스를 제공 하는 singleton 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>Consequently, only one instance of the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> class can be created per <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">따라서 인스턴스가 하나만 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 당 클래스를 만들 수 있습니다 <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>You can implement an <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> using markup, markup and code-behind, or code.</source>
          <target state="translated">구현할 수는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 태그, 태그 및 코드 숨김 또는 코드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph3">`ApplicationDefinition`</ph> item.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 태그 또는 태그 및 코드 숨김, 태그 파일으로 구성 해야 하는지 여부를 태그를 사용 하 여 구현 되는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph3">`ApplicationDefinition`</ph> 항목입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>A standalone application does not require an <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object; it is possible to implement a custom <ph id="ph2">`static`</ph> entry point method (<ph id="ph3">`Main`</ph>) that opens a window without creating an instance of <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">독립 실행형 응용 프로그램 필요 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체 사용자 지정을 구현 하는 것이 불가능 <ph id="ph2">`static`</ph> 진입점 메서드 (<ph id="ph3">`Main`</ph>)의 인스턴스를 만들지 않고 창을 엽니다.이 <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>However, <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph> require an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">그러나 <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph> 필요는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>The following example shows how a standard application is defined using only markup:</source>
          <target state="translated">다음 예제에서는 표준 응용 프로그램을 하는 방법을 보여 줍니다. 태그만 사용 하 여 정의 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>The following example shows how a standard application is defined using only code:</source>
          <target state="translated">다음 예제에서는 표준 응용 프로그램은 코드만 정의 방법을 사용 하 여:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>The following example shows how a standard application is defined using a combination of markup and code-behind.</source>
          <target state="translated">다음 예제에서는 표준 응용 프로그램을 하는 방법을 보여 줍니다. 태그 및 코드 숨김의 조합을 사용 하 여 정의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>The public <ph id="ph1">&lt;see langword="static" /&gt;</ph> (<ph id="ph2">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">공용 <ph id="ph1">&lt;see langword="static" /&gt;</ph> (<ph id="ph2">&lt;see langword="Shared" /&gt;</ph> Visual basic에서)이 형식의 멤버는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>In addition, the <ph id="ph1">&lt;see cref="M:System.Windows.Application.FindResource(System.Object)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Windows.Application.TryFindResource(System.Object)" /&gt;</ph> methods and the <ph id="ph3">&lt;see cref="P:System.Windows.Application.Properties" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Application.Resources" /&gt;</ph> properties are thread safe.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;see cref="M:System.Windows.Application.FindResource(System.Object)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Windows.Application.TryFindResource(System.Object)" /&gt;</ph> 메서드 및 <ph id="ph3">&lt;see cref="P:System.Windows.Application.Properties" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Windows.Application.Resources" /&gt;</ph> 속성은 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.#ctor">
          <source>Only one instance of the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> class can be created per <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>, to ensure shared access to a single set of application-scope window, property, and resource data.</source>
          <target state="translated">인스턴스가 하나만 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 당 클래스를 만들 수 있습니다 <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>, 응용 프로그램 범위 창, 속성 및 리소스 데이터의 단일 집합에 대 한 공유 액세스 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.#ctor">
          <source>Consequently, the default constructor of the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> class detects whether the instance being initialized is the first instance in an <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>; if it is not, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">따라서의 기본 생성자는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 클래스의 첫 번째 인스턴스가 초기화 되는 인스턴스 인지 검색는 <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>정상이 아닌 경우는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object for the current <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> is exposed from the static <ph id="ph3">&lt;xref:System.Windows.Application.Current%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 현재에 대 한 개체 <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> 정적에서 노출 <ph id="ph3">&lt;xref:System.Windows.Application.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.#ctor">
          <source>More than one instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph> class is created per <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph>당 <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph> 클래스 인스턴스가 두 개 이상 만들어지는 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Activated">
          <source>Occurs when an application becomes the foreground application.</source>
          <target state="translated">응용 프로그램이 포그라운드 응용 프로그램이 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 하나 이상의 열려 있는 창이 응용 프로그램을 활성화 (포그라운드로 됨) 창 중 하나는 활성화 된 경우 처음으로 응용 프로그램이 시작 된 이후 또는 창 중 하나이 응용 프로그램 하는 동안 활성화 될 때 비활성 상태인: 프로그램이 경우:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>An application opens its first window.</source>
          <target state="translated">응용 프로그램의 첫 번째 창을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>A user switches to the application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">사용자가 ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 응용 프로그램으로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>A user clicks the taskbar button for one of the windows in an application.</source>
          <target state="translated">사용자가 응용 프로그램의 창 중 하나에 대 한 작업 표시줄 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>Applications that need to detect when they activate can handle the <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> event.</source>
          <target state="translated">활성화 되는 시기를 검색 하는 응용 프로그램에서 처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>If an application's behavior or state depends on its activation state, it can handle both <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> events to determine which activation state it's in.</source>
          <target state="translated">모두 처리할 수는 응용 프로그램의 동작이 나 상태가 활성화 상태에 따라 달라 지, <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 이벤트를 상태를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>Once an application becomes active, <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</source>
          <target state="translated">응용 프로그램 활성화 되 면 <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> 응용 프로그램이 활성 상태인 동안 응용 프로그램 내에서 개수 창이 활성화 될에 관계 없이 응용 프로그램이 비활성화 될 때까지 다시 발생 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> is not raised for <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph> 에 대 한 끝나면 <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Activated">
          <source>The following example shows how to detect when a standalone application activates and deactivates.</source>
          <target state="translated">다음 예제에는 독립 실행형 응용 프로그램 활성화 및 비활성화 하는 시기를 감지 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.Current">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph> object for the current <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph> object for the current <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Application" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Current">
          <source><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> is a per-<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> singleton type that implements the static <ph id="ph3">&lt;xref:System.Windows.Application.Current%2A&gt;</ph> property to provide shared access to the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> instance for the current <ph id="ph5">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 이 당-<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> 정적을 구현 하는 단일 형식 <ph id="ph3">&lt;xref:System.Windows.Application.Current%2A&gt;</ph> 속성에 대 한 공유 액세스를 제공 하는 <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> 현재에 대 한 인스턴스 <ph id="ph5">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Current">
          <source>This design guarantees that state managed by <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>, including shared resources and state, is available from a single, shared location.</source>
          <target state="translated">이 디자인 하 여 관리 되는 상태에서는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>, 공유 리소스 및 상태를 포함 하 여, 하나의 공유 위치에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Current">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Deactivated">
          <source>Occurs when an application stops being the foreground application.</source>
          <target state="translated">응용 프로그램이 더 이상 포그라운드 응용 프로그램이 아닐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> (포그라운드 응용 프로그램이 중지 됨)를 비활성화 하는 하나 이상의 열려 있는 창이 응용 프로그램 사용자가 다음을 수행 하는 경우:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>Switches to another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 다른 응용 프로그램으로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>Clicks the taskbar button for a window in another application.</source>
          <target state="translated">다른 응용 프로그램의 창에 대 한 작업 표시줄 단추를 클릭합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>Applications that need to detect deactivation can handle the <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> event.</source>
          <target state="translated">비활성화를 처리할 수를 검색 하는 응용 프로그램의 <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>If an application's behavior or state depends on its activation state, it can handle both <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> events to determine which state it's in.</source>
          <target state="translated">모두 처리할 수는 응용 프로그램의 동작이 나 상태가 활성화 상태에 따라 달라 지, <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> 이벤트를 상태를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> is not raised for <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 에 대 한 끝나면 <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Deactivated">
          <source>The following example shows how to detect when a standalone application deactivates and activates.</source>
          <target state="translated">다음 예제에는 독립 실행형 응용 프로그램을 비활성화 및 활성화 하는 시기를 감지 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Occurs when an exception is thrown by an application but not handled.</source>
          <target state="translated">응용 프로그램에서 예외가 throw되었지만 처리되지 않은 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 처리 되지 않은 예외를 catch 하 고 예외 (올은 예외를 보고할 수) 대화 상자에서 사용자에 게 알려줍니다 자동으로 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>.</source>
          <target state="translated">그러나 응용 프로그램 중앙된 위치에서 처리 되지 않은 사용자 지정 예외 처리를 수행 하는 경우를 처리 해야 <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> is raised by an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> for each exception that is unhandled by code running on the main UI thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 에 의해 발생 한 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 주 UI 스레드에서 실행 되는 코드에서 처리 되지 않은 각 예외에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>If an exception is not handled on either a background <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread (a thread with its own <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>) or a background worker thread (a thread without a <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>), the exception is not forwarded to the main <ph id="ph4">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">예외가 처리 되지 않은 경우에 배경 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 스레드 (자체로 스레드 <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>) 또는 백그라운드 작업자 스레드 (없는 스레드는 <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>), 예외 주에 게 전달 되지 <ph id="ph4">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Consequently, <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> is not raised.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>In these circumstances, you will need to write code to do the following:</source>
          <target state="translated">이러한 상황에서는 다음을 수행 하는 코드를 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Handle exceptions on the background thread.</source>
          <target state="translated">백그라운드 스레드에서 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Dispatch those exceptions to the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">이러한 예외를 주 디스패치 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Rethrow them on the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread without handling them to allow <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> to be raised.</source>
          <target state="translated">주 다시 throw 할 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 을 허용 하도록 처리 하지 않고 스레드 <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 발생 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>For more information, see the <bpt id="p1">[</bpt>Threading Model<ept id="p1">](~/docs/framework/wpf/advanced/threading-model.md)</ept> overview.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>스레딩 모델<ept id="p1">](~/docs/framework/wpf/advanced/threading-model.md)</ept> 개요입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> event handler is passed a <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;</ph> argument that contains contextual information regarding the exception, including:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 이벤트 처리기에 전달 되는 <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;</ph> 인수는 예외에 대 한 컨텍스트 정보를 포함 하는 포함 하 여:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>The exception (<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;</ph>).</source>
          <target state="translated">예외 (<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> from which it originated (<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> 예외가 시작 된 (<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>You can use this information to determine whether an exception is recoverable or not.</source>
          <target state="translated">예외를 복구할 수 있는지 여부를 확인 하려면이 정보를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>A recoverable exception might be a <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>, for example, while an unrecoverable exception might be a <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>, for example.</source>
          <target state="translated">복구 가능한 예외는 <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>, 예를 들어 복구할 수 없는 예외 수 있지만 <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>, 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>When you process an unhandled exception from <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>, and you don't want <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> to continue processing it, you need to set the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">처리 되지 않은 예외를 처리 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>, 않으려면 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 설정 해야 처리를 계속 하려면는 <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;</ph> 속성을 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Unlike the other events that <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> raises, <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</source>
          <target state="translated">다른 이벤트와 달리는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 를 시키면 <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 않습니다 없습니다가 일치 하는 보호 가상 구현 (OnDispatcherUnhandledException).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>Consequently, classes that derive from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> must always register an event handler with <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> to process unhandled exceptions.</source>
          <target state="translated">따라서 클래스에서 파생 되는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 항상와 이벤트 처리기를 등록 해야 <ph id="ph2">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 처리 되지 않은 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.DispatcherUnhandledException">
          <source>The following example shows how to process unhandled exceptions by handling the <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> event.</source>
          <target state="translated">처리 하 여 처리 되지 않은 예외를 처리 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Exit">
          <source>Occurs just before an application shuts down, and cannot be canceled.</source>
          <target state="translated">응용 프로그램이 종료되기 직전에 발생하며 취소할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>An application can shut down for either of the following reasons:</source>
          <target state="translated">다음 이유 중 하나에 대 한 응용 프로그램이 종료 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object is called, either explicitly or as determined by the <ph id="ph3">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 의해 명시적으로 또는 결정 된 대로 개체 호출 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>The user ends the session by logging off or shutting down.</source>
          <target state="translated">사용자 로그 오프 하거나 종료 하는 세션을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>You can detect when application shutdown occurs by handling the <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> event, and perform any additional processing as required.</source>
          <target state="translated">처리 하 여 응용 프로그램 종료가 발생할 때를 감지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> 이벤트를 필요에 따라 추가 처리를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>You can also handle <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> to inspect or change the application exit code when you don't need to call <ph id="ph2">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> explicitly.</source>
          <target state="translated">처리할 수도 있습니다 <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> 검사 하거나를 호출할 필요 하지 않을 때 응용 프로그램 종료 코드를 변경 하려면 <ph id="ph2">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>The exit code is exposed from the <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.ExitEventArgs&gt;</ph> argument that's passed to the <ph id="ph3">&lt;xref:System.Windows.Application.Exit&gt;</ph> event handler.</source>
          <target state="translated">종료 코드에서 노출 되는 <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.ExitEventArgs&gt;</ph> 에 전달 되는 인수는 <ph id="ph3">&lt;xref:System.Windows.Application.Exit&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>When the application stops running, the exit code is passed to the operating system for subsequent processing.</source>
          <target state="translated">응용 프로그램 실행을 중지, 종료 코드 후속 처리에 대 한 운영 체제에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>If your application handles the <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> event and subsequently cancels it, <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> is not raised and the application continues running in accordance with the shutdown mode.</source>
          <target state="translated">응용 프로그램에서 처리 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 이벤트 한 후 취소 <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> 발생 하지 않습니다 하 고 응용 프로그램에 따라 종료 모드에서에서 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>The exit code can be set from an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>, although the value is ignored.</source>
          <target state="translated">종료 코드에서 설정할 수 있습니다는 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>있지만 값이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> is raised in the following circumstances:</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> 는 다음과 같은 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>An <ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> is navigated away from.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> 에서 멀리 이동 하 게 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph>, when the tab that is hosting the <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> is closed.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph>때 호스팅하는 탭의 <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> 닫힙니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>When the browser is closed.</source>
          <target state="translated">브라우저가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>In all cases, the value of the <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> property is ignored.</source>
          <target state="translated">모든 경우의 값에는 <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> 속성은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>The following example demonstrates how to:</source>
          <target state="translated">다음 예제에서는 하는 방법:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> event.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>Inspect and update the <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.ExitEventArgs&gt;</ph>.</source>
          <target state="translated">검사 하 고 업데이트는 <ph id="ph1">&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.ExitEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>Write an entry to an application log in isolated storage.</source>
          <target state="translated">격리 된 저장소에서 응용 프로그램 로그에 항목을 기록 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Exit">
          <source>Persist the application state to isolated storage.</source>
          <target state="translated">격리 된 저장소를 응용 프로그램 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>The name of the resource to find.</source>
          <target state="translated">찾을 리소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>Searches for a <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> resource, such as a <ph id="ph2">&lt;see cref="T:System.Windows.Style" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>, with the specified key, and throws an exception if the requested resource is not found (see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>).</source>
          <target state="translated">지정된 키를 사용하여 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 리소스(예: <ph id="ph2">&lt;see cref="T:System.Windows.Style" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>)를 검색하고 요청된 리소스가 없으면 예외를 throw합니다(<bpt id="p1">[</bpt>XAML 리소스<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>The requested resource object.</source>
          <target state="translated">요청된 리소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>If the requested resource is not found, a <ph id="ph1">&lt;see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /&gt;</ph> is thrown.</source>
          <target state="translated">요청된 리소스가 없으면 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> will first look in application-scope resources for the specified resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> 지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 소개 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>Application-scope resources are managed by <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>, and are exposed from the <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램 범위 리소스 관리 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>에서 노출 하 고는 <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>If the specified resource is not found in the set of application-scope resources, <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> then next searches the system resources.</source>
          <target state="translated">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> 다음 시스템 리소스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>These are exposed from the <ph id="ph1">&lt;xref:System.Windows.SystemColors&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.SystemFonts&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.SystemParameters&gt;</ph> types, respectively, as static properties.</source>
          <target state="translated">노출 된 <ph id="ph1">&lt;xref:System.Windows.SystemColors&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.SystemFonts&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.SystemParameters&gt;</ph> 각각 정적 속성입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>To use <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> to acquire them, these types also expose resource key properties that are designed to be passed to <ph id="ph2">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>; for example, <ph id="ph3">&lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</ph>.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> 을 얻은를 이러한 형식 속성을 노출 리소스 키를 전달 하도록 디자인 된 <ph id="ph2">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>등 <ph id="ph3">&lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> 개체를 반환 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated">이 메서드를 찾을 수 없는 키에 대 한를 호출 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>If you do not want to handle exceptions that result from calling <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>, call <ph id="ph2">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> instead; <ph id="ph3">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> returns a <ph id="ph4">`null`</ph> reference when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">호출에서 발생 하는 예외를 처리 하기 원하는 경우 하지 <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph>, 호출 <ph id="ph2">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 대신; <ph id="ph3">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 반환는 <ph id="ph4">`null`</ph> 참조할 때 요청 된 리소스를 찾을 수 없으면 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> to find a resource, and to handle <ph id="ph2">&lt;xref:System.Windows.ResourceReferenceKeyNotFoundException&gt;</ph> if the resource is not found.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Application.FindResource%2A&gt;</ph> 하 고 처리 하는 리소스를 찾을 <ph id="ph2">&lt;xref:System.Windows.ResourceReferenceKeyNotFoundException&gt;</ph> 리소스를 찾을 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.FindResource(System.Object)">
          <source>The resource cannot be found.</source>
          <target state="translated">리소스를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.FragmentNavigation">
          <source>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> content has been loaded if the desired fragment is in different content.</source>
          <target state="translated">응용 프로그램의 탐색기에서 콘텐츠 조각 탐색을 시작할 때 발생합니다. 원하는 조각이 현재 콘텐츠에 있으면 즉시 탐색이 발생하고, 원하는 조각이 다른 콘텐츠에 있으면 소스 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 콘텐츠가 로드된 후에 탐색이 발생합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.FragmentNavigation">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.FragmentNavigation">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>The relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that maps to a loose resource.</source>
          <target state="translated">느슨한 리소스에 매핑되는 상대 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>Returns a resource stream for a content data file that is located at the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 있는 콘텐츠 데이터 파일에 대한 리소스 스트림을 반환합니다(<bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph> that contains a content data file that is located at the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph>에 있는 콘텐츠 데이터 파일이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>If a loose resource is not found, null is returned.</source>
          <target state="translated">느슨한 리소스가 없으면 null이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetContentStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /&gt;</ph> is an absolute <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /&gt;</ph>가 절대 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that specifies the location for which a cookie was created.</source>
          <target state="translated">쿠키가 만들어진 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>Retrieves a cookie for the location specified by a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 의해 지정된 위치에 대한 쿠키를 검색합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value, if the cookie exists; otherwise, a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Win32Exception" /&gt;</ph> is thrown.</source>
          <target state="translated">쿠키가 있으면 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Win32Exception" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.GetCookie%2A&gt;</ph> retrieves a cookie for the specified <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.GetCookie%2A&gt;</ph> 지정 된 쿠키를 검색 <ph id="ph2">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>If the cookie can't be retrieved, a <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> is thrown.</source>
          <target state="translated">쿠키를 검색할 수 없는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>You need to write the code to parse the cookie string into a list of name/value pairs.</source>
          <target state="translated">이름/값 쌍의 목록 쿠키 문자열 구문 분석 하는 코드를 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/docs/framework/wpf/app-development/navigation-overview.md)</ept>.</source>
          <target state="translated">쿠키에 대 한 개요 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>탐색 개요<ept id="p1">](~/docs/framework/wpf/app-development/navigation-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <ph id="ph2">&lt;see langword="InternetGetCookie" /&gt;</ph> function (called by <ph id="ph3">&lt;see cref="M:System.Windows.Application.GetCookie(System.Uri)" /&gt;</ph>) if a problem occurs when attempting to retrieve the specified cookie.</source>
          <target state="translated">지정된 쿠키를 검색하는 동안 문제가 발생하면 <ph id="ph3">&lt;see cref="M:System.Windows.Application.GetCookie(System.Uri)" /&gt;</ph>에서 호출된 <ph id="ph2">&lt;see langword="InternetGetCookie" /&gt;</ph> 함수에 의해 <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 오류가 발생합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>for getting the cookie for a file-based <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">파일 기반에 대 한 쿠키를 가져오기 위한 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>for getting the cookie for a non-file-based <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">비-파일 기반에 대 한 쿠키를 가져오기 위한 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetCookie(System.Uri)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="P:System.Net.WebPermission.ConnectList" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="P:System.Net.WebPermission.ConnectList" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that maps to a loose resource at the site of origin.</source>
          <target state="translated">원본 사이트의 느슨한 리소스에 매핑되는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>Returns a resource stream for a site-of-origin data file that is located at the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 있는 원본 사이트 데이터 파일에 대한 리소스 스트림을 반환합니다(<bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph> that contains a resource stream for a site-of-origin data file that is located at the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph>에 있는 원본 사이트 데이터 파일에 대한 리소스 스트림이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>If the loose resource is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">느슨한 리소스가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetRemoteStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /&gt;</ph> is either not relative, or is absolute but not in the <bpt id="p1">&lt;c&gt;</bpt>pack://siteoforigin:,,,/<ept id="p1">&lt;/c&gt;</ept> form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /&gt;</ph>가 상대 경로가 아니거나 절대 경로이지만 <bpt id="p1">&lt;c&gt;</bpt>pack://siteoforigin:,,,/<ept id="p1">&lt;/c&gt;</ept> 형태가 아닌 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that maps to an embedded resource.</source>
          <target state="translated">포함된 리소스로 매핑되는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>Returns a resource stream for a resource data file that is located at the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 있는 리소스 데이터 파일에 대한 리소스 스트림을 반환합니다(<bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph> that contains a resource stream for resource data file that is located at the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Resources.StreamResourceInfo" /&gt;</ph>에 있는 리소스 데이터 파일에 대한 리소스 스트림이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph> is either not relative, or is absolute but not in the <bpt id="p1">&lt;c&gt;</bpt>pack://application:,,,/<ept id="p1">&lt;/c&gt;</ept> form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph>가 상대 경로가 아니거나 절대 경로이지만 <bpt id="p1">&lt;c&gt;</bpt>pack://application:,,,/<ept id="p1">&lt;/c&gt;</ept> 형태가 아닌 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.GetResourceStream(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is passed to <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph> cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 전달된 <ph id="ph2">&lt;see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /&gt;</ph>를 발견할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.LoadCompleted">
          <source>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</source>
          <target state="translated">응용 프로그램의 탐색기에서 탐색한 콘텐츠가 로드 및 구문 분석되었으며 렌더링을 시작한 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.LoadCompleted">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.LoadCompleted">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.LoadCompleted">
          <source>Listen for events on the navigated content such as the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event on <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph> before you access properties of the navigated content.</source>
          <target state="translated">와 같은 이벤트 탐색된 된 콘텐츠를 수신 대기는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> 이벤트에 <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph> 탐색 콘텐츠의 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Windows.Application">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>에 있는 <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> 파일을 로드합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Application">
          <source>This method is not thread-safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that maps to a relative <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">상대 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 파일에 매핑되는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>, and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">지정된 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>에 있는 <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> 파일을 로드하고 <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 파일의 루트 요소에 의해 지정된 개체의 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>An instance of the root element specified by the XAML file loaded.</source>
          <target state="translated">로드한 XAML 파일에 지정된 루트 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>You must explicitly convert the return value to the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">반환 값의 루트 요소와 동일한 형식으로 명시적으로 변환 해야 합니다는 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>This method is not thread-safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph>가 절대 <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>인 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Uri)">
          <source>The file is not a <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">파일이 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일이 아닌 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>An object of the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 파일의 루트 요소와 같은 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that maps to a relative <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">상대 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 파일에 매핑되는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">지정된 <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>에 있는 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 파일을 로드하고 <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 파일의 루트 요소가 지정하는 개체의 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]</ph> 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)</ept>).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>This method is not thread-safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceLocator" /&gt;</ph>가 절대 <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is of a type that does not match the root element of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 파일의 루트 요소와 일치하지 않는 형식인 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.MainWindow">
          <source>Gets or sets the main window of the application.</source>
          <target state="translated">응용 프로그램의 주 창을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> that is designated as the main application window.</source>
          <target state="translated">주 응용 프로그램 창으로 지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> is automatically set with a reference to the first <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> object to be instantiated in the <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 자동으로 첫 번째에 대 한 참조 설정 <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> 에서 인스턴스화할 수 있는 개체는 <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>You can specify a different main window by setting <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> assigning another <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> property.</source>
          <target state="translated">다른 주 창을 설정 하 여 지정할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 다른 할당 <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object is set to <ph id="ph3">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>, closing the main window causes the application to shut down.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체로 설정 되어 <ph id="ph3">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>, 주 창을 닫으면 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>It is possible to set the <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> property from <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>, if an application's main window is not the window that is produced by setting the <ph id="ph3">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> property in <ph id="ph4">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">설정할 수는 <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 속성 <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>응용 프로그램의 주 창 설정 하 여 생성 되는 창이 아닌 경우는 <ph id="ph3">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 속성에 <ph id="ph4">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>The two limitations of the <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> approach are:</source>
          <target state="translated">두 가지 제한 된 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> 접근 방식이 됩니다:</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>You can specify either a <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>-only <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> or a <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>-only <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> as the main window.</source>
          <target state="translated">하나만 지정할 수 있습니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>-만 <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> 또는 <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>-만 <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 주 창으로 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>You must set the <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property of the window you specify, otherwise it won't be shown.</source>
          <target state="translated">설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> 지정할 속성 창, 그렇지 않으면 표시 되지 않게 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>The reference to the first <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> object to be instantiated is also added as the first item to the <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> collection.</source>
          <target state="translated">첫 번째에 대 한 참조 <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> 개체를 인스턴스화할 수에 첫 번째 항목으로 추가 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> is subsequently set with a reference to a different <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>, the position of the item with the reference to the main window will change, while the order of items in <ph id="ph3">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> remains the same.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 다른에 대 한 참조도 설정한 <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>에 있는 항목의 순서는 동안 주 창에 대 한 참조 항목의 위치가 변경 됩니다 <ph id="ph3">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 동일 하 게 유지 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>Consequently, always use <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> to refer to the main window instead of the first item in <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph>.</source>
          <target state="translated">따라서 항상 사용할 <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 주 창에서 첫 번째 항목 대신 참조 하려면 <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>If the main window is a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, and you need specific access to <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> members, you will need to cast the value of <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
          <target state="translated">주 창이 없으면는 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, 특정 액세스 해야 하 고 <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 멤버의 값을 캐스팅 해야 합니다 <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 를 <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>This property is available only from the thread that created the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>The following example shows how to find the main application window.</source>
          <target state="translated">다음 예제에서는 기본 응용 프로그램 창을 찾는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>The following example shows how to set <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> using <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">다음 예제에서는 설정 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 를 사용 하 여 <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.MainWindow">
          <source>The following example shows how to instantiate the <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> in code during application startup.</source>
          <target state="translated">다음 예제에서는 인스턴스화하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 응용 프로그램 시작 시 코드에서.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.MainWindow">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Application.MainWindow" /&gt;</ph> is set from an application that's hosted in a browser, such as an <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Application.MainWindow" /&gt;</ph>가 브라우저에서 호스팅된 응용 프로그램(예: <ph id="ph2">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph>)에서 설정된 경우</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Navigated">
          <source>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</source>
          <target state="translated">응용 프로그램의 탐색기에서 탐색 중인 콘텐츠를 찾은 경우에 발생합니다. 콘텐츠가 완전히 로드되지 않았을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Navigated">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Navigated">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Navigating">
          <source>Occurs when a new navigation is requested by a navigator in the application.</source>
          <target state="translated">응용 프로그램의 탐색기에서 새 탐색이 요청된 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Navigating">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Navigating">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.NavigationFailed">
          <source>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</source>
          <target state="translated">응용 프로그램의 탐색기에서 요청된 내용을 탐색하는 동안 오류가 표시될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationFailed">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationFailed">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.NavigationProgress">
          <source>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</source>
          <target state="translated">탐색 진행률 정보를 제공하기 위해 응용 프로그램의 탐색기에서 관리되는 다운로드 중에 정기적으로 발생합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationProgress">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationProgress">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.NavigationStopped">
          <source>Occurs when the <ph id="ph1">&lt;see langword="StopLoading" /&gt;</ph> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</source>
          <target state="translated">응용 프로그램 탐색기의 <ph id="ph1">&lt;see langword="StopLoading" /&gt;</ph> 메서드가 호출되거나 현재 탐색이 진행되는 동안 탐색기에서 새 탐색이 요청된 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationStopped">
          <source>A navigator is either a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">탐색기는 한 <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.NavigationStopped">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Activated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Activated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnActivated%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Deactivated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Deactivated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnDeactivated%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.Deactivated&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.ExitEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.ExitEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Exit" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Exit" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override the <ph id="ph2">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph> method.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnExit%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.FragmentNavigation" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.FragmentNavigation" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnFragmentNavigation%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.FragmentNavigation&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.LoadCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.LoadCompleted" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnLoadCompleted%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.LoadCompleted&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Navigated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Navigated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Navigated&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Navigated&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.Navigated&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigated%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.Navigated&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Navigating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Navigating" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Navigating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Navigating&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.Navigating&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigating%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.Navigating&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationFailed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationFailed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationFailed%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationFailed&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationProgress" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationProgress" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <source>The overridden method must explicitly call <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드가 명시적으로 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationProgress%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationProgress&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Navigation.NavigationEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationStopped" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.NavigationStopped" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnNavigationStopped%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.NavigationStopped&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.SessionEndingCancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.SessionEndingCancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.SessionEnding" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.SessionEnding" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph> in the base class if <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnSessionEnding%2A&gt;</ph> 기본 클래스의 경우 <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.StartupEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.StartupEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Application.Startup" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Application.Startup" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph>.</source>
          <target state="translated">파생 되는 형식을 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 재정의할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph> in the base class if the <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> event needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph> 기본 클래스의 경우는 <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.Properties">
          <source>Gets a collection of application-scope properties.</source>
          <target state="translated">응용 프로그램 범위 속성의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the application-scope properties.</source>
          <target state="translated">응용 프로그램 범위 속성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> exposes a dictionary via <ph id="ph2">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> which you can use to store application-scope properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 사전을 통해 노출 <ph id="ph2">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> 는 응용 프로그램 범위의 속성을 저장 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source>This allows you to share state amongst all code in an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> in a thread-safe fashion, without the need to write your own state code.</source>
          <target state="translated">모든 코드에서 상태를 공유할 수 있습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 고유한 상태 코드를 작성할 필요 없이 스레드로부터 안전한 방식입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source>Properties stored in <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> must be converted to the appropriate type returned.</source>
          <target state="translated">속성에 저장 된 <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> 반환 되는 적절 한 형식으로 변환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> property is thread safe and is available from any thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Properties">
          <source>The following example shows how create and use an application-scope property using <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 어떻게 만들고 사용 하 여 응용 프로그램 범위의 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.ResourceAssembly">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that provides the pack <ph id="ph2">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> 응용 프로그램의 리소스에 대한 팩 <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>를 제공하는 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>A reference to the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that provides the pack <ph id="ph2">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> 응용 프로그램의 리소스에 대한 팩 <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>를 제공하는 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the <ph id="ph2">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> method.</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 리소스가 반환 되는 값으로 식별 되는 항목 어셈블리와 관련 하 여 실행 시 확인 되는 <ph id="ph2">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>The entry assembly is the assembly that is returned by <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> and could be the following:</source>
          <target state="translated">진입 어셈블리에서 반환 되는 어셈블리는 <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> 다음 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>The executable assembly in the default application domain.</source>
          <target state="translated">기본 응용 프로그램 도메인에서 실행 가능한 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>The first assembly to be executed by calling <ph id="ph1">&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;</ph>.</source>
          <target state="translated">호출 하 여 실행할 첫 번째 어셈블리 <ph id="ph1">&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>In the following cases, however, a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly cannot get a reference to the entry assembly:</source>
          <target state="translated">그러나 다음과 같은 경우에는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 어셈블리 항목 어셈블리에 대 한 참조를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>An unmanaged (native) application hosts the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly.</source>
          <target state="translated">관리 되지 않는 (네이티브) 응용 프로그램 호스트는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>A managed application hosts the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly by loading it into a new application domain using a method other than <ph id="ph2">&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;</ph>.</source>
          <target state="translated">관리 되는 응용 프로그램 호스트는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 이외의 메서드를 사용 하 여 새 응용 프로그램 도메인에 로드 하 여 어셈블리 <ph id="ph2">&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>In both of these cases, <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> returns <ph id="ph2">`null`</ph>, and the <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly's resources cannot be resolved.</source>
          <target state="translated">이러한 경우 모두 <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> 반환 <ph id="ph2">`null`</ph>, 및 <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 어셈블리의 리소스를 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>In these cases, <ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> can be set, once only, with a reference to the assembly that should be used to resolve resources.</source>
          <target state="translated">이러한 경우 <ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> 한 번만 리소스를 확인 하는 데 사용 해야 하는 어셈블리에 대 한 참조로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> can only be set once because it is unlikely that the resource assembly will change after the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> 리소스 어셈블리가 후 변경 될 가능성이 없기 때문에 한 번 설정만 수는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 어셈블리가 로드 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> cannot be set when a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> assembly can discover the entry assembly—that is, when <ph id="ph3">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> returns a reference to an assembly rather than <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> 설정할 수 없습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 어셈블리 항목 어셈블리를 검색할 수 있습니다-즉, <ph id="ph3">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</ph> 어셈블리에 대 한 참조를 반환 하지 않고 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.ResourceAssembly%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ResourceAssembly">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.ResourceAssembly">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application has an entry assembly, or <ph id="ph2">&lt;see cref="P:System.Windows.Application.ResourceAssembly" /&gt;</ph> has already been set.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 응용 프로그램에 진입 어셈블리가 있거나 <ph id="ph2">&lt;see cref="P:System.Windows.Application.ResourceAssembly" /&gt;</ph>가 이미 설정된 경우</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.Resources">
          <source>Gets or sets a collection of application-scope resources, such as styles and brushes.</source>
          <target state="translated">응용 프로그램 범위 리소스(예: 스타일 및 브러시)의 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> object that contains zero or more application-scope resources.</source>
          <target state="translated">0개 이상의 응용 프로그램 범위 리소스가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.ResourceDictionary" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property can be used to share resources across the windows and elements of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 속성 창과 응용 프로그램의 요소 간에 리소스를 공유 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property is included in the resource lookup path, which is traversed in the following order:</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 속성 다음과 같은 순서로 트래버스 리소스 조회 경로에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Elements</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Windows</source>
          <target state="translated">Windows</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>System</source>
          <target state="translated">시스템</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Consequently, <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements can bind to application-scope resources.</source>
          <target state="translated">따라서 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 요소는 응용 프로그램 범위 리소스에 바인딩될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</source>
          <target state="translated">또한, 리소스 변경, 리소스 시스템 해당 요소 되도록 해당 리소스에 바인딩되는 속성의 변경 내용을 반영 하도록 자동으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Application-scope resources provide a simple way to support a consistent theme across your application.</source>
          <target state="translated">응용 프로그램 범위 리소스 응용 프로그램 전체에서 일관 된 테마를 지원 하는 간단한 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>You can easily create a theme in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> by using the <ph id="ph2">`Application.Resources`</ph> tag.</source>
          <target state="translated">에 테마를 쉽게 만들 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 를 사용 하 여는 <ph id="ph2">`Application.Resources`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> instance for each theme.</source>
          <target state="translated">그러나 응용 프로그램이 많은 테마 요소를 포함할 수도 있는 여러 테마를 지원 하기 쉬울 수 있습니다 하나를 사용 하 여 관리 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> 각 테마에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>In this way, a new theme can be applied by setting the Resources property to the appropriate <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">이러한 방식으로 새 테마에 적절 한 리소스 속성을 설정 하 여 적용 될 수 있는 <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>There are two considerations to make when using <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>.</source>
          <target state="translated">사용 하는 경우를 확인 하려면 두 가지 고려 사항을 <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>First, the dictionary <bpt id="p1">*</bpt>key<ept id="p1">*</ept> is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</source>
          <target state="translated">먼저, 사전 <bpt id="p1">*</bpt>키<ept id="p1">*</ept> 은 개체를 설정 하 고 (참고는 문자열을 사용 하는 경우 키가 대/소문자 구분) 속성 값을 가져올 경우 정확히 동일한 개체 인스턴스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>Second, the dictionary <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is an object, so you will need to convert the value to the desired type when getting a property value.</source>
          <target state="translated">두 번째, 사전 <bpt id="p1">*</bpt>값<ept id="p1">*</ept> 개체 이므로 속성 값을 가져올 때 값을 원하는 형식으로 변환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> is thread safe and is available from any thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>This example illustrates how to use <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> together with application-scope resources to create a consistent visual appearance.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 일관성 있는 시각적 모양을 만들려는 응용 프로그램 범위 리소스와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>The following example shows how to set an application resource in code and XAML.</source>
          <target state="translated">다음 예제 코드 및 XAML에서 응용 프로그램 리소스를 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Resources">
          <source>The following example shows how to get an application resource in code.</source>
          <target state="translated">다음 예제에서는 코드에서 응용 프로그램 리소스를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="T:System.Windows.Application">
          <source>Starts a Windows Presentation Foundation (WPF) application.</source>
          <target state="translated">WPF(Windows Presentation Foundation) 응용 프로그램을 시작합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램을 시작합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">응용 프로그램이 종료될 때 운영 체제로 반환되는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 응용 프로그램 종료 코드입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">기본적으로 종료 코드 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> is called to start a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 시작 하기 위해 호출 됩니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>If you define your <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> using markup, or markup and code-behind, <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> will be called implicitly.</source>
          <target state="translated">정의 하는 경우 프로그램 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 태그 또는 태그 및 코드 숨김을 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 암시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>However, if you define your <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> using code, you will need to explicitly call <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>.</source>
          <target state="translated">그러나 정의 하는 경우 프로그램 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 코드를 사용 해야 합니다를 명시적으로 호출 <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> attaches a new <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> instance to the <ph id="ph4">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 가 호출 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 새 연결 <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> 인스턴스는 <ph id="ph4">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>Next, the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> object's <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt;</ph> method is called, which starts a message pump to process windows messages.</source>
          <target state="translated">다음으로 <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt;</ph> windows 메시지를 처리 하는 메시지 펌프를 시작 하는 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> object calls the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object's the <ph id="ph3">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph> method to raise the <ph id="ph4">&lt;xref:System.Windows.Application.Startup&gt;</ph> event.</source>
          <target state="translated">마지막으로,는 <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> 호출 개체는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체의는 <ph id="ph3">&lt;xref:System.Windows.Application.OnStartup%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph4">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>Consequently, the application execution model has been established by the time you handle <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph>, at which point the application is considered to be running.</source>
          <target state="translated">따라서 응용 프로그램 실행 모델 이미 처리할 때 설정 되었으며 <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph>, 이때 응용 프로그램에 실행 되 고 것으로 간주 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>An application stops running when <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called; the value of the <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property determines when <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called, and whether it happens automatically or you need to explicitly call it.</source>
          <target state="translated">응용 프로그램의 경우 실행이 중지 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 버전이 호출 됩니다; 값은 <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 속성 시기를 결정 합니다. <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 호출 되 고 자동으로 수행 됨 또는 명시적으로 해야 하는지 여부를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> can be called only from the thread that creates the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 만들어진 스레드에서만에서 호출할 수는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>Also, <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> cannot be called from a <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 에서 호출할 수 없습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run">
          <source>The following example shows an application that uses a custom <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> and must therefore explicitly call <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자 지정을 사용 하는 응용 프로그램 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 명시적으로 호출 해야 하므로 <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph> is called from a browser-hosted application (for example, an <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">브라우저에서 호스팅된 응용 프로그램(예: <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>)에서 <ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph>이 호출되는 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> that opens automatically when an application starts.</source>
          <target state="translated">응용 프로그램이 시작될 때 자동으로 열리는 <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application and opens the specified window.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램을 시작하고 지정된 창을 엽니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">응용 프로그램이 종료될 때 운영 체제로 반환되는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 응용 프로그램 종료 코드입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">기본적으로 종료 코드 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>This overload extends the <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> method to open the specified window after an application starts running.</source>
          <target state="translated">이 오버 로드 확장은 <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A&gt;</ph> 메서드를 실행 중인 응용 프로그램이 시작 된 후 지정 된 창을 엽니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>If you define a code <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> that opens a window when it starts running, you explicitly call <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>.</source>
          <target state="translated">코드를 정의 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 하는 창을 엽니다.이 실행을 시작한 경우, 명시적으로 호출 <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>If you create your <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:</source>
          <target state="translated">만들면 사용자 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 태그 또는 태그 및 관련 코드를 사용 하 여 자동으로 창을 열 수 있습니다는 다음 방법 중 하나를 사용 하는 동안:</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>Declaratively, by setting <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>.</source>
          <target state="translated">설정 하 여 선언적 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>Programmatically, by handling <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph>.</source>
          <target state="translated">프로그래밍 방식으로 처리 하 여 <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source>The following example shows an application with a manually-created static entry point method that instantiates <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>, before calling <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>.</source>
          <target state="translated">다음 예제를 인스턴스화하는 정적 진입점 수동으로 만든 메서드를 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>를 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Application.Run%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Run(System.Windows.Window)">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph> is called from a browser-hosted application (for example, an <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">브라우저에서 호스팅된 응용 프로그램(예: <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>)에서 <ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph>이 호출되는 경우</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.SessionEnding">
          <source>Occurs when the user ends the Windows session by logging off or shutting down the operating system.</source>
          <target state="translated">사용자가 로그오프하거나 운영 체제를 종료하여 Windows 세션을 끝낼 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>By default, an application shuts down when the Windows session ends, which occurs when a user logs off or shuts down.</source>
          <target state="translated">기본적으로 응용 프로그램이 종료 될 때 사용자가 로그 오프 하거나 종료 되었을 때 발생 하는 Windows 세션이 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>When this happens, Windows asks each open application to shut down.</source>
          <target state="translated">이 경우 Windows를 종료 하려면 각 열려 있는 응용 프로그램을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>However, it is possible that an application may not be ready to shut down when this occurs.</source>
          <target state="translated">그러나 있기 응용 프로그램이 발생 하는 때를 종료할 준비가 되어 있지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</source>
          <target state="translated">예를 들어 응용 프로그램 또는 장기 실행 작업 중에 일관성이 없는 상태에 있는 데이터가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</source>
          <target state="translated">이러한 상황에서 세션 종료를 방지 하는 것이 바람직 수 있으며 사용자가 세션을 종료 여부를 결정 하는 옵션을 허용 하는 것이 더 효율적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>You can detect when a session ends by handling the <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> event.</source>
          <target state="translated">처리 하 여 세션이 끝날 때를 감지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>If an application needs to prevent the session from ending, the <ph id="ph1">&lt;xref:System.Windows.SessionEndingCancelEventArgs&gt;</ph> argument that is passed to the event handler exposes the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> that you set to <ph id="ph3">`true`</ph> (the default value is <ph id="ph4">`false`</ph>).</source>
          <target state="translated">응용 프로그램 세션 종료 하지 못하도록 해야 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.SessionEndingCancelEventArgs&gt;</ph> 노출 하는 이벤트 처리기에 전달 되는 인수는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 로 설정 하는 <ph id="ph3">`true`</ph> (기본값은 <ph id="ph4">`false`</ph>) 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> is unhandled, or is handled without being cancelled, <ph id="ph2">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called and the <ph id="ph3">&lt;xref:System.Windows.Application.Exit&gt;</ph> event is raised.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 처리 되지 않은 또는 취소 하지 않고 처리 <ph id="ph2">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 라고 및 <ph id="ph3">&lt;xref:System.Windows.Application.Exit&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>To obtain more information about why the session is ending, an application can inspect <ph id="ph1">&lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;</ph>, which is one of the <ph id="ph2">&lt;xref:System.Windows.ReasonSessionEnding&gt;</ph> values (<ph id="ph3">&lt;xref:System.Windows.ReasonSessionEnding.Logoff?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.ReasonSessionEnding.Shutdown?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">세션이 종료 되는 이유는 방법에 대 한 자세한 정보를 얻으려면 응용 프로그램을 검사할 수 <ph id="ph1">&lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;</ph>, 중 하나인는 <ph id="ph2">&lt;xref:System.Windows.ReasonSessionEnding&gt;</ph> 값 (<ph id="ph3">&lt;xref:System.Windows.ReasonSessionEnding.Logoff?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.ReasonSessionEnding.Shutdown?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> is not raised by console applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 콘솔 응용 프로그램에서 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> is raised only on the thread that creates the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 만드는 스레드는에 발생 하는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> is not raised for XAML browser applications (XBAPs).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> XAML 브라우저 응용 프로그램 (Xbap)에 대 한 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.SessionEnding">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> event and allow the user to cancel it.</source>
          <target state="translated">다음 예제에서는 처리 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 이벤트 취소 하 고 사용자입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that specifies the location for which the cookie should be created.</source>
          <target state="translated">쿠키를 만들어야 하는 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the cookie data.</source>
          <target state="translated">쿠키 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Creates a cookie for the location specified by a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 의해 지정된 위치에 대한 쿠키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</source>
          <target state="translated">쿠키는 응용 프로그램에서 클라이언트 컴퓨터에 응용 프로그램 세션 (세션 쿠키) 중 또는 응용 프로그램 세션 (영구 쿠키) 간에 저장 될 수 있는 데이터의 일부를 임의로.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>You can create both types of cookies by calling <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>.</source>
          <target state="translated">호출 하 여 두 종류의 쿠키를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Cookie data typically takes the form of a name/value pair in the following format:</source>
          <target state="translated">쿠키 데이터는 일반적으로 다음과 같은 형식 이름/값 쌍 형식의 가집니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>You pass a string of this format to <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>, along with the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> of the location for which the cookie should be set (typically, the application domain).</source>
          <target state="translated">이 형식의 문자열을 전달 하면 <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph>와 함께 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 쿠키를 설정 해야 하는 위치 (일반적으로 응용 프로그램 도메인).</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph> includes an expiry date.</source>
          <target state="translated">에 전달 하는 쿠키는 세션 쿠키 또는 영구 쿠키 쿠키 문자열 여부에 따라 달라 집니다 <ph id="ph1">&lt;xref:System.Windows.Application.SetCookie%2A&gt;</ph> 만료 날짜를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>The string for a session cookie does not include an expiry date.</source>
          <target state="translated">세션 쿠키에 대 한 문자열에서 한 만료 날짜를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>The string for a persistent cookie does, and must be in the following format:</source>
          <target state="translated">영구 쿠키의 문자열에는 다음과 같은 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Persistent cookies are stored in the current <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> installation's Temporary Internet Files folder until they expire, in which case they are deleted.</source>
          <target state="translated">영구 쿠키는 현재에서 저장 된 <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 설치의 임시 인터넷 파일 폴더 만료 될 때까지,이 경우 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</source>
          <target state="translated">만료 날짜가 과거 날짜/시간 값으로 설정 하 여 응용 프로그램에서 영구 쿠키를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/docs/framework/wpf/app-development/navigation-overview.md)</ept>.</source>
          <target state="translated">쿠키에 대 한 개요 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>탐색 개요<ept id="p1">](~/docs/framework/wpf/app-development/navigation-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <ph id="ph2">&lt;see langword="InternetSetCookie" /&gt;</ph> function (called by <ph id="ph3">&lt;see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" /&gt;</ph>) if a problem occurs when attempting to create the specified cookie.</source>
          <target state="translated">지정된 쿠키를 만드는 동안 문제가 발생하면 <ph id="ph3">&lt;see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" /&gt;</ph>에서 호출된 <ph id="ph2">&lt;see langword="InternetSetCookie" /&gt;</ph> 함수에 의해 <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 오류가 발생합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>for getting the cookie for a file-based <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">파일 기반에 대 한 쿠키를 가져오기 위한 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>for getting the cookie for a non-file-based <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">비-파일 기반에 대 한 쿠키를 가져오기 위한 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="T:System.Windows.Application">
          <source>Shuts down an application.</source>
          <target state="translated">응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Shutdown">
          <source>Shuts down an application.</source>
          <target state="translated">응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called, an application stops running.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 호출 되는 응용 프로그램 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> event to detect when an application is about to stop running, to perform any appropriate processing.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> 응용 프로그램은 적절 한 처리를 수행 하 고, 실행이 중지 시기를 감지 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is implicitly called by <ph id="ph2">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> in the following situations:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 암시적으로 호출한 <ph id="ph2">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 다음과 같은 경우:</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>When a user ends a session and the <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> event is either unhandled, or handled without cancellation.</source>
          <target state="translated">사용자 세션을 종료 하는 경우 및 <ph id="ph1">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> 이벤트, 처리 되지 않은 또는 취소 하지 않고 처리 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> explicitly causes an application to shut down, regardless of the <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> setting.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 명시적으로 응용 프로그램을 종료 하면에 관계 없이 <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>However, if <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnExplicitShutdown&gt;</ph>, you must call <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> to shut down an application.</source>
          <target state="translated">그러나 경우 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnExplicitShutdown&gt;</ph>, 호출 해야 <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called, the application will shut down irrespective of whether the <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event of any open windows is canceled.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 는 호출 응용 프로그램에서 종료 여부에 관계 없이 <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> 열린 창의 이벤트를 취소 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>This method can be called only from the thread that created the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>for permission to use all windows and user input events without restriction.</source>
          <target state="translated">모든 창과 사용자 입력된 이벤트를 제한 없이 사용할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>An integer exit code for an application.</source>
          <target state="translated">응용 프로그램에 대한 정수 종료 코드입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>The default exit code is 0.</source>
          <target state="translated">기본 종료 코드는 0입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>Shuts down an application that returns the specified exit code to the operating system.</source>
          <target state="translated">지정된 종료 코드를 운영 체제에 반환하는 응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> event to set an exit code.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Application.Exit&gt;</ph> 종료 코드를 설정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>However, if you explicitly call <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph>, and you handle <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> only to set an exit code, you can call <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> instead.</source>
          <target state="translated">그러나 명시적으로 호출 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph>를 처리 하 고 <ph id="ph2">&lt;xref:System.Windows.Application.Exit&gt;</ph> 만 호출할 수는 종료 코드를 설정 하려면 <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 대신 합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>This method can be called only from the thread that created the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>for permission to use all windows and user input events without restriction.</source>
          <target state="translated">모든 창과 사용자 입력된 이벤트를 제한 없이 사용할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.Shutdown(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.ShutdownMode">
          <source>Gets or sets the condition that causes the <ph id="ph1">&lt;see cref="M:System.Windows.Application.Shutdown" /&gt;</ph> method to be called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Application.Shutdown" /&gt;</ph> 메서드가 호출되게 하는 조건을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.ShutdownMode" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.ShutdownMode" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>Applications stop running only when the <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> method of the Application is called.</source>
          <target state="translated">응용 프로그램의 경우에만 실행이 중지 된 <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 응용 프로그램의 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>Shut down can occur implicitly or explicitly, as specified by the value of the <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property.</source>
          <target state="translated">암시적 또는 명시적 값에 의해 지정 된 대로 종료 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>, <ph id="ph3">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> implicitly calls <ph id="ph4">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> when the last window in an application closes, even if any currently instantiated windows are set as the main window (see <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>).</source>
          <target state="translated">설정한 경우 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>, <ph id="ph3">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 암시적으로 호출 <ph id="ph4">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 응용 프로그램의 마지막 창의 닫을 때, 현재 인스턴스화된 창이 주 창으로 설정 된 경우에 (참조 <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph> causes <ph id="ph3">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph>to implicitly call <ph id="ph4">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> when the <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> closes, even if other windows are currently open.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph> 하면 <ph id="ph3">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph>암시적으로 호출 하려면 <ph id="ph4">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 때는 <ph id="ph5">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 다른 창이 현재 열려 있는 경우에 닫힙니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</source>
          <target state="translated">일부 응용 프로그램의 수명 때 주 창 또는 마지막 창이 닫혀 또는 데이터에 종속 되지 않을 수 있습니다 windows에 종속 전혀 아닐 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>For these scenarios you need to set the <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnExplicitShutdown&gt;</ph>, which requires an explicit <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> method call to stop the application.</source>
          <target state="translated">이러한 시나리오에 대해 설정 해야는 <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.ShutdownMode.OnExplicitShutdown&gt;</ph>를 요구 하는 명시적 <ph id="ph3">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> 메서드를 호출 하는 응용 프로그램을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>Otherwise, the application continues running in the background.</source>
          <target state="translated">그렇지 않으면 응용 프로그램이 백그라운드에서 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> can be configured declaratively from <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> or programmatically from code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 선언적으로 구성할 수 있습니다 <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> 또는 코드에서 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>This property is available only from the thread that created the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.ShutdownMode">
          <source>The following example shows how to configure <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> to specify that an application must be closed explicitly.</source>
          <target state="translated">다음 예제에서는 구성 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> 응용 프로그램을 명시적으로 닫아야를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="E:System.Windows.Application.Startup">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Windows.Application" /&gt;</ph> object is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Application.Run" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Windows.Application" /&gt;</ph> 메서드가 호출될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>A typical <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application may perform a variety of initialization tasks when it starts up, including:</source>
          <target state="translated">일반적인 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램은 시작 시를 포함 하 여 다양 한 초기화 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Processing command-line parameters.</source>
          <target state="translated">명령줄 매개 변수를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Opening the main window.</source>
          <target state="translated">주 창 열기</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Initializing application-scope resources.</source>
          <target state="translated">응용 프로그램 범위 리소스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Initializing application-scope properties.</source>
          <target state="translated">응용 프로그램 범위의 속성을 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>You can declaratively specify the main window and application-scope resources using <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> (<ph id="ph2">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>, respectively).</source>
          <target state="translated">주 창 및 사용 하 여 응용 프로그램 범위 리소스를 선언적으로 지정할 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> (<ph id="ph2">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>각각).</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</source>
          <target state="translated">그러나 경우에 따라 리소스 또는 응용 프로그램의 주 창 수만 결정 되는 프로그래밍 방식으로 런타임에 합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Additionally, application-scope properties and command-line parameters can only be used programmatically.</source>
          <target state="translated">또한 응용 프로그램 범위의 속성 및 명령줄 매개 변수 에서만 사용할 수 있습니다 프로그래밍 방식으로.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Programmatic initialization can be performed by handling the <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> event, including the following:</source>
          <target state="translated">처리 하 여 프로그래밍 방식으로 초기화를 수행할 수는 <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> 다음을 포함 한 이벤트:</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Acquire and process command-line parameters, which are available from the <ph id="ph1">&lt;xref:System.Windows.StartupEventArgs.Args%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.StartupEventArgs&gt;</ph> class that is passed to the <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> event handler.</source>
          <target state="translated">가져오고 처리에서 사용할 수 있는 명령줄 매개 변수는 <ph id="ph1">&lt;xref:System.Windows.StartupEventArgs.Args%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.StartupEventArgs&gt;</ph> 에 전달 되는 클래스는 <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Initialize application-scope resources by using the <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램 범위 리소스를 사용 하 여 초기화 된 <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Initialize application-scope properties by using the <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램 범위의 속성을 사용 하 여 초기화 된 <ph id="ph1">&lt;xref:System.Windows.Application.Properties%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Instantiate and show one (or more) windows.</source>
          <target state="translated">인스턴스화하고 (일부) 창을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>Command-line parameters can also be acquired by calling the static <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Environment&gt;</ph> object.</source>
          <target state="translated">명령줄 매개 변수는 정적을 호출 하 여 가져올 수도 있습니다 <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Environment&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>However, <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> requires full trust to execute.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> 실행 되려면 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> using <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>, the main window that is created is not available from either the <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> property or the <ph id="ph4">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Application&gt;</ph> object until after the <ph id="ph6">&lt;xref:System.Windows.Application.Startup&gt;</ph> event is processed.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 를 사용 하 여 <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph>, 만들어지는 주 창에서 사용할 수 없는 <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 속성 또는 <ph id="ph4">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 의 속성은 <ph id="ph5">&lt;xref:System.Windows.Application&gt;</ph> 후 될 때까지 개체는 <ph id="ph6">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트가 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>If you need access to the main window during startup, you need to manually create a new window object from your <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> event handler.</source>
          <target state="translated">시작 하는 동안 주 창에 대 한 액세스를 해야 하는 경우 수동으로에서 새 창 개체를 만들어야 할 프로그램 <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>If your application uses <ph id="ph1">&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</ph> to specify a credential policy, you need to set <ph id="ph2">&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</ph> after <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> is raised; otherwise, <ph id="ph4">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> sets it to a default internal policy directly after the <ph id="ph5">&lt;xref:System.Windows.Application.Startup&gt;</ph> event has been raised.</source>
          <target state="translated">응용 프로그램을 사용 하는 경우 <ph id="ph1">&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</ph> 자격 증명 정책을 지정 하려면 설정 해야 <ph id="ph2">&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</ph> 후 <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> 발생 되지 않았으면, <ph id="ph4">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 기본 내부 정책에 직접 후 설정는 <ph id="ph5">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>The command-line arguments that are passed to the <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> event handler are not the same as the <ph id="ph2">[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]</ph> query string parameters that are passed to an <ph id="ph3">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">에 전달 되는 명령줄 인수는 <ph id="ph1">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트 처리기와 동일 하지 않은 <ph id="ph2">[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]</ph> 쿼리에 전달 되는 문자열 매개 변수는 <ph id="ph3">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>The following example shows how to acquire and process command-line options from a standalone application.</source>
          <target state="translated">다음 예제를 획득 하 고 독립 실행형 응용 프로그램에서 명령줄 옵션을 처리 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>If the <bpt id="p1">**</bpt>/StartMinimized<ept id="p1">**</ept> command-line parameter was provided, the application opens the main window in a minimized state.</source>
          <target state="translated">경우는 <bpt id="p1">**</bpt>/StartMinimized<ept id="p1">**</ept> 명령줄 매개 변수가 제공 된, 응용 프로그램 최소화 된 상태로 주 창을 엽니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph> cannot retrieve and process command-line arguments because they are launched with <ph id="ph2">[!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]</ph> deployment (see <bpt id="p1">[</bpt>Deploying a WPF Application (WPF)<ept id="p1">](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]</ph> 검색 및 사용 시작 되기 때문에 명령줄 인수를 처리할 수 없습니다 <ph id="ph2">[!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]</ph> 배포 (참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 (WPF) 배포<ept id="p1">](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md)</ept>).</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Application.Startup">
          <source>However, they can retrieve and process query string parameters from the URLs that are used to launch them.</source>
          <target state="translated">그러나 XBAP를 시작하는 데 사용되는 URL에서 쿼리 문자열 매개 변수를 검색하고 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.StartupUri">
          <source>Gets or sets a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> that is automatically shown when an application starts.</source>
          <target state="translated">응용 프로그램이 시작될 때 자동으로 표시되는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that refers to the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> that automatically opens when an application starts.</source>
          <target state="translated">응용 프로그램이 시작될 때 자동으로 열리는 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>를 참조하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> to automatically load a <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> resource when an application starts.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 을 자동으로 로드 한 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 리소스 응용 프로그램이 시작 합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>The following table shows the types of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the <ph id="ph2">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>.</source>
          <target state="translated">다음 표에서 유형의 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 로드할 수 있는 리소스, 열리는 창 유형 및 이러한 리소스도 설정할 수 있는 응용 프로그램 종류는 <ph id="ph2">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Type</source>
          <target state="translated">형식</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Window</source>
          <target state="translated">창</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Application type</source>
          <target state="translated">응용 프로그램 유형</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone only</source>
          <target state="translated">독립 실행형만</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone only</source>
          <target state="translated">독립 실행형만</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone/browser-hosted</source>
          <target state="translated">독립 실행형/브라우저 호스팅</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone/browser-hosted</source>
          <target state="translated">독립 실행형/브라우저 호스팅</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone/browser-hosted</source>
          <target state="translated">독립 실행형/브라우저 호스팅</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Standalone/browser-hosted</source>
          <target state="translated">독립 실행형/브라우저 호스팅</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Typically, you set the <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> property declaratively in <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">일반적으로 설정 된 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 속성에서 선언적으로 <ph id="ph2">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>However, you can set <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> programmatically, such as from a <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> event handler, which is useful if for applications that can only load the necessary <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> resources at run time.</source>
          <target state="translated">설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 프로그래밍 방식으로으로 <ph id="ph2">&lt;xref:System.Windows.Application.Startup&gt;</ph> 필요한을 로드 하는 응용 프로그램에 있는 경우에 이벤트 처리기 <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 런타임 시 리소스입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>For example, an application might wait until run time to load its resources if the name of the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> resource is stored in a configuration file.</source>
          <target state="translated">예를 들어 응용 프로그램 수를 기다릴 경우 해당 리소스를 로드 하의 이름을 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 리소스 구성 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Whether you set <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> declaratively or programmatically, the corresponding <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> resource is not loaded until after the <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> event is handled.</source>
          <target state="translated">설정 여부 <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> 선언적으로 또는 프로그래밍 방식으로 해당 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 될 때까지 리소스 로드 되지 않았습니다. 후는 <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph> 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.StartupUri">
          <source>Consequently, you won't have access to the resulting window from either the <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> property when handling <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph>.</source>
          <target state="translated">따라서 액세스할 수 없습니다 결과 창에 중 하 나와 <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> 속성을 처리할 때 <ph id="ph3">&lt;xref:System.Windows.Application.Startup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.StartupUri">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Application.StartupUri" /&gt;</ph> is set with a value of null.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Application.StartupUri" /&gt;</ph>가 null 값으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>The name of the requested ambient property.</source>
          <target state="translated">요청된 앰비언트 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>Queries for whether a specified ambient property is available in the current scope.</source>
          <target state="translated">지정된 앰비언트 속성을 현재 범위에서 사용할 수 있는지 여부에 대한 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the requested ambient property is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청된 앰비언트 속성을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Markup.IQueryAmbient&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Windows.Markup.IQueryAmbient&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>The name of the resource to find.</source>
          <target state="translated">찾을 리소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>Searches for the specified resource.</source>
          <target state="translated">지정된 리소스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>The requested resource object.</source>
          <target state="translated">요청된 리소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>If the requested resource is not found, a null reference is returned.</source>
          <target state="translated">요청된 리소스가 없으면 null 참조가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> will first look in application-scope resources for the specified resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 소개 됩니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>Application-scope resources are managed by <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>, and are exposed from the <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램 범위 리소스 관리 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>에서 노출 하 고는 <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>If the specified resource is not found in the set of application-scope resources, <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> then next searches the system resources.</source>
          <target state="translated">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 다음 시스템 리소스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>These are exposed from the <ph id="ph1">&lt;xref:System.Windows.SystemColors&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.SystemFonts&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.SystemParameters&gt;</ph> types, respectively, as static properties.</source>
          <target state="translated">노출 된 <ph id="ph1">&lt;xref:System.Windows.SystemColors&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.SystemFonts&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.SystemParameters&gt;</ph> 각각 정적 속성입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>To use <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> to acquire them, these types also expose resource key properties that are designed to be passed to <ph id="ph2">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph>; for example, <ph id="ph3">&lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</ph>.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 을 얻은를 이러한 형식 속성을 노출 리소스 키를 전달 하도록 디자인 된 <ph id="ph2">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph>등 <ph id="ph3">&lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 개체를 반환 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Application.TryFindResource(System.Object)">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> to acquire a resource.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Application.TryFindResource%2A&gt;</ph> 리소스 획득 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="P:System.Windows.Application.Windows">
          <source>Gets the instantiated windows in an application.</source>
          <target state="translated">응용 프로그램의 인스턴스화된 창을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.WindowCollection" /&gt;</ph> that contains references to all window objects in the current <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.WindowCollection" /&gt;</ph>의 모든 창 개체에 대한 참조가 들어 있는 <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> reference is automatically added to <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> as soon as a window is instantiated on the <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread; windows that are created by worker threads are not added.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> 참조가에 자동으로 추가 됩니다 <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 창이 인스턴스화됩니다으로 <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 스레드; windows 스레드는 추가 작업자에 의해 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> reference is automatically removed after its <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event has been handled and before its <ph id="ph3">&lt;xref:System.Windows.Window.Closed&gt;</ph> event is raised.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> 참조 한 후 자동으로 제거 됩니다 해당 <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> 이벤트를 처리 하기 전에 해당 <ph id="ph3">&lt;xref:System.Windows.Window.Closed&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>By default, the first item added to the <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property becomes the <ph id="ph2">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>.</source>
          <target state="translated">기본적으로 첫 번째 항목에 추가 <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 속성이 하 게 되는 <ph id="ph2">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>This property is available only from the thread that created the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Application.Windows">
          <source>The following example demonstrates how to enumerate the <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property to build a top-level Windows menu, which is common to <ph id="ph2">[!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)]</ph> applications like <ph id="ph3">[!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)]</ph>, or multiple-instance Single Document Interface (SDI) applications like <ph id="ph4">[!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)]</ph>.</source>
          <target state="translated">다음 예제에서는 열거 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> 속성에 공통적인 최상위 창 메뉴를 만들려는 <ph id="ph2">[!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)]</ph> 와 같은 응용 프로그램이 <ph id="ph3">[!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)]</ph>와 같은 다중 인스턴스 인터페이스 SDI (단일 문서) 응용 프로그램 또는 <ph id="ph4">[!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)]</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>